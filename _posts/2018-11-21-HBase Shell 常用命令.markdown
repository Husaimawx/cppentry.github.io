---
layout:     post
title:      HBase Shell 常用命令
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                进入hbase shell console<br><br>$HBASE_HOME/bin/hbase shell<br><br>或运行<br><br># bash hbase shell<br><br>进入hbase shell console<br>$HBASE_HOME/bin/hbase shell<br>如果有kerberos认证，需要事先使用相应的keytab进行一下认证（使用kinit命令），认证成功之后再使用hbase shell进入可以使用whoami命令可查看当前用户<br>hbase(main)&gt; whoami<br><br><br>[b]1表的管理[/b]<br><br>1）查看有哪些表<br>hbase(main)&gt; list<br>2）创建表<br># 语法：create &lt;table&gt;, {NAME =&gt; &lt;family&gt;, VERSIONS =&gt; &lt;VERSIONS&gt;}<br># 例如：创建表t1，有两个family name：f1，f2，且版本数均为2<br>hbase(main)&gt; create 't1',{NAME =&gt; 'f1', VERSIONS =&gt; 2},{NAME =&gt; 'f2', VERSIONS =&gt; 2}<br>3）删除表<br>分两步：首先disable，然后drop<br>例如：删除表t1<br>hbase(main)&gt; disable 't1'<br>hbase(main)&gt; drop 't1'<br>4）查看表的结构<br># 语法：describe &lt;table&gt;<br># 例如：查看表t1的结构<br>hbase(main)&gt; describe 't1'<br>5）修改表结构<br>修改表结构必须先disable<br># 语法：alter 't1', {NAME =&gt; 'f1'}, {NAME =&gt; 'f2', METHOD =&gt; 'delete'}<br># 例如：修改表test1的cf的TTL为180天<br>hbase(main)&gt; disable 'test1'<br>hbase(main)&gt; alter 'test1',{NAME=&gt;'body',TTL=&gt;'15552000'},{NAME=&gt;'meta', TTL=&gt;'15552000'}<br>hbase(main)&gt; enable 'test1'<br><br>[b]2权限管理[/b]<br><br>1）分配权限<br># 语法 : grant &lt;user&gt; &lt;permissions&gt; &lt;table&gt; &lt;column family&gt; &lt;column qualifier&gt; 参数后面用逗号分隔<br># 权限用五个字母表示： "RWXCA".<br># READ('R'), WRITE('W'), EXEC('X'), CREATE('C'), ADMIN('A')<br># 例如，给用户‘test'分配对表t1有读写的权限，<br>hbase(main)&gt; grant 'test','RW','t1'<br>2）查看权限<br># 语法：user_permission &lt;table&gt;<br># 例如，查看表t1的权限列表<br>hbase(main)&gt; user_permission 't1'<br>3）收回权限<br># 与分配权限类似，语法：revoke &lt;user&gt; &lt;table&gt; &lt;column family&gt; &lt;column qualifier&gt;<br># 例如，收回test用户在表t1上的权限<br>hbase(main)&gt; revoke 'test','t1'<br><br>[b]3表数据的增删改查[/b]<br><br>1）添加数据<br># 语法：put &lt;table&gt;,&lt;rowkey&gt;,&lt;family:column&gt;,&lt;value&gt;,&lt;timestamp&gt;<br># 例如：给表t1的添加一行记录：rowkey是rowkey001，family name：f1，column name：col1，value：value01，timestamp：系统默认<br>hbase(main)&gt; put 't1','rowkey001','f1:col1','value01'<br>用法比较单一。<br>2）查询数据<br>a）查询某行记录<br># 语法：get &lt;table&gt;,&lt;rowkey&gt;,[&lt;family:column&gt;,....]<br># 例如：查询表t1，rowkey001中的f1下的col1的值<br>hbase(main)&gt; get 't1','rowkey001', 'f1:col1'<br># 或者：<br>hbase(main)&gt; get 't1','rowkey001', {COLUMN=&gt;'f1:col1'}<br># 查询表t1，rowke002中的f1下的所有列值<br>hbase(main)&gt; get 't1','rowkey001'<br>b）扫描表<br># 语法：scan &lt;table&gt;, {COLUMNS =&gt; [ &lt;family:column&gt;,.... ], LIMIT =&gt; num}<br># 另外，还可以添加STARTROW、TIMERANGE和FITLER等高级功能<br># 例如：扫描表t1的前5条数据<br>hbase(main)&gt; scan 't1',{LIMIT=&gt;5}<br>c）查询表中的数据行数<br># 语法：count &lt;table&gt;, {INTERVAL =&gt; intervalNum, CACHE =&gt; cacheNum}<br># INTERVAL设置多少行显示一次及对应的rowkey，默认1000；CACHE每次去取的缓存区大小，默认是10，调整该参数可提高查询速度<br># 例如，查询表t1中的行数，每100条显示一次，缓存区为500<br>hbase(main)&gt; count 't1', {INTERVAL =&gt; 100, CACHE =&gt; 500}<br>3）删除数据<br>a )删除行中的某个列值<br># 语法：delete &lt;table&gt;, &lt;rowkey&gt;,  &lt;family:column&gt; , &lt;timestamp&gt;,必须指定列名<br># 例如：删除表t1，rowkey001中的f1:col1的数据<br>hbase(main)&gt; delete 't1','rowkey001','f1:col1'<br>注：将删除改行f1:col1列所有版本的数据<br>b )删除行<br># 语法：deleteall &lt;table&gt;, &lt;rowkey&gt;,  &lt;family:column&gt; , &lt;timestamp&gt;，可以不指定列名，删除整行数据<br># 例如：删除表t1，rowk001的数据<br>hbase(main)&gt; deleteall 't1','rowkey001'<br>c）删除表中的所有数据<br># 语法： truncate &lt;table&gt;<br># 其具体过程是：disable table -&gt; drop table -&gt; create table<br># 例如：删除表t1的所有数据<br>hbase(main)&gt; truncate 't1'<br><br>[b]4Region管理[/b]<br><br>1）移动region<br># 语法：move 'encodeRegionName', 'ServerName'<br># encodeRegionName指的regioName后面的编码，ServerName指的是master-status的Region Servers列表<br># 示例<br>hbase(main)&gt;move '4343995a58be8e5bbc739af1e91cd72d', 'db-41.xxx.xxx.org,60020,1390274516739'<br>2）开启/关闭region<br># 语法：balance_switch true|false<br>hbase(main)&gt; balance_switch<br>3）手动split<br># 语法：split 'regionName', 'splitKey'<br>4）手动触发major compaction<br>#语法：<br>#Compact all regions in a table:<br>#hbase&gt; major_compact 't1'<br>#Compact an entire region:<br>#hbase&gt; major_compact 'r1'<br>#Compact a single column family within a region:<br>#hbase&gt; major_compact 'r1', 'c1'<br>#Compact a single column family within a table:<br>#hbase&gt; major_compact 't1', 'c1'<br><br>[b]5配置管理及节点重启[/b]<br><br>1）修改hdfs配置<br>hdfs配置位置：/etc/hadoop/conf<br># 同步hdfs配置<br>cat /home/hadoop/slaves|xargs -i -t scp /etc/hadoop/conf/hdfs-site.xml hadoop@{}:/etc/hadoop/conf/hdfs-site.xml<br>#关闭：<br>cat /home/hadoop/slaves|xargs -i -t ssh hadoop@{} "sudo /home/hadoop/cdh4/hadoop-2.0.0-cdh4.2.1/sbin/hadoop-daemon.sh --config /etc/hadoop/conf stop datanode"<br>#启动：<br>cat /home/hadoop/slaves|xargs -i -t ssh hadoop@{} "sudo /home/hadoop/cdh4/hadoop-2.0.0-cdh4.2.1/sbin/hadoop-daemon.sh --config /etc/hadoop/conf start datanode"<br>2）修改hbase配置<br>hbase配置位置：<br># 同步hbase配置<br>cat /home/hadoop/hbase/conf/regionservers|xargs -i -t scp /home/hadoop/hbase/conf/hbase-site.xml hadoop@{}:/home/hadoop/hbase/conf/hbase-site.xml<br><br># graceful重启<br>cd ~/hbase<br>bin/graceful_stop.sh --restart --reload --debug inspurXXX.xxx.xxx.org            </div>
                </div>