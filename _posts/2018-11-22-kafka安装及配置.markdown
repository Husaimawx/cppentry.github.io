---
layout:     post
title:      kafka安装及配置
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>转载地址：<a href="https://blog.csdn.net/arpls20/article/details/80959260" rel="nofollow">https://blog.csdn.net/arpls20/article/details/80959260</a> <br>
                  <a href="https://www.cnblogs.com/justuntil/p/8033792.html" rel="nofollow">https://www.cnblogs.com/justuntil/p/8033792.html</a>（伪集群） <br>
                  <a href="http://www.cnblogs.com/smartloli/p/4538173.html" rel="nofollow">http://www.cnblogs.com/smartloli/p/4538173.html</a></p>

<p>1、下载kafka <br>
      官网下载地址：<a href="https://www.apache.org/dyn/closer.cgi?path=/kafka/1.1.0/kafka_2.12-1.1.0.tgz" rel="nofollow">https://www.apache.org/dyn/closer.cgi?path=/kafka/1.1.0/kafka_2.12-1.1.0.tgz</a></p>

<p>2、解压</p>



<pre class="prettyprint"><code class=" hljs lasso">tar <span class="hljs-attribute">-xzf</span> kafka_2<span class="hljs-number">.12</span><span class="hljs-subst">-</span><span class="hljs-number">1.1</span><span class="hljs-number">.0</span><span class="hljs-built_in">.</span>tgz /usr/<span class="hljs-built_in">local</span>/kafka</code></pre>

<p>Kafka目录介绍</p>

<ul>
<li>/bin 操作kafka的可执行脚本，还包含windows下脚本</li>
<li>/config 配置文件所在目录</li>
<li>/libs 依赖库目录</li>
<li>/logs 日志数据目录，目录kafka把server端日志分为5种类型，分为:server,request,state，log-cleaner，controller</li>
</ul>

<p>3、配置环境变量</p>



<pre class="prettyprint"><code class=" hljs bash">vim /etc/profile
<span class="hljs-comment">#set kafka</span>
<span class="hljs-keyword">export</span> KAFKA_HOME=/usr/local/kafka
<span class="hljs-keyword">export</span> PATH=/usr/local/kafka/bin:<span class="hljs-variable">$PATH</span></code></pre>

<p>使用环境变量生效</p>



<pre class="prettyprint"><code class=" hljs bash"><span class="hljs-built_in">source</span> /etc/profile</code></pre>

<p>说明：kafka集群中每个节点都需要配置</p>

<p>4、配置 server.properties <br>
kafka最为重要三个配置依次为：broker.id、log.dir、zookeeper.connect。</p>



<pre class="prettyprint"><code class=" hljs bash"><span class="hljs-built_in">cd</span> /usr/local/kafka/config
vim server.properties</code></pre>

<p>在192.168.17.64机器上配置server.properties。</p>



<pre class="prettyprint"><code class=" hljs vala"><span class="hljs-preprocessor"># broker.id就是指各台服务器对应的id，所以各台服务器值不同</span>
<span class="hljs-preprocessor"># 64机器的broker.id用1，64机器的broker.id用2，68机器的broker.id用3</span>
broker.id=<span class="hljs-number">1</span> 
<span class="hljs-preprocessor"># broker server服务器端口号，无需改变</span>
port=<span class="hljs-number">9092</span>
<span class="hljs-preprocessor"># 当前服务器的IP，各台服务器值不同</span>
host.name=<span class="hljs-number">192.168</span><span class="hljs-number">.17</span><span class="hljs-number">.64</span>
<span class="hljs-preprocessor"># Zookeeper集群的ip和端口号</span>
<span class="hljs-preprocessor"># 默认使用的2181端口，可在zookeeper配置文件conf/zoo.cfg中修改。</span>
zookeeper.connect=<span class="hljs-number">192.168</span><span class="hljs-number">.17</span><span class="hljs-number">.64</span>:<span class="hljs-number">2181</span>,<span class="hljs-number">192.168</span><span class="hljs-number">.17</span><span class="hljs-number">.65</span>:<span class="hljs-number">2181</span>,<span class="hljs-number">192.168</span><span class="hljs-number">.17</span><span class="hljs-number">.68</span>:<span class="hljs-number">2181</span> # 可以将ip换位主机名
<span class="hljs-preprocessor"># 日志目录,在指定的位置创建好文件夹logs</span>
log.dirs=log.dirs=/data1/platform/kafka/logs
<span class="hljs-preprocessor"># 非本地生产者和消费者访问Kafka，记得修改 config/server.properties中的listeners</span>
listeners=PLAINTEXT:<span class="hljs-comment">//192.168.17.134:9092 </span></code></pre>

<p>5、把192.168.17.64配置好的kafka拷贝到192.168.17.65和192.168.17.68上</p>

<pre class="prettyprint"><code class=" hljs perl">[root<span class="hljs-variable">@localhost</span> <span class="hljs-keyword">local</span>]<span class="hljs-comment"># scp -rp kafka root@192.168.17.65:/usr/local/</span>
[root<span class="hljs-variable">@localhost</span> <span class="hljs-keyword">local</span>]<span class="hljs-comment"># scp -rp kafka root@192.168.17.68:/usr/local/</span></code></pre>

<p>6、在65和68机器上创建log目录，修改broker.id，host.name</p>



<pre class="prettyprint"><code class=" hljs vala"><span class="hljs-preprocessor"># 65机器</span>
mkdir /data1/platform/kafka/
mkdir /data1/platform/kafka/logs
<span class="hljs-preprocessor"># 修改65机器server.properties的broker_id</span>
broker_id=<span class="hljs-number">2</span>
host.name=<span class="hljs-number">192.168</span><span class="hljs-number">.17</span><span class="hljs-number">.65</span>

<span class="hljs-preprocessor"># 68机器</span>
mkdir /data1/platform/kafka/
mkdir /data1/platform/kafka/logs
<span class="hljs-preprocessor"># 修改68机器server.properties的broker_id</span>
broker_id=<span class="hljs-number">3</span>
host.name=<span class="hljs-number">192.168</span><span class="hljs-number">.17</span><span class="hljs-number">.68</span></code></pre>

<p>7、启动Kafka <br>
（1）启动 <br>
  启动kafka之前需启动zookeeper，然后启动kafka，各个节点需单独启动。 <br>
  进入kafka目录，敲入命令</p>



<pre class="prettyprint"><code class=" hljs vbscript"> nohup bin/kafka-<span class="hljs-built_in">server</span>-start.sh config/<span class="hljs-built_in">server</span>.properties &gt;<span class="hljs-built_in">log</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> &amp;</code></pre>

<p>（2）检测2181与9092端口</p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@nimbus</span> kafka]<span class="hljs-comment"># netstat -tunlp|egrep "(2181|9092)"</span>
tcp6       <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">17.64</span><span class="hljs-symbol">:</span><span class="hljs-number">9092</span>      <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:*</span>                    <span class="hljs-constant">LISTEN</span>      <span class="hljs-number">40748</span>/java          
tcp6       <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-number">2181</span>                 <span class="hljs-symbol">:</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:*</span>                    <span class="hljs-constant">LISTEN</span>      <span class="hljs-number">37853</span>/java       </code></pre>

<p>Kafka的进程ID为40748，占用端口为9092 <br>
QuorumPeerMain为对应的zookeeper实例，进程ID为37853，在2181端口监听</p>

<p>使用jps命令查看kafka是否运行：</p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@nimbus</span> kafka]<span class="hljs-comment"># jps</span>
<span class="hljs-number">46167</span> <span class="hljs-constant">Jps</span>
<span class="hljs-number">40748</span> <span class="hljs-constant">Kafka</span>
<span class="hljs-number">37853</span> <span class="hljs-constant">QuorumPeerMain</span></code></pre>

<p>8、创建topic <br>
使用kafka-topics.sh 创建单分区单副本的topic test：</p>



<pre class="prettyprint"><code class=" hljs applescript">[root@nimbus kafka]<span class="hljs-comment"># bin/kafka-topics.sh --create --zookeeper 192.168.17.64:2181 --replication-factor 1 --partitions 1 --topic test  </span>
OpenJDK <span class="hljs-number">64</span>-Bit Server VM warning: If <span class="hljs-keyword">the</span> <span class="hljs-type">number</span> <span class="hljs-keyword">of</span> processors <span class="hljs-keyword">is</span> expected <span class="hljs-keyword">to</span> increase <span class="hljs-keyword">from</span> one, <span class="hljs-keyword">then</span> you should configure <span class="hljs-keyword">the</span> <span class="hljs-type">number</span> <span class="hljs-keyword">of</span> parallel GC threads appropriately using -XX:ParallelGCThreads=N
Created topic <span class="hljs-string">"test"</span>. </code></pre>

<p>查看创建的topic test：</p>



<pre class="prettyprint"><code class=" hljs applescript">[root@nimbus kafka]<span class="hljs-comment"># bin/kafka-topics.sh --list --zookeeper localhost:2181</span>
OpenJDK <span class="hljs-number">64</span>-Bit Server VM warning: If <span class="hljs-keyword">the</span> <span class="hljs-type">number</span> <span class="hljs-keyword">of</span> processors <span class="hljs-keyword">is</span> expected <span class="hljs-keyword">to</span> increase <span class="hljs-keyword">from</span> one, <span class="hljs-keyword">then</span> you should configure <span class="hljs-keyword">the</span> <span class="hljs-type">number</span> <span class="hljs-keyword">of</span> parallel GC threads appropriately using -XX:ParallelGCThreads=N
test</code></pre>

<p>其中，localhost为zookeeper地址 </p>

<p>topic描述：</p>



<pre class="prettyprint"><code class=" hljs applescript">[root@nimbus kafka]<span class="hljs-comment"># bin/kafka-topics.sh --describe --zookeeper 192.168.17.68:2181 --topic test </span>
OpenJDK <span class="hljs-number">64</span>-Bit Server VM warning: If <span class="hljs-keyword">the</span> <span class="hljs-type">number</span> <span class="hljs-keyword">of</span> processors <span class="hljs-keyword">is</span> expected <span class="hljs-keyword">to</span> increase <span class="hljs-keyword">from</span> one, <span class="hljs-keyword">then</span> you should configure <span class="hljs-keyword">the</span> <span class="hljs-type">number</span> <span class="hljs-keyword">of</span> parallel GC threads appropriately using -XX:ParallelGCThreads=N
Topic:test      PartitionCount:<span class="hljs-number">1</span>        ReplicationFactor:<span class="hljs-number">1</span>     Configs:
        Topic: test     Partition: <span class="hljs-number">0</span>    Leader: <span class="hljs-number">2</span>       Replicas: <span class="hljs-number">2</span>     Isr: <span class="hljs-number">2</span></code></pre>

<p>下面解释一下这些输出。第一行是对所有分区的一个描述，然后每个分区都会对应一行，因为我们只有一个分区所以下面就只加了一行。 <br>
 - Leader：负责处理消息的读和写，Leader是从所有节点中随机选择的。 <br>
 - Replicas：列出了所有的副本节点，不管节点是否在服务中。 <br>
 - Isr：是正在服务中的节点 <br>
 -  <br>
9、产生消息命令 <br>
使用kafka-console-producer.sh  命令向topic test 发送消息</p>



<pre class="prettyprint"><code class=" hljs lasso">bin/kafka<span class="hljs-attribute">-console</span><span class="hljs-attribute">-producer</span><span class="hljs-built_in">.</span>sh <span class="hljs-subst">--</span>broker<span class="hljs-attribute">-list</span> <span class="hljs-number">192.168</span><span class="hljs-number">.17</span><span class="hljs-number">.64</span>:<span class="hljs-number">9092</span> <span class="hljs-subst">--</span>topic test</code></pre>

<p>10、接收消息</p>



<pre class="prettyprint"><code class=" hljs brainfuck"><span class="hljs-comment">bin/kafka</span><span class="hljs-literal">-</span><span class="hljs-comment">console</span><span class="hljs-literal">-</span><span class="hljs-comment">consumer</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">zookeeper</span> <span class="hljs-comment">localhost:2181</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">topic</span> <span class="hljs-comment">test</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">from</span><span class="hljs-literal">-</span><span class="hljs-comment">beginning</span></code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>