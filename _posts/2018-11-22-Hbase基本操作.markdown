---
layout:     post
title:      Hbase基本操作
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <h3 id="1-1-hbase">1.1 连接HBase</h3>

<p>使用<code>hbase shell</code>命令来连接正在运行的Hbase实例，该命令位于HBase安装包下的<em>bin/</em>目录。HBase Shell提示符以&gt;符号结束。</p>

<pre class="has">
<code>$ ./bin/hbase shell
hbase(main):001:0&gt;</code></pre>

<h3 id="1-2-hbase-shell-">1.2 显示HBase Shell 帮助文档</h3>

<p>输入<code>help</code>并按Enter键，可以显示HBase Shell的基本使用信息，和我们接下来会列举的一些命令类似。需要注意的是，表名，行，列都必须包含在引号内。</p>

<h3 id="1-3-hbase-shell">1.3 退出HBase Shell</h3>

<p>使用<code>quit</code>命令，退出HBase Shell 并且断开和集群的连接，但此时HBase仍然在后台运行。</p>

<h3 id="1-4-hbase-">1.4 查看HBase状态</h3>

<pre class="has">
<code>hbase(main):024:0&gt;status
3 servers, 0 dead,1.0000 average load</code></pre>

<h3 id="1-5-hbase">1.5 关闭HBase</h3>

<p>和<em>bin/start-hbase.sh</em>开启所有的HBase进程相同，<em>bin/stop-hbase.sh</em>用于关闭所有的HBase进程。</p>

<pre class="has">
<code>$ ./bin/stop-hbase.sh
stopping hbase....................
$
</code></pre>

<h2 id="-ddl-">二、数据定义（DDL）操作</h2>

<h3 id="2-1-">2.1 创建新表</h3>

<p>使用<code>create</code>命令来创建一个新的表。在创建的时候，必须指定表名和列族名。</p>

<pre class="has">
<code>hbase(main):001:0&gt; create 'test', 'cf'
0 row(s) in 0.4170 seconds

=&gt; Hbase::Table - test
</code></pre>

<h3 id="2-2-">2.2 列举表信息</h3>

<p>使用<code>list</code>命令：</p>

<pre class="has">
<code>hbase(main):002:0&gt; list 'test'
TABLE
test
1 row(s) in 0.0180 seconds

=&gt; ["test"]
</code></pre>

<h3 id="2-3-">2.3 获取表描述</h3>

<p>使用<code>describe</code>命令：</p>

<pre class="has">
<code>hbase(main):003:0&gt; describe 'test'
DESCRIPTION ENABLED
 'test', {NAME =&gt; 'f', DATA_BLOCK_ENCODING =&gt; 'NONE', BLOOMFILTER =&gt; 'ROW', REPLICATION_ true
 SCOPE =&gt; '0', VERSIONS =&gt; '1', COMPRESSION =&gt; 'NONE', MIN_VERSIONS =&gt; '0', TTL =&gt; '2
 147483647', KEEP_DELETED_CELLS =&gt; 'false', BLOCKSIZE =&gt; '65536', IN_MEMORY =&gt; 'false
 ', BLOCKCACHE =&gt; 'true'}
1 row(s) in 1.4430 seconds
</code></pre>

<h3 id="2-4-">2.4 删除表</h3>

<p>注意：删除表先要停用表</p>

<p>disable 'test'</p>

<p>is_enabled 'test'</p>

<p>drop 'test'</p>

<p>使用<code>drop</code>命令实现删除表的功能：</p>

<pre class="has">
<code>hbase(main):011:0&gt; drop 'test'
0 row(s) in 0.1370 seconds
</code></pre>

<h3 id="2-5-">2.5 检查表是否存在</h3>

<pre class="has">
<code>hbase(main):021:0&gt;exists 'member'
Table member doesexist                                                                                                                                     
0 row(s) in 0.1610seconds
</code></pre>

<h2 id="-dml-">三、数据管理（DML）操作</h2>

<h3 id="3-1-">3.1 向表中插入数据</h3>

<p>使用<code>put</code>命令，将数据插入表中：</p>

<pre class="has">
<code>hbase(main):003:0&gt; put 'test', 'row1', 'cf:a', 'value1'
0 row(s) in 0.0850 seconds

hbase(main):004:0&gt; put 'test', 'row2', 'cf:b', 'value2'
0 row(s) in 0.0110 seconds

hbase(main):005:0&gt; put 'test', 'row3', 'cf:c', 'value3'
0 row(s) in 0.0100 seconds
</code></pre>

<p>可以看到，在本例中，一共插入了三条数据，一次一条。第一次插入到<em>row1</em>行，<em>cf/:</em>列，插入值为<em>value1</em>。所有列在HBase中有一个列族前缀。本例中的<em>cf</em>，后面跟着一个冒号还有一个列限定后缀，本例中是<em>a</em>。</p>

<h3 id="3-2-">3.2 一次性扫描全表数据</h3>

<p>一种获取HBase数据的方法是扫描，使用<code>scan</code>命令来扫描表的数据。可以限制限制扫描的范围，在本例中，获取的是所有的数据。</p>

<pre class="has">
<code>hbase(main):006:0&gt; scan 'test'
ROW                                      COLUMN+CELL
 row1                                    column=cf:a, timestamp=1421762485768, value=value1
 row2                                    column=cf:b, timestamp=1421762491785, value=value2
 row3                                    column=cf:c, timestamp=1421762496210, value=value3
3 row(s) in 0.0230 seconds
</code></pre>

<h3 id="3-3-">3.3 获取一个行数据</h3>

<p>使用<code>get</code>命令来获得某一行的数据：</p>

<pre class="has">
<code>hbase(main):007:0&gt; get 'test', 'row1'
COLUMN                                   CELL
 cf:a                                    timestamp=1421762485768, value=value1
1 row(s) in 0.0350 seconds
</code></pre>

<h3 id="3-4-">3.4 更新一条数据</h3>

<p>使用<code>put</code>命令，本例中，将<em>shiyanlou</em>地址改为<em>E</em></p>

<pre class="has">
<code>hbase(main):004:0&gt;put 'company','shiyanlou','info:address' ,'E'
0 row(s) in 0.0210seconds

hbase(main):005:0&gt;get 'company','shiyanlou','info:address' 
COLUMN                                   CELL                                                                                                               
 info:address                               timestamp=1321586571843, value=E                                                                                  
1 row(s) in 0.0180seconds
</code></pre>

<h3 id="3-5-">3.5 禁用一个表</h3>

<p>如果你想要删除一个表或是修改它的设置，或者是其它的情况，都需要首先禁用该表。使用<code>disable</code>命令禁用表，<code>enable</code>命令重新启用表。</p>

<pre class="has">
<code>hbase(main):008:0&gt; disable 'test'
0 row(s) in 1.1820 seconds

hbase(main):009:0&gt; enable 'test'
0 row(s) in 0.1770 seconds
</code></pre>

<h2 id="-">四、实验总结</h2>

<p>本章介绍了HBase Shell的一些基本的常用命令，主要包括数据定义（DLL）的数据管理（DML）的一些操作命令。只能满足基本的HBase操作，更进一步的了解，请通过阅读HBase官方教程。</p>            </div>
                </div>