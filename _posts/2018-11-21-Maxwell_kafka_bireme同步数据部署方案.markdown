---
layout:     post
title:      Maxwell_kafka_bireme同步数据部署方案
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p>目录</p><p><a>Kafka部署<span>... </span><span>1</span></a></p><p><a>Maxwel部署<span>... </span><span>2</span></a></p><p><a>bireme部署<span>... </span><span>2</span></a></p><p><a>注意事项<span>... </span><span>3</span></a></p><p> </p><h2><a>Kafka</a>部署</h2><pre><code class="language-plain">apt-get update

wget http://mirrors.tuna.tsinghua.edu.cn/apache/kafka/1.1.0/kafka_2.11-1.1.0.tgz

tar -xvf kafka_2.11-1.1.0.tgz</code></pre><br><p> </p><p>kafka分布式部署需要通过zookeeper进行注册</p><p>由于kafka已集成zookeeper环境，直接使用kafka内置的zookeeper即可</p><p>进入kafka目录</p><p>启动zookeeper</p><pre><code class="language-plain">bin/zookeeper-server-start.sh config/zookeeper.properties</code></pre><br><p><code><span style="color:#000000;">修改kafka</span>配置文件</code></p><p><code><span style="color:#000000;"></span></code></p><pre><code class="language-plain">cp server.properties server0.properties

cp server.properties server1.properties

cp server.properties server2.properties</code></pre><p>分别在以上三个配置文件中对如下参数进行修改</p><p>broker.id=0（3个文件需唯一）</p><p>listeners = PLAINTEXT://*:9092（kafka服务监听端口）</p><p>log.dirs=/app/data/kafka/9092（kafka数据日志文件存放地址，3个进程需分开）</p><p>修改完配置文件后进行kafka进程的启动</p><p><code><span style="color:#000000;">bin/kafka-server-start.sh config/server0.properties &amp;</span></code></p><p><code><span style="color:#000000;">bin/kafka-server-start.sh config/server1.properties &amp;</span></code></p><p><code><span style="color:#000000;">bin/kafka-server-start.sh config/server2.properties &amp;</span></code></p><p> </p><p>创建topic</p><p>zongsheng0 队列用于存放基础表更改信息</p><pre><code class="language-plain">bin/kafka-topics.sh --create --zookeeper localhost:2181--replication-factor 3 --partitions 1 --topic zongsheng0</code></pre><br><p><code><span style="color:#000000;">order </span></code><code><span style="color:#000000;">队列用于存放订单表更改信息</span></code></p><pre><code class="language-plain">bin/kafka-topics.sh --create --zookeeper localhost:2181--replication-factor 3 --partitions 1 --topic order</code></pre><p>##################</p><h2><a>Maxwel</a>部署</h2><pre><code class="language-plain">wget https://github.com/zendesk/maxwell/releases/download/v1.13.3/maxwell-1.13.3.tar.gz

tar -xvf maxwell-1.13.3.tar.gz</code></pre><br><p> </p><p> </p><p>Maxwell模仿mysql主从复制拉取bin-log日志，所以每个maxwell进程相当于一个mysql从节点，相对应需要配置唯一的server_id</p><p>这里我们设计为两个maxwell进程</p><p>1读取bin-log中基础表信息</p><p>2读取bin-log中订单表信息</p><p>对应配置文件为zongsheng0.properties，order.properties</p><p>cp config.properties.examplezongsheng0.properties</p><p>cp config.properties.exampleorder.properties</p><p>对应配置文件修改</p><p>log_level=debug （日志级别）</p><p>producer=kafka   （生产者类型，我们使用的是kafka）</p><p>host=*  （源数据库mysql的地址）</p><p>user=root          （源数据库mysql的用户名）</p><p>password=*  （源数据库mysql的密码）</p><p>client_id=2           （maxwell进程的唯一ID）</p><p>replica_server_id=22    （maxwell复制bin-log的唯一ID，类似mysql从节点的server_id）</p><p>port=3306            （源数据库mysql的端口）</p><p>kafka.bootstrap.servers=&amp;*:9092,*:9093,*:9094</p><p>（目标消息中间件kafka服务端的ip与端口，分布式部署时对应多个ip多个端口）</p><p>kafka_topic=zongsheng0（目标消息中间件kafka对应的topic队列）</p><p>include_dbs=zongsheng0（筛选源数据库bin-log中对应数据库存入kafka）</p><p>include_tables=abc     （筛选源数据库bin-log中对应表存入kafka）</p><p> </p><p>启动2个maxwell进程分别拉取zongsheng0中的基础信息和余下多库中的订单信息</p><p>bin/maxwell –config zongsheng0.properties–daemon（指定配置文件，指定后台启动）</p><p>bin/maxwell –config order.properties–daemon（指定配置文件，指定后台启动）</p><p> </p><p>###################</p><h2><a>bireme</a>部署</h2><p>Bireme作为消费者从kafka队列中消费信息并插入对应的deepgreen数据库中</p><pre><code class="language-plain">wget https://github.com/HashDataInc/bireme/releases/download/v1.0/bireme-1.0.0.tar.gz

tar –xvf bireme-1.0.0.tar.gz</code></pre><br><p>bireme基于jsvc需安装jsvc</p><pre><code class="language-plain">apt-get install jsvc</code></pre><br><p>对应配置文件config.properties（基础配置）maxwell1.properties（表配置文件）</p><p>target.url =jdbc:postgresql://*:5432/zongsheng0</p><p>（对应deepgreen数据库的jdbc连接地址）</p><p>target.user = root</p><p>（对应deepgreen数据库的用户名）</p><p>target.passwd = *</p><p>（对应deepgreen数据库的用户名）</p><p>data_source = maxwell1</p><p>（数据源类型）</p><p>maxwell1.type = maxwell</p><p>maxwell1.kafka.server =*:9092,*:9093,*:9094</p><p>（kafka队列服务的ip+端口）</p><p>maxwell1.kafka.topic = order</p><p>（kafka的队列名）</p><p>maxwell1.kafka.groupid = bireme</p><p>（kafka消费者的组名）</p><p>-------------------------------------------</p><p>maxwell1.properties配置</p><p>（前面写源数据名+源表名，后面写目标数据库schemal+目标数据库表名）</p><p>zongsheng1.vem_order_info =public.vem_order_info</p><p>zongsheng2.vem_order_info =public.vem_order_info</p><p>zongsheng3.vem_order_info =public.vem_order_info</p><p>zongsheng4.vem_order_info =public.vem_order_info</p><p>zongsheng5.vem_order_info =public.vem_order_info</p><p>zongsheng6.vem_order_info =public.vem_order_info</p><p>zongsheng7.vem_order_info =public.vem_order_info</p><p>zongsheng8.vem_order_info =public.vem_order_info</p><p>zongsheng9.vem_order_info =public.vem_order_info</p><p>zongsheng10.vem_order_info =public.vem_order_info</p><p>命令</p><pre><code class="language-plain">bin/bireme {start|stop|restart}</code></pre><br><p> </p><h2><a>注意事项</a></h2><p>Maxwell负责拉取mysql数据源的binlog日志，同时maxwell会在源数据库中创建名为maxwell的数据库用来存放源数据库的schemal、表名、字段名、bin-log-postion等信息</p><p>在源库进行flush logs操作时会导致maxwell找不到上一次的bin-log位置点</p><p>所以需要手动删除源数据库上的maxwell数据库，重启maxwell来获取源数据的信息</p><p> </p><p>同上在源数据库进行定期数据清理时要注意以下几点</p><p>1关闭maxwell停止bin-log获取</p><p>2手动删除源数据库上的maxwell数据库</p><p>3删除源数据库的需要清理的数据</p><p>4在源数据库上重置bin-log，resetmaster</p>            </div>
                </div>