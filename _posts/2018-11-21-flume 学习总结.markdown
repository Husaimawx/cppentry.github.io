---
layout:     post
title:      flume 学习总结
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h1 id="flume-总结">flume 总结</h1>

<p></p><div class="toc"><div class="toc">
<ul>
<li><a href="#flume-%E6%80%BB%E7%BB%93" rel="nofollow">flume 总结</a><ul>
<li><a href="#1-%E4%B8%8B%E8%BD%BD%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85" rel="nofollow">下载配置安装</a><ul>
<li><a href="#11-%E4%B8%8B%E8%BD%BD" rel="nofollow">1 下载</a></li>
<li><a href="#12-%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85" rel="nofollow">2 配置安装</a></li>
</ul>
</li>
<li><a href="#2-flume-%E6%9E%B6%E6%9E%84" rel="nofollow">flume 架构</a></li>
<li><a href="#3-agent-%E9%85%8D%E7%BD%AE" rel="nofollow">agent 配置</a><ul>
<li><a href="#31-source-%E9%85%8D%E7%BD%AE" rel="nofollow">1 source 配置</a><ul>
<li><a href="#311-%E7%9B%91%E5%90%AC%E7%BD%91%E7%BB%9C%E7%AB%AF%E5%8F%A3" rel="nofollow">11 监听网络端口</a></li>
<li><a href="#312-%E7%9B%91%E6%8E%A7%E6%96%87%E4%BB%B6" rel="nofollow">12 监控文件</a></li>
</ul>
</li>
<li><a href="#32-channel-%E9%85%8D%E7%BD%AE" rel="nofollow">2 channel 配置</a></li>
<li><a href="#33-sink-%E9%85%8D%E7%BD%AE" rel="nofollow">3 sink 配置</a></li>
</ul>
</li>
<li><a href="#4-failover-%E5%92%8C-load-balancing" rel="nofollow">failover 和 load balancing</a><ul>
<li><a href="#failover" rel="nofollow">failover</a></li>
<li><a href="#load-balancing" rel="nofollow">load balancing</a></li>
</ul>
</li>
<li><a href="#5-%E6%89%87%E5%87%BA" rel="nofollow">扇出</a></li>
<li><a href="#6-%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91" rel="nofollow">二次开发</a></li>
<li><a href="#7-%E5%90%AF%E5%8A%A8-flume" rel="nofollow">启动 flume</a></li>
<li><a href="#%E6%80%BB%E7%BB%93" rel="nofollow">总结</a></li>
</ul>
</li>
</ul>
</div>
</div>


<h2 id="1-下载配置安装">1 下载、配置、安装</h2>



<h3 id="11-下载">1.1 下载</h3>

<p>在官网 <code>http://flume.apache.org/download.html</code> 下载 <code>apache-flume-1.7.0-bin.tar.gz</code> 文件，解压缩。</p>



<h3 id="12-配置安装">1.2 配置、安装</h3>

<p>进入解压缩文件夹下的 <code>conf</code> 文件夹，执行 <code>cp flume-env.sh.template flume-env.sh</code>，在 <code>flume-env.sh</code> 中添加 <code>JAVA_HOME=jdk_path</code>  jdk_path 为 java 绝对路径。</p>

<p>执行 <code>/flume-1.7.0-bin/bin/flume-ng version</code> 出现版本信息证明配置安装成功。</p>



<h2 id="2-flume-架构">2 flume 架构</h2>

<p>flume 架构是基于 agent，agent 是由 source、channel、sink 组成。其中 source 相当于生产者，channel 相当于消息队列，sink 相当于消费者。</p>

<p>数据在 flume 中是以 event 为单位的，source 将数据打包为 event 传入 channel、sink 从 channel 中取数据。event 从 source 到 channel 和从 channel 到 sink 都是事务级别的。</p>

<p>由于 flume 是基于 agent 的，所以 flume 支持多级结构、扇入、扇出</p>



<h2 id="3-agent-配置">3 agent 配置</h2>

<p>一个 agent 中至少包括 source、channel、sink 各一个。</p>



<pre class="prettyprint"><code class=" hljs avrasm">a1<span class="hljs-preprocessor">.sources</span> = <span class="hljs-built_in">r1</span>
a1<span class="hljs-preprocessor">.sinks</span> = k1
a1<span class="hljs-preprocessor">.channels</span> = c1</code></pre>

<p>a1 为 agent 的名称。</p>

<p>以下内容均不完全，详情参考 <code>http://flume.apache.org/FlumeUserGuide.html</code> 。</p>



<h3 id="31-source-配置">3.1 source 配置</h3>

<p>本文只列出了几种类型。</p>



<h4 id="311-监听网络端口">3.1.1 监听网络端口</h4>

<p><strong>avro source</strong> ： 以 avro 格式处理数据</p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor"># 必须配置</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.type</span> = avro
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.bind</span> = <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.port</span> = <span class="hljs-number">3366</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.channels</span> = c1
<span class="hljs-preprocessor">#可选配置</span>
<span class="hljs-preprocessor"># ssl 认证</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.ssl</span> = false 
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.keystore</span> = 
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.keystore</span>-password = 
<span class="hljs-preprocessor"># ip 过滤</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.ipFilter</span> = false
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.ipFilterRules</span>
……</code></pre>

<hr>

<p><strong>thrift source</strong> ：以 thrift 格式处理数据</p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor"># 必须配置</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.type</span> = thrift
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.bind</span> = <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.port</span> = <span class="hljs-number">3366</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.channels</span> = c1

<span class="hljs-preprocessor">#可选配置</span>
<span class="hljs-preprocessor"># ssl 认证</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.ssl</span> = false 
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.keystore</span> = 
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.keystore</span>-password = 
……</code></pre>

<hr>

<p>还有 http 类型等详见 <code>http://flume.apache.org/FlumeUserGuide.html</code></p>



<h4 id="312-监控文件">3.1.2 监控文件</h4>

<p><strong>spooldir source</strong> ：监控文件夹下新增文件</p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor"># 必须配置</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.type</span> = spooldir
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.spoolDir</span> = directory
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.channels</span> = c1

<span class="hljs-preprocessor">#可选配置</span>
<span class="hljs-preprocessor">#是否带头部信息</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.fileHeader</span> = true
<span class="hljs-preprocessor">#忽略后缀文件</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.ignorePattern</span> = .*mv
<span class="hljs-preprocessor">#最大一行大小</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.deserializer</span><span class="hljs-preprocessor">.maxLineLength</span> = <span class="hljs-number">50000</span>
<span class="hljs-preprocessor"># 发现新文件 5s 后处理</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.pollDelay</span> = <span class="hljs-number">5000</span>
<span class="hljs-preprocessor">#对完成文件添加后缀 .COMPLETED</span>
<span class="hljs-preprocessor">#a1.sources.r1.fileSuffix = .COMPLETED</span>
<span class="hljs-preprocessor">#完成文件后是否删除 never or immediate</span>
<span class="hljs-preprocessor">#a1.sources.r1.deletePolicy = never</span>
……</code></pre>

<hr>

<pre><code>**exec source** ：监控文件夹下新增文件
</code></pre>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor"># 必须配置</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.type</span> = exec
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.command</span> = tail -F file
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.channels</span> = c1

<span class="hljs-preprocessor">#可选配置</span>
<span class="hljs-preprocessor">#挂掉后是否重启</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.restart</span> = false
<span class="hljs-preprocessor"># stderr 是否写入日志</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.logStdErr</span> = false
……</code></pre>

<hr>



<h3 id="32-channel-配置">3.2 channel 配置</h3>

<p><strong>memory channel</strong></p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor"># 必须配置</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.type</span> = memory
<span class="hljs-preprocessor"># channel 队列最大长度</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.capacity</span> = <span class="hljs-number">1000</span>
<span class="hljs-preprocessor"># 事务队列最大长度</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.transactionCapacity</span> = <span class="hljs-number">100</span>
<span class="hljs-preprocessor"># 超时时间</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.keep</span>-alive = <span class="hljs-number">3</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.byteCapacityBufferPercentage</span> = <span class="hljs-number">20</span>
<span class="hljs-preprocessor"># 最大内存</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.byteCapacity</span> = <span class="hljs-number">800000</span></code></pre>

<hr>

<pre><code>**file channel**
</code></pre>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor"># 必须配置</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.type</span> = file
<span class="hljs-preprocessor"># 记录传输进度文件目录</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.checkpointDir</span> = /mnt/flume/checkpoint
<span class="hljs-preprocessor"># 记录日志目录</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.dataDirs</span> = /mnt/flume/data
<span class="hljs-preprocessor"># 事务队列最大长度</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.transactionCapacity</span> = <span class="hljs-number">10000</span>
<span class="hljs-preprocessor"># 每个文件最大大小</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.maxFileSize</span> = <span class="hljs-number">2146435071</span>
<span class="hljs-preprocessor"># 小于此空间大小将停止传输</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.minimumRequiredSpace</span> = <span class="hljs-number">524288000</span></code></pre>



<h3 id="33-sink-配置">3.3 sink 配置</h3>

<p><strong>avro sink</strong></p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor"># 必须配置</span>
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.type</span> = avro
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.hostname</span> = <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.port</span> = <span class="hljs-number">3366</span>
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.channels</span> = c1
<span class="hljs-preprocessor">#可选配置</span>
<span class="hljs-preprocessor"># ssl 认证</span>
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.ssl</span> = false 
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.truststore</span> = 
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.truststore</span>-password = 
……</code></pre>

<hr>

<p><strong>thrift sinks</strong> ：以 thrift 格式处理数据</p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor"># 必须配置</span>
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.type</span> = thrift
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.hostname</span> = <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.port</span> = <span class="hljs-number">3366</span>
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.channels</span> = c1
<span class="hljs-preprocessor">#可选配置</span>
<span class="hljs-preprocessor"># ssl 认证</span>
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.ssl</span> = false 
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.truststore</span> = 
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.truststore</span>-password = 
……</code></pre>

<hr>

<pre><code>**file roll sink**
</code></pre>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor"># 必须配置</span>
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.s</span>1<span class="hljs-preprocessor">.type</span> = file_roll
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.sink</span><span class="hljs-preprocessor">.directory</span> = /var/log/flume
<span class="hljs-preprocessor">#可选配置</span>
<span class="hljs-preprocessor"># 每 30 秒生成一个文件</span>
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.sink</span><span class="hljs-preprocessor">.rollInterval</span> = <span class="hljs-number">30</span>
<span class="hljs-preprocessor"># 事务队列大小</span>
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.sink</span><span class="hljs-preprocessor">.batchSize</span> = <span class="hljs-number">100</span>
</code></pre>



<h2 id="4-failover-和-load-balancing">4 failover 和 load balancing</h2>

<p>flume 的 failover 和 load balancing 都是针对 sink 的。</p>



<h3 id="failover">failover</h3>



<pre class="prettyprint"><code class=" hljs avrasm">a1<span class="hljs-preprocessor">.sinkgroups</span> = g1
a1<span class="hljs-preprocessor">.sinkgroups</span><span class="hljs-preprocessor">.g</span>1<span class="hljs-preprocessor">.sinks</span> = k1 k2
a1<span class="hljs-preprocessor">.sinkgroups</span><span class="hljs-preprocessor">.g</span>1<span class="hljs-preprocessor">.processor</span><span class="hljs-preprocessor">.type</span> = failover
a1<span class="hljs-preprocessor">.sinkgroups</span><span class="hljs-preprocessor">.g</span>1<span class="hljs-preprocessor">.processor</span><span class="hljs-preprocessor">.priority</span><span class="hljs-preprocessor">.k</span>1 = <span class="hljs-number">5</span>
a1<span class="hljs-preprocessor">.sinkgroups</span><span class="hljs-preprocessor">.g</span>1<span class="hljs-preprocessor">.processor</span><span class="hljs-preprocessor">.priority</span><span class="hljs-preprocessor">.k</span>2 = <span class="hljs-number">10</span>
a1<span class="hljs-preprocessor">.sinkgroups</span><span class="hljs-preprocessor">.g</span>1<span class="hljs-preprocessor">.processor</span><span class="hljs-preprocessor">.maxpenalty</span> = <span class="hljs-number">10000</span></code></pre>

<p>在 sinkgroups 中，先启用的 priority 大的 sink。只有在当前的 sink 挂掉后，flume 才会启用 sinkgroups 中其余最大的。</p>

<hr>



<h3 id="load-balancing">load balancing</h3>



<pre class="prettyprint"><code class=" hljs avrasm">a1<span class="hljs-preprocessor">.sinkgroups</span> = g1
a1<span class="hljs-preprocessor">.sinkgroups</span><span class="hljs-preprocessor">.g</span>1<span class="hljs-preprocessor">.sinks</span> = k1 k2
a1<span class="hljs-preprocessor">.sinkgroups</span><span class="hljs-preprocessor">.g</span>1<span class="hljs-preprocessor">.processor</span><span class="hljs-preprocessor">.type</span> = load_balance
a1<span class="hljs-preprocessor">.sinkgroups</span><span class="hljs-preprocessor">.g</span>1<span class="hljs-preprocessor">.processor</span><span class="hljs-preprocessor">.backoff</span> = true
<span class="hljs-preprocessor"># balance ： round_robin, random</span>
a1<span class="hljs-preprocessor">.sinkgroups</span><span class="hljs-preprocessor">.g</span>1<span class="hljs-preprocessor">.processor</span><span class="hljs-preprocessor">.selector</span> = random</code></pre>



<h2 id="5-扇出">5 扇出</h2>

<p>对 source 的扇出有 <code>replicating</code>、<code>multiplexing</code> 两种方式。</p>

<p><strong>replicating</strong></p>

<p>在 source 配置后添加以下配置</p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor">#以复制方式扇出</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.selector</span><span class="hljs-preprocessor">.type</span> = replicating  
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.channels</span> = c1 c2</code></pre>

<hr>

<pre><code>**multiplexing**
</code></pre>

<p>在 source 配置后添加以下配置。 <br>
复用方式需要在消息中附加头部消息，对头部内容进行匹配后扇出。</p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor">#以复用方式扇出</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.selector</span><span class="hljs-preprocessor">.type</span>= multiplexing  
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.channels</span>= c1 c2  
<span class="hljs-preprocessor"># 判断 header 中 state 字段</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.selector</span><span class="hljs-preprocessor">.header</span>= state  
<span class="hljs-preprocessor"># state 字段为 CZ 发送到 c1</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.selector</span><span class="hljs-preprocessor">.mapping</span><span class="hljs-preprocessor">.CZ</span>= c1
<span class="hljs-preprocessor"># state 字段为 US 发送到 c2  </span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.selector</span><span class="hljs-preprocessor">.mapping</span><span class="hljs-preprocessor">.US</span>= c2  
<span class="hljs-preprocessor"># 未匹配的数据发送到 c1</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.selector</span><span class="hljs-preprocessor">.default</span>= c1 </code></pre>

<hr>



<h2 id="6-二次开发">6 二次开发</h2>

<p><strong>sink 开发</strong></p>



<pre class="prettyprint"><code class="language-jave hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MySink</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AbstractSink</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Configurable</span> {</span>
  <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> Logger logger = LoggerFactory.getLogger(TimeFileSink.class );
  <span class="hljs-keyword">private</span> String myProp;

  <span class="hljs-annotation">@Override</span>
  <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">configure</span>(Context context) {
    String myProp = context.getString(<span class="hljs-string">"myProp"</span>, <span class="hljs-string">"defaultValue"</span>);

    <span class="hljs-comment">// Process the myProp value (e.g. validation)</span>

    <span class="hljs-comment">// Store myProp for later retrieval by process() method</span>
    <span class="hljs-keyword">this</span>.myProp = myProp;
  }

  <span class="hljs-annotation">@Override</span>
  <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">start</span>() {
    <span class="hljs-comment">// Initialize the connection to the external repository (e.g. HDFS) that</span>
    <span class="hljs-comment">// this Sink will forward Events to ..</span>
  }

  <span class="hljs-annotation">@Override</span>
  <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">stop</span> () {
    <span class="hljs-comment">// Disconnect from the external respository and do any</span>
    <span class="hljs-comment">// additional cleanup (e.g. releasing resources or nulling-out</span>
    <span class="hljs-comment">// field values) ..</span>
  }

  <span class="hljs-annotation">@Override</span>
  <span class="hljs-keyword">public</span> Status <span class="hljs-title">process</span>() <span class="hljs-keyword">throws</span> EventDeliveryException {
    Status status = <span class="hljs-keyword">null</span>;

    <span class="hljs-comment">// Start transaction</span>
    Channel ch = getChannel();
    Transaction txn = ch.getTransaction();
    txn.begin();
    <span class="hljs-keyword">try</span> {
      <span class="hljs-comment">// This try clause includes whatever Channel operations you want to do</span>

      Event event = ch.take();

      <span class="hljs-comment">// Send the Event to the external repository.</span>
      <span class="hljs-comment">// storeSomeData(e);</span>

      txn.commit();
      status = Status.READY;
    } <span class="hljs-keyword">catch</span> (Throwable t) {
      txn.rollback();

      <span class="hljs-comment">// Log exception, handle individual exceptions as needed</span>

      status = Status.BACKOFF;

      <span class="hljs-comment">// re-throw all Errors</span>
      <span class="hljs-keyword">if</span> (t <span class="hljs-keyword">instanceof</span> Error) {
        <span class="hljs-keyword">throw</span> (Error)t;
      }
    }
    <span class="hljs-keyword">return</span> status;
  }
}</code></pre>

<p>在开发过程中只要重写 <code>configure</code>、<code>process</code>函数就可。</p>

<p>其中 <code>configure</code> 函数是从配置文件获取所需的配置，使用 <code>context.getString</code> 获取字符串，<code>context.getInteger</code> 获取数字。</p>

<p>在新建的类中，会不断的调用 <code>process</code> 函数</p>



<pre class="prettyprint"><code class="language-java hljs ">Channel ch = getChannel();
Transaction txn = ch.getTransaction();
<span class="hljs-comment">// 获取事件</span>
Event event = ch.take();
<span class="hljs-comment">//提交事务</span>
txn.commit();
<span class="hljs-comment">//回滚事务</span>
txn.rollback();
<span class="hljs-comment">//关闭</span>
txn.close();</code></pre>

<p>完成开发后把 <code>.class</code> 文件打包为 <code>.jar</code> ，把 <code>.jar</code> 包放入 <code>plugins.d/personal/lib/</code> 目录下（不存在自建，<code>personal</code> 随意）。在配置文件中 <code>a1.sinks.s1.type</code> 后添加自定义的完整包路径。</p>

<p><strong>source 开发</strong></p>

<p>同 sink 开发。</p>



<h2 id="7-启动-flume">7 启动 flume</h2>

<p><code>bin/flume-ng agent -c conf/ -f conf/flume_spool.conf -n a1 -Dflume.root.logger=INFO,console</code></p>



<pre class="prettyprint"><code class=" hljs haml">-<span class="ruby">c 配置文件目录
</span>-<span class="ruby">f 加载的配置文件
</span>-<span class="ruby">n 配置文件中 agent 名称
</span>-<span class="ruby"><span class="hljs-constant">Dflume</span>.root.logger=<span class="hljs-constant">INFO</span>,console 将 flume 运行中产生的大于 <span class="hljs-constant">INFO</span> 级别的消息输出到控制台
</span>-<span class="ruby"><span class="hljs-constant">Dflume</span>.root.logger=<span class="hljs-constant">INFO</span>,<span class="hljs-constant">LOGFILE</span> 将 flume 运行中产生的大于 <span class="hljs-constant">INFO</span> 级别的消息输出到日志，详细在 conf 目录下的 log4j.properties 文件</span></code></pre>

<h2 id="总结">总结</h2>

<p>有些东西并没有写入，有问题可以给我留言，看到会第一时间回复的。 <br>
本人第一次写博客，有很多不完美的地方请大家指出，O(∩_∩)O谢谢。</p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>