---
layout:     post
title:      Hadoop基本使用
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><span style="font-size:18px;">1、删除output路径所在的文件</span></p>
<p><span style="font-size:18px;"><span></span><span></span>HadoopUtil.delete(conf, output);</span></p>
<p><span style="font-size:18px;">2、获取HDFS上某一路径下的所有文件</span></p>
<p><span style="font-size:18px;"><span></span>2.1 方法1</span></p>
<p><span style="font-size:18px;"><span>FileSystem hdfs = null;<br><span></span>try {<br><span></span>//hdfs = FileSystem.get(URI.create("hdfs://localhost:9000/"),conf);<br><span></span>hdfs = FileSystem.get(conf);<br><span></span>} catch (Exception e) {<br><span></span>// TODO Auto-generated catch block<br><span></span>log.info("Create HDFS File System failed.");<br><span></span>e.printStackTrace();<br><span></span>}<br><span></span>//Path path = hdfs.getHomeDirectory();<br><span></span>FileStatus[] srcFileStatus = null;<br><span></span><br><span></span>try {<br><span></span>srcFileStatus = hdfs.listStatus(new Path(clusteredPointsPath));<br><span></span>} catch (Exception e) {<br><span></span>// TODO Auto-generated catch block<br><span></span>log.info("Get HDFS status failed. ");<br><span></span>e.printStackTrace();<br><span></span>}  <br>
        Path[] srcFilePath = FileUtil.stat2Paths(srcFileStatus); <br>
        List&lt;String&gt; fileNames = new ArrayList&lt;String&gt;();<br>
        for (int i = 0; i &lt; srcFilePath.length; i++)  <br>
        {  <br>
            String srcFile = srcFilePath[i].toString();  <br>
            int fileNamePosi = srcFile.lastIndexOf('/');  <br>
            String fileName = srcFile.substring(fileNamePosi + 1);<br>
            if(fileName.contains("part-"))<br>
            {<br>
            <span></span>fileNames.add(srcFile);<br>
            }<br>
        }  </span> </span></p>
<p><span style="font-size:18px;"><span></span>2.2 方法2</span></p>
<p><span style="font-size:18px;"><span>FileSystem fs = FileSystem.get(output.toUri(), conf);<br>
    HadoopUtil.delete(conf, output);<br>
    Path outFile = new Path(output, "part-randomSeed");<br>
    boolean newFile = fs.createNewFile(outFile);<br>
    if (newFile)</span><span> {<br>
      Path inputPathPattern;<br>
      if (fs.getFileStatus(input).isDir())</span><span> {<br>
        inputPathPattern = new Path(input, "*");<br>
      } else {<br>
        inputPathPattern = input;<br>
      }<br>
      <br>
      FileStatus[] inputFiles = fs.globStatus(inputPathPattern, PathFilters.logsCRCFilter());<br>
      SequenceFile.Writer writer = SequenceFile.createWriter(fs, conf, outFile, Text.class, Cluster.class);<br>
      Random random = RandomUtils.getRandom();<br>
      List&lt;Text&gt; chosenTexts = Lists.newArrayListWithCapacity(k);<br>
      List&lt;Cluster&gt; chosenClusters = Lists.newArrayListWithCapacity(k);<br>
      int nextClusterId = 0;<br>
      <br>
      for (FileStatus fileStatus : inputFiles)</span><span><br></span>{</span></p>
<p><span style="font-size:18px;"><span></span>对<span style="font-size:18px;">fileStatus</span>处理<span>        <br>
      }</span></span></p>
<p></p>
<p></p>
<p><span style="font-size:18px;">3、在MapReduce外部传递信息到MapReduce里面</span></p>
<p><span style="font-size:18px;"><span></span>3.1 在调用作业之前：</span></p>
<p><span style="font-size:18px;"><span></span>Configuration conf = new Configuration();<br></span></p>
<p><span style="font-size:18px;"><span></span>conf.set("key","value");  //在外部设置key的值为value</span></p>
<p><span style="font-size:18px;"><span></span>3.2 在运行MapReduce作业时：</span></p>
<p><span style="font-size:18px;"><span></span></span></p>
<p style="font-family:Arial;font-size:14px;line-height:26px;text-align:left;">
  先回忆一下。Mapper有setup()，map()，cleanup()和run()四个方法。其中setup()一般是用来进行一些map()前的准备工作，map()则一般承担主要的处理工作，cleanup()则是收尾工作如关闭文件或者执行map()后的K-V分发等。run()方法提供了setup-&gt;map-&gt;cleanup()的执行模板。</p>
<p style="font-family:Arial;font-size:14px;line-height:26px;text-align:left;">
  在MapReduce中，Mapper从一个输入分片中读取数据，然后经过Shuffle and Sort阶段，分发数据给Reducer，在Map端和Reduce端我们可能使用设置的Combiner进行合并，这在Reduce前进行。Partitioner控制每个K-V对应该被分发到哪个reducer[我们的Job可能有多个reducer]，Hadoop默认使用HashPartitioner，HashPartitioner使用key的hashCode对reducer的数量取模得来。</p>
<p style="font-family:Arial;font-size:14px;line-height:26px;text-align:left;">
</p>
<div class="dp-highlighter bg_java" style="font-family:Consolas, 'Courier New', Courier, mono, serif;margin-left:0px !important;text-align:left;line-height:26px;">
<div class="bar">
<div class="tools" style="font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;font-size:9px;line-height:normal;color:#C0C0C0;background-color:rgb(248,248,248);border-left-width:3px;border-left-style:solid;border-left-color:rgb(153,153,153);">
<strong>[java]</strong> <a href="http://blog.csdn.net/posa88/article/details/7901304#" rel="nofollow" class="ViewSource" title="view plain" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;margin-left:0px;font-size:9px;">view
 plain</a><a href="http://blog.csdn.net/posa88/article/details/7901304#" rel="nofollow" class="CopyToClipboard" title="copy" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;margin-left:0px;font-size:9px;">copy</a><a href="http://blog.csdn.net/posa88/article/details/7901304#" rel="nofollow" class="PrintSource" title="print" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;margin-left:0px;font-size:9px;">print</a><a href="http://blog.csdn.net/posa88/article/details/7901304#" rel="nofollow" class="About" title="?" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;margin-left:0px;font-size:9px;">?</a>
<div style="width:29px;z-index:99;">
</div>
</div>
</div>
<ol start="1" class="dp-j" style="margin-left:45px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:rgb(92,92,92);"><li class="alt" style="margin-left:0px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:solid;list-style-position:outside !important;border-left-width:3px;border-left-color:rgb(153,153,153);background-color:rgb(245,250,226);color:inherit;line-height:18px;">
<span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#000000;background-color:inherit;"><span class="keyword" style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#0000FF;background-color:inherit;font-weight:bold;">public</span><span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;background-color:inherit;"> </span><span class="keyword" style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#0000FF;background-color:inherit;font-weight:bold;">void</span><span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;background-color:inherit;"> run(Context context) </span><span class="keyword" style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#0000FF;background-color:inherit;font-weight:bold;">throws</span><span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;background-color:inherit;"> IOException, InterruptedException {  </span></span></li><li style="margin-left:0px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:solid;list-style-position:outside !important;border-left-width:3px;border-left-color:rgb(153,153,153);background-color:rgb(245,250,226);color:rgb(85,85,85);line-height:18px;">
<span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#000000;background-color:inherit;">  setup(context);  </span></li><li class="alt" style="margin-left:0px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:solid;list-style-position:outside !important;border-left-width:3px;border-left-color:rgb(153,153,153);background-color:rgb(245,250,226);color:inherit;line-height:18px;">
<span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#000000;background-color:inherit;">  <span class="keyword" style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#0000FF;background-color:inherit;font-weight:bold;">while</span><span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;background-color:inherit;"> (context.nextKeyValue()) {  </span></span></li><li style="margin-left:0px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:solid;list-style-position:outside !important;border-left-width:3px;border-left-color:rgb(153,153,153);background-color:rgb(245,250,226);color:rgb(85,85,85);line-height:18px;">
<span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#000000;background-color:inherit;">    map(context.getCurrentKey(), context.getCurrentValue(), context);  </span></li><li class="alt" style="margin-left:0px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:solid;list-style-position:outside !important;border-left-width:3px;border-left-color:rgb(153,153,153);background-color:rgb(245,250,226);color:inherit;line-height:18px;">
<span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#000000;background-color:inherit;">  }  </span></li><li style="margin-left:0px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:solid;list-style-position:outside !important;border-left-width:3px;border-left-color:rgb(153,153,153);background-color:rgb(245,250,226);color:rgb(85,85,85);line-height:18px;">
<span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#000000;background-color:inherit;">  cleanup(context);  </span></li><li class="alt" style="margin-left:0px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:solid;list-style-position:outside !important;border-left-width:3px;border-left-color:rgb(153,153,153);background-color:rgb(245,250,226);color:inherit;line-height:18px;">
<span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#000000;background-color:inherit;">}  </span></li></ol></div>
<span style="font-family:Arial;font-size:14px;line-height:26px;text-align:left;">从上面run方法可以看出，K/V对是从传入的Context获取的。我们也可以从下面的map方法看出，输出结果K/V对也是通过Context来完成的。至于Context暂且放着。</span>
<p style="font-family:Arial;font-size:14px;line-height:26px;text-align:left;">
</p>
<p style="font-family:Arial;font-size:14px;line-height:26px;text-align:left;">
</p>
<div class="dp-highlighter bg_java" style="font-family:Consolas, 'Courier New', Courier, mono, serif;margin-left:0px !important;text-align:left;line-height:26px;">
<div class="bar">
<div class="tools" style="font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;font-size:9px;line-height:normal;color:#C0C0C0;background-color:rgb(248,248,248);border-left-width:3px;border-left-style:solid;border-left-color:rgb(153,153,153);">
<strong>[java]</strong> <a href="http://blog.csdn.net/posa88/article/details/7901304#" rel="nofollow" class="ViewSource" title="view plain" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;margin-left:0px;font-size:9px;">view
 plain</a><a href="http://blog.csdn.net/posa88/article/details/7901304#" rel="nofollow" class="CopyToClipboard" title="copy" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;margin-left:0px;font-size:9px;">copy</a><a href="http://blog.csdn.net/posa88/article/details/7901304#" rel="nofollow" class="PrintSource" title="print" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;margin-left:0px;font-size:9px;">print</a><a href="http://blog.csdn.net/posa88/article/details/7901304#" rel="nofollow" class="About" title="?" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;margin-left:0px;font-size:9px;">?</a>
<div style="width:29px;z-index:99;">
</div>
</div>
</div>
<ol start="1" class="dp-j" style="margin-left:45px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:rgb(92,92,92);"><li class="alt" style="margin-left:0px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:solid;list-style-position:outside !important;border-left-width:3px;border-left-color:rgb(153,153,153);background-color:rgb(245,250,226);color:inherit;line-height:18px;">
<span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#000000;background-color:inherit;"><span class="annotation" style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:rgb(100,100,100);background-color:inherit;">@SuppressWarnings</span><span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;background-color:inherit;">(</span><span class="string" style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#FF0000;background-color:inherit;">"unchecked"</span><span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;background-color:inherit;">)  </span></span></li><li style="margin-left:0px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:solid;list-style-position:outside !important;border-left-width:3px;border-left-color:rgb(153,153,153);background-color:rgb(245,250,226);color:rgb(85,85,85);line-height:18px;">
<span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#000000;background-color:inherit;"><span class="keyword" style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#0000FF;background-color:inherit;font-weight:bold;">protected</span><span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;background-color:inherit;"> </span><span class="keyword" style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#0000FF;background-color:inherit;font-weight:bold;">void</span><span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;background-color:inherit;"> map(KEYIN key, VALUEIN value,   </span></span></li><li class="alt" style="margin-left:0px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:solid;list-style-position:outside !important;border-left-width:3px;border-left-color:rgb(153,153,153);background-color:rgb(245,250,226);color:inherit;line-height:18px;">
<span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#000000;background-color:inherit;">                   Context context) <span class="keyword" style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#0000FF;background-color:inherit;font-weight:bold;">throws</span><span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;background-color:inherit;"> IOException, InterruptedException {  </span></span></li><li style="margin-left:0px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:solid;list-style-position:outside !important;border-left-width:3px;border-left-color:rgb(153,153,153);background-color:rgb(245,250,226);color:rgb(85,85,85);line-height:18px;">
<span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#000000;background-color:inherit;">  context.write((KEYOUT) key, (VALUEOUT) value);  </span></li><li class="alt" style="margin-left:0px !important;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:solid;list-style-position:outside !important;border-left-width:3px;border-left-color:rgb(153,153,153);background-color:rgb(245,250,226);color:inherit;line-height:18px;">
<span style="margin-left:0px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;color:#000000;background-color:inherit;">}   </span></li></ol></div>
<p style="font-family:Arial;font-size:14px;line-height:26px;text-align:left;">
</p>
<p><span style="color:#ff0000;">所以在map内部为了获得某些信息可以重写<span style="font-family:Arial;font-size:14px;line-height:26px;text-align:left;">setup()在该方法中设置外部使用的参数，如下：</span></span></p>
<p><span style="color:#ff0000;"><span style="font-family:Arial;font-size:14px;line-height:26px;text-align:left;"></span></span></p>
<pre><code class="language-java">@Override
  protected void setup(Context context) throws IOException, InterruptedException {
    super.setup(context);
    Configuration conf = context.getConfiguration();
    String clusterPath = conf.get("path");</code></pre><pre><code class="language-java">....   
  }</code></pre>
<p>4、如果将多个小文件放在一个文件夹里file中，给mapreduce作业传递输入路径时，只需要传递到*/file即可(*代表上层路径)，Hadoop会自动查找该文件夹下的文件，如果文件大小小于HDFS文件块大小，map的数量由文件个数确定；如果文件大小大于HDFS文件块大小，则map数量由文件大小除以HDFS文件块大小后的值向右取整数。</p>
<p>5、向HDFS文件系统写入数据</p>
<p><span></span>Configuration conf = context.getConfiguration();<br><span></span>String outputPath = conf.get("outputDataString");<br><span></span>HadoopUtil.delete(conf, new Path(outputPath));<br><span></span><br><span></span>   <span> </span>FileSystem fs = FileSystem.get(conf);<br><span></span>   <span> </span>FSDataOutputStream hdfsOutStream = fs.create(new Path(outputPath));<br><span></span>   <span> </span>BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(hdfsOutStream));<br><span></span>   <span> </span>bufferedWriter.write(confusionMatrix.toString());<br><span></span>   <span> </span>bufferedWriter.close();<br></p>
<p>5、有时关闭Hadoop守护进程(stop-all.sh)，下次再启动（start-all.sh）后，之前所有的HDFS文件都不能使用，需要重新格式化系统，因为每次重启系统时临时文件被删除了，做如下处理即可：在conf文件夹的core-site.xml中增加如下属性</p>
<p>&lt;property&gt;<br>
         &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;<br>
         &lt;value&gt;/home/zhongchao/hadooptmp&lt;/value&gt;<br>
         &lt;description&gt;A base for other temporary directories&lt;/description&gt;<br>
     &lt;/property&gt;<br></p>
<p>6、Hadoop集群调优</p>
<p><a href="http://blog.csdn.net/dajuezhao/article/details/6591034" rel="nofollow">http://blog.csdn.net/dajuezhao/article/details/6591034</a><br></p>
<p>7、Hadoop运行内存溢出解决方法</p>
<p><u>http://blog.sina.com.cn/s/blog_8c6d7ff6010101sr.html</u><br></p>
<p></p>
            </div>
                </div>