---
layout:     post
title:      Hadoop学习-安装
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许可以转载，但请注明出处。					https://blog.csdn.net/jay763836801/article/details/52648482				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h1 id="一hadoop介绍及其环境介绍">一、hadoop介绍及其环境介绍</h1>



<h2 id="11-hadoop简介">1.1 Hadoop简介</h2>

<p>　　Hadoop是Apache软件基金会旗下的一个开源分布式计算平台。以Hadoop分布式文件系统（HDFS，Hadoop Distributed Filesystem）和MapReduce（Google MapReduce的开源实现）为核心的Hadoop为用户提供了系统底层细节透明的分布式基础架构。</p>

<p>　　对于Hadoop的集群来讲，可以分成两大类角色：Master和Salve。一个HDFS集群是由一个NameNode和若干个DataNode组成的。其中NameNode作为主服务器，管理文件系统的命名空间和客户端对文件系统的访问操作；集群中的DataNode管理存储的数据。MapReduce框架是由一个单独运行在主节点上的JobTracker和运行在每个集群从节点的TaskTracker共同组成的。主节点负责调度构成一个作业的所有任务，这些任务分布在不同的从节点上。主节点监控它们的执行情况，并且重新执行之前的失败任务；从节点仅负责由主节点指派的任务。当一个Job被提交时，JobTracker接收到提交作业和配置信息之后，就会将配置信息等分发给从节点，同时调度任务并监控TaskTracker的执行。</p>

<p>　　从上面的介绍可以看出，HDFS和MapReduce共同组成了Hadoop分布式系统体系结构的核心。HDFS在集群上实现分布式文件系统，MapReduce在集群上实现了分布式计算和任务处理。HDFS在MapReduce任务处理过程中提供了文件操作和存储等支持，MapReduce在HDFS的基础上实现了任务的分发、跟踪、执行等工作，并收集结果，二者相互作用，完成了Hadoop分布式集群的主要任务。</p>



<h3 id="12-环境说明">1.2 环境说明</h3>

<p>集群中包括4个节点：1个Master，3个Salve，节点之间局域网连接，可以相互ping通。节点IP地址分布如下：</p>

<table>
<thead>
<tr>
  <th align="center">role</th>
  <th align="center">hostname</th>
  <th align="center">ip</th>
  <th align="center">release</th>
</tr>
</thead>
<tbody><tr>
  <td align="center">master</td>
  <td align="center">Master.Hadoop</td>
  <td align="center">1.1.1.11</td>
  <td align="center">centos6.5</td>
</tr>
<tr>
  <td align="center">minion</td>
  <td align="center">Salve1.Hadoop</td>
  <td align="center">1.1.1.12</td>
  <td align="center">centos6.5</td>
</tr>
<tr>
  <td align="center">minion</td>
  <td align="center">Salve2.Hadoop</td>
  <td align="center">1.1.1.13</td>
  <td align="center">centos6.5</td>
</tr>
<tr>
  <td align="center">minion</td>
  <td align="center">Salve3.Hadoop</td>
  <td align="center">1.1.1.14</td>
  <td align="center">centos6.5</td>
</tr>
</tbody></table>


<p>四个节点上均是CentOS6.5系统，并且有一个相同的用户hadoop。Master机器主要配置NameNode和JobTracker的角色，负责总管分布式数据和分解任务的执行；3个Salve机器配置DataNode和TaskTracker的角色，负责分布式数据存储以及任务的执行。其实应该还应该有1个Master机器，用来作为备用，以防止Master服务器宕机，还有一个备用马上启用。后续经验积累一定阶段后补上一台备用Master机器。</p>



<h2 id="13-网络配置">1.3 网络配置</h2>

<p>　　下面的例子我们将以Master机器为例，即主机名为”Master.Hadoop”，IP为”192.168.1.2”进行一些主机名配置的相关操作。其他的Slave机器以此为依据进行修改。</p>



<h3 id="1修改当前机器名称">1）修改当前机器名称</h3>

<p>修改/etc/sysconfig/network”文件修改其中”HOSTNAME”后面的值，改成我们规划的名称。 <br>
修改类似：<code>HOSTNAME=Master.Hdoop</code>、<code>HOSTNAME=Slave1.Hadoop</code> …</p>



<h3 id="2配置hosts文件必须">2）配置hosts文件（必须）</h3>



<pre class="prettyprint"><code class=" hljs avrasm">&gt; vim /etc/hosts
<span class="hljs-number">1.1</span><span class="hljs-number">.1</span><span class="hljs-number">.11</span> Master<span class="hljs-preprocessor">.Hadoop</span>
<span class="hljs-number">1.1</span><span class="hljs-number">.1</span><span class="hljs-number">.12</span> Slave1<span class="hljs-preprocessor">.Hadoop</span>
<span class="hljs-number">1.1</span><span class="hljs-number">.1</span><span class="hljs-number">.13</span> Slave2<span class="hljs-preprocessor">.Hadoop</span>
<span class="hljs-number">1.1</span><span class="hljs-number">.1</span><span class="hljs-number">.14</span> Slave3<span class="hljs-preprocessor">.Hadoop</span>  </code></pre>



<h2 id="14-安装和启动ssh协议">1.4 安装和启动SSH协议</h2>

<p>在各机器间配置秘钥对，主从互相访问，建议用hadoop用户进行。</p>

<p>all:</p>



<pre class="prettyprint"><code class=" hljs lasso">ssh<span class="hljs-attribute">-keygen</span></code></pre>

<p>把~/.ssh/id_rsa.pub追加到目标机器的~/.ssh/authorized_keys</p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-label">slave:</span>chmod <span class="hljs-number">600</span> ~/<span class="hljs-preprocessor">.ssh</span>/authorized_keys</code></pre>

<p>因为是实验，建议把iptables和selinux关闭。</p>



<pre class="prettyprint"><code class=" hljs vbnet">sed -i <span class="hljs-comment">'s/SELINUX=enforcing/SELINUX=disabled/' /etc/sysconfig/selinux </span>
chkconfig iptables <span class="hljs-keyword">off</span>
/etc/init.d/iptables <span class="hljs-keyword">stop</span></code></pre>



<h2 id="15-所需软件">1.5 所需软件</h2>

<p>安装salt，执行批量化安装</p>



<h3 id="1jdk软件">1）JDK软件</h3>

<pre><code>下载地址：https://www.reucon.com/cdn/java/

JDK版本：jdk-7u45-linux-x64.tar.gz
</code></pre>



<h3 id="2hadoop软件">2）Hadoop软件</h3>

<pre><code>下载地址：http://apache.fayea.com/hadoop/common/hadoop-2.6.0/

Hadoop版本：hadoop-2.6.0.tar.gz
</code></pre>



<h1 id="二hadoop-环境部署">二、hadoop 环境部署</h1>



<h2 id="21安装jdk">2.1安装JDK</h2>



<h3 id="1新建目录">1）新建目录</h3>



<pre class="prettyprint"><code class=" hljs haskell"><span class="hljs-title">mkdir</span> /<span class="hljs-typedef"><span class="hljs-keyword">data</span>/<span class="hljs-container">{<span class="hljs-title">packages</span>,<span class="hljs-title">sh</span>,<span class="hljs-title">scripts</span>,<span class="hljs-title">logs</span>,<span class="hljs-title">py</span>,<span class="hljs-title">tomcat</span>,<span class="hljs-title">app</span>}</span> -p</span>
<span class="hljs-title">cd</span> /<span class="hljs-typedef"><span class="hljs-keyword">data</span>/packages/</span>
<span class="hljs-title">for</span> i <span class="hljs-keyword">in</span> `ls`;<span class="hljs-keyword">do</span> tar xf $i;done</code></pre>



<h2 id="22配置环境变量">2.2配置环境变量</h2>

<p>编辑”/etc/profile”文件，在后面添加Java的”JAVA_HOME”、”CLASSPATH”以及”PATH”内容。</p>



<pre class="prettyprint"><code class=" hljs nginx"><span class="hljs-title">mv</span> jdk1.<span class="hljs-number">7</span>.0_45/ /data/app/
echo <span class="hljs-string">'export JAVA_HOME=/data/app/jdk1.7.0_45'</span> &gt;&gt;/etc/profile
echo <span class="hljs-string">'export CLASSPATH=.:<span class="hljs-variable">$CLASSPATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/lib::<span class="hljs-variable">$JAVA_HOME</span>/jre/lib'</span> &gt;&gt;/etc/profile
echo <span class="hljs-string">'export PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$JRE_HOME</span>/bin'</span> &gt;&gt;/etc/profile
source /etc/profile
java -version  <span class="hljs-comment">#查看java版本</span></code></pre>

<p>为所有机器执行此操作</p>



<h1 id="三hadoop的安装和配置">三、hadoop的安装和配置</h1>



<h2 id="31安装hadoop">3.1安装hadoop</h2>



<pre class="prettyprint"><code class=" hljs haskell"><span class="hljs-title">mv</span> hadoop-<span class="hljs-number">2.6</span><span class="hljs-number">.0</span> /<span class="hljs-typedef"><span class="hljs-keyword">data</span>/app/hadoop</span>
<span class="hljs-title">chown</span> hadoop.hadoop -<span class="hljs-type">R</span> /<span class="hljs-typedef"><span class="hljs-keyword">data</span>/app/hadoop</span></code></pre>

<p>在”hadoop”下面创建tmp文件夹，把Hadoop的安装路径添加到”/etc/profile”中，修改”/etc/profile”文件（配置java环境变量的文件），将以下语句添加到末尾，并使其有效：</p>



<pre class="prettyprint"><code class=" hljs haskell"><span class="hljs-title">echo</span> '<span class="hljs-keyword">export</span> <span class="hljs-type">HADOOP_HOME</span>=/<span class="hljs-typedef"><span class="hljs-keyword">data</span>/app/hadoop' &gt;&gt; /etc/profile</span>
<span class="hljs-title">echo</span> '<span class="hljs-keyword">export</span> <span class="hljs-type">PATH</span>=$<span class="hljs-type">PATH</span>:$<span class="hljs-type">HADOOP_HOME</span>/bin' &gt;&gt; /etc/profile
<span class="hljs-title">source</span> /etc/profile
<span class="hljs-title">mkdir</span> /<span class="hljs-typedef"><span class="hljs-keyword">data</span>/app/hadoop/tmp</span></code></pre>



<h2 id="32-配置hadoop">3.2 配置hadoop</h2>

<p>分别配置core-site.xml、hdfs-site.xml、mapred-site.xml、yarn-site.xml、slaves   </p>



<h3 id="1配置hadoop-envsh">1）配置hadoop-env.sh</h3>



<pre class="prettyprint"><code class=" hljs haskell"><span class="hljs-title">cd</span> /<span class="hljs-typedef"><span class="hljs-keyword">data</span>/app/hadoop/etc/hadoop/</span>
<span class="hljs-title">echo</span> '<span class="hljs-keyword">export</span> <span class="hljs-type">JAVA_HOME</span>=/<span class="hljs-typedef"><span class="hljs-keyword">data</span>/app/jdk1.7.0_45' &gt;&gt;hadoop-env.sh</span></code></pre>



<h3 id="2配置core-sitexml文件">2）配置core-site.xml文件</h3>

<p>修改Hadoop核心配置文件core-site.xml，这里配置的是HDFS的地址和端口号。</p>



<pre class="prettyprint"><code class=" hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">configuration</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hadoop.tmp.dir<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>/data/app/hadoop/tmp<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>Abase for other temporary directories.<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>fs.defaultFS<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>hdfs://Master.Hadoop:9000<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
<span class="hljs-comment">&lt;!--
        &lt;property&gt;
                &lt;name&gt;io.file.buffer.size&lt;/name&gt;
                &lt;value&gt;512&lt;/value&gt;
        &lt;/property&gt;
--&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">configuration</span>&gt;</span></code></pre>



<h3 id="3配置hdfs-sitexml文件">3）配置hdfs-site.xml文件</h3>

<p>修改Hadoop中HDFS的配置，配置的备份方式默认为3。</p>



<pre class="prettyprint"><code class=" hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">configuration</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.namenode.name.dir<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>file:///data/app/hadoop/dfs/name<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.datanode.data.dir<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>file:///data/app/hadoop/dfs/data<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.replication<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>Master.Hadoop:50090<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.webhdfs.enabled<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>

    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.datanode.ipc.address<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>0.0.0.0:50020<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.datanode.http.address<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>0.0.0.0:50075<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;/<span class="hljs-title">configuration</span>&gt;</span></code></pre>



<h3 id="4配置mapred-sitexml文件">4）配置mapred-site.xml文件</h3>

<p>修改Hadoop中MapReduce的配置文件，配置的是JobTracker的地址和端口。</p>



<pre class="prettyprint"><code class=" hljs xml"><span class="hljs-pi">&lt;?xml version="1.0"?&gt;</span>
<span class="hljs-pi">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">configuration</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>mapreduce.framework.name<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>yarn<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">final</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-title">final</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>mapreduce.jobtracker.http.address<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>Master.Hadoop:50030<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>mapreduce.jobhistory.address<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>Master.Hadoop:10020<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>Master.Hadoop:19888<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>mapred.job.tracker<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>http://Master.Hadoop:9001<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">configuration</span>&gt;</span></code></pre>



<h3 id="5配置-yarm-sitexml文件">5）配置 yarm-site.xml文件</h3>



<pre class="prettyprint"><code class=" hljs xml">    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>Master.Hadoop<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>mapreduce_shuffle<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.resourcemanager.address<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>Master.Hadoop:8032<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.resourcemanager.scheduler.address<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>Master.Hadoop:8030<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>Master.Hadoop:8031<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.resourcemanager.admin.address<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>Master.Hadoop:8033<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.resourcemanager.webapp.address<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>Master.Hadoop:8088<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span></code></pre>

<ul>
<li>到此：单机的server就算是配好了，这个时候就可以启动起来的可以看看效果；</li>
</ul>



<h1 id="四变身集群">四、变身集群</h1>



<h2 id="41-配置集群">4.1 配置集群</h2>



<h2 id="1配置slaves">1）配置slaves</h2>



<pre class="prettyprint"><code class=" hljs avrasm">&gt;vim etc/hadoop/slaves
Slave1<span class="hljs-preprocessor">.Hadoop</span>
Slave2<span class="hljs-preprocessor">.Hadoop</span>
Slave3<span class="hljs-preprocessor">.Hadoop</span></code></pre>



<h3 id="2copy目录">2）copy目录</h3>

<p>把/data/app/hadoop/复制到每个salve</p>



<pre class="prettyprint"><code class=" hljs ruby">rsync -av -e <span class="hljs-string">'ssh -p 22'</span> --delete /data/app/hadoop/ <span class="hljs-number">1.1</span>.<span class="hljs-number">1.12</span><span class="hljs-symbol">:/data/app/hadoop/</span>
rsync -av -e <span class="hljs-string">'ssh -p 22'</span> --delete /data/app/hadoop/ <span class="hljs-number">1.1</span>.<span class="hljs-number">1.13</span><span class="hljs-symbol">:/data/app/hadoop/</span>
rsync -av -e <span class="hljs-string">'ssh -p 22'</span> --delete /data/app/hadoop/ <span class="hljs-number">1.1</span>.<span class="hljs-number">1.14</span><span class="hljs-symbol">:/data/app/hadoop/</span></code></pre>



<h2 id="42-启动及验证">4.2 启动及验证</h2>



<h3 id="1格式化hdfs文件系统">1）格式化HDFS文件系统</h3>

<p>在”Master.Hadoop”上使用普通用户hadoop进行操作。(备注：只需一次，下次启动不再需要格式化。)</p>



<pre class="prettyprint"><code class=" hljs rsl">hadoop namenode -<span class="hljs-built_in">format</span>
或
hdfs namenode –<span class="hljs-built_in">format</span></code></pre>



<h3 id="2启动hadoop">2）启动hadoop</h3>



<pre class="prettyprint"><code class=" hljs sql">sbin/<span class="hljs-operator"><span class="hljs-keyword">start</span>-dfs.sh
sbin/<span class="hljs-keyword">start</span>-yarn.sh</span></code></pre>

<p>顺利的话，master节点上有几下3个进程：jps （查看 hadoop的进程）</p>



<pre class="prettyprint"><code class=" hljs ">7482 ResourceManager
7335 SecondaryNameNode
7159 NameNode</code></pre>

<p>slave上有几下2个进程：</p>



<pre class="prettyprint"><code class=" hljs ">2296 DataNode
2398 NodeManager</code></pre>

<p>同时可浏览：</p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-label">http:</span>//<span class="hljs-number">1.1</span><span class="hljs-number">.1</span><span class="hljs-number">.11</span>:<span class="hljs-number">8088</span>/cluster/nodes
<span class="hljs-label">http:</span>//<span class="hljs-number">1.1</span><span class="hljs-number">.1</span><span class="hljs-number">.11</span>:<span class="hljs-number">50070</span>/dfshealth<span class="hljs-preprocessor">.html</span><span class="hljs-preprocessor">#tab-overview</span></code></pre>

<p><img src="http://upload-images.jianshu.io/upload_images/2377241-25fd8c94684eca22.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="http://1.1.1.11:8088/cluster/nodes" title=""></p>

<p><img src="http://upload-images.jianshu.io/upload_images/2377241-2f52377a4d18c682.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="http://1.1.1.11:50070/dfshealth.html#tab-overview" title=""> <br>
* 另外也可以通过 bin/hadoop dfsadmin -report 查看hdfs的状态报告 <br>
<strong>注</strong>：hadoop namenode不能启动，9000端口没有监听， <br>
<strong>解决</strong>：hdfs-site.xml <br>
删除dfs和tmp下的文件，然后重新格式化hadoop namenode -format</p>

<p>参考1： <a href="http://www.cnblogs.com/xia520pi/archive/2012/05/16/2503949.html" rel="nofollow">http://www.cnblogs.com/xia520pi/archive/2012/05/16/2503949.html</a>  <br>
参考2 ：<a href="http://www.itnose.net/detail/6182168.html" rel="nofollow">http://www.itnose.net/detail/6182168.html</a></p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>