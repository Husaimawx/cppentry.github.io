---
layout:     post
title:      Hive UDF函数编写流程详解
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p>参考官网：<br>
https://cwiki.apache.org/confluence/display/Hive/HivePlugins     添加hive UDF函数<br>
https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF   可查看hive内置函数</p>

<p><br>
常用命令：</p>

<p>SHOW FUNCTIONS;      查看hive函数<br>
DESCRIBE FUNCTION &lt;function_name&gt;;    查看hive某个函数的用法<br>
DESCRIBE FUNCTION EXTENDED &lt;function_name&gt;; 查看hive某个函数更详细的用法</p>

<p>UDF编写步骤<br>
一、使用IDEA创建maven工程，步骤：File-》New-》Project-》Maven-》maven-archetype-quickstart-》输入maven坐标完成maven工程创建<br>
二、pom.xml中添加如下依赖<br>
&lt;properties&gt;<br>
  &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;<br>
  &lt;hadoop.version&gt;2.6.0-cdh5.12.1&lt;/hadoop.version&gt;<br>
  &lt;hive.version&gt;1.1.0-cdh5.12.1&lt;/hive.version&gt;<br>
&lt;/properties&gt;</p>

<p>&lt;!--CDH版本需要添加repository，apache版本不需要--&gt;<br>
&lt;repositories&gt;<br>
  &lt;repository&gt;<br>
    &lt;id&gt;cloudera&lt;/id&gt;<br>
    &lt;url&gt;https://repository.cloudera.com/artifactory/cloudera-repos/&lt;/url&gt;<br>
  &lt;/repository&gt;<br>
&lt;/repositories&gt;</p>

<p><br>
&lt;dependencies&gt;<br>
  &lt;!--添加Hadoop依赖--&gt;<br>
  &lt;dependency&gt;<br>
    &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;<br>
    &lt;artifactId&gt;hadoop-common&lt;/artifactId&gt;<br>
    &lt;version&gt;${hadoop.version}&lt;/version&gt;<br>
  &lt;/dependency&gt;</p>

<p>  &lt;!--添加Hive依赖--&gt;<br>
  &lt;dependency&gt;<br>
    &lt;groupId&gt;org.apache.hive&lt;/groupId&gt;<br>
    &lt;artifactId&gt;hive-exec&lt;/artifactId&gt;<br>
    &lt;version&gt;${hive.version}&lt;/version&gt;<br>
  &lt;/dependency&gt;<br>
&lt;/dependencies&gt;三、编写Hive UDF函数<br>
新建一个类继承UDF类并重写evaluate方法，示列代码如下：</p>

<pre class="has">
<code class="language-java">public class HelloUDF extends UDF{
    public Text evaluate(final Text s) {
        if (s == null) { return null; }
        return new Text("Hello:"+ s);
    }

    public static void  main(String[] args) {
        HelloUDF udf = new HelloUDF();
        Text result = udf.evaluate(new Text ("Hive"));
        System.out.println(result.toString());
    }
}</code></pre>

<p><br>
四、打包编译生成jar包，注册UDF函数<br>
生成的jar包如：hive-1.0.jar<br>
(1)临时生效，即只在当前hive shell环境生效<br><span style="color:#f33b45;">hive&gt; add jar hive-1.0.jar;     加入jar包，注意jar包的路径，我这里是当前路径</span><br>
Added [hive-1.0.jar] to class path<br>
Added resources: [hive-1.0.jar]<br><span style="color:#f33b45;">hive&gt; list jars;  </span>查看加入的jar包<br>
hive-1.0.jar<br><span style="color:#f33b45;">hive&gt; create temporary function hive_hello as 'com.mycompany.bda.UdfHello';   创建临时函数</span><br>
hive&gt; show functions;   查看函数，可知增加了函数hive_hello<br><span style="color:#f33b45;">hive&gt; select hive_hello(</span><span style="color:#3399ea;">fundaccount)</span><span style="color:#f33b45;"> from</span><span style="color:#3399ea;"> xx</span><span style="color:#f33b45;"> limit 3;</span>  验证：函数使用，蓝色部分换成自己的表和表字段</p>

<p>(2)永久有效，可以在多hive shell回话窗口使用udf函数<br>
把jar包上传到hdfs，路径如下：<br>
[root@bda5 ]# hadoop fs -ls hdfs://nameservice-ha/tzt/<br>
-rw-r--r--   2 root root       2844 2018-01-18 10:03 hdfs://nameservice-ha/tzt/hive-1.0.jar<br>
hive&gt; CREATE FUNCTION <span style="color:#3399ea;">addhello</span> AS '<span style="color:#3399ea;">com.mycompany.bda.UdfHello</span>' USING JAR '<span style="color:#3399ea;">hdfs://nameservice-ha/tzt/hive-1.0.jar</span>';  蓝色部分改成自己的路径</p>

<p>函数验证：<br>
hive&gt; select addhello('hive') from xx limit 3;     <br>
hive&gt; show functions;   可知多了一个函数default.addhello，default为当前使用的数据库<br>
另外也可以查看hive元数据库表select * from FUNCS;新增了一个函数addhello</p>

<p>五、Hive注册UDF函数如何在Impala中使用<br>
在impala-shell中刷新一下元数据即可，使用命令<br>
invalidate metadata; <br>
--------------------- <br>
 </p>            </div>
                </div>