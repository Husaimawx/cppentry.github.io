---
layout:     post
title:      Flume 简单概述
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/Luomingkui1109/article/details/82798685				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p>1.Flume概念</p>

<p>    Apache Flume是一个高可用的，高可靠的，分布式的海量日志采集、聚合和传输系统。Flume基于流式架构，灵活简单，支持在日志系统中定制各类数据发送方，用于收集数据;同时，Flume提供对数据进行简单处理，并写到各种数据接受方(比如文本、HDFS、Hbase等)的能力 。</p>

<p> </p>

<p>2.为什么使用Flume</p>

<table><tbody><tr><td>
			<p><img alt="" class="has" height="186" src="https://img-blog.csdn.net/20180921113526194?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0x1b21pbmdrdWkxMTA5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="500"></p>
			</td>
		</tr></tbody></table><p> </p>

<p> </p>

<p>3.Flume组成架构</p>

<table><tbody><tr><td>
			<p><img alt="" class="has" height="233" src="https://img-blog.csdn.net/20180921113526222?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0x1b21pbmdrdWkxMTA5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="516"></p>
			</td>
		</tr></tbody></table><p>    下面我们来详细介绍一下Flume架构中的组件。</p>

<p>(1) Agent</p>

<p>    Agent主要有3个部分组成，Source、Channel、Sink。</p>

<p>(2) Source</p>

<p>    Source是负责接收数据到Flume Agent的组件。Source组件可以处理各种类型、各种格式的日志数据，包括avro、thrift、exec、jms、spooling directory、netcat、sequence generator、syslog、http、legacy。</p>

<p>(3) Channel</p>

<p>    Channel是位于Source和Sink之间的缓冲区。因此，Channel允许Source和Sink运作在不同的速率上。Channel是线程安全的，可以同时处理几个Source的写入操作和几个Sink的读取操作。</p>

<p>    Flume自带两种Channel：Memory Channel和File Channel。</p>

<p>    Memory Channel是内存中的队列。Memory Channel在不需要关心数据丢失的情景下适用。如果需要关心数据丢失，那么Memory Channel就不应该使用，因为程序死亡、机器宕机或者重启都会导致数据丢失。</p>

<p>    File Channel将所有事件写到磁盘。因此在程序关闭或机器宕机的情况下不会丢失数据。</p>

<p>(4) Sink</p>

<p>    Sink不断地轮询Channel中的事件且批量地移除它们，并将这些事件批量写入到存储或索引系统、或者被发送到另一个Flume Agent。</p>

<p>    Sink是完全事务性的。在从Channel批量删除数据之前，每个Sink用Channel启动一个事务。批量事件一旦成功写出到存储系统或下一个Flume Agent，Sink就利用Channel提交事务。事务一旦被提交，该Channel从自己的内部缓冲区删除事件。</p>

<p>    Sink组件目的地包括hdfs、logger、avro、thrift、ipc、file、null、HBase、solr、自定义。</p>

<p>(5) Event</p>

<p>    传输单元，Flume数据传输的基本单元，以事件的形式将数据从源头送至目的地。</p>

<p> </p>

<p>4.Flume Agent 简单内部原理</p>

<table><tbody><tr><td>
			<p><img alt="" class="has" height="308" src="https://img-blog.csdn.net/20180921113526233?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0x1b21pbmdrdWkxMTA5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="545"></p>
			</td>
		</tr></tbody></table><p> </p>            </div>
                </div>