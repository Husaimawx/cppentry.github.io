---
layout:     post
title:      Hive中索引，分区，分桶的对比
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <h3>一、索引</h3><p>Hive支持索引，但是Hive的索引与关系型数据库中的索引并不相同，比如，Hive不支持主键或者外键。</p><p>Hive索引可以建立在表中的某些列上，以提升一些操作的效率，例如减少MapReduce任务中需要读取的数据块的数量。</p><p><strong>为什么要创建索引？</strong></p><p>Hive的索引目的是提高Hive表指定列的查询速度。</p>没有索引时，类似'WHERE tab1.col1 = 0' 的查询，Hive会加载整张表或分区，然后处理所有的rows，<br>但是如果在字段col1上面存在索引时，那么只会加载和处理文件的一部分。<br><p>与其他传统数据库一样，增加索引在提升查询速度时，会消耗额外资源去创建索引表和需要更多的磁盘空间存储索引。</p><p><strong>hive索引的原理</strong></p><p>hive索引的原理是建立索引表，索引表的基本包含几列：1. 源表的索引列；2. _bucketname hdfs中文件地址 3. 索引列在hdfs文件中的偏移量。原理是通过记录索引列在HDFS中的偏移量，精准获取数据，避免全表扫描。</p><br><h3>二、分区</h3><p>为了对表进行合理的管理以及提高查询效率，Hive可以将表组织成“分区”。</p><p>分区是表的部分列的集合，可以为频繁使用的数据建立分区，这样查找分区中的数据时就不需要扫描全表，这对于提高查找效率很有帮助。</p>分区是一种根据“分区列”（partition column）的值对表进行粗略划分的机制。Hive中每个分区对应着表很多的子目录，将所有的数据按照分区列放入到不同的子目录中去。<br><p>其实分区就像是一个索引树，将数据一层一层分到各个粒度（例如x年x月x日）</p><p><strong>为什么要分区？</strong></p><p>庞大的数据集可能需要耗费大量的时间去处理。在许多场景下，可以通过分区的方法减少每一次扫描总数据量，这种做法可以显著地改善性能。</p><p>数据会依照单个或多个列进行分区，通常按照<strong>时间</strong>、<strong>地域</strong>或者是商业维度进行分区。比如video表，分区的依据可以是电影的种类和评级，另外，按照拍摄时间划分可能会得到更一致的结果。为了达到性能表现的一致性，对不同列的划分应该让数据尽可能均匀分布。最好的情况下，分区的划分条件总是能够对应where语句的部分查询条件。</p><p><strong>Hive分区的原理</strong></p><p>Hive的分区使用HDFS的子目录功能实现。每一个子目录包含了分区对应的列名和每一列的值。但是由于HDFS并不支持大量的子目录，这也给分区的使用带来了限制。我们有必要对表中的分区数量进行预估，从而避免因为分区数量过大带来一系列问题。</p><strong>Hive查询通常使用分区的列作为查询条件</strong>。这样的做法可以指定MapReduce任务在HDFS中指定的子目录下完成扫描的工作。使得<strong>HDFS的文件目录结构可以像索引一样高效利用</strong>。<br><br><h3>三、分桶（桶表）</h3><p>桶是通过对指定列进行哈希计算来实现的，通过哈希值将一个列名下的数据切分为一组桶，并使每个桶对应于该列名下的一个存储文件。</p><strong>为什么要分桶？</strong><br><p>在分区数量过于庞大以至于可能导致文件系统崩溃时，我们就需要使用分桶来解决问题了。</p><p>分区中的数据可以被进一步拆分成桶，不同于分区对列直接进行拆分，桶往往使用列的哈希值对数据打散，并分发到各个不同的桶中从而完成数据的分桶过程。</p>注意，hive使用对分桶所用的值进行hash，并用hash结果除以桶的个数做取余运算的方式来分桶，保证了每个桶中都有数据，但每个桶中的数据条数不一定相等。<br>哈希函数的选择依赖于桶操作所针对的列的数据类型。除了数据采样，桶操作也可以用来实现高效的Map端连接操作。记住，在数据量足够大的情况下，分桶比分区，更高的查询效率。<br><h3>四、总结</h3><p><strong>索引和分区最大的区别</strong></p><p>就是索引不分割数据库，分区分割数据库。索引其实就是拿额外的存储空间换查询时间，但分区已经将整个大数据库按照分区列拆分成多个小数据库了。</p><p><strong>分区和分桶最大的区别</strong></p><p>就是分桶随机分割数据库，分区是非随机分割数据库。因为分桶是按照列的哈希函数进行分割的，相对比较平均；而分区是按照列的值来进行分割的，容易造成数据倾斜。</p>其次两者的另一个区别就是分桶是对应不同的文件（细粒度），分区是对应不同的文件夹（粗粒度）。<br>注意：普通表（外部表、内部表）、分区表这三个都是对应HDFS上的目录，桶表对应是目录里的文件            </div>
                </div>