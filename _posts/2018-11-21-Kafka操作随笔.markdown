---
layout:     post
title:      Kafka操作随笔
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <h1><strong>                                               Kafka操作随笔</strong></h1>

<h2>一.kafka简介</h2>

<p>Kafka是一种分布式的，基于发布/订阅的消息系统。</p>

<h2>二.kafka shell 命令</h2>

<p id="创建kafka-topic">1.创建kafka topic</p>

<pre class="has">
<code class="language-bash">bin/kafka-topics.sh --zookeeper node01:2181 --create --topic t_cdr --partitions 30  --replication-factor 2</code></pre>

<p><strong>注：</strong> partitions指定topic分区数，replication-factor指定topic每个分区的副本数</p>

<ul><li>partitions分区数:
	<ul><li>partitions ：分区数，控制topic将分片成多少个log。可以显示指定，如果不指定则会使用broker(server.properties)中的num.partitions配置的数量</li>
		<li>虽然增加分区数可以提供kafka集群的吞吐量、但是过多的分区数或者或是单台服务器上的分区数过多，会增加不可用及延迟的风险。因为多的分区数，意味着需要打开更多的文件句柄、增加点到点的延时、增加客户端的内存消耗。</li>
		<li>分区数也限制了consumer的并行度，即限制了并行consumer消息的线程数不能大于分区数</li>
		<li>分区数也限制了producer发送消息是指定的分区。如创建topic时分区设置为1，producer发送消息时通过自定义的分区方法指定分区为2或以上的数都会出错的；这种情况可以通过alter –partitions 来增加分区数。</li>
	</ul></li>
	<li>replication-factor副本
	<ul><li>replication factor 控制消息保存在几个broker(服务器)上，一般情况下等于broker的个数。</li>
		<li>如果没有在创建时显示指定或通过API向一个不存在的topic生产消息时会使用broker(server.properties)中的default.replication.factor配置的数量</li>
	</ul></li>
</ul><p>2.查看所有topic列表</p>

<pre class="has">
<code class="language-bash">bin/kafka-topics.sh --zookeeper node01:2181 --list</code></pre>

<p>3.查看指定topic信息</p>

<pre class="has">
<code class="language-bash">bin/kafka-topics.sh --zookeeper node01:2181 --describe --topic t_cdr</code></pre>

<p>4.控制台向topic生产数据</p>

<pre class="has">
<code class="language-bash">bin/kafka-console-producer.sh --broker-list node86:9092 --topic t_cdr</code></pre>

<p id="控制台消费topic的数据">5.控制台消费topic的数据</p>

<pre class="has">
<code class="language-bash">bin/kafka-console-consumer.sh  --zookeeper node01:2181  --topic t_cdr --from-beginning</code></pre>

<p>6.查看topic某分区偏移量最大（小）值</p>

<pre class="has">
<code class="language-bash">bin/kafka-run-class.sh kafka.tools.GetOffsetShell --topic hive-mdatabase-hostsltable  --time -1 --broker-list node86:9092 --partitions 0</code></pre>

<p>7.删除topic</p>

<pre class="has">
<code>bin/kafka-topics.sh --delete --topic test0 --zookeeper 192.168.187.146:2181</code></pre>

<p> </p>            </div>
                </div>