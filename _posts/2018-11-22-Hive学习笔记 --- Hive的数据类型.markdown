---
layout:     post
title:      Hive学习笔记 --- Hive的数据类型
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：学习交流为主，未经博主同意禁止转载，禁止用于商用。					https://blog.csdn.net/u012965373/article/details/52213966				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><span style="font-size:18px;"><strong>在使用hive的时候总会遇到使用hive的数据类型的时候，这时候可能会发生混淆，</strong></span></p>
<p><span style="font-size:18px;"><strong>就是对于hive的数据类型是不是和mysql中的数据类型是一样的？</strong></span></p>
<p><span style="font-size:18px;"><strong>这里解释一下，hive是一个数据仓库，在使用的时候可以将mysql与hive结合使用，但是他们两个不是等价的。</strong></span></p>
<p><span style="font-size:18px;"><strong>这里来介绍一下hive自带的数据类型。</strong></span></p>
<p><span style="font-size:18px;"><strong><br></strong></span></p>
<p><span style="font-size:18px;"><strong>数据类型<span> </span>
        所占字节<span> </span>                       开始支持版本<br>
TINYINT<span> </span>       1byte，-128 ~ 127<span></span> <br>
SMALLINT      2byte，-32,768 ~ 32,767<span> </span> <br>
INT<span> </span>      4byte,-2,147,483,648 ~ 2,147,483,647<span></span> <br>
BIGINT<span> </span>  8byte,-9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807<span></span> <br>
BOOLEAN<span> </span><span></span> <br>
FLOAT<span> </span>        4byte单精度<span></span> <br>
DOUBLE<span> </span>        8byte双精度<span></span> <br>
STRING<span> </span><span></span> <br>
BINARY<span> </span><span></span>                                       从Hive0.8.0开始支持</strong></span></p>
<p><span style="font-size:18px;"><strong>TIMESTAMP<span> </span>
<span></span>                                   从Hive0.8.0开始支持<br>
DECIMAL<span> </span><span></span>                                       从Hive0.11.0开始支持<br>
CHAR<span> </span><span></span>                                       从Hive0.13.0开始支持<br>
VARCHAR<span> </span><span></span>                                       从Hive0.12.0开始支持<br>
DATE<span> </span><span></span>                                       从Hive0.12.0开始支持<br><br></strong></span></p>
<p><span style="font-size:18px;"><strong><br></strong></span></p>
<p><span style="font-size:18px;"><strong><span style="font-family:Arial;font-size:14px;line-height:22.2656px;">复杂类型包括ARRAY,MAP,STRUCT,UNION，这些复杂类型是由基础类型组成的</span><br></strong></span></p>
<p><span style="font-size:18px;"><strong><span style="border:0px;">ARRAY</span>：ARRAY类型是由一系列相同数据类型的元素组成，这些元素可以通过下标来访问。</strong></span></p>
<p><span style="font-size:18px;"><strong>比如有一个ARRAY类型的变量fruits，它是由['apple','orange','mango']组成，那么我们可</strong></span></p>
<p><span style="font-size:18px;"><strong>以通过fruits[1]来访问元素orange，因为ARRAY类型的下标是从0开始的；<br><span style="border:0px;"><br></span></strong></span></p>
<p><span style="font-size:18px;"><strong><span style="border:0px;">MAP</span>：MAP包含key-&gt;value键值对，可以通过key来访问元素。比如”userlist”是一个map类型，其中username是key，password是value；那么我们可以通过userlist['username']来得到这个用户对应的password；<br>
　　</strong></span></p>
<p><span style="font-size:18px;"><strong><span style="border:0px;">STRUCT</span>：STRUCT可以包含不同数据类型的元素。这些元素可以通过”点语法”的方式来得到所需要的元素，比如user是一个STRUCT类型，那么可以通过user.address得到这个用户的地址。<br>
　　</strong></span></p>
<p><span style="font-size:18px;"><strong><span style="border:0px;">UNION</span>: UNIONTYPE，他是从Hive 0.7.0开始支持的。<br></strong></span></p>
<p><span style="font-size:18px;"><strong><br></strong></span></p>
<p><span style="font-size:18px;"><strong>创建表的时候可以使用sql语言的使用规则：</strong></span></p>
<p><br></p>
<p></p>
<pre><code class="language-sql">CREATE TABLE employees (  
    name STRING,  
    salary FLOAT,  
    subordinates ARRAY&lt;STRING&gt;,  
    deductions MAP&lt;STRING, FLOAT&gt;,  
    address STRUCT&lt;street:STRING, city:STRING, state:STRING, zip:INT&gt;  
) PARTITIONED BY (country STRING, state STRING);  </code></pre><br><br><p></p>
            </div>
                </div>