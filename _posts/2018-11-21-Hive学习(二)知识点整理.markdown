---
layout:     post
title:      Hive学习(二)知识点整理
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-dracula">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p></p><div class="toc"><h3>Hive</h3><ul><li><a href="#Hive_1" rel="nofollow">一、什么是Hive？</a></li><li><a href="#Hive_5" rel="nofollow">二、Hive可以做什么？</a></li><li><a href="#Hive_11" rel="nofollow">三、Hive的表种类</a></li><li><a href="#Hive_94" rel="nofollow">四、Hive创建表的三种方式</a></li><li><a href="#Hive_118" rel="nofollow">五、Hive插入数据的方式</a></li><li><a href="#Hive_136" rel="nofollow">六、Hive视图</a></li><li><a href="#Hive_156" rel="nofollow">七、Hive索引</a></li><li><a href="#Hive_179" rel="nofollow">八、Hive环境搭建和部署</a></li></ul></div><p></p>
<h1><a id="Hive_1"></a>一、什么是Hive？</h1>
<p><strong>Hive是基于Hadoop的一个数据仓库工具，可以将结构化的数据文件映射为一张数据库表，并提供的sql查询功能，可以将sql语句转换为MapReduce任务进行运行。</strong><br>
<font color="red"><strong>Hive的优点：</strong></font><br>
<strong>其优点是学习成本低，可以通过类SQL语句快速实现简单的MapReduce统计，不必开发专门的MapReduce应用，十分适合数据仓库的统计分析。</strong></p>
<h1><a id="Hive_5"></a>二、Hive可以做什么？</h1>
<ol>
<li><strong>可以更加简洁的访问HDFS。</strong></li>
<li><strong>可以直接通过sql直接使用访问Mapreduce等框架。</strong></li>
<li><strong>可以把多种数据进行格式化或者结构化管理。</strong></li>
<li><strong>处理ETL类型的业务。( Extract-Transform-Load 抽取、转换、加载)。</strong></li>
</ol>
<h1><a id="Hive_11"></a>三、Hive的表种类</h1>
<p><strong>1、内部表(受控表)</strong><br>
<strong>完全被Hive控制，内部表删除，元数据、源数据一同被删除。</strong><br>
<strong>2、临时表</strong><br>
<strong>生命周期是一次会话，主要用于测试。</strong><br>
<strong>创建临时表：<code>create TEMPORARY table ttabc(id Int,name String)</code></strong><br>
<strong>3、外部表</strong><br>
<strong>不是完全受Hive控制，源数据可以在任何的目录下，删除外部表，源数据不会被删除，只是删除元数据。</strong></p>
<p><strong>创建外部表：</strong></p>
<pre><code>create external table wc_external 
  (word1 STRING, 
   word2 STRING) 
   ROW FORMAT DELIMITED 
   FIELDS TERMINATED BY ' ' 
   location '/test/external';
</code></pre>
<p><code>注：location可加可不加，不加location默认是在hive的工作目录区</code><br>
<strong>4. 分区表</strong><br>
<strong>将源数据分到不同的Hive工作目录中存储，一个分区对应一个目录，防止暴力扫描全表。</strong><br>
<mark><strong>静态分区表：</strong></mark><br>
<strong>分区是由用户自定义的。</strong></p>
<p><strong>(1)单分区表</strong><br>
<strong>创建单分区表：</strong></p>
<pre><code>create table day_table (id int, content string) partitioned by (dt string) ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t' ;
</code></pre>
<p><strong>加载数据：<br>
①单条插入的方式往分区表中插入数据：</strong></p>
<pre><code>insert into day_table partition (dt = "9-26") values(1,"and");
</code></pre>
<p><strong>②批量插入的方式往分区表中插入数据：</strong></p>
<pre><code>oad data local inpath "/root/ceshi" into table day_table partition (dt="9-27");
</code></pre>
<p><strong>(2)多分区表</strong></p>
<p><strong>创建多分区表：</strong></p>
<pre><code>create table day_hour_table (id int, content string) partitioned by (dt int,hour int) ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t' ;
</code></pre>
<p><strong>加载数据：<br>
①单条插入的方式往分区表中插入数据：</strong></p>
<pre><code>insert into day_hour_table partition(dt=9,hour=1) values(1,"a2 bc");
</code></pre>
<p><strong>②批量插入的方式往分区表中插入数据：</strong></p>
<pre><code>load data local inpath "/root/ceshi" into table day_table partition (dt=10,hour=10);
</code></pre>
<p><strong>删除Hive分区表中的分区：</strong></p>
<pre><code>ALTER TABLE day_table DROP PARTITION (dt=10,hour=10);
</code></pre>
<p><mark><strong>动态分区表：</strong></mark><br>
<strong>动态分区可以根据数据本身的特征<font color="red">自动来划分</font>分区(比如我们可以指定按照数据中的年龄、性别来动态分区)<br>
静态分区与动态分区创建表的语句是一模一样的。</strong></p>
<p><strong>查询分区数：</strong></p>
<pre><code>show partitions gfstbl_dynamic;
</code></pre>
<p><strong>5、分桶表</strong><br>
<strong>分桶表是由列的哈希值除以桶的个数来决定每条数据划分在哪个桶中分成不同的桶进行存储，方便随机取样以及join等操作。</strong></p>
<p><strong>创建分桶表：</strong></p>
<pre><code>CREATE TABLE psnbucket( id INT, name STRING, age INT) 
CLUSTERED BY (age) INTO 4 BUCKETS 
ROW FORMAT DELIMITED FIELDS TERMINATED BY ',';
</code></pre>
<h1><a id="Hive_94"></a>四、Hive创建表的三种方式</h1>
<p><strong>方式一(普通方式)：</strong></p>
<pre><code>CREATE TABLE test(
  id INT,
  name STRING,
  age INT,
  gfs ARRAY&lt;STRING&gt;,
  address MAP&lt;STRING,STRING&gt;,
  info STRUCT&lt;country:String,province:String,shi:String&gt;
)
</code></pre>
<p><strong>方式二：</strong></p>
<pre><code>create table test1 like test;
</code></pre>
<p><code>注意：只是创建表结构</code><br>
<strong>方式三：</strong></p>
<pre><code>create table test2 AS SELECT id,name,gfs,address from test1; 
</code></pre>
<p><code>不仅会创建相应的表结构，并且会插入数据</code></p>
<h1><a id="Hive_118"></a>五、Hive插入数据的方式</h1>
<p><strong>1、Insert</strong></p>
<pre><code>INSERT INTO TABLE tablename1 [PARTITION (partcol1=val1, partcol2=val2 ...)] select_statement1 FROM from_statement;
</code></pre>
<p><strong>2、Load</strong></p>
<pre><code>load data local inpath '/root/test.txt' into table test;
</code></pre>
<p><strong>3、查询其它表数据Insert到新表中</strong></p>
<pre><code>insert into rest select count(*) from table;
</code></pre>
<h1><a id="Hive_136"></a>六、Hive视图</h1>
<p><strong>Hive视图与MySql数据库的视图一样。其特点有：</strong></p>
<ol>
<li><strong>只能查询，不能做加载数据操作。</strong></li>
<li><strong>视图的创建，只是保存一份元数据，只有查询视图时，才进行相应操作。</strong></li>
<li><strong>视图一旦创建，无法修改。</strong></li>
<li><strong>若视图中包含了ORDER BY/LIMIT语句，当查询视图时也进行ORDER BY/LIMIT语句操作，视图当中定义的优先级更高。</strong></li>
</ol>
<p><font color="red"><strong>问题：</strong> </font><br>
<strong>在创建视图的时候会不会启动MR任务？<br>
不会，视图的创建，只是保存一份元数据，查询视图时才执行对应的操作。</strong></p>
<p><strong>查看已创建的视图：</strong></p>
<pre><code>show tables
</code></pre>
<p><strong>删除视图：</strong></p>
<pre><code>drop view view1
</code></pre>
<h1><a id="Hive_156"></a>七、Hive索引</h1>
<p><strong>什么是索引？</strong><br>
<strong>索引类似目录，使用索引可以优化查询性能。<br>
索引库，用于保存一些索引的元数据。</strong></p>
<p><strong>创建索引：</strong></p>
<pre><code>create index t1_index on table psn2(name) 
as 'org.apache.hadoop.hive.ql.index.compact.CompactIndexHandler' 
with deferred rebuild in table t1_index_table;
</code></pre>
<p><strong>查询索引：</strong></p>
<pre><code>show index on psn2;
</code></pre>
<p><strong>删除索引：</strong></p>
<pre><code>DROP INDEX IF EXISTS t1_index ON psn2; //删除索引的同时，索引库也会被删除
</code></pre>
<h1><a id="Hive_179"></a>八、Hive环境搭建和部署</h1>
<p><strong>Hive的搭建方式有三种：</strong></p>
<ol>
<li><strong>本地模式</strong></li>
<li><strong>基于MySql的Local模式</strong></li>
<li><strong>基于MySql的Remote模式</strong></li>
</ol>
<p><strong>搭建步骤可参考—<a href="https://blog.csdn.net/qq_42825815/article/details/84000091" rel="nofollow">Hive的三种搭建方式</a></strong></p>

            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>