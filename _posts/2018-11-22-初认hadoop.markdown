---
layout:     post
title:      初认hadoop
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h1 style="line-height:1.7;color:rgb(47,47,47);font-size:26px;">
什么是hadoop？</h1>
<p style="color:rgb(47,47,47);font-size:16px;">
hadoop = teh hadoop projects</p>
<p style="color:rgb(47,47,47);font-size:16px;">
hadoop体系架构生态圈主要包含common，avro，mapreduce，hdfs,pig,hive(数据仓库),hbase，zookeeper,oozie（任务调度），sqoop（数据转移hive ↔ mysql）等组件</p>
<p style="color:rgb(47,47,47);font-size:16px;">
hadoop核心： hdfs（分布式文件系统）+ mapreduce （计算）+yarn(运算资源调度系统，管理硬件资源，内存/cpu等)。</p>
<p style="color:rgb(47,47,47);font-size:16px;">
<br></p>
<h2 style="line-height:1.7;color:rgb(47,47,47);font-size:24px;">
HDFS架构</h2>
<p style="color:rgb(47,47,47);font-size:16px;">
hdfs中的一些常见名词</p>
<p style="color:rgb(47,47,47);font-size:16px;">
block：一个文件分块，默认64M。当写入一个文件到 HDFS 时，它被切分成数据块，块大小是由配置文件 hdfs-default.xml 中的参数 dfs.blocksize （自 hadoop-2.2 版本后，默认值为 134217728字节即 128M，可以在 hdfs-site.xml 文件中改变覆盖其值。</p>
<p style="color:rgb(47,47,47);font-size:16px;">
namenode：保存整个文件系统的目录信息，文件信息以及文件相应的分块信息。（单点，提供服务的namenode只有一个）</p>
<p style="color:rgb(47,47,47);font-size:16px;">
datanode：用于存储blocks（文件块）。</p>
<p style="color:rgb(47,47,47);font-size:16px;">
hdfs的HA策略：namenode一旦宕机，整个文件系统将无法工作，如果namenode中的数据丢失，整个文件系统也就丢失了，从2.x开始，hdfs支持namenode的active-atandy模式（主从）。</p>
<p style="color:rgb(47,47,47);font-size:16px;">
<br></p>
<p style="color:rgb(47,47,47);font-size:16px;">
<br></p>
<p style="color:rgb(47,47,47);font-size:16px;">
在hdfs上的文件存储 </p>
<p style="color:rgb(47,47,47);font-size:16px;">
dbossdat1001.txt   600G</p>
<div class="image-package" style="text-align:center;color:rgb(47,47,47);font-size:16px;">
<img src="http://upload-images.jianshu.io/upload_images/8538001-2b67429de4828f5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" style="vertical-align:middle;border:0px;"><br><div class="image-caption" style="min-width:20%;min-height:22px;display:inline-block;border-bottom:1px solid rgb(217,217,217);font-size:13px;color:rgb(153,153,153);line-height:1.7;">
</div>
</div>
<p style="color:rgb(47,47,47);font-size:16px;">
同一个文件快在不同节点中有多个副本，当某个节点的数据失效时，可以从另外的节点获取到文件的内容，当数据失效时，副本有效个数会减少，hadoop可以自动侦测到这一点，从有效的副本复制，自动恢复到正常的副本个数。</p>
<p style="color:rgb(47,47,47);font-size:16px;">
<br></p>
<p style="color:rgb(47,47,47);font-size:16px;">
hdfs中的namenode和datanode</p>
<div class="image-package" style="text-align:center;color:rgb(47,47,47);font-size:16px;">
<img src="http://upload-images.jianshu.io/upload_images/8538001-998d940a3e2990a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" style="vertical-align:middle;border:0px;"><br><div class="image-caption" style="min-width:20%;min-height:22px;display:inline-block;border-bottom:1px solid rgb(217,217,217);font-size:13px;color:rgb(153,153,153);line-height:1.7;">
</div>
</div>
<p style="color:rgb(47,47,47);font-size:16px;">
如上图所示，在hdfs中，分为两个部分：namenode和datanode，其中那么node只有一个节点，datanode则有多个节点。但从hadoop2.0版本之后开始，namenode有主从两个节点防止节点挂掉。</p>
<p style="color:rgb(47,47,47);font-size:16px;">
<br></p>
<div class="image-package" style="text-align:center;color:rgb(47,47,47);font-size:16px;">
<img src="http://upload-images.jianshu.io/upload_images/8538001-55b2caa53ed22a32.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" style="vertical-align:middle;border:0px;"><br><div class="image-caption" style="min-width:20%;min-height:22px;display:inline-block;border-bottom:1px solid rgb(217,217,217);font-size:13px;color:rgb(153,153,153);line-height:1.7;">
hdfs总的架构图</div>
</div>
<h2 style="line-height:1.7;color:rgb(47,47,47);font-size:24px;">
<br></h2>
<h2 style="line-height:1.7;color:rgb(47,47,47);font-size:24px;">
mapreduce</h2>
<div class="image-package" style="text-align:center;color:rgb(47,47,47);font-size:16px;">
<img src="http://upload-images.jianshu.io/upload_images/8538001-83992f2060e0d42a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" style="vertical-align:middle;border:0px;"><br><div class="image-caption" style="min-width:20%;min-height:22px;display:inline-block;border-bottom:1px solid rgb(217,217,217);font-size:13px;color:rgb(153,153,153);line-height:1.7;">
mapreduce编程模型</div>
</div>
<p style="color:rgb(47,47,47);font-size:16px;">
总图中可以看到，mapreduce是将大任务分割成若干的小任务，然后在汇总得出结果。</p>
            </div>
                </div>