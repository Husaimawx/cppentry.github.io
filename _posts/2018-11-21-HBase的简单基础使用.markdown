---
layout:     post
title:      HBase的简单基础使用
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>Hbase 基础学习教程 <br>
<a href="http://www.yiibai.com/hbase/" rel="nofollow" target="_blank">http://www.yiibai.com/hbase/</a></p>

<h3 id="hbase的表结构">HBase的表结构</h3>

<p>转自 <br>
作者：JinJ <br>
<a href="https://www.cnblogs.com/JingJ/p/4521245.html" rel="nofollow" target="_blank">https://www.cnblogs.com/JingJ/p/4521245.html</a></p>

<ul>
<li><p>RowKey: 行键</p></li>
<li><p>ColumnFamily: 列族, HBase引入的概念：</p></li>
<li><p>Column</p></li>
<li><p>TimeStamp：在每次跟新数据时，用以标识一行数据的不同版本（事实上，TimeStamp是与列绑定的。）</p></li>
</ul>

<p>如下图</p>

<p><img src="https://img-blog.csdn.net/20171117122850667?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjY0Mzc5MjU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<hr>

<h2 id="hbase-shelljava-api操作">HBase shell&amp;java api操作</h2>

<p>转自 <br>
作者：niaobirdfly <br>
<a href="http://blog.csdn.net/hellozpc/article/details/44218057" rel="nofollow">http://blog.csdn.net/hellozpc/article/details/44218057</a></p>

<p>源代码没有问题，实践如下：</p>

<ul>
<li>表结构创建和查看</li>
</ul>

<p><img src="https://img-blog.csdn.net/20171117123530587?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjY0Mzc5MjU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<ul>
<li>表数据查看 (scan)</li>
</ul>

<p><img src="https://img-blog.csdn.net/20171117123615956?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjY0Mzc5MjU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<ul>
<li>表数据查看某行，某列 (get)</li>
</ul>

<p><img src="https://img-blog.csdn.net/20171117123734240?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjY0Mzc5MjU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<p><img src="https://img-blog.csdn.net/20171117123654165?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjY0Mzc5MjU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<ul>
<li>表删除，删除一行</li>
</ul>

<p><img src="https://img-blog.csdn.net/20171117124909800?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjY0Mzc5MjU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<p><img src="https://img-blog.csdn.net/20171117124923062?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjY0Mzc5MjU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<pre class="prettyprint"><code class=" hljs avrasm">import java<span class="hljs-preprocessor">.io</span><span class="hljs-preprocessor">.IOException</span><span class="hljs-comment">;</span>
import java<span class="hljs-preprocessor">.util</span><span class="hljs-preprocessor">.ArrayList</span><span class="hljs-comment">;</span>
import java<span class="hljs-preprocessor">.util</span><span class="hljs-preprocessor">.List</span><span class="hljs-comment">;</span>

import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.conf</span><span class="hljs-preprocessor">.Configuration</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.HBaseConfiguration</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.HColumnDescriptor</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.HTableDescriptor</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.KeyValue</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.MasterNotRunningException</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.ZooKeeperConnectionException</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.client</span><span class="hljs-preprocessor">.Delete</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.client</span><span class="hljs-preprocessor">.Get</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.client</span><span class="hljs-preprocessor">.HBaseAdmin</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.client</span><span class="hljs-preprocessor">.HTable</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.client</span><span class="hljs-preprocessor">.Put</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.client</span><span class="hljs-preprocessor">.Result</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.client</span><span class="hljs-preprocessor">.ResultScanner</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.client</span><span class="hljs-preprocessor">.Scan</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.TableName</span><span class="hljs-comment">;</span>
import org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.util</span><span class="hljs-preprocessor">.Bytes</span><span class="hljs-comment">;</span>

public class HBaseJavaAPI {

    private static  Configuration conf = null<span class="hljs-comment">;</span>

    static {
         conf = HBaseConfiguration<span class="hljs-preprocessor">.create</span>()<span class="hljs-comment">;</span>
         //conf<span class="hljs-preprocessor">.set</span>(<span class="hljs-string">"hbase.zookeeper.quorum"</span>, <span class="hljs-string">"ubuntu"</span>)<span class="hljs-comment">;</span>
         //conf<span class="hljs-preprocessor">.set</span>(<span class="hljs-string">"hbase.zookeeper.property.clientPort"</span>, <span class="hljs-string">"2181"</span>)<span class="hljs-comment">;</span>
    }


    public static boolean isExist(String tableName) throws MasterNotRunningException, ZooKeeperConnectionException, IOException
    {
          HBaseAdmin hAdmin = new HBaseAdmin(conf)<span class="hljs-comment">;// 新建一个数据库管理员</span>
          return hAdmin<span class="hljs-preprocessor">.tableExists</span>(tableName)<span class="hljs-comment">;</span>
    }


    // 创建数据库表  
    public static void createTable(String tableName, String[] columnFamilys)  
            throws Exception {  
        // 新建一个数据库管理员  
        HBaseAdmin hAdmin = new HBaseAdmin(conf)<span class="hljs-comment">;  </span>
        if (hAdmin<span class="hljs-preprocessor">.tableExists</span>(tableName)) {  
            System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"表 "</span>+tableName+<span class="hljs-string">" 已存在！"</span>)<span class="hljs-comment">;  </span>
            System<span class="hljs-preprocessor">.exit</span>(<span class="hljs-number">0</span>)<span class="hljs-comment">;  </span>
        } else {  
            // 新建一个students表的描述  
            HTableDescriptor tableDesc = new HTableDescriptor(tableName)<span class="hljs-comment">;  </span>
            // 在描述里添加列族  
            for (String columnFamily : columnFamilys) {  
                tableDesc<span class="hljs-preprocessor">.addFamily</span>(new HColumnDescriptor(columnFamily))<span class="hljs-comment">;  </span>
            }  
            // 根据配置好的描述建表  
            hAdmin<span class="hljs-preprocessor">.createTable</span>(tableDesc)<span class="hljs-comment">;  </span>
            System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"创建表 "</span>+tableName+<span class="hljs-string">" 成功!"</span>)<span class="hljs-comment">;  </span>
        }  
    }  

    // 删除数据库表  
    public static void deleteTable(String tableName) throws Exception {  
        // 新建一个数据库管理员  
        HBaseAdmin hAdmin = new HBaseAdmin(conf)<span class="hljs-comment">;  </span>
        if (hAdmin<span class="hljs-preprocessor">.tableExists</span>(tableName)) {  
            // 关闭一个表  
            hAdmin<span class="hljs-preprocessor">.disableTable</span>(tableName)<span class="hljs-comment">;  </span>
            hAdmin<span class="hljs-preprocessor">.deleteTable</span>(tableName)<span class="hljs-comment">;  </span>
            System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"删除表 "</span>+tableName+<span class="hljs-string">" 成功！"</span>)<span class="hljs-comment">;  </span>
        } else {  
            System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"删除的表 "</span>+tableName+<span class="hljs-string">" 不存在！"</span>)<span class="hljs-comment">;  </span>
            System<span class="hljs-preprocessor">.exit</span>(<span class="hljs-number">0</span>)<span class="hljs-comment">;  </span>
        }  
    }  

 // 添加一条数据  
    public static void addRow(String tableName, String row,  
            String columnFamily, String column, String value) throws Exception {  
        HTable table = new HTable(conf, tableName)<span class="hljs-comment">;  </span>
        Put put = new Put(Bytes<span class="hljs-preprocessor">.toBytes</span>(row))<span class="hljs-comment">;// 指定行  </span>
        // 参数分别:列族、列、值  
        put<span class="hljs-preprocessor">.add</span>(Bytes<span class="hljs-preprocessor">.toBytes</span>(columnFamily), Bytes<span class="hljs-preprocessor">.toBytes</span>(column),  
                Bytes<span class="hljs-preprocessor">.toBytes</span>(value))<span class="hljs-comment">;  </span>
        table<span class="hljs-preprocessor">.put</span>(put)<span class="hljs-comment">;  </span>
    }  

    // 删除一条(行)数据  
    public static void delRow(String tableName, String row) throws Exception {  
        HTable table = new HTable(conf, tableName)<span class="hljs-comment">;  </span>
        Delete del = new Delete(Bytes<span class="hljs-preprocessor">.toBytes</span>(row))<span class="hljs-comment">;  </span>
        table<span class="hljs-preprocessor">.delete</span>(del)<span class="hljs-comment">;  </span>
    }  

 // 删除多条数据  
    public static void delMultiRows(String tableName, String[] rows)  
            throws Exception {  
        HTable table = new HTable(conf, tableName)<span class="hljs-comment">;  </span>
        List&lt;Delete&gt; delList = new ArrayList&lt;Delete&gt;()<span class="hljs-comment">;  </span>
        for (String row : rows) {  
            Delete del = new Delete(Bytes<span class="hljs-preprocessor">.toBytes</span>(row))<span class="hljs-comment">;  </span>
            delList<span class="hljs-preprocessor">.add</span>(del)<span class="hljs-comment">;  </span>
        }  
        table<span class="hljs-preprocessor">.delete</span>(delList)<span class="hljs-comment">;  </span>
    }  

 // 获取一条数据  
    public static void getRow(String tableName, String row) throws Exception {  
        HTable table = new HTable(conf, tableName)<span class="hljs-comment">;  </span>
        Get get = new Get(Bytes<span class="hljs-preprocessor">.toBytes</span>(row))<span class="hljs-comment">;  </span>
        Result result = table<span class="hljs-preprocessor">.get</span>(get)<span class="hljs-comment">;  </span>
        // 输出结果,raw方法返回所有keyvalue数组  
        for (KeyValue rowKV : result<span class="hljs-preprocessor">.raw</span>()) {  
            System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.print</span>(<span class="hljs-string">"行名:"</span> + new String(rowKV<span class="hljs-preprocessor">.getRow</span>()) + <span class="hljs-string">" "</span>)<span class="hljs-comment">;  </span>
            System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.print</span>(<span class="hljs-string">"时间戳:"</span> + rowKV<span class="hljs-preprocessor">.getTimestamp</span>() + <span class="hljs-string">" "</span>)<span class="hljs-comment">;  </span>
            System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.print</span>(<span class="hljs-string">"列族名:"</span> + new String(rowKV<span class="hljs-preprocessor">.getFamily</span>()) + <span class="hljs-string">" "</span>)<span class="hljs-comment">;  </span>
            System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.print</span>(<span class="hljs-string">"列名:"</span> + new String(rowKV<span class="hljs-preprocessor">.getQualifier</span>()) + <span class="hljs-string">" "</span>)<span class="hljs-comment">;  </span>
            System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"值:"</span> + new String(rowKV<span class="hljs-preprocessor">.getValue</span>()))<span class="hljs-comment">;  </span>
        }  
    }  

 // 获取所有数据  
    public static void getAllRows(String tableName) throws Exception {  
        HTable table = new HTable(conf, tableName)<span class="hljs-comment">;  </span>
        Scan scan = new Scan()<span class="hljs-comment">;  </span>
        ResultScanner results = table<span class="hljs-preprocessor">.getScanner</span>(scan)<span class="hljs-comment">;  </span>
        // 输出结果  
        for (Result result : results) {  
            for (KeyValue rowKV : result<span class="hljs-preprocessor">.raw</span>()) {  
                System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.print</span>(<span class="hljs-string">"行名:"</span> + new String(rowKV<span class="hljs-preprocessor">.getRow</span>()) + <span class="hljs-string">" "</span>)<span class="hljs-comment">;  </span>
                System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.print</span>(<span class="hljs-string">"时间戳:"</span> + rowKV<span class="hljs-preprocessor">.getTimestamp</span>() + <span class="hljs-string">" "</span>)<span class="hljs-comment">;  </span>
                System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.print</span>(<span class="hljs-string">"列族名:"</span> + new String(rowKV<span class="hljs-preprocessor">.getFamily</span>()) + <span class="hljs-string">" "</span>)<span class="hljs-comment">;  </span>
                System<span class="hljs-preprocessor">.out</span>  
                        <span class="hljs-preprocessor">.print</span>(<span class="hljs-string">"列名:"</span> + new String(rowKV<span class="hljs-preprocessor">.getQualifier</span>()) + <span class="hljs-string">" "</span>)<span class="hljs-comment">;  </span>
                System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"值:"</span> + new String(rowKV<span class="hljs-preprocessor">.getValue</span>()))<span class="hljs-comment">;  </span>
            }  
        }  
    }  

    public static void main(String args[]) throws Exception {

         String tableName = <span class="hljs-string">"student"</span><span class="hljs-comment">;  </span>
         // 第一步：创建数据库表：“student”  
         String[] columnFamilys = { <span class="hljs-string">"info"</span>, <span class="hljs-string">"course"</span> }<span class="hljs-comment">;  </span>
         //HBaseUtils<span class="hljs-preprocessor">.createTable</span>(tableName, columnFamilys)<span class="hljs-comment">;  </span>
        <span class="hljs-comment">/*
         if (HBaseJavaAPI.isTableExist(tableName)) {  
             // 添加第一行数据  
             HBaseJavaAPI.addRow(tableName, "zpc", "info", "age", "20");  
             HBaseJavaAPI.addRow(tableName, "zpc", "info", "sex", "boy");  
             HBaseJavaAPI.addRow(tableName, "zpc", "course", "china", "97");  
             HBaseJavaAPI.addRow(tableName, "zpc", "course", "math", "128");  
             HBaseJavaAPI.addRow(tableName, "zpc", "course", "english", "85");  
             // 添加第二行数据  
             HBaseJavaAPI.addRow(tableName, "henjun", "info", "age", "19");  
             HBaseJavaAPI.addRow(tableName, "henjun", "info", "sex", "boy");  
             HBaseJavaAPI.addRow(tableName, "henjun", "course", "china","90");  
             HBaseJavaAPI.addRow(tableName, "henjun", "course", "math","120");  
             HBaseJavaAPI.addRow(tableName, "henjun", "course", "english","90");  
             // 添加第三行数据  
             HBaseJavaAPI.addRow(tableName, "niaopeng", "info", "age", "18");  
             HBaseJavaAPI.addRow(tableName, "niaopeng", "info", "sex","girl");  
             HBaseJavaAPI.addRow(tableName, "niaopeng", "course", "china","100");  
             HBaseJavaAPI.addRow(tableName, "niaopeng", "course", "math","100");  
             HBaseJavaAPI.addRow(tableName, "niaopeng", "course", "english","99");  
         }
         */</span>

//         if (HBaseJavaAPI<span class="hljs-preprocessor">.isTableExist</span>(tableName)) {  
//           System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"**************获取所有数据***************"</span>)<span class="hljs-comment">;  </span>
//             HBaseJavaAPI<span class="hljs-preprocessor">.getAllRows</span>(tableName)<span class="hljs-comment">; </span>
//         }
//         
//         if (HBaseJavaAPI<span class="hljs-preprocessor">.isTableExist</span>(tableName)) {  
//           System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"**************获取一条(zpc)数据*************"</span>)<span class="hljs-comment">;  </span>
//           HBaseJavaAPI<span class="hljs-preprocessor">.getRow</span>(tableName, <span class="hljs-string">"zpc"</span>)<span class="hljs-comment">;</span>
//         }

//         if (HBaseJavaAPI<span class="hljs-preprocessor">.isExist</span>(tableName)) {  
//           System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"************删除一条(zpc)数据************"</span>)<span class="hljs-comment">;  </span>
//           HBaseJavaAPI<span class="hljs-preprocessor">.delRow</span>(tableName, <span class="hljs-string">"zpc"</span>)<span class="hljs-comment">;</span>
//            System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"**************获取一条(zpc)数据*************"</span>)<span class="hljs-comment">;  </span>
//           HBaseJavaAPI<span class="hljs-preprocessor">.getRow</span>(tableName, <span class="hljs-string">"zpc"</span>)<span class="hljs-comment">;</span>
//         }

         if (HBaseJavaAPI<span class="hljs-preprocessor">.isExist</span>(tableName)) {  
             System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"***************删除数据库表**************"</span>)<span class="hljs-comment">;  </span>
             HBaseJavaAPI<span class="hljs-preprocessor">.deleteTable</span>(tableName)<span class="hljs-comment">;  </span>
             System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"表"</span>+tableName+<span class="hljs-string">"存在吗？"</span>+HBaseJavaAPI<span class="hljs-preprocessor">.isExist</span>(tableName))<span class="hljs-comment">;  </span>
         }else {  
             System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(tableName + <span class="hljs-string">"此数据库表不存在！"</span>)<span class="hljs-comment">;  </span>
         }  
    }
}</code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>