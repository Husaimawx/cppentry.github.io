---
layout:     post
title:      Kafka快速上手教程  4
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h1 id="java-flume-kafka-" style="font-size:2.25em;margin-left:0px;line-height:1.2;color:rgb(51,51,51);border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);">
Java 测试 Flume 与 Kafka 的连通性</h1>
<h2 id="-" style="line-height:1.225;color:rgb(51,51,51);font-size:1.75em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);">
一、实验介绍</h2>
<h3 id="1-1-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
1.1 实验内容</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
上节课已经详细介绍了 Flume 与 Kafka 的集成，本节课延续上节课的使用环境，使用 Java 测试 Flume 与 Kafka 的连通性。</p>
<h3 id="1-2-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
1.2 先学课程</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
Flume 介绍与安装:<a href="https://www.shiyanlou.com/courses/237" rel="nofollow" style="color:rgb(64,120,192);text-decoration:none;background-color:transparent;">https://www.shiyanlou.com/courses/237</a></p>
<h3 id="1-3-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
1.3 实验知识点</h3>
<ul style="color:rgb(51,51,51);font-size:16px;line-height:25.6px;"><li style="font-size:15px;">Flume API</li><li style="font-size:15px;">Kafka 启动脚本</li><li style="font-size:15px;">HDFS 文件系统</li></ul><h3 id="1-4-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
1.4 实验环境</h3>
<ul style="color:rgb(51,51,51);font-size:16px;line-height:25.6px;"><li style="font-size:15px;">Hadoop 2.6.1</li><li style="font-size:15px;">Kafka_2.10-0.10.0.0</li><li style="font-size:15px;">Flume-1.6.0</li><li style="font-size:15px;">Xfce 终端</li></ul><h3 id="1-5-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
1.5 适合人群</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
本课程属于中等难度级别，适合具有大数据 hadoop 基础的用户，如果对数据采集 了解能够更好的上手本课程。</p>
<h2 style="line-height:1.225;color:rgb(51,51,51);font-size:1.75em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);">
二、实验步骤</h2>
<h3 id="2-1-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
2.1 准备工作</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
本节实验是在上节课的基础上进行，需要的组件已经安装完成，并启动相应的服务，具体如下：</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2703timestamp1492159215789.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
如果没有正确启动相关服务，请参考上节课实验。</p>
<h3 id="2-2-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
2.2 修改文件</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
用 hadoop 用户进入 flume 解压包的 conf 目录下， 通过使用 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">vi</code> 命令添加修改 flume-kafka.properties。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/apache-flume-1.6.0-bin/conf$ sudo vi flume-kafka.properties
<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;">#添加如下</span>
</code></pre>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);"><span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Name the components on this agent </span>
a1.sources = r1
a1.sinks = k1
a1.channels = c1

<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Describe/configure the source</span>
a1.sources.r1.type=avro
a1.sources.r1.bind=localhost
a1.sources.r1.port=41414

<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Describe the sink</span>
a1.sinks.k1.type = org.apache.flume.sink.kafka.KafkaSink 
a1.sinks.k1.topic = testflume 
a1.sinks.k1.brokerList = localhost:9092 
a1.sinks.k1.requiredAcks = 1 
a1.sinks.k1.batchSize = 20 
a1.sinks.k1.channel = c1

<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Use a channel which buffers events in memory</span>
a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100

<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Bind the source and sink to the channel</span>
a1.sources.r1.channels = c1
a1.sinks.k1.channel = c1
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
根据 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">flume-kafka.properties</code> 的配置创建主题 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">testflume</code>。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">$ bin/kafka-topics.sh  --create --zookeeper localhost:2181  --replication-factor 1 --partitions 1 --topic testflume
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2703timestamp1492147216955.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<h3 id="2-3-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
2.3 下载依赖及导包</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
在 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">/opt</code> 目录下，用 hadoop 用户通过 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">wget</code> 命令下载</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">slf4j-1.7.22.zip</code>，并用 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">tar</code>命令解压。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">$ sudo wget http://labfile.oss.aliyuncs.com/courses/785/slf4j-1.7.22.zip
$ sudo  unzip slf4j-1.7.22.zip
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
用 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">cp</code> 命令拷贝 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">slf4j-nop-1.7.22.jar</code> 到
 flume 安装包的 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">lib</code> 目录下。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">$ sudo cp slf4j-1.7.22/slf4j-nop-1.7.22.jar  apache-flume-1.6.0-bin/lib/
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2703timestamp1492147270277.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
双击打开 eclipse -&gt; file -&gt; New -&gt; Java Project</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2703timestamp1490167366371.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2703timestamp1490167375992.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
输入 Project name -&gt; 选择 javaSe-1.7 -&gt; Finish</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2703timestamp1492395049515.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
右键 src -&gt; New -&gt; Package</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2703timestamp1490167623529.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
输入包名 -&gt; Finish</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2703timestamp1490167688241.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
添加 flume jar 包</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2703timestamp1490167784176.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
点击 Libraries -&gt; Add External JARs...-&gt; 选中已经下载的 flume lib 目录下的 jar -&gt; 确定</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2703timestamp1490168012211.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
点击 OK</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2703timestamp1490168081941.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<h3 id="2-4-mytest" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
2.4 编写 MyTest</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
右键点击 test -&gt; New -&gt; Class</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2703timestamp1490168387973.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
输入类名 -&gt; 确认</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2703timestamp1490168468968.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
<code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">MyTest.java</code>如下</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">package <span class="hljs-built_in" style="color:rgb(230,219,116);font-size:15px;">test</span>;
import java.nio.charset.Charset;
import org.apache.flume.Event;
import org.apache.flume.EventDeliveryException;
import org.apache.flume.api.RpcClient;
import org.apache.flume.api.RpcClientFactory;
import org.apache.flume.event.EventBuilder;

public class MyTest {

    public static void main(String[] args) throws Exception {
        MyRpcClientFacade client = new MyRpcClientFacade();
        // Initialize client with the remote Flume agent<span class="hljs-string" style="color:rgb(230,219,116);font-size:15px;">'s host and port
        client.init("localhost", 41414);

        // Send 10 events to the remote Flume agent. That agent should be
        // configured to listen with an AvroSource.
        String sampleData = "=====Hello Flume=====";
        for (int i = 0; i &lt; 1000; i++) {
            client.sendDataToFlume(sampleData);

        }

        client.cleanUp();
    }
}

class MyRpcClientFacade {
    private String hostname;
    private RpcClient client;
    private int port;

    public void init(String hostname, int port) {
        // Setup the RPC connection
        this.hostname = hostname;
        this.port = port;
        this.client = RpcClientFactory.getDefaultInstance(hostname, port);
        // Use the following method to create a thrift client (instead of the
        // above line):
        // this.client = RpcClientFactory.getThriftInstance(hostname, port);
    }

    public void sendDataToFlume(String data) {
        // Create a Flume Event object that encapsulates the sample data
        Event event = EventBuilder.withBody(data, Charset.forName("UTF-8"));

        // Send the event
        try {
            client.append(event);
        } catch (EventDeliveryException e) {
            // clean up and recreate the client
            client.close();
            client = null;
            client = RpcClientFactory.getDefaultInstance(hostname, port);
            // Use the following method to create a thrift client (instead of
            // the above line):
            // this.client = RpcClientFactory.getThriftInstance(hostname, port);
        }
    }

    public void cleanUp() {
        // Close the RPC connection
        client.close();
    }

}
</span></code></pre>
<h3 id="2-5-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
2.5 测试</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
启动顺序：</p>
<p style="font-size:15px;color:rgb(51,51,51);">
1）flume-ng 启动 agent：</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/apache-flume-1.6.0-bin$ bin/flume-ng agent -c ./conf/ <span class="hljs-_" style="font-size:15px;">-f</span> conf/flume-kafka.properties -Dflume.root.logger=DEBUG,console -n a1
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2703timestamp1492395166247.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
2）另外开启 kafka Xfce 终端，启动 consumer。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/kafka_2.10-0.10.0.0$ bin/kafka-console-consumer.sh --zookeeper localhost:2181 --from-beginning --topic testflume
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
右键运行 main</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2703timestamp1490169605689.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
回到 kafka Xfce 终端，观察到 kafka 终端不断消费消息。</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2703timestamp1492395183060.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<h2 style="line-height:1.225;color:rgb(51,51,51);font-size:1.75em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);">
三、实验总结</h2>
<p style="font-size:15px;color:rgb(51,51,51);">
通过修改 Flume 的配置文件，并基于 Flume API 编写程序，实现了 Flume 与 Kafka 的连通，更高级的应用请参考 Flume API。</p>
<h2 style="line-height:1.225;color:rgb(51,51,51);font-size:1.75em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);">
四、扩展阅读</h2>
<ul style="color:rgb(51,51,51);font-size:16px;line-height:25.6px;"><li style="font-size:15px;"><a href="https://cwiki.apache.org//confluence/display/FLUME/Getting+Started" rel="nofollow" style="color:rgb(64,120,192);text-decoration:none;background-color:transparent;">https://cwiki.apache.org//confluence/display/FLUME/Getting+Started</a></li><li style="font-size:15px;"><a href="http://kafka.apache.org/quickstart" rel="nofollow" style="color:rgb(64,120,192);text-decoration:none;background-color:transparent;">http://kafka.apache.org/quickstart</a></li></ul>            </div>
                </div>