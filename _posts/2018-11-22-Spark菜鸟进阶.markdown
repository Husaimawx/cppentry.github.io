---
layout:     post
title:      Spark菜鸟进阶
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p><strong>关于 Spark SQL/DataFrame（ Spark1.4.1 版本）</strong></p>

<p>Spark SQL 是 Spark 生态系统里用于处理结构化大数据的模块，该模块里最重要的概念就是 DataFrame, Spark 的 DataFrame 是基于早期版本中的 SchemaRDD。Spark DataFrame 以 RDD 为基础，但是带有 Schema 信息，它类似于传统数据库中的二维表格。 <br>
Spark SQL 模块目前支持将多种外部数据源的数据转化为 DataFrame，并像操作 RDD 或者将其注册为临时表的方式处理和分析这些数据。当前支持的数据源有： <br>
<strong>Json</strong> <br>
<strong>文本文件</strong> <br>
<strong>RDD</strong> <br>
<strong>关系数据库</strong> <br>
<strong>Hive</strong> <br>
<strong>Parquet</strong> <br>
一旦将 DataFrame 注册成临时表，我们就可以使用类 SQL 的方式操作这些数据。</p>

<p><strong>Spark 2.0介绍</strong></p>

<p>RDD是Spark中重要的API，然而它的创建和操作得使用sparkContext提供的API；对于RDD之外的其他东西，我们需要使用其他的Context。比如对于流处理来说，我们得使用StreamingContext；对于SQL得使用sqlContext；而对于hive得使用HiveContext。然而DataSet和Dataframe提供的API逐渐称为新的标准API，我们需要一个切入点来构建它们，所以在 Spark 2.0中我们引入了一个新的切入点(entry point)：SparkSession <br>
　　SparkSession实质上是SQLContext和HiveContext的组合（未来可能还会加上StreamingContext），所以在SQLContext和HiveContext上可用的API在SparkSession上同样是可以使用的。SparkSession内部封装了sparkContext，所以计算实际上是由sparkContext完成的。 <br>
　<em>SparkSession的设计遵循了工厂设计模式</em>　</p>

<pre class="prettyprint"><code class=" hljs avrasm">//创建SQLSession
SparkSession sparkSession = SparkSession<span class="hljs-preprocessor">.builder</span>.  
      master(<span class="hljs-string">"local"</span>)  
      <span class="hljs-preprocessor">.appName</span>(<span class="hljs-string">"spark session example"</span>)  
      <span class="hljs-preprocessor">.getOrCreate</span>()<span class="hljs-comment">;</span>
//创建hiveContext
SparkSession sparkSession = SparkSession<span class="hljs-preprocessor">.builder</span>.  
      master(<span class="hljs-string">"local"</span>)  
      <span class="hljs-preprocessor">.appName</span>(<span class="hljs-string">"spark session example"</span>)  
      <span class="hljs-preprocessor">.enableHiveSupport</span>()  
      <span class="hljs-preprocessor">.getOrCreate</span>()<span class="hljs-comment">;</span></code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>