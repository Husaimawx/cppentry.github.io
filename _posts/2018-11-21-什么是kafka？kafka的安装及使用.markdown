---
layout:     post
title:      什么是kafka？kafka的安装及使用
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <h2><span style="font-family:Cambria;color:#000000;">1</span>、<span style="font-family:Cambria;">Kafka</span>是什么</h2><p><span style="color:#000000;">在流式计算中，<span style="font-family:Calibri;">Kafka</span>一般用来缓存数据，<span style="font-family:Calibri;">Storm</span>通过消费<span style="font-family:Calibri;">Kafka</span>的数据进行计算。</span></p><p><span style="font-family:Calibri;color:#000000;"> </span></p><p><span style="font-family:Calibri;color:#000000;">KAFKA + STORM+REDIS</span></p><p><span style="font-family:Calibri;color:#000000;"> </span></p><p><span style="color:#000000;">l  <span style="font-family:Calibri;">Apache Kafka</span></span><span style="color:#000000;">是一个开源</span><strong><span style="color:#FF0000;">消息</span></strong><span style="color:#000000;">系统，由</span><span style="font-family:Calibri;color:#000000;">Scala</span>写成。是由<span style="font-family:Calibri;">Apache</span>软件基金会开发的一个开源消息系统项目。</p><p><span style="color:#000000;">l  <span style="font-family:Calibri;">Kafka</span>最初是由<span style="font-family:Calibri;">LinkedIn</span>开发，并于<span style="font-family:Calibri;">2011</span>年初开源。<span style="font-family:Calibri;">2012</span>年<span style="font-family:Calibri;">10</span>月从<span style="font-family:Calibri;">Apache Incubator</span>毕业。该项目的目标是为处理实时数据提供一个统一、高通量、低等待的平台。</span></p><p><span style="color:#000000;">l  <strong><span style="font-family:Calibri;">Kafka</span></strong></span><strong><span style="color:#000000;">是一个分布式消息队列：生产者、消费者的功能。它提供了</span><span style="color:#FF0000;">类似于</span><span style="font-family:Calibri;color:#000000;">JMS</span><span style="color:#000000;">的特性，</span><span style="color:#FF0000;">但是在设计实现上完全不同，此外它并不是</span><span style="color:#FF0000;"><span style="font-family:Calibri;">JMS</span></span><span style="color:#FF0000;">规范的实现</span><span style="color:#000000;">。</span></strong></p><p><span style="color:#000000;">l  <span style="font-family:Calibri;">Kafka</span>对消息保存时根据<span style="font-family:Calibri;">Topic</span>进行归类，发送消息者称为<span style="font-family:Calibri;">Producer,</span>消息接受者称为<span style="font-family:Calibri;">Consumer,</span>此外<span style="font-family:Calibri;">kafka</span>集群有多个<span style="font-family:Calibri;">kafka</span>实例组成，每个实例<span style="font-family:Calibri;">(server)</span>成为<a name="OLE_LINK2"></a><a name="OLE_LINK1"><span style="font-family:Calibri;">broker</span></a>。</span></p><p><span style="color:#000000;">l  无论是<span style="font-family:Calibri;">kafka</span>集群，还是<span style="font-family:Calibri;">producer</span>和<span style="font-family:Calibri;">consumer</span>都依赖于</span><span><span style="color:#FF0000;"><span style="font-family:Calibri;">zookeeper</span></span></span><span style="color:#000000;">集群保存一些<span style="font-family:Calibri;">meta</span>信息，来保证系统可用性</span></p><h2><span style="font-family:Cambria;color:#000000;">2</span>、<span style="font-family:Cambria;">JMS</span>是什么</h2><h3><span style="font-family:Calibri;font-size:18px;color:#000000;">2.1</span>、<span style="font-family:Calibri;">JMS</span>的基础</h3><p><span style="font-family:Calibri;color:#000000;">         JMS</span>是什么：<span style="font-family:Calibri;">JMS</span>是<span style="font-family:Calibri;">Java</span>提供的一套技术规范</p><p><span style="font-family:Calibri;color:#000000;">JMS</span>干什么用：用来异构系统集成通信，缓解系统瓶颈，提高系统的伸缩性增强系统用户体验，使得系统模块化和组件化变得可行并更加灵活</p><p></p><p><span style="color:#000000;">通过什么方式：生产消费者模式（生产者、服务器、消费者）</span></p><div><br></div><div><img src="https://img-blog.csdn.net/20180702012201790?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9sb25nXzRfMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></div><div><h3><span style="font-family:Calibri;font-size:18px;color:#000000;">2.2</span>、<span style="font-family:Calibri;">JMS</span>消息传输模型</h3><p><span style="color:#000000;">l  </span><span style="color:#000000;">点对点模式</span><span><span style="color:#000000;">（一对一，消费者主动</span><span style="color:#FF0000;">拉取</span><span style="color:#000000;">数据，消息收到后消息清除）</span></span></p><p><span style="color:#000000;">点对点模型通常是一个基于拉取或者轮询的消息传送模型，这种模型从队列中请求信息，而不是将消息推送到客户端。这个模型的特点是发送到队列的消息被</span><strong><span style="color:#FF0000;">一个且只有一个接收者接收处理</span></strong><span style="color:#000000;">，即使有多个消息监听者也是如此。</span></p><p><span style="color:#000000;">l  发布<span style="font-family:Calibri;">/</span></span><span style="color:#000000;">订阅模式</span><span><span style="color:#000000;">（一对多，数据生产后，</span><span style="color:#FF0000;">推送</span><span style="color:#000000;">给所有订阅者）</span></span></p><p><span style="color:#000000;">发布订阅模型则是一个基于推送的消息传送模型。发布订阅模型可以有多种不同的订阅者，临时订阅者只在主动监听主题时才接收消息，而持久订阅者则监听主题的所有消息，</span><strong><span style="color:#FF0000;">即时当前订阅者不可用，处于离线状态</span></strong><span style="color:#000000;">。</span></p></div><div><img src="https://img-blog.csdn.net/20180702012221885?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9sb25nXzRfMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></div><div><p style="text-indent:0cm;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">queue.put</span></span><span style="font-family:'宋体';">（</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">object</span></span><span style="font-family:'宋体';">）</span><span xml:lang="en-us" lang="en-us"><span><span style="font-family:Calibri;">  </span></span></span><span style="font-family:'宋体';">数据生产</span></span><span xml:lang="en-us" lang="en-us"></span></p><p style="text-indent:0cm;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">queue.take(object)<span>    </span></span></span><span style="font-family:'宋体';">数据消费</span></span><span xml:lang="en-us" lang="en-us"></span></p></div><div><h3><span style="font-family:Calibri;font-size:18px;color:#000000;">2.3</span>、<span style="font-family:Calibri;">JMS</span>核心组件</h3><p><span style="color:#000000;">l  <span style="font-family:Calibri;">Destination</span>：消息发送的目的地，也就是前面说的<span style="font-family:Calibri;">Queue</span>和<span style="font-family:Calibri;">Topic</span>。</span></p><p><a><span style="color:#000000;">l <span style="font-family:Calibri;">Message </span></span></a><span style="font-family:Calibri;"><a name="_msoanchor_1" id="_anchor_1" href="https://mp.csdn.net/postedit#_msocom_1" rel="nofollow"><u><span style="color:#0066cc;">[m1]</span></u></a><span style="color:#000000;"> </span></span><span style="color:#000000;">：从字面上就可以看出是被发送的消息。</span></p><p><span style="color:#000000;">l  <span style="font-family:Calibri;">Producer</span>：消息的生产者，要发送一个消息，必须通过这个生产者来发送。</span></p><p><span style="color:#000000;">l  <span style="font-family:Calibri;">MessageConsumer</span>：与生产者相对应，这是消息的消费者或接收者，通过它来接收一个消息。</span></p><p></p><div><span style="font-family:Calibri;color:#000000;"> <img src="https://img-blog.csdn.net/20180702012352283?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9sb25nXzRfMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></span></div><span style="font-family:Calibri;color:#000000;"></span><div><p style="text-align:center;" align="center"><span style="color:#000000;"><span style="font-family:'宋体';">通过与</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">ConnectionFactory</span></span><span style="font-family:'宋体';">可以获得一个</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">connection</span></span></span></p></div><div><p style="text-align:center;" align="center"><span style="color:#000000;"><span style="font-family:'宋体';">通过</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">connection</span></span><span style="font-family:'宋体';">可以获得一个</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">session</span></span><span style="font-family:'宋体';">会话。</span></span><span xml:lang="en-us" lang="en-us"></span></p></div><div><h3><span style="font-family:Calibri;font-size:18px;color:#000000;">2.4</span>、常见的类<span style="font-family:Calibri;">JMS</span>消息服务器</h3><h4><span style="font-family:Cambria;font-size:18px;color:#000000;">2.4.1</span>、<span style="font-family:Cambria;">JMS</span>消息服务器<span style="font-family:Cambria;"> ActiveMQ</span></h4><p><span style="font-family:Calibri;color:#000000;">ActiveMQ </span>是<span style="font-family:Calibri;">Apache</span>出品，最流行的，能力强劲的开源消息总线。<span style="font-family:Calibri;">ActiveMQ </span>是一个完全支持<span style="font-family:Calibri;">JMS1.1</span>和<span style="font-family:Calibri;">J2EE 1.4</span>规范的。</p><p><span style="color:#000000;">主要特点：</span></p><p><span style="color:#000000;">l  多种语言和协议编写客户端。语言<span style="font-family:Calibri;">: Java, C, C++, C#, Ruby, Perl, Python, PHP</span>。应用协议<span style="font-family:Calibri;">:OpenWire,Stomp REST,WS Notification,XMPP,AMQP</span></span></p><p><span style="color:#000000;">l  完全支持<span style="font-family:Calibri;">JMS1.1</span>和<span style="font-family:Calibri;">J2EE 1.4</span>规范<span style="font-family:Calibri;"> (</span>持久化<span style="font-family:Calibri;">,XA</span>消息<span style="font-family:Calibri;">,</span>事务<span style="font-family:Calibri;">)</span></span></p><p><span style="color:#000000;">l  对<span style="font-family:Calibri;">Spring</span>的支持<span style="font-family:Calibri;">,ActiveMQ</span>可以很容易内嵌到使用<span style="font-family:Calibri;">Spring</span>的系统里面去<span style="font-family:Calibri;">,</span>而且也支持<span style="font-family:Calibri;">Spring2.0</span>的特性</span></p><p><span style="color:#000000;">l  通过了常见<span style="font-family:Calibri;">J2EE</span>服务器<span style="font-family:Calibri;">(</span>如<span style="font-family:Calibri;">Geronimo,JBoss 4, GlassFish,WebLogic)</span>的测试<span style="font-family:Calibri;">,</span>其中通过<span style="font-family:Calibri;">JCA 1.5resource adaptors</span>的配置<span style="font-family:Calibri;">,</span>可以让<span style="font-family:Calibri;">ActiveMQ</span>可以自动的部署到任何兼容<span style="font-family:Calibri;">J2EE 1.4 </span>商业服务器上</span></p><p><span style="color:#000000;">l  支持多种传送协议<span style="font-family:Calibri;">:in-VM,TCP,SSL,NIO,UDP,JGroups,JXTA</span></span></p><p><span style="color:#000000;">l  支持通过<span style="font-family:Calibri;">JDBC</span>和<span style="font-family:Calibri;">journal</span>提供高速的消息持久化</span></p><p><span style="color:#000000;">l  从设计上保证了高性能的集群<span style="font-family:Calibri;">,</span>客户端<span style="font-family:Calibri;">-</span>服务器<span style="font-family:Calibri;">,</span>点对点</span></p><p><span style="color:#000000;">l  支持<span style="font-family:Calibri;">Ajax</span></span></p><p><span style="color:#000000;">l  支持与<span style="font-family:Calibri;">Axis</span>的整合</span></p><p><span style="color:#000000;">l  可以很容易得调用内嵌<span style="font-family:Calibri;">JMSprovider,</span>进行测试</span></p><h4><span style="font-family:Cambria;font-size:18px;color:#000000;">2.4.2</span>、分布式消息中间件<span style="font-family:Cambria;"> Metamorphosis</span></h4><p><a name="OLE_LINK10"></a><span style="font-family:Calibri;color:#000000;"><a name="OLE_LINK9">Metamorphosis</a>(MetaQ) </span>是一个高性能、高可用、可扩展的分布式消息中间件，类似于<span style="font-family:Calibri;">LinkedIn</span>的<span style="font-family:Calibri;">Kafka</span>，具有消息存储顺序写、吞吐量大和支持本地和<span style="font-family:Calibri;">XA</span>事务等特性，适用于大吞吐量、顺序消息、广播和日志数据传输等场景，在淘宝和支付宝有着广泛的应用，现已开源。</p><p><span style="color:#000000;">主要特点：</span></p><p><span style="color:#000000;">l  生产者、服务器和消费者都可分布</span></p><p><span style="color:#000000;">l  消息存储顺序写</span></p><p><span style="color:#000000;">l  性能极高<span style="font-family:Calibri;">,</span>吞吐量大</span></p><p><span style="color:#000000;">l  支持消息顺序</span></p><p><span style="color:#000000;">l  支持本地和<span style="font-family:Calibri;">XA</span>事务</span></p><p><span style="color:#000000;">l  客户端<span style="font-family:Calibri;">pull</span>，随机读<span style="font-family:Calibri;">,</span>利用<span style="font-family:Calibri;">sendfile</span>系统调用，<span style="font-family:Calibri;">zero-copy,</span>批量拉数据</span></p><p><span style="color:#000000;">l  支持消费端事务</span></p><p><span style="color:#000000;">l  支持消息广播模式</span></p><p><span style="color:#000000;">l  支持异步发送消息</span></p><p><span style="color:#000000;">l  支持<span style="font-family:Calibri;">http</span>协议</span></p><p><span style="color:#000000;">l  支持消息重试和<span style="font-family:Calibri;">recover</span></span></p><p><span style="color:#000000;">l  数据迁移、扩容对用户透明</span></p><p><span style="color:#000000;">l  消费状态保存在客户端</span></p><p><span style="color:#000000;">l  支持同步和异步复制两种<span style="font-family:Calibri;">HA</span></span></p><p><span style="color:#000000;">l  支持<span style="font-family:Calibri;">groupcommit</span></span></p><h4><span style="font-family:Cambria;font-size:18px;color:#000000;">2.4.3</span>、分布式消息中间件<span style="font-family:Cambria;"> RocketMQ</span></h4><p><span style="font-family:Calibri;color:#000000;">RocketMQ </span>是一款分布式、队列模型的消息中间件，具有以下特点：</p><p><span style="color:#000000;">l  能够保证严格的消息顺序</span></p><p><span style="color:#000000;">l  提供丰富的消息拉取模式</span></p><p><span style="color:#000000;">l  高效的订阅者水平扩展能力</span></p><p><span style="color:#000000;">l  实时的消息订阅机制</span></p><p><span style="color:#000000;">l  亿级消息堆积能力</span></p><p><span style="color:#000000;">l  <strong><span style="font-family:Calibri;">Metaq3.0 </span>版本改名，产品名称改为<span style="font-family:Calibri;">RocketMQ</span></strong></span></p><h4><span style="font-family:Cambria;font-size:18px;color:#000000;">2.4.4</span>、其他<span style="font-family:Cambria;">MQ</span></h4><p><span style="color:#000000;">l  <span style="font-family:Calibri;">.NET</span>消息中间件<span style="font-family:Calibri;"> DotNetMQ</span></span></p><p><span style="color:#000000;">l  基于<span style="font-family:Calibri;">HBase</span>的消息队列<span style="font-family:Calibri;"> HQueue</span></span></p><p><span style="color:#000000;">l  <span style="font-family:Calibri;">Go </span>的<span style="font-family:Calibri;"> MQ </span>框架<span style="font-family:Calibri;"> KiteQ</span></span></p><p><span style="color:#000000;">l  <span style="font-family:Calibri;">AMQP</span>消息服务器<span style="font-family:Calibri;"> <a name="OLE_LINK4"></a><a name="OLE_LINK3">RabbitMQ</a></span></span></p><p><span style="color:#000000;">l  <span style="font-family:Calibri;">MemcacheQ </span>是一个基于<span style="font-family:Calibri;"> MemcacheDB </span>的消息队列服务器。</span></p><p><strong><span style="font-family:Calibri;color:#000000;"> </span></strong></p><p align="center"><span style="font-family:Calibri;color:#000000;"> </span></p><h2><span style="font-family:Cambria;color:#000000;">3</span>、为什么需要消息队列（重要）</h2><p><span style="color:#000000;">消息系统的核心作用就是三点：解耦，异步和并行</span></p><p><span style="color:#000000;">以用户注册的案列来说明消息系统的作用</span></p><h3><span style="font-family:Calibri;font-size:18px;color:#000000;">3.1</span>、用户注册的一般流程</h3></div><div><img src="https://img-blog.csdn.net/20180702012425925?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9sb25nXzRfMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></div><div><p><strong><span style="color:#FF0000;">问题</span></strong><span style="color:#000000;">：随着后端流程越来越多，每步流程都需要额外的耗费很多时间，从而会导致用户更长的等待延迟。</span></p><h3><span style="font-family:Calibri;font-size:18px;color:#000000;">3.2</span>、用户注册的并行执行</h3></div><div><img src="https://img-blog.csdn.net/20180702012439167?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9sb25nXzRfMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></div><div><p><strong><span style="color:#FF0000;">问题</span></strong><span style="color:#000000;">：系统并行的发起了<span style="font-family:Calibri;">4</span>个请求，<span style="font-family:Calibri;">4</span>个请求中，如果某一个环节执行<span style="font-family:Calibri;">1</span>分钟，其他环节再快，用户也需要等待<span style="font-family:Calibri;">1</span>分钟。如果其中一个环节异常之后，整个服务挂掉了。</span></p></div><div><img src="https://img-blog.csdn.net/20180702012458171?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9sb25nXzRfMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></div><div><h3><span style="font-size:18px;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">3.3</span></span><span style="font-family:'宋体';">、用户注册的最终一致</span></span></span><span xml:lang="en-us" lang="en-us"></span></h3></div><div><br></div><div><hr width="33%" size="1" align="left"><div><div id="_com_1"><p><br></p></div></div></div></div><p></p><p></p><div><img src="https://img-blog.csdn.net/20180702012509645?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9sb25nXzRfMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></div><div><p><span style="font-family:Calibri;color:#000000;">1、</span> <strong><span style="color:#FF0000;">保证主流程的正常执行</span></strong><span style="color:#000000;">、执行成功之后，发送<span style="font-family:Calibri;">MQ</span>消息出去。</span></p><p><span style="font-family:Calibri;color:#000000;">2、</span> 需要这个<span style="font-family:Calibri;">destination</span>的其他系统通过消费数据再执行，最终一致。</p></div><div><img src="https://img-blog.csdn.net/20180702012527999?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9sb25nXzRfMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></div><div><h2><span style="color:#000000;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Cambria;">4</span></span><span style="font-family:'宋体';">、</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Cambria;">Kafka</span></span><span style="font-family:'宋体';">核心组件</span></span><span xml:lang="en-us" lang="en-us"></span></h2><p style="text-indent:-21pt;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us" style="font-family:Wingdings;"><span>l<span style="font:7pt 'Times New Roman';">  </span></span></span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">Topic </span></span><span style="font-family:'宋体';">：消息根据</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">Topic</span></span><span style="font-family:'宋体';">进行归类</span></span><span xml:lang="en-us" lang="en-us"></span></p><p style="text-indent:-21pt;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us" style="font-family:Wingdings;"><span>l<span style="font:7pt 'Times New Roman';">  </span></span></span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">Producer</span></span><span style="font-family:'宋体';">：发送消息者</span></span><span xml:lang="en-us" lang="en-us"></span></p><p style="text-indent:-21pt;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us" style="font-family:Wingdings;"><span>l<span style="font:7pt 'Times New Roman';">  </span></span></span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">Consumer</span></span><span style="font-family:'宋体';">：消息接受者</span></span><span xml:lang="en-us" lang="en-us"></span></p><p style="text-indent:-21pt;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us" style="font-family:Wingdings;"><span>l<span style="font:7pt 'Times New Roman';">  </span></span></span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">broker</span></span><span style="font-family:'宋体';">：每个</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">kafka</span></span><span style="font-family:'宋体';">实例</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">(server)</span></span></span></p><p style="text-indent:-21pt;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us" style="font-family:Wingdings;"><span>l<span style="font:7pt 'Times New Roman';">  </span></span></span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">Zookeeper</span></span><span style="font-family:'宋体';">：依赖集群保存</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">meta</span></span><span style="font-family:'宋体';">信息。</span></span><span xml:lang="en-us" lang="en-us"></span></p></div><div><img src="https://img-blog.csdn.net/20180702012544222?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9sb25nXzRfMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></div><div><h2><span style="color:#000000;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Cambria;">5</span></span><span style="font-family:'宋体';">、</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Cambria;">Kafka</span></span><span style="font-family:'宋体';">集群部署</span></span><span xml:lang="en-us" lang="en-us"></span></h2><h3><span style="font-size:18px;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">5.1</span></span><span style="font-family:'宋体';">集群部署的基本流程</span></span></span><span xml:lang="en-us" lang="en-us"></span></h3><p style="text-indent:21pt;"><span style="font-family:'宋体';"><span style="color:#000000;">下载安装包、解压安装包、修改配置文件、分发安装包、启动集群</span></span><span xml:lang="en-us" lang="en-us"></span></p><h3><span style="font-size:18px;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">5.2</span></span><span style="font-family:'宋体';">集群部署的基础环境准备</span></span></span><span xml:lang="en-us" lang="en-us"></span></h3><p style="text-indent:21pt;"><span style="color:#000000;"><span style="font-family:'宋体';">安装前的准备工作（</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">zk</span></span><span style="font-family:'宋体';">集群已经部署完毕）</span></span><span xml:lang="en-us" lang="en-us"></span></p><p style="text-indent:-21pt;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us" style="font-family:Wingdings;"><span>l<span style="font:7pt 'Times New Roman';">  </span></span></span><span style="font-family:'宋体';">关闭防火墙</span><span style="font-family:Calibri;"> </span></span><span xml:lang="en-us" lang="en-us"></span></p><p style="text-indent:21pt;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;color:#000000;">chkconfig iptables off<span> </span>&amp;&amp; setenforce 0</span></span></p><p style="text-indent:-21pt;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us" style="font-family:Wingdings;"><span>l<span style="font:7pt 'Times New Roman';">  </span></span></span><span style="font-family:'宋体';">创建用户</span></span><span xml:lang="en-us" lang="en-us"></span></p><p style="text-indent:21pt;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">groupadd realtime &amp;&amp;</span></span><span style="font-family:'宋体';">　</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">useradd realtime</span></span><span style="font-family:'宋体';">　</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">&amp;&amp;usermod -a -G realtime realtime</span></span></span></p><p style="text-indent:-21pt;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us" style="font-family:Wingdings;"><span>l<span style="font:7pt 'Times New Roman';">  </span></span></span><span style="font-family:'宋体';">创建工作目录并赋权</span></span><span xml:lang="en-us" lang="en-us"></span></p><p style="text-indent:21pt;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;color:#000000;">mkdir /export</span></span></p><p style="text-indent:21pt;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;color:#000000;">mkdir /export/servers</span></span></p><p style="text-indent:21pt;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;color:#000000;">chmod 755 -R /export</span></span></p><p style="text-indent:-21pt;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us" style="font-family:Wingdings;"><span>l<span style="font:7pt 'Times New Roman';">  </span></span></span><span style="font-family:'宋体';">切换到</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">realtime</span></span><span style="font-family:'宋体';">用户下</span></span><span xml:lang="en-us" lang="en-us"></span></p><p style="text-indent:21pt;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;color:#000000;">su realtime</span></span></p><h3><span style="color:#000000;"><span style="font-size:18px;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">5.3 Kafka</span></span><span style="font-family:'宋体';">集群部署</span></span><span style="font-family:Calibri;font-size:18px;"></span></span><span xml:lang="en-us" lang="en-us"></span></h3><h4><span style="font-size:18px;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Cambria;">5.3.1</span></span><span style="font-family:'宋体';">、下载安装包</span></span></span><span xml:lang="en-us" lang="en-us"></span></h4><p style="text-indent:21pt;"><span xml:lang="en-us" lang="en-us"><a href="http://kafka.apache.org/downloads.html" rel="nofollow"><span style="text-decoration:none;"><u><span style="font-family:Calibri;">http://kafka.apache.org/downloads.html</span></u></span></a></span></p><p style="text-indent:21pt;"><span style="color:#000000;"><span style="font-family:'宋体';">在</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">linux</span></span><span style="font-family:'宋体';">中使用</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;">wget</span></span><span style="font-family:'宋体';">命令下载安装包</span></span><span xml:lang="en-us" lang="en-us"></span></p><p><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;"><span style="color:#000000;"><span> </span><span>       </span>wgethttp://mirrors.hust.edu.cn/apache/kafka/0.8.2.2/kafka_2.11-0.8.2.2.tgz</span></span></span></p><h4><span style="font-size:18px;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Cambria;">5.3.2</span></span><span style="font-family:'宋体';">、解压安装包</span></span></span><span xml:lang="en-us" lang="en-us"></span></h4><p style="text-indent:21pt;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;color:#000000;">tar -zxvf/export/software/kafka_2.11-0.8.2.2.tgz -C /export/servers/</span></span></p><p style="text-indent:21pt;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;color:#000000;">cd/export/servers/</span></span></p><p style="text-indent:21pt;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;color:#000000;">ln -skafka_2.11-0.8.2.2 kafka</span></span></p><h4><span style="font-size:18px;"><span style="color:#000000;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Cambria;">5.3.3</span></span><span style="font-family:'宋体';">、修改配置文件</span></span></span><span xml:lang="en-us" lang="en-us"></span></h4><p><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;color:#000000;">cp<span>   </span>/export/servers/kafka/config/server.properties</span></span></p><p style="text-indent:21pt;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;color:#000000;">/export/servers/kafka/config/server.properties.bak</span></span></p><p style="text-indent:21pt;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Calibri;color:#000000;">vi <span> </span>/export/servers/kafka/config/server.properties</span></span></p><p style="text-indent:21pt;"><span style="font-family:'宋体';"><span style="color:#000000;">输入以下内容：</span></span><span xml:lang="en-us" lang="en-us"></span></p></div><div><img src="https://img-blog.csdn.net/20180702012601139?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9sb25nXzRfMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></div><div><h4><span style="font-family:Cambria;font-size:18px;color:#000000;">5.3.4</span>、分发安装包</h4><p><span style="font-family:Calibri;color:#000000;">scp -r/export/servers/kafka_2.11-0.8.2.2 kafka02:/export/servers</span></p><p><span style="color:#000000;">然后分别在各机器上创建软连</span></p><p><span style="font-family:Calibri;color:#000000;">cd/export/servers/</span></p><p><span style="font-family:Calibri;color:#000000;">ln -skafka_2.11-0.8.2.2 kafka</span></p><h4><span style="font-family:Cambria;font-size:18px;color:#000000;">5.3.5</span>、再次修改配置文件（重要）</h4><p><span><span style="color:#FF0000;">依次修改各服务器上配置文件的的</span><span style="color:#FF0000;"><span style="font-family:Calibri;">broker.id</span></span><span style="color:#FF0000;">，分别是</span><span style="color:#FF0000;"><span style="font-family:Calibri;">0,1,2</span></span><span style="color:#FF0000;">不得重复。</span></span></p><h4><span style="font-family:Cambria;font-size:18px;color:#000000;">5.3.6</span>、启动集群</h4><p><span style="color:#000000;">依次在各节点上启动<span style="font-family:Calibri;">kafka</span></span></p><p><span style="font-family:Calibri;color:#000000;">bin/kafka-server-start.sh config/server.properties</span></p><p><span style="font-family:Calibri;color:#000000;"> </span></p><h3><span style="font-family:Calibri;font-size:18px;color:#000000;">5.4</span>、<span style="font-family:Calibri;">Kafka</span>常用操作命令</h3><p><span style="color:#000000;">l  查看当前服务器中的所有<span style="font-family:Calibri;">topic</span></span></p><p><span style="font-family:Calibri;color:#000000;">bin/kafka-topics.sh --list --zookeeper  zk01:2181</span></p><p><span style="color:#000000;">l  创建<span style="font-family:Calibri;">topic</span></span></p><p><span style="font-family:Calibri;color:#000000;">bin/kafka-topics.sh --create --zookeeper zk01:2181--replication-factor 1 --partitions 1 --topic test</span></p><p><span style="color:#000000;">l  删除<span style="font-family:Calibri;">topic</span></span></p><p><span style="font-family:Calibri;color:#000000;">sh bin/kafka-topics.sh --delete --zookeeper zk01:2181 --topic test</span></p><p><span style="color:#000000;">需要<span style="font-family:Calibri;">server.properties</span>中设置<span style="font-family:Calibri;">delete.topic.enable=true</span>否则只是标记删除或者直接重启。</span></p><p><span style="color:#000000;">l  通过<span style="font-family:Calibri;">shell</span>命令发送消息</span></p><p><a name="OLE_LINK6"></a><a name="OLE_LINK5"><span style="font-family:Calibri;color:#000000;">kafka-console-producer.sh --broker-list kafka01:9092 --topic itheima</span></a></p><p><span style="color:#000000;">l  通过<span style="font-family:Calibri;">shell</span>消费消息</span></p><p><span style="font-family:Calibri;color:#000000;">sh bin/kafka-console-consumer.sh --zookeeper zk01:2181--from-beginning --topic test1</span></p><p><span style="color:#000000;">l  查看消费位置</span></p><p><span style="font-family:Calibri;color:#000000;">sh kafka-run-class.sh kafka.tools.ConsumerOffsetChecker --zookeeperzk01:2181 --group testGroup</span></p><p><span style="color:#000000;">l  查看某个<span style="font-family:Calibri;">Topic</span>的详情</span></p><p><span style="font-family:Calibri;color:#000000;">sh kafka-topics.sh --topic test --describe --zookeeper zk01:2181</span></p><p><span style="font-family:Calibri;color:#000000;"> </span></p><h2><span style="font-family:Cambria;color:#000000;">6</span>、<span style="font-family:Cambria;">Kafka</span>生产者<span style="font-family:Cambria;">Java API</span></h2></div><div><img src="https://img-blog.csdn.net/20180702012621986?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9sb25nXzRfMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></div><div><h2><span style="color:#000000;"><span xml:lang="en-us" lang="en-us"><span style="font-family:Cambria;">7</span></span><span style="font-family:'宋体';">、</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Cambria;">Kafka</span></span><span style="font-family:'宋体';">消费者</span><span xml:lang="en-us" lang="en-us"><span style="font-family:Cambria;">Java API</span></span></span></h2></div><div><img src="https://img-blog.csdn.net/20180702012634214?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9sb25nXzRfMg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></div>            </div>
                </div>