---
layout:     post
title:      HDFS相关概念
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/yangcongyangling/article/details/51439791				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>自定义配置文件： <br>
hdfs： core-site.xml  hdfs-site.xml <br>
yarn： yarn-site.xml  <br>
mapreduce:  mapred-site.xml</p>

<p>默认配置文件： <br>
hdfs： core-default.xml  hdfs-default.xml <br>
yarn： yarn-default.xml  <br>
mapreduce:  mapred-default.xml</p>

<p>配置历史服务器以及日志聚合 <br>
日志聚合就是把运行的日志记录上传到HDFS文件系统里面</p>

<p>启动服务的三种方式：</p>



<pre class="prettyprint"><code class=" hljs avrasm">(<span class="hljs-number">1</span>)每个角色逐个启动
sbin/hadoop-daemon<span class="hljs-preprocessor">.sh</span> start namenode
sbin/hadoop-daemon<span class="hljs-preprocessor">.sh</span> stop namenode

(<span class="hljs-number">2</span>)分模块启动
sbin/start-dfs<span class="hljs-preprocessor">.sh</span>   [namenode datanode]
sbin/start-yarn<span class="hljs-preprocessor">.sh</span>

sbin/stop-yarn<span class="hljs-preprocessor">.sh</span>

(<span class="hljs-number">3</span>)启动所有
sbin/start-all<span class="hljs-preprocessor">.sh</span> 
sbin/stop-all<span class="hljs-preprocessor">.sh</span></code></pre>

<p>使用第2和第3种方法操作，需要配置ssh无密钥登录</p>

<pre class="prettyprint"><code class=" hljs lasso">$ ssh<span class="hljs-attribute">-keygen</span> <span class="hljs-attribute">-t</span> rsa
$ ssh<span class="hljs-attribute">-copy</span><span class="hljs-attribute">-id</span> bigdata01<span class="hljs-built_in">.</span>ibeifeng<span class="hljs-built_in">.</span>com</code></pre>

<p>两种日志： <br>
.log    启动、运行过程，相对比较全名 【info  error】 <br>
.out    标准输出日志</p>

<p>NameNode <br>
    –整个集群的中心节点 <br>
    –存储的是元数据信息（block、文件的权限、副本数） <br>
    –接收datanode的心跳和块报告</p>

<p>DataNode  –block为单位存储数据（128M） <br>
      –3s报告心跳状态（10min） <br>
          –1h报告自己节点上面块的状态 <br>
      –在线加入或者下线node</p>

<p>[nagios  –服务和主机] <br>
[ganglia  –hadoop ] <br>
[ambari  –hadoop ] <br>
[cacti –流量] <br>
[raid]</p>

<p>查看fsimage  [inode]</p>



<pre class="prettyprint"><code class=" hljs lasso">/opt/app/hadoop<span class="hljs-subst">-</span><span class="hljs-number">2.5</span><span class="hljs-number">.0</span>/bin/hdfs oiv <span class="hljs-attribute">-i</span> fsimage_0000000000000000000 <span class="hljs-attribute">-o</span> /tmp/<span class="hljs-number">1.</span><span class="hljs-built_in">xml</span> <span class="hljs-attribute">-p</span> <span class="hljs-built_in">XML</span></code></pre>

<h2 id="hdfs启动流程">HDFS启动流程</h2>

<p>格式化：fsimage </p>

<p>第一次启动：    [硬盘   内存]  <br>
     read   fsimage <br>
     write  edits</p>

<p>client –&gt;put rm <br>
         [put  rm ]write  edits</p>

<p>[secondary namenode合并fsimage+edits] </p>

<p>第二次启动： <br>
         read  fsimage_2   [硬盘   内存] <br>
           edits <br>
    ——————– <br>
    datanode向namenode注册 <br>
    datanode向namenode报告block的report</p>

<p>safemode  – 只读不写</p>

<p>0.999f <br>
$ bin/hdfs dfsadmin -safemode enter</p>

<p>yarn平台资源分配过程：</p>

<p>（1）客户端向resource manager发起请求（资源） <br>
（2）resource manager会为job任务分配一个application master（job任务的管理者） <br>
          [am是在某个nodemanager] <br>
（3）再向resource manager申请资源，resource manager响应am的资源的资源申请 <br>
（4）am与node manager通信，进行任务执行与响应 <br>
（5）对应的node manager执行完任务以后，会向am报告 <br>
（6）am向resource manager报告任务完成</p>

<p>container：资源的抽象，如内存、CPU、磁盘、网络等</p>

<p>yarn-site.xml <br>
yarn.nodemanager.resource.memory-mb   —内存 <br>
yarn.nodemanager.resource.cpu-vcores  —CPU</p>

<p>分布式环境的准备： <br>
bigdata01.ibeifeng.com   192.168.17.132 <br>
bigdata02.ibeifeng.com   192.168.17.133 <br>
bigdata03.ibeifeng.com   192.168.17.132</p>

<p>（1）准备JDK <br>
（2）修改主机名    vi /etc/sysconfig/network <br>
（3）设置IP地址   使用setup命令 <br>
（4）关闭iptables和selinux</p>



<pre class="prettyprint"><code class=" hljs vbnet">关闭iptables
永久关闭： chkconfig iptables <span class="hljs-keyword">off</span>
临时关闭： service iptables <span class="hljs-keyword">stop</span>
关闭selinux
          vi /etc/sysconfig/selinux  改为SELINUX=disabled</code></pre>

<p>（5）修改/etc/hosts</p>



<pre class="prettyprint"><code class=" hljs tex">windows:   C:<span class="hljs-command">\Windows</span><span class="hljs-command">\System</span>32<span class="hljs-command">\drivers</span><span class="hljs-command">\etc</span><span class="hljs-command">\host</span>
linux:      /etc/hosts
格式：      192.168.134.2 bigdata01.ycong.com ycong</code></pre>

<p>针对克隆 <br>
　——主机名 <br>
  ——IP <br>
  ——MAC地址 <br>
      /etc/udev/rules.d/70-persistent-net.rules <br>
      /etc/sysconfig/network-scripts/ifcfg-eth0</p>

<p>角色分配 <br>
[namenode  secondarynamenode datanode] <br>
[resourcemanager nodemanager] <br>
[historyserver]</p>

<p>bigdata01.ibeifeng.com  namenode  datanode                      nodemanager  <br>
bigdata02.ibeifeng.com            datanode  resourcemanager     nodemanager <br>
bigdata03.ibeifeng.com            datanode  secondarynamenode   nodemanager historyserver</p>

<p>配置ssh无密钥登录 <br>
bigdata01（start-dfs.sh）   –&gt; bigdata01  bigdata02   bigdata03 <br>
bigdata02（start-yarn.sh）  –&gt; bigdata01  bigdata02   bigdata03  </p>

<p>安装配置  —》</p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>