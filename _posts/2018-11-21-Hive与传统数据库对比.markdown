---
layout:     post
title:      Hive与传统数据库对比
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p align="left" style="color:rgb(69,69,69);font-family:'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun;font-size:16px;">
<span style="font-size:14px;"><span style="color:rgb(51,51,51);">由于</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">采用了</span><span style="color:rgb(51,51,51);">SQL</span><span style="color:rgb(51,51,51);">的查询语言</span><span style="color:rgb(51,51,51);">HQL</span><span style="color:rgb(51,51,51);">，因此很容易将</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">理解为数据库。其实</span><span style="color:rgb(51,51,51);">从结构上来看，</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">和数据库除了拥有类似的查询语言，再无类似之处。本文将从多个方面来阐述</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">和数据库的差异。数据库可以用在</span><span style="color:rgb(51,51,51);">Online</span><span style="color:rgb(51,51,51);">的应用中，但是</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">是为数据仓库而设计的，清楚这一点，有助于从应用角度理解</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">的特性。</span></span></p>
<table border="1" cellspacing="0" cellpadding="0" width="93%" style="border-collapse:collapse;border-spacing:0px;color:rgb(69,69,69);font-family:'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun;font-size:16px;"><tbody><tr><td valign="top">
<p align="left">
<span><span style="font-weight:400;color:rgb(49,132,155);"><span style="font-size:14px;">查询语言</span></span></span></p>
</td>
<td valign="top">
<p align="left">
<span><span style="font-weight:400;color:rgb(49,132,155);"><span style="font-size:14px;">HQL</span></span></span></p>
</td>
<td valign="top">
<p align="left">
<span><span style="font-weight:400;color:rgb(49,132,155);"><span style="font-size:14px;">SQL</span></span></span></p>
</td>
</tr><tr><td valign="top" style="background:rgb(210,234,241);">
<p align="left">
<span><span style="font-weight:400;color:rgb(49,132,155);"><span style="font-size:14px;">数据存储位置</span></span></span></p>
</td>
<td valign="top" style="background:rgb(210,234,241);">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">HDFS</span></span></p>
</td>
<td valign="top" style="background:rgb(210,234,241);">
<p align="left">
<span style="font-size:14px;"><span style="color:rgb(49,132,155);">Raw Device</span><span style="color:rgb(49,132,155);">或者 Local FS</span></span></p>
</td>
</tr><tr><td valign="top">
<p align="left">
<span><span style="font-weight:400;color:rgb(49,132,155);"><span style="font-size:14px;">数据格式</span></span></span></p>
</td>
<td valign="top">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">用户定义</span></span></p>
</td>
<td valign="top">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">系统决定</span></span></p>
</td>
</tr><tr><td valign="top" style="background:rgb(210,234,241);">
<p align="left">
<span><span style="font-weight:400;color:rgb(49,132,155);"><span style="font-size:14px;">数据更新</span></span></span></p>
</td>
<td valign="top" style="background:rgb(210,234,241);">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">不支持</span></span></p>
</td>
<td valign="top" style="background:rgb(210,234,241);">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">支持</span></span></p>
</td>
</tr><tr><td valign="top">
<p align="left">
<span><span style="font-weight:400;color:rgb(49,132,155);"><span style="font-size:14px;">索引</span></span></span></p>
</td>
<td valign="top">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">无</span></span></p>
</td>
<td valign="top">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">有  </span></span></p>
</td>
</tr><tr><td valign="top" style="background:rgb(210,234,241);">
<p align="left">
<span><span style="font-weight:400;color:rgb(49,132,155);"><span style="font-size:14px;">执行</span></span></span></p>
</td>
<td valign="top" style="background:rgb(210,234,241);">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">MapRedcue</span></span></p>
</td>
<td valign="top" style="background:rgb(210,234,241);">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">Executor</span></span></p>
</td>
</tr><tr><td valign="top">
<p align="left">
<span><span style="font-weight:400;color:rgb(49,132,155);"><span style="font-size:14px;">执行延迟</span></span></span></p>
</td>
<td valign="top">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">高</span></span></p>
</td>
<td valign="top">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">低</span></span></p>
</td>
</tr><tr><td valign="top" style="background:rgb(210,234,241);">
<p align="left">
<span><span style="font-weight:400;color:rgb(49,132,155);"><span style="font-size:14px;">可扩展性</span></span></span></p>
</td>
<td valign="top" style="background:rgb(210,234,241);">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">高</span></span></p>
</td>
<td valign="top" style="background:rgb(210,234,241);">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">低</span></span></p>
</td>
</tr><tr><td valign="top">
<p align="left">
<span><span style="font-weight:400;color:rgb(49,132,155);"><span style="font-size:14px;">数据规模</span></span></span></p>
</td>
<td valign="top">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">大</span></span></p>
</td>
<td valign="top">
<p align="left">
<span style="color:rgb(49,132,155);"><span style="font-size:14px;">小</span></span></p>
</td>
</tr></tbody></table><p style="color:rgb(69,69,69);font-family:'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun;font-size:16px;">
<span style="color:rgb(51,51,51);"><br><span><span style="font-weight:400;font-size:14px;">1.</span></span></span><span><span style="font-weight:400;color:rgb(51,51,51);"><span style="font-size:14px;">查询语言</span></span><span style="font-weight:400;color:rgb(51,51,51);"><br></span></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);">由于</span><span style="color:rgb(51,51,51);"> SQL</span><span style="color:rgb(51,51,51);">被广泛的应用在数据仓库中，因此，专门针对</span><span style="color:rgb(51,51,51);"> Hive</span><span style="color:rgb(51,51,51);">的特性设计了类</span><span style="color:rgb(51,51,51);"> SQL</span><span style="color:rgb(51,51,51);">的查询语言</span><span style="color:rgb(51,51,51);"> HQL</span><span style="color:rgb(51,51,51);">。熟悉</span><span style="color:rgb(51,51,51);"> SQL</span><span style="color:rgb(51,51,51);">开发的开发者可以很方便的使用</span><span style="color:rgb(51,51,51);"> Hive</span><span style="color:rgb(51,51,51);">进行开发。</span></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);"><br><br><span>2.</span></span><span><span style="font-weight:400;color:rgb(51,51,51);">数据存储位置</span></span></span><span style="color:rgb(51,51,51);"><br><span style="font-size:14px;">Hive </span></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);">是建立在</span><span style="color:rgb(51,51,51);"> Hadoop</span><span style="color:rgb(51,51,51);">之上的，所有</span><span style="color:rgb(51,51,51);"> Hive</span><span style="color:rgb(51,51,51);">的数据都是存储在</span><span style="color:rgb(51,51,51);"> HDFS</span><span style="color:rgb(51,51,51);">中的。而数据库则可以将数据保存在块设备或者本地文件系统中。</span></span><span style="color:rgb(51,51,51);"><br><br><span><span style="font-weight:400;font-size:14px;">3.</span></span></span><span><span style="font-weight:400;color:rgb(51,51,51);"><span style="font-size:14px;">数据格式</span></span></span><span style="color:rgb(51,51,51);"><br><span style="font-size:14px;">Hive </span></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);">中没有定义专门的数据格式，数据格式可以由用户指定，用户定义数据格式需要指定三个属性：列分隔符（通常为空格、</span><span style="color:rgb(51,51,51);">”\t”</span><span style="color:rgb(51,51,51);">、</span><span style="color:rgb(51,51,51);">”\x001″</span><span style="color:rgb(51,51,51);">）、行分隔符（</span><span style="color:rgb(51,51,51);">”\n”</span><span style="color:rgb(51,51,51);">）以及读取文件数据的方法（</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">中默认有三个文件格式</span><span style="color:rgb(51,51,51);">TextFile</span><span style="color:rgb(51,51,51);">，</span><span style="color:rgb(51,51,51);">SequenceFile</span><span style="color:rgb(51,51,51);">以及</span><span style="color:rgb(51,51,51);"> RCFile</span><span style="color:rgb(51,51,51);">）。由于在加载数据的过程中，不需要从用户数据格式到</span><span style="color:rgb(51,51,51);"> Hive</span><span style="color:rgb(51,51,51);">定义的数据格式的转换，因此，</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">在加载的过程中不会对数据本身进行任何修改，而只是将数据内容复制或者移动到相应的</span><span style="color:rgb(51,51,51);"> HDFS</span><span style="color:rgb(51,51,51);">目录中。而在数据库中，不同的数据库有不同的存储引擎，定义了自己的数据格式。所有数据都会按照一定的组织存储，因此，数据库加载数据的过程会比较耗时。</span></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);"><br><br><span>4.</span></span><span><span style="font-weight:400;color:rgb(51,51,51);">数据更新</span></span></span><span style="color:rgb(51,51,51);"><br></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);">由于</span><span style="color:rgb(51,51,51);"> Hive</span><span style="color:rgb(51,51,51);">是针对数据仓库应用设计的，而数据仓库的内容是读多写少的。因此，</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">中不支持对数据的改写和添加，所有的数据都是在加载的时候中确定好的。而数据库中的数据通常是需要经常进行修改的，因此可以使用</span><span style="color:rgb(51,51,51);"> INSERT
 INTO ...  VALUES</span><span style="color:rgb(51,51,51);">添加数据，使用</span><span style="color:rgb(51,51,51);"> UPDATE ... SET</span><span style="color:rgb(51,51,51);">修改数据。</span></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);"><br><br><span>5.</span></span><span><span style="font-weight:400;color:rgb(51,51,51);">索引</span></span></span><span style="color:rgb(51,51,51);"><br></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);">之前已经说过，</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">在加载数据的过程中不会对数据进行任何处理，甚至不会对数据进行扫描，因此也没有对数据中的某些</span><span style="color:rgb(51,51,51);">Key</span><span style="color:rgb(51,51,51);">建立索引。</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">要访问数据中满足条件的特定值时，需要暴力扫描整个数据，因此访问延迟较高。由于</span><span style="color:rgb(51,51,51);"> MapReduce</span><span style="color:rgb(51,51,51);">的引入，</span><span style="color:rgb(51,51,51);"> Hive</span><span style="color:rgb(51,51,51);">可以并行访问数据，因此即使没有索引，对于大数据量的访问，</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">仍然可以体现出优势。数据库中，通常会针对一个或者几个列建立索引，因此对于少量的特定条件的数据的访问，数据库可以有很高的效率，较低的延迟。由于数据的访问延迟较高，决定了</span><span style="color:rgb(51,51,51);"> Hive</span><span style="color:rgb(51,51,51);">不适合在线数据查询。</span></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);"><br><br><span>6.</span></span><span><span style="font-weight:400;color:rgb(51,51,51);">执行</span></span></span><span style="color:rgb(51,51,51);"><br><span style="font-size:14px;">Hive </span></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);">中大多数查询的执行是通过</span><span style="color:rgb(51,51,51);"> Hadoop</span><span style="color:rgb(51,51,51);">提供的</span><span style="color:rgb(51,51,51);"> MapReduce</span><span style="color:rgb(51,51,51);">来实现的（类似</span><span style="color:rgb(51,51,51);"> select
 * from tbl</span><span style="color:rgb(51,51,51);">的查询不需要</span><span style="color:rgb(51,51,51);">MapReduce</span><span style="color:rgb(51,51,51);">）。而数据库通常有自己的执行引擎。</span></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);"><br><br><span>7.</span></span><span><span style="font-weight:400;color:rgb(51,51,51);">执行延迟</span></span></span><span style="color:rgb(51,51,51);"><br></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);">之前提到，</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">在查询数据的时候，由于没有索引，需要扫描整个表，因此延迟较高。另外一个导致</span><span style="color:rgb(51,51,51);"> Hive</span><span style="color:rgb(51,51,51);">执行延迟高的因素是</span><span style="color:rgb(51,51,51);">MapReduce</span><span style="color:rgb(51,51,51);">框架。由于</span><span style="color:rgb(51,51,51);"> MapReduce</span><span style="color:rgb(51,51,51);">本身具有较高的延迟，因此在利用</span><span style="color:rgb(51,51,51);"> MapReduce</span><span style="color:rgb(51,51,51);">执行</span><span style="color:rgb(51,51,51);"> Hive </span><span style="color:rgb(51,51,51);">查询时，也会有较高的延迟。相对的，数据库的执行延迟较低。当然，这个低是有条件的，即数据规模较小，当数据规模大到超过数据库的处理能力的时候，</span><span style="color:rgb(51,51,51);">Hive</span><span style="color:rgb(51,51,51);">的并行计算显然能体现出优势。</span></span><span style="color:rgb(51,51,51);"><br><br><span><span style="font-weight:400;font-size:14px;">8.</span></span></span><span><span style="font-weight:400;color:rgb(51,51,51);"><span style="font-size:14px;">可扩展性</span></span></span><span style="color:rgb(51,51,51);"><br></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);">由于</span><span style="color:rgb(51,51,51);"> Hive</span><span style="color:rgb(51,51,51);">是建立在</span><span style="color:rgb(51,51,51);"> Hadoop</span><span style="color:rgb(51,51,51);">之上的，因此</span><span style="color:rgb(51,51,51);"> Hive</span><span style="color:rgb(51,51,51);">的可扩展性是和</span><span style="color:rgb(51,51,51);"> Hadoop</span><span style="color:rgb(51,51,51);">的可扩展性是一致的。而数据库由于</span><span style="color:rgb(51,51,51);"> ACID</span><span style="color:rgb(51,51,51);">语义的严格限制，扩展行非常有限。目前最先进的并行数据库</span><span style="color:rgb(51,51,51);"> Oracle</span><span style="color:rgb(51,51,51);">在理论上的扩展能力也只有</span><span style="color:rgb(51,51,51);"> 100</span><span style="color:rgb(51,51,51);">台左右。</span></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);"><br><br><span>9.</span></span><span><span style="font-weight:400;color:rgb(51,51,51);">数据规模</span></span></span><span style="color:rgb(51,51,51);"><br></span><span style="font-size:14px;"><span style="color:rgb(51,51,51);">由于</span><span style="color:rgb(51,51,51);"> Hive</span><span style="color:rgb(51,51,51);">建立在集群上并可以利用</span><span style="color:rgb(51,51,51);"> MapReduce</span><span style="color:rgb(51,51,51);">进行并行计算，因此可以支持很大规模的数据；对应的，数据库可以支持的数据规模较小。</span></span></p>
            </div>
                </div>