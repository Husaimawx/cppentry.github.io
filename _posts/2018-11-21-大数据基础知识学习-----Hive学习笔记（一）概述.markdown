---
layout:     post
title:      大数据基础知识学习-----Hive学习笔记（一）概述
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/qq_27922023/article/details/80626175				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h1 id="hive基本概念">Hive基本概念</h1>



<h2 id="hive概述">Hive概述</h2>

<ul>
<li>Hive：由Facebook开源用于解决海量结构化日志的数据统计</li>
<li>Hive是基于Hadoop的一个数据仓库工具，可以将结构化的数据文件映射为一张表，并提供类SQL查询功能</li>
<li><code>本质是：将HQL转化成MapReduce程序</code> <br>
<ul><li>Hive处理的数据存储在HDFS</li>
<li>Hive分析数据底层的实现是MapReduce</li>
<li>执行程序运行在YARN上</li></ul></li>
</ul>



<h2 id="hive的优缺点">Hive的优缺点</h2>

<p><code>优点</code></p>

<ul>
<li>操作接口采用类SQL语法，提供快速开发的能力，简单、容易上手</li>
<li>避免了去写MapReduce，减少开发人员的学习成本</li>
<li><code>Hive的执行延迟比较高，因此Hive常用于数据分析，对实时性要求不高的场合</code></li>
<li><code>Hive优势在于处理大数据，对于处理小数据没有优势，因为Hive的执行延迟比较高</code></li>
<li>Hive支持用户自定义函数，用户可以根据自己的需求来实现自己的函数</li>
</ul>

<p><code>缺点</code></p>

<ul>
<li>Hive的HQL表达能力有限 <br>
<ul><li>迭代式算法无法表达</li>
<li>数据挖掘方面不擅长</li></ul></li>
<li>Hive的效率比较低 <br>
<ul><li>Hive自动生成的MapReduce作业，通常情况下不够智能化</li>
<li>Hive调优比较困难，粒度较粗</li></ul></li>
</ul>



<h2 id="hive架构原理">Hive架构原理</h2>

<p><img src="https://img-blog.csdn.net/20180608173536835?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI3OTIyMDIz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述" title=""></p>

<p>Hive通过给用户提供的一系列交互接口，接收到用户的指令(SQL)，使用自己的Driver，结合元数据(MetaStore)，将这些指令翻译成MapReduce，提交到Hadoop中执行，最后，将执行返回的结果输出到用户交互接口。</p>

<ul>
<li><code>用户接口：Client</code>：CLI（hive shell）、JDBC/ODBC(java访问hive)、WEBUI（浏览器访问hive）</li>
<li><code>元数据：Metastore： <br>
&lt;ul&gt;&lt;li&gt;元数据包括：表名、表所属的数据库（默认是default）、表的拥有者、列/分区字段、表的类型（是否是外部表）、表的数据所在目录等；&lt;/li&gt; <br>
&lt;li&gt;</code>默认存储在自带的derby数据库中，推荐使用MySQL存储Metastore`</li></ul>
<li><code>Hadoop</code>：使用HDFS进行存储，使用MapReduce进行计算</li>
<li><code>驱动器：Driver</code>： <br>
<ul><li>解析器（SQL Parser）：将SQL字符串转换成抽象语法树AST，这一步一般都用第三方工具库完成，比如antlr；对AST进行语法分析，比如表是否存在、字段是否存在、SQL语义是否有误。</li>
<li>编译器（Physical Plan）：将AST编译生成逻辑执行计划</li>
<li>优化器（Query Optimizer）：对逻辑执行计划进行优化</li>
<li>执行器（Execution）：把逻辑执行计划转换成可以运行的物理计划。对于Hive来说，就是MR/Spark。</li></ul></li>


<h2 id="hive和数据库比较">Hive和数据库比较</h2>

<p>由于 Hive 采用了类似SQL 的查询语言 HQL(Hive Query Language)，因此很容易将 Hive 理解为数据库。其实从结构上来看，Hive 和数据库除了拥有类似的查询语言，再无类似之处。本文将从多个方面来阐述 Hive 和数据库的差异。数据库可以用在 Online 的应用中，但是Hive 是为数据仓库而设计的，清楚这一点，有助于从应用角度理解 Hive 的特性。</p>

<p><code>查询语言</code></p>

<p>由于SQL被广泛的应用在数据仓库中，因此，专门针对Hive的特性设计了类SQL的查询语言HQL。熟悉SQL开发的开发者可以很方便的使用Hive进行开发。</p>

<p><code>数据存储位置</code></p>

<p>Hive 是建立在 Hadoop 之上的，所有 Hive 的数据都是存储在 HDFS 中的。而数据库则可以将数据保存在块设备或者本地文件系统中。</p>

<p><code>数据更新</code></p>

<p>由于Hive是针对数据仓库应用设计的，而数据仓库的内容是读多写少的。因此，Hive中不支持对数据的改写和添加，所有的数据都是在加载的时候确定好的。而数据库中的数据通常是需要经常进行修改的，因此可以使用 INSERT INTO …  VALUES 添加数据，使用 UPDATE … SET修改数据。</p>

<p><code>索引</code></p>

<p>Hive在加载数据的过程中不会对数据进行任何处理，甚至不会对数据进行扫描，因此也没有对数据中的某些Key建立索引。Hive要访问数据中满足条件的特定值时，需要暴力扫描整个数据，因此访问延迟较高。由于 MapReduce 的引入， Hive 可以并行访问数据，因此即使没有索引，对于大数据量的访问，Hive 仍然可以体现出优势。数据库中，通常会针对一个或者几个列建立索引，因此对于少量的特定条件的数据的访问，数据库可以有很高的效率，较低的延迟。由于数据的访问延迟较高，决定了 Hive 不适合在线数据查询。</p>

<p><code>执行</code></p>

<p>Hive中大多数查询的执行是通过 Hadoop 提供的 MapReduce 来实现的。而数据库通常有自己的执行引擎。</p>

<p><code>执行延迟</code></p>

<p>Hive 在查询数据的时候，由于没有索引，需要扫描整个表，因此延迟较高。另外一个导致 Hive 执行延迟高的因素是 MapReduce框架。由于MapReduce 本身具有较高的延迟，因此在利用MapReduce 执行Hive查询时，也会有较高的延迟。相对的，数据库的执行延迟较低。当然，这个低是有条件的，即数据规模较小，当数据规模大到超过数据库的处理能力的时候，Hive的并行计算显然能体现出优势。</p>

<p><code>可扩展性</code></p>

<p>由于Hive是建立在Hadoop之上的，因此Hive的可扩展性是和Hadoop的可扩展性是一致的（世界上最大的Hadoop 集群在 Yahoo!，2009年的规模在4000 台节点左右）。而数据库由于 ACID 语义的严格限制，扩展行非常有限。目前最先进的并行数据库 Oracle 在理论上的扩展能力也只有100台左右。</p>

<p><code>数据规模</code></p>

<p>由于Hive建立在集群上并可以利用MapReduce进行并行计算，因此可以支持很大规模的数据；对应的，数据库可以支持的数据规模较小。</p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>