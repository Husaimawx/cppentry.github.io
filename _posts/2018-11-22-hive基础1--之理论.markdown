---
layout:     post
title:      hive基础1--之理论
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <h2>                                               hive基础理论</h2>

<hr><h3>1.什么是hive </h3>

<ol><li>hive是同一个SQL解析引擎，目的是将SQL转义成MR，其本质就是MR。</li>
	<li>hive本身不存储数据！它的数据存储在HDFS上，hive中有表定义，这个纯逻辑表，定义表的元数据。本质就是hadoop的目录/文件达到了元数据与数据存储分离的目的。</li>
	<li>hive的内容是读多写少，不支持多少对数据的改写和删除。</li>
	<li>hive的SQL与标准数据库的差别
	<table border="1" cellpadding="1" cellspacing="1" style="width:500px;"><tbody><tr><td style="width:132px;"> </td>
				<td style="width:229px;">HQL</td>
				<td>SQL</td>
			</tr><tr><td style="width:132px;">数据存储</td>
				<td style="width:229px;">HDFS，HBASE</td>
				<td>Local FS</td>
			</tr><tr><td style="width:132px;">数据格式</td>
				<td style="width:229px;">用户自定义</td>
				<td>系统决定</td>
			</tr><tr><td style="width:132px;">数据更新</td>
				<td style="width:229px;">不支持数据更新</td>
				<td>支持</td>
			</tr><tr><td style="width:132px;">索引</td>
				<td style="width:229px;">有（0.8之后有）</td>
				<td>有</td>
			</tr><tr><td style="width:132px;">执行</td>
				<td style="width:229px;">MR</td>
				<td>Executor</td>
			</tr><tr><td style="width:132px;">执行延迟</td>
				<td style="width:229px;">高</td>
				<td>低</td>
			</tr><tr><td style="width:132px;">可扩展性</td>
				<td style="width:229px;">高（UDF,UDAF,UDTF）</td>
				<td>低</td>
			</tr><tr><td style="width:132px;">数据规模</td>
				<td style="width:229px;">大（数据大于TB）</td>
				<td>小</td>
			</tr><tr><td style="width:132px;">数据检查</td>
				<td style="width:229px;">读时模式</td>
				<td>写时模式</td>
			</tr></tbody></table><p> </p>
	</li>
</ol><h3>2.引入hive原因</h3>

<p>    通过上述的定义，我们基本可以梳理出引入hive的原因</p>

<p>     1.对存在HDFS上的文件我们要进行查询处理的时候，需要手工写一堆的MR代码。但是引入hive后可以通过SQL与转译成MR， 缩短了开发周期。</p>

<p>    2.对于统计任务，只能有懂MR的程序员才能搞定。引入hive，只要会SQL就可以搞定。</p>

<h3>3.hive的体系架构</h3>

<p>     1.用户接口：client,通过该接口进行SQL交互</p>

<p>     2.语句转化：driver,是hive的核心，将用户的查询和MR Task进行转换并执行</p>

<p>     3.数据存储：实际存储数据的时HDFS   ，元数据默认存储在Derby，但是一般用在mysql进行存储</p>

<h3>4.数据管理：</h3>

<p>1.table:默认表，内部表</p>

<p>2.external table:外部表</p>

<p>3.partiton:用户辅助查询表</p>

<p>4.bucket：采用，控制reduce的个数</p>

<p> </p>            </div>
                </div>