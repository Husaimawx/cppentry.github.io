---
layout:     post
title:      Hive学习笔记 --- 深入理解 HIVE 个各种存储模式
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：学习交流为主，未经博主同意禁止转载，禁止用于商用。					https://blog.csdn.net/u012965373/article/details/52690424				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
Hive的数据分为表数据和元数据，表数据是Hive中表格(table)具有的数据;而元数据是用来存储表的名字，表的列和分区及其属性，表的属性(是否为外部表等)，表的数据所在目录等。下面分别来介绍。</p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
<strong>一、Hive的数据存储</strong></p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
在让你真正明白什么是hive 博文中我们提到Hive是基于Hadoop分布式文件系统的，它的数据存储在Hadoop分布式文件系统中。Hive本身是没有专门的数据存储格式，也没有为数据建立索引，只需要在创建表的时候告诉Hive数据中的列分隔符和行分隔符，Hive就可以解析数据。所以往Hive表里面导入数据只是简单的将数据移动到表所在的目录中(如果数据是在HDFS上;但如果数据是在本地文件系统中，那么是将数据复制到表所在的目录中)。</p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
Hive中主要包含以下几种数据模型：Table(表)，External Table(外部表)，Partition(分区)，Bucket(桶)(本博客会专门写几篇博文来介绍分区和桶)。</p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
<strong>1、表：</strong>Hive中的表和关系型数据库中的表在概念上很类似，每个表在HDFS中都有相应的目录用来存储表的数据，这个目录可以通过${HIVE_HOME}/conf/hive-site.xml配置文件中的 hive.metastore.warehouse.dir属性来配置，这个属性默认的值是/user/hive/warehouse(这个目录在 HDFS上)，我们可以根据实际的情况来修改这个配置。如果我有一个表wyp，那么在HDFS中会创建/user/hive/warehouse/wyp
 目录(这里假定hive.metastore.warehouse.dir配置为/user/hive/warehouse);wyp表所有的数据都存放在这个目录中。这个例外是外部表。</p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
<strong>2、外部表：</strong>Hive中的外部表和表很类似，但是其数据不是放在自己表所属的目录中，而是存放到别处，这样的好处是如果你要删除这个外部表，该外部表所指向的数据是不会被删除的，它只会删除外部表对应的元数据;而如果你要删除表，该表对应的所有数据包括元数据都会被删除。</p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
<strong>3、分区：</strong>在Hive中，表的每一个分区对应表下的相应目录，所有分区的数据都是存储在对应的目录中。比如wyp 表有dt和city两个分区，则对应dt=20131218,city=BJ对应表的目录为/user/hive/warehouse /dt=20131218/city=BJ，所有属于这个分区的数据都存放在这个目录中。</p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
<strong>4、桶：</strong>对指定的列计算其hash，根据hash值切分数据，目的是为了并行，每一个桶对应一个文件(注意和分区的区别)。比如将wyp表id列分散至16个桶中，首先对id列的值计算hash，对应hash值为0和16的数据存储的HDFS目录为：/user /hive/warehouse/wyp/part-00000;而hash值为2的数据存储的HDFS 目录为：/user/hive/warehouse/wyp/part-00002。</p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
<br></p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
下面为抽象图：</p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
<img src="https://img-blog.csdn.net/20160928144618319?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
<br></p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
</p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
<strong>二、Hive的元数据</strong></p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
Hive中的元数据包括表的名字，表的列和分区及其属性，表的属性(是否为外部表等)，表的数据所在目录等。 由于Hive的元数据需要不断的更新、修改，而HDFS系统中的文件是多读少改的，这显然不能将Hive的元数据存储在HDFS中。目前Hive将元数据存储在数据库中，如Mysql、Derby中。我们可以通过以下的配置来修改Hive元数据的存储方式</p>
<p style="color:rgb(51,51,51);font-family:'Microsoft Yahei';font-size:16px;text-align:justify;line-height:30px;">
&lt;property&gt; <br>
  &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt; <br>
  &lt;value&gt;jdbc:mysql://localhost:3306/hive_hdp?characterEncoding=UTF-8 <br>
                    &amp;createDatabaseIfNotExist=true&lt;/value&gt; <br>
  &lt;description&gt;JDBC connect string for a JDBC metastore&lt;/description&gt; <br>
&lt;/property&gt; <br>
  <br>
&lt;property&gt; <br>
  &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt; <br>
  &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt; <br>
  &lt;description&gt;Driver class name for a JDBC metastore&lt;/description&gt; <br>
&lt;/property&gt; <br>
  <br>
&lt;property&gt; <br>
  &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt; <br>
  &lt;value&gt;root&lt;/value&gt; <br>
  &lt;description&gt;username to use against metastore database&lt;/description&gt; <br>
&lt;/property&gt; <br>
  <br>
&lt;property&gt; <br>
  &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt; <br>
  &lt;value&gt;123456&lt;/value&gt; <br>
  &lt;description&gt;password to use against metastore database&lt;/description&gt; <br>
&lt;/property&gt;<br></p>
            </div>
                </div>