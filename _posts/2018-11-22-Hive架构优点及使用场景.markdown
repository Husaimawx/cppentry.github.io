---
layout:     post
title:      Hive架构优点及使用场景
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p><a href="http://click.aliyun.com/m/1000005972/" rel="nofollow">原文链接</a></p><p></p><p class="blog-summary" style="background:rgb(249,249,249);font-size:12px;color:rgb(115,119,122);line-height:24px;text-align:left;font-family:PingFangSC, 'helvetica neue', 'hiragino sans gb', arial, 'microsoft yahei ui', 'microsoft yahei', simsun, sans-serif;"><span style="font-weight:700;color:rgb(55,61,65);">摘要：</span> 先阅读初识hive Hive在大数据生态环境中的位置 Hive架构图 client 三种访问方式 1、CLI(hive shell)、command line interface（命令行接口） 2、JDBC/ODBC(ja.</p><div class="content-detail markdown-body" style="line-height:32px;color:rgb(51,51,51);font-family:PingFangSC, 'helvetica neue', 'hiragino sans gb', arial, 'microsoft yahei ui', 'microsoft yahei', simsun, sans-serif;"><p>先阅读<a href="https://www.jianshu.com/p/9272ef08c3b9" rel="nofollow" style="color:rgb(51,102,255);">初识hive</a></p><h3 id="1" style="font-family:inherit;font-weight:500;line-height:1.7;color:rgb(0,0,0);">Hive在大数据生态环境中的位置</h3><img src="https://upload-images.jianshu.io/upload_images/4176128-09f646f6ecc480d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt="700" style="border:0px;vertical-align:middle;"><h3 id="2" style="font-family:inherit;font-weight:500;line-height:1.7;color:rgb(0,0,0);">Hive架构图</h3><img src="https://upload-images.jianshu.io/upload_images/4176128-2961e1ef18c78688.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt="700" style="border:0px;vertical-align:middle;"><ul style="margin-left:20px;list-style:none;text-align:center;"><li style="margin-left:0px;line-height:30px;"><p style="text-align:left;">client 三种访问方式</p><div style="text-align:left;">1、CLI(hive shell)、command line interface（命令行接口）</div><div style="text-align:left;">2、JDBC/ODBC(java访问hive)，</div><div style="text-align:left;">3、WEBUI(浏览器访问hive)</div></li><li style="margin-left:0px;line-height:30px;"><p></p><div style="text-align:left;">Meta store 元数据存储</div><div style="text-align:left;">元数据包括：表名、表所属的数据库（默认是default）、表的拥有者、列、分区字段、表的类型（是否是外部表）、表的数据所在的目录等；</div><div style="text-align:left;">默认存储在自带的derby数据库中，推荐使用采用<span style="font-weight:700;">MySQL存储Metastore；</span></div></li><li style="margin-left:0px;line-height:30px;"><p></p><div style="text-align:left;">Driver</div><div style="text-align:left;">包含：解析器、编译器、优化器、执行器；</div><div style="text-align:left;">1、解析器：将SQL字符串转换成抽象语法树AST，这一步一般都用第三方工 具库完成，比如antlr；对AST进行语法分析，比如表是否存在、字段是否 存在、SQL语义是否有误(比如select中被判定为聚合的字段在group by中是 否有出现)；</div><div style="text-align:left;">2、编译器：将AST编译生成逻辑执行计划； 优化器：对逻辑执行计划进行优化；</div><div style="text-align:left;">3、执行器：把逻辑执行计划转换成可以运行的物理计划。对于Hive来说，就</div><div style="text-align:left;">是MR/TEZ/Spark；</div></li><li style="margin-left:0px;line-height:30px;"><p></p><div style="text-align:left;">举例 select substring(ip,0,4) ip_prex from bg_log ;</div><div style="text-align:left;">执行顺序：首先在metastore查询--&gt;sql解析--&gt;查询优化---&gt;物理计划--&gt;执行MapReduce</div></li></ul><h3 id="3" style="font-family:inherit;font-weight:500;line-height:1.7;color:rgb(0,0,0);">优点及使用场景</h3><ul style="margin-left:20px;list-style:none;"><li style="margin-left:0px;line-height:30px;">操作接口采用类SQL语法，提供快速开发的能力(简单、容易上手)；</li><li style="margin-left:0px;line-height:30px;">避免了去写MapReduce，减少开发人员的学习成本；</li><li style="margin-left:0px;line-height:30px;">统一的元数据管理，可与impala/spark等共享元数据；</li><li style="margin-left:0px;line-height:30px;">易扩展(HDFS+MapReduce：可以扩展集群规模；支持自定义函数)；</li><li style="margin-left:0px;line-height:30px;">数据的离线处理；比如：日志分析，海量结构化数据离线分析…</li><li style="margin-left:0px;line-height:30px;">Hive的执行延迟比较高，因此hive常用于数据分析的，对实时性要求 不高的场合；</li><li style="margin-left:0px;line-height:30px;">Hive优势在于处理大数据，对于处理小数据没有优势，因为Hive的执 行延迟比较高。</li></ul></div><br>            </div>
                </div>