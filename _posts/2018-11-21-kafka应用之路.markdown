---
layout:     post
title:      kafka应用之路
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <span style="font-size:16px;">  1、在技术选型上，为什么要使用kafka，不使用rocketmq？<br></span><p><span style="font-size:16px;">kafka是分布式日志存储系统.</span></p><p>1）kafka更容易大数据系统结合，例如我们用到的storm。</p><p>2）kafka比较热门，文档比较全</p><p>3）能够做到真正的保证数据不会丢失，不会重复，即使在节点down掉的情况下。</p><p>4）容易和我们的elk系统结合</p><p>2、介绍kafka</p><p>3、kafka安装</p><p>4、kafka使用（kafka的实践）</p><p><br></p><p>二、需要注意的问题：</p><p>1、kafka的cons<span style="font-size:14px;">umer数量不能超过partition的数量；另外如果有同一个groupid的consumer去消费消息，这个groupid的消息就会被消费掉从而读不到消息。</span></p><p><span style="font-size:14px;">2、kafka可以持久化一段时间的数据，通过下面的参数设置。可以设置基于时间的，也可以设置基于文件大小的</span></p><p><img src="https://img-blog.csdn.net/20180622151155351?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZzdDQzODA2MDY4NA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""><br></p><p>3、<span style="color:rgb(57,57,57);font-family:verdana, 'ms song', Arial, Helvetica, sans-serif;text-align:left;background-color:rgb(255,255,255);"><span style="font-size:14px;">Kafka读取特定消息的时间复杂度为O(1)，即与文件大小无关，所以删除过期文件与提高Kafka性能无关。</span></span></p><p><span style="font-family:verdana, 'ms song', Arial, Helvetica, sans-serif;text-align:left;"><span style="font-size:14px;"><span style="color:#393939;background-color:rgb(255,255,255);">4、</span><span style="font-family:verdana, 'ms song', Arial, Helvetica, sans-serif;text-align:left;background-color:rgb(255,255,255);"><span style="color:#000000;">Kafka<a href="https://www.cnblogs.com/liuwei6/p/6900686.html" rel="nofollow">会为每一个Consumer Group保留一些metadata信息</a>——当前消费的消息的position，也即offset。这个offset由Consumer控制。正常情况下Consumer会在消费完一条消息后递增该offset。当然，Consumer也可将offset设成一个较小的值，重新消费一些消息。因为offet由Consumer控制，所以Kafka broker是无状态的，它不需要标记哪些消息被哪些消费过，也不需要通过broker去保证同一个Consumer Group只有一个Consumer能消费某一条消息，因此也就不需要锁机制，这也为Kafka的高吞吐率提供了有力保障。</span></span></span></span></p><p><span style="font-family:verdana, 'ms song', Arial, Helvetica, sans-serif;text-align:left;"><span style="font-size:14px;"><span style="font-family:verdana, 'ms song', Arial, Helvetica, sans-serif;text-align:left;background-color:rgb(255,255,255);"><span style="color:#000000;">5、<a href="http://orchome.com/22" rel="nofollow">kafka使用默认的副本因子是1，也就是没有副本</a>，因为：</span></span></span></span></p><div>在kafka的开发者看来副本似乎是一个附加的东西，没有大量的使用，这有很大的缺点：slave不活跃，吞吐量受到严重影响，它需要的精确的手动配置等<br><br><div></div></div><p>三、遇到的问题</p><p>1、无法发送或者消费消息</p><p><span style="background-color:rgb(255,255,255);"><a href="https://blog.csdn.net/fst438060684/article/details/80662305" rel="nofollow">WARN [Producer clientId=console-producer] Connection to node -1 could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)</a></span><br></p><p><br></p>            </div>
                </div>