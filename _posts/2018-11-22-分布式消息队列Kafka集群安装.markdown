---
layout:     post
title:      分布式消息队列Kafka集群安装
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<span style="color:rgb(90,90,90);font-family:'microsoft yahei';font-size:17px;line-height:28.05px;"></span>
<div class="article_title" style="font-size:20px;line-height:30px;font-family:'Microsoft YaHei';">
 
<h1 style="display:inline;font-weight:normal;font-size:20px;vertical-align:middle;">
<span class="link_title"><a href="http://blog.csdn.net/21aspnet/article/details/19325373" rel="nofollow" style="color:rgb(51,51,51);text-decoration:none;">分布式消息队列Kafka集群安装</a></span></h1>
</div>
<div id="article_content" class="article_content" style="font-size:14px;line-height:26px;font-family:Arial;">
<p>
<a href="http://incubator.apache.org/kafka/" rel="nofollow" style="color:rgb(255,153,0);text-decoration:none;">kafka</a>是LinkedIn开发并开源的一个分布式MQ系统，现在是Apache的一个孵化项目。在它的主页描述kafka为一个高吞吐量的分布式（能将消息分散到不同的节点上）MQ。在这片<a href="http://blog.linkedin.com/2011/01/11/open-source-linkedin-kafka/" rel="nofollow" style="color:rgb(255,153,0);text-decoration:none;">博文</a>中，作者简单提到了开发kafka而不选择已有MQ系统的原因。两个原因：性能和扩展性。Kafka仅仅由7000行<a href="http://lib.csdn.net/base/scala" rel="nofollow" class="replace_word" title="Scala知识库" style="color:rgb(223,52,52);text-decoration:none;font-weight:bold;">Scala</a>编写，据了解，<strong>Kafka每秒可以生产约25万消息（50
 MB），每秒处理55万消息（110 MB）。</strong></p>
<p>
<br></p>
<p>
Kafka版本：0.8.0<br></p>
<p>
约定：安装3台虚拟机</p>
<p>
官网：<a href="http://kafka.apache.org/" rel="nofollow" style="color:rgb(255,153,0);text-decoration:none;">http://kafka.apache.org/</a><br>
官方文档：<a href="http://kafka.apache.org/documentation.html#quickstart" rel="nofollow" style="color:rgb(255,153,0);text-decoration:none;">http://kafka.apache.org/documentation.html#quickstart</a></p>
<p>
<strong><br></strong></p>
<p>
<strong>下载解压</strong></p>
<p>
# <span style="background-color:rgb(255,255,0);">wget http://mirrors.hust.edu.cn/apache/kafka/0.8.0/kafka-0.8.0-src.tgz</span><br>
#<span style="background-color:rgb(255,255,0);"> tar xzf kafka-0.8.0-src.tgz</span><br>
# <span style="background-color:rgb(255,255,0);">cd kafka-0.8.0-src</span></p>
<p>
Kafka是用Scala写的，SBT是Simple Build Tool的简称，如果读者使用过Maven，那么可以简单将SBT看做是Scala世界的Maven，虽然二者各有优劣，但完成的工作基本是类似的。<br>
## Building it ##<br>
# <span style="background-color:rgb(255,255,0);">./sbt update</span><br>
# <span style="background-color:rgb(255,255,0);">./sbt package</span><br>
# <span style="background-color:rgb(255,255,0);">./sbt assembly-package-dependency</span></p>
<p>
以上每一步完成就会提醒[Success]</p>
<p>
例如：[success] Total time: 21 s, completed 2014-2-11 10:29:55<br></p>
<p>
<img alt="" src="https://img-blog.csdn.net/20140211103712781?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdW5peDIx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="border:none;"></p>
<p>
<br></p>
<p>
集群环境需要修改配置文件</p>
<p>
#<span style="background-color:rgb(255,255,0);"> vim config/server.properties</span></p>
<p>
brokerid：这个每个server（broker）必须唯一，写数字</p>
<p>
hostname：这个也是唯一的，写服务器IP即可</p>
<p>
</p>
<div class="dp-highlighter bg_plain" style="font-family:Consolas, 'Courier New', Courier, mono, serif;font-size:12px;background-color:rgb(231,229,220);">
<div class="bar">
<div class="tools" style="font-size:9px;line-height:normal;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:#C0C0C0;border-left-width:3px;border-left-style:solid;border-left-color:rgb(108,226,108);background-color:rgb(248,248,248);">
<strong>[plain]</strong> <a href="http://blog.csdn.net/21aspnet/article/details/19325373#" rel="nofollow" class="ViewSource" title="view plain" style="color:rgb(160,160,160);text-decoration:none;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;background-color:inherit;">view
 plain</a><span> <a href="http://blog.csdn.net/21aspnet/article/details/19325373#" rel="nofollow" class="CopyToClipboard" title="copy" style="color:rgb(160,160,160);text-decoration:none;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;background-color:inherit;">copy</a></span>
<div style="width:18px;z-index:99;">
</div>
<span> </span><span class="tracking-ad"><a href="https://code.csdn.net/snippets/183474" rel="nofollow" title="在CODE上查看代码片" style="color:rgb(160,160,160);text-decoration:none;border:none;font-size:9px;display:inline-block;width:16px;background-color:inherit;"><img src="https://code.csdn.net/assets/CODE_ico.png" width="12" height="12" alt="在CODE上查看代码片" style="border:none;"></a></span><span class="tracking-ad"><a href="https://code.csdn.net/snippets/183474/fork" rel="nofollow" title="派生到我的代码片" style="color:rgb(160,160,160);text-decoration:none;border:none;font-size:9px;display:inline-block;width:16px;background-color:inherit;"><img src="https://code.csdn.net/assets/ico_fork.svg" width="12" height="12" alt="派生到我的代码片" style="border:none;"></a></span></div>
</div>
<ol start="1" style="border:none;color:rgb(92,92,92);background-color:rgb(255,255,255);"><li class="alt" style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;line-height:18px;">
<span style="border:none;color:#000000;background-color:inherit;"><span style="border:none;background-color:inherit;">############################# Server Basics #############################  </span></span></li><li style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;line-height:18px;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;line-height:18px;">
<span style="border:none;color:#000000;background-color:inherit;"># The id of the broker. This must be set to a unique integer for each broker.  </span></li><li style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;line-height:18px;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">broker.id=3  </span></li><li class="alt" style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;line-height:18px;">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;line-height:18px;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">############################# Socket Server Settings #############################  </span></li><li class="alt" style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;line-height:18px;">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;line-height:18px;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;"># The port the socket server listens on  </span></li><li class="alt" style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;line-height:18px;">
<span style="border:none;color:#000000;background-color:inherit;">port=9092  </span></li><li style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;line-height:18px;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;line-height:18px;">
<span style="border:none;color:#000000;background-color:inherit;"># Hostname the broker will bind to and advertise to producers and consumers.  </span></li><li style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;line-height:18px;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;"># If not set, the server will bind to all interfaces and advertise the value returned from  </span></li><li class="alt" style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;line-height:18px;">
<span style="border:none;color:#000000;background-color:inherit;"># from java.net.InetAddress.getCanonicalHostName().  </span></li><li style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;line-height:18px;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#host.name=localhost  </span></li><li class="alt" style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;line-height:18px;">
<span style="border:none;color:#000000;background-color:inherit;">host.name=192.168.2.111  </span></li></ol></div>
<p>
还有就是zookeeper.connect也要配置</p>
<p>
</p>
<div class="dp-highlighter bg_plain" style="font-family:Consolas, 'Courier New', Courier, mono, serif;font-size:12px;background-color:rgb(231,229,220);">
<div class="bar">
<div class="tools" style="font-size:9px;line-height:normal;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:#C0C0C0;border-left-width:3px;border-left-style:solid;border-left-color:rgb(108,226,108);background-color:rgb(248,248,248);">
<strong>[plain]</strong> <a href="http://blog.csdn.net/21aspnet/article/details/19325373#" rel="nofollow" class="ViewSource" title="view plain" style="color:rgb(160,160,160);text-decoration:none;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;background-color:inherit;">view
 plain</a><span> <a href="http://blog.csdn.net/21aspnet/article/details/19325373#" rel="nofollow" class="CopyToClipboard" title="copy" style="color:rgb(160,160,160);text-decoration:none;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;background-color:inherit;">copy</a></span>
<div style="width:18px;z-index:99;">
</div>
<span> </span><span class="tracking-ad"><a href="https://code.csdn.net/snippets/183474" rel="nofollow" title="在CODE上查看代码片" style="color:rgb(160,160,160);text-decoration:none;border:none;font-size:9px;display:inline-block;width:16px;background-color:inherit;"><img src="https://code.csdn.net/assets/CODE_ico.png" width="12" height="12" alt="在CODE上查看代码片" style="border:none;"></a></span><span class="tracking-ad"><a href="https://code.csdn.net/snippets/183474/fork" rel="nofollow" title="派生到我的代码片" style="color:rgb(160,160,160);text-decoration:none;border:none;font-size:9px;display:inline-block;width:16px;background-color:inherit;"><img src="https://code.csdn.net/assets/ico_fork.svg" width="12" height="12" alt="派生到我的代码片" style="border:none;"></a></span></div>
</div>
<ol start="1" style="border:none;color:rgb(92,92,92);background-color:rgb(255,255,255);"><li class="alt" style="border-left-width:3px;border-style:none none none solid;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;line-height:18px;">
<span style="border:none;color:#000000;background-color:inherit;"><span style="border:none;background-color:inherit;">zookeeper.connect=192.168.19.218:2181,192.168.19.217:2181,192.168.19.214:2181  </span></span></li></ol></div>
关于zookeeper的安装可以参考此文：<a href="http://blog.csdn.net/unix21/article/details/18990123" rel="nofollow" style="color:rgb(255,153,0);text-decoration:none;">ZooKeeper集群环境安装与配置</a><br><p>
</p>
其他默认配置即可。
<p>
</p>
<p>
<br></p>
<p>
<strong>启动Kafka服务</strong></p>
<p>
# <span style="background-color:rgb(255,255,0);">/usr/kafka-0.8.0-src/bin/kafka-server-start.sh /usr/kafka-0.8.0-src/config/server.properties</span></p>
<p>
<strong><img alt="" src="https://img-blog.csdn.net/20140211123300078?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdW5peDIx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="border:none;"></strong></p>
<p>
<strong>创建Topic</strong><br>
# <span style="background-color:rgb(255,255,0);">/usr/kafka-0.8.0-src/bin/kafka-create-topic.sh --zookeeper localhost:2181 --partition 1 --topic test</span><br><strong>查看Topic</strong><br>
# <span style="background-color:rgb(255,255,0);">/usr/kafka-0.8.0-src/bin/kafka-list-topic.sh --zookeeper localhost:2181</span><br>
输出：</p>
<p>
topic: test     partition: 0    leader: 1       replicas: 1     isr: 1<br></p>
<p>
<img alt="" src="https://img-blog.csdn.net/20140211123546265?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdW5peDIx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="border:none;"></p>
<p>
说明：<br>
partiton： partion id，由于此处只有一个partition，因此partition id 为0<br>
leader：当前负责读写的lead broker id<br>
relicas：当前partition的所有replication broker  list<br>
isr：relicas的子集，只包含出于活动状态的broker</p>
<p>
<br></p>
<p>
<strong>producer发送消息</strong><br>
# <span style="background-color:rgb(255,255,0);">/usr/kafka-0.8.0-src/bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test</span><br>
This is a message<br>
This is another message<br><br><strong>consumer接收消息</strong><br>
# <span style="background-color:rgb(255,255,0);">/usr/kafka-0.8.0-src/bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic test --from-beginning</span></p>
<p>
<br></p>
<p>
注意，如果上述命令不能发送接收消息说明没有配置host，可以直接用ip</p>
<p>
</p>
<p>
<strong>producer发送消息</strong><br>
# <span style="background-color:rgb(255,255,0);">/usr/kafka-0.8.0-src/bin/kafka-console-producer.sh --broker-list 192.168.19.218:9092 --topic test</span><br><img alt="" src="https://img-blog.csdn.net/20140211142709515?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdW5peDIx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="border:none;"><br><strong>consumer接收消息</strong><br>
# <span style="background-color:rgb(255,255,0);">/usr/kafka-0.8.0-src/bin/kafka-console-consumer.sh --zookeeper 192.168.19.218:2181 --topic test --from-beginning</span></p>
<p>
<img alt="" src="https://img-blog.csdn.net/20140211142721796?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdW5peDIx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="border:none;"></p>
<p>
如果要最新的数据，可以不带<span style="background-color:rgb(255,255,0);">--from-beginning</span>参数即可。</p>
<p>
# <span style="background-color:rgb(255,255,0);">/usr/kafka-0.8.0-src/bin/kafka-console-consumer.sh --zookeeper 192.168.19.218:2181 --topic test</span></p>
<p>
<br></p>
<p>
在kafka的核心思路中，不需要在内存里缓存数据，因为<a href="http://lib.csdn.net/base/operatingsystem" rel="nofollow" class="replace_word" title="操作系统知识库" style="color:rgb(223,52,52);text-decoration:none;font-weight:bold;">操作系统</a>的文件缓存已经足够完善和强大，只要不做随机写，顺序读写的性能是非常高效的。kafka的数据只会顺序append，数据的删除策略是累积到一定程度或者超过一定时间再删除。Kafka另一个独特的地方是将消费者信息保存在客户端而不是MQ服务器，这样服务器就不用记录消息的投递过程，每个客户端都自己知道自己下一次应该从什么地方什么位置读取消息，消息的投递过程也是采用客户端主动pull的模型，这样大大减轻了服务器的负担。Kafka还强调减少数据的序列化和拷贝开销，它会将一些消息组织成Message
 Set做批量存储和发送，并且客户端在pull数据的时候，尽量以zero-copy的方式传输，利用sendfile(对应<a href="http://lib.csdn.net/base/javaee" rel="nofollow" class="replace_word" title="Java EE知识库" style="color:rgb(223,52,52);text-decoration:none;font-weight:bold;">Java</a>里的FileChannel.transferTo/transferFrom)这样的高级IO函数来减少拷贝开销。可见，kafka是一个精心设计，特定于某些应用的MQ系统，这种偏向特定领域的MQ系统我估计会越来越多，垂直化的产品策略值的考虑。<br></p>
<p>
只要磁盘没有限制并且不出现损失，kafka可以存储相当长时间的消息（一周）。</p>
</div>
            </div>
                </div>