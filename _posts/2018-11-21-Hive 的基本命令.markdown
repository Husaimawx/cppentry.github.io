---
layout:     post
title:      Hive 的基本命令
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：闻道有先后，术业有专攻。					https://blog.csdn.net/wlk_328909605/article/details/82153176				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>如果Hive没有安装，可以看前一篇文章 <br>
1.启动Hive <br>
前台启动hive： <br>
<code>[root@hadoop-slave02 bin]# hiveserver2</code> <br>
后台启动hive：</p>



<pre class="prettyprint"><code class=" hljs perl">[root<span class="hljs-variable">@hadoop</span>-slave02 bin]<span class="hljs-comment"># nohup ./hiveserver2 &amp;</span>
[root<span class="hljs-variable">@hadoop</span>-slave02 bin]<span class="hljs-comment"># beeline</span>
beeline&gt;  !<span class="hljs-keyword">connect</span> jdbc:hive2:<span class="hljs-regexp">//hadoop</span>-slave02:<span class="hljs-number">10000</span></code></pre>

<p>或者启动的时候直接连接：</p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop</span>-slave02 bin]<span class="hljs-comment"># beeline -u jdbc:jive2://hadoop-slave02:10000 -n root</span></code></pre>

<p>2.hive创建数据库：</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> db_user;</span></code></pre>

<p>库建好之后会在hdfs的/user/hive/warehouse/下有一个新的文件夹db_user.db。 <br>
3.基本建表语句： <br>
这个是创建表的时候，hive会认为表数据文件中的字段分隔符是”,”。</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_user(id string,name string) 
<span class="hljs-keyword">row</span> format delimited fields terminated <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;</span></code></pre>

<p>4.创建外部表，外部表可以用户自己指定表的路径</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">create</span> <span class="hljs-keyword">external</span> <span class="hljs-keyword">table</span> t_user(id string,name string)
<span class="hljs-keyword">row</span> format delimited fields terminated <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>
location <span class="hljs-string">'/user/table'</span>;</span></code></pre>

<p>5.删除表 <br>
删除表的时候，注意是内部表还是外部表。 <br>
如果是内部表，删除表的时候会连着表中的数据删除，也会删除表的元数据，如果是外部表，指挥删除表的元数据，不会删除表中的数据，生产环境中大部分是外部表。</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> t_user;</span></code></pre>

<p>6.创建分区表 <br>
分区表的实质是：在表目录中为数据文件创建分区子目录，以便于在查询时，MR程序可以针对分区子目录中的数据进行处理，缩减读取数据的范围。</p>

<p>比如，网站每天产生的浏览记录，浏览记录应该建一个表来存放，但是，有时候，我们可能只需要对某一天的浏览记录进行分析 <br>
这时，就可以将这个表建为分区表，每天的数据导入其中的一个分区； <br>
当然，每日的分区目录，应该有一个目录名（分区字段） <br>
6.1 单个分区表</p>



<pre class="prettyprint"><code class=" hljs applescript">create table t_user(<span class="hljs-property">id</span> <span class="hljs-type">string</span>,<span class="hljs-property">name</span> <span class="hljs-type">string</span>,age <span class="hljs-type">string</span>)
partitioned <span class="hljs-keyword">by</span>(dt <span class="hljs-type">string</span>)
row format delimited fields terminated <span class="hljs-keyword">by</span> ',';</code></pre>

<p>向分区表中导入数据：</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">load</span> data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'/root/access.log.2017-08-04.log'</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> t_user partition(dt=<span class="hljs-string">'15'</span>);</span>
<span class="hljs-operator"><span class="hljs-keyword">load</span> data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'/root/access.log.2017-08-05.log'</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> t_user partition(dt=<span class="hljs-string">'20'</span>);</span></code></pre>

<p>查询的时候就可以查询自己想要的字段：</p>



<pre class="prettyprint"><code class=" hljs sql"> <span class="hljs-operator"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> t_user <span class="hljs-keyword">where</span> dt = <span class="hljs-string">'15'</span>;</span></code></pre>

<p>6.2 创建多个分区字段实例</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_partition(id <span class="hljs-keyword">int</span>,name string,age <span class="hljs-keyword">int</span>)
partitioned <span class="hljs-keyword">by</span>(department string,sex string,howold <span class="hljs-keyword">int</span>)
<span class="hljs-keyword">row</span> format delimited fields terminated <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;</span></code></pre>

<p>导数据：</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">load</span> data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'/root/p1.dat'</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> t_partition partition(department=<span class="hljs-string">'xiangsheng'</span>,sex=<span class="hljs-string">'male'</span>,howold=<span class="hljs-number">20</span>);</span></code></pre>

<p>7.CTAS建表语法 <br>
7.1 可以通过已经存在的表建表</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_user_2 <span class="hljs-keyword">like</span> t_user;</span></code></pre>

<p>新建的表的结构与原先的表的结构完全一直，但是没有数据。 <br>
7.2 在建表的同时插入数据</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_access_user <span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span> ip,uri <span class="hljs-keyword">from</span> t_access;</span></code></pre>

<p>8.数据导出 <br>
8.1、将hive表中的数据导入HDFS的文件</p>

<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">insert</span> overwrite directory <span class="hljs-string">'/root/access-data'</span>
<span class="hljs-keyword">row</span> format delimited fields terminated <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>
<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> t_access;</span></code></pre>

<p>8.2、将hive表中的数据导入本地磁盘文件</p>

<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">insert</span> overwrite <span class="hljs-keyword">local</span> directory <span class="hljs-string">'/root/access-data'</span>
<span class="hljs-keyword">row</span> format delimited fields terminated <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>
<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> t_access limit <span class="hljs-number">100000</span>;</span></code></pre>

<p>9.基本查询语法 <br>
9.1基本查询示例</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> t_user;</span></code></pre>

<p>9.2 条件查询示例</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> t_user <span class="hljs-keyword">where</span> id = <span class="hljs-number">1</span>;</span></code></pre>

<p>9.3join关联查询示例 <br>
9.3.1 内连接</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>  t_a a <span class="hljs-keyword">join</span> t_b b <span class="hljs-keyword">on</span> a.name = b.name;</span></code></pre>

<p>9.3.2 左外连接</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> t_a a
<span class="hljs-keyword">left</span> <span class="hljs-keyword">outer</span> <span class="hljs-keyword">join</span> t_b b
<span class="hljs-keyword">on</span> a.name = b.name;</span></code></pre>

<p>9.3.3 右外连接</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> t_a a 
<span class="hljs-keyword">right</span> <span class="hljs-keyword">outer</span> <span class="hljs-keyword">join</span> t_b b
<span class="hljs-keyword">on</span> a.name = b.name;</span></code></pre>

<p>9.3.4 全外连接</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> t_a a
<span class="hljs-keyword">full</span> <span class="hljs-keyword">join</span> t_b b
<span class="hljs-keyword">on</span> a.name = b.name;</span></code></pre>

<p>9.3.5 left semi join</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">select</span> t_a.* <span class="hljs-keyword">from</span> t_a a 
<span class="hljs-keyword">left</span> semi <span class="hljs-keyword">join</span> t_b b
<span class="hljs-keyword">on</span> a.name = b.name;</span></code></pre>

<p>9.5分组聚合</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">select</span> dt,<span class="hljs-aggregate">count</span>(*),<span class="hljs-aggregate">max</span>(ip) <span class="hljs-keyword">as</span> cnt <span class="hljs-keyword">from</span> t_access <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> dt <span class="hljs-keyword">having</span> dt &gt; <span class="hljs-string">'20180829'</span>;</span></code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>