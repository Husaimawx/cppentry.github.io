---
layout:     post
title:      hive纪要
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><span style="font-size:18px;">用文件执行hive查询</span></p>
<p><span style="font-size:18px;">1、在系统终端下</span></p>
<p><span style="font-size:18px;">[root@cloud4  shell]  Hive -f   /path/to/file/withqueries.hql</span></p>
<p><span style="font-size:18px;">[root@cloud4  shell] Hive  -e   ‘短sql语句’</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">2.在hive shell中用户可以使用source命令执行一个脚本</span></p>
<p><span style="font-size:18px;">Hive&gt;Source   /path/to/file/withqueries.hql</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Hive中源表src的使用？</span></p>
<p><span style="font-size:18px;">类似Oracle中的dual。查询不设计具体的表。</span></p>
<p><span style="font-size:18px;">Select xpath(……)  from src limit 1;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">如何在hive  CLI窗口执行bash  shell?</span></p>
<p><span style="font-size:18px;">只需要命令前加上！并且以分号（；）结尾就可以了；</span></p>
<p><span style="font-size:18px;">!  /bin/echo  “what  up  dog”;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">在hive  CLI窗口执行hadoop的dfs命令？</span></p>
<p><span style="font-size:18px;">只需去掉hadoop命令中的关键字hadoop去掉，然后以分好结尾就可以了。</span></p>
<p><span style="font-size:18px;">Hive&gt; dfs  -ls  /;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><br></p>
<p><span style="font-size:18px;">Hive中的数据类型？</span></p>
<p><span style="font-size:18px;">Int</span></p>
<p><span style="font-size:18px;">Boolean</span></p>
<p><span style="font-size:18px;">Float</span></p>
<p><span style="font-size:18px;">Double</span></p>
<p><span style="font-size:18px;">String</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">集合类型：struct，map和array</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Hive中创建表时怎么指定分割符？</span></p>
<p><span style="font-size:18px;">Row format  delimited</span></p>
<p><span style="font-size:18px;">Fields  terminated  by  ‘\001’        --使用^A字符作为列分隔符</span></p>
<p><span style="font-size:18px;">Collection items  terminated by  ‘\002’ --使用^B字符作为集合元素间的分隔符</span></p>
<p><span style="font-size:18px;">Map keys  terminated by ‘003’          --使用^C字符作为map的键和值之间的分隔符</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Lines terminated  by ‘\n’           --行与行之间的分割符<span style="color:#FF0000;">只支持“</span><span style="color:#FF0000;">\n</span><span style="color:#FF0000;">”</span></span></p>
<p><span style="font-size:18px;">Stored  by   textfile;           --使用文档格式存储文件</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"><strong>Hive中的元数据存储的作用？</strong></span></p>
<p><span style="font-size:18px;">元数据存储中存储了如表的模式和分区信息等元数据信息。一般源数据存储使用mysql数据库。用户在执行create table x…或者aler table y…等命令时会指定这些信息。</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"><strong>Hive数据信息的存储位置的配置？</strong></span></p>
<p><span style="font-size:18px;">Hive.metastore.warehouse.dir=/user/myname/hive/warehouse;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">HiveQL:数据定义？</span></p>
<p><span style="font-size:18px;">Create  database   if   not   exists    financials</span></p>
<p><span style="font-size:18px;"> With  dbproperties(‘creator’=’WanLi’,’data’=’2012-01-02’);--增加额外相关的键值对属性信息</span></p>
<p><span style="font-size:18px;">;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Describe  database  financials;--查看数据库描述信息</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Describe database  extended   financials;--查看信息，包含数据库的键值对补充信息</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Show databases;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Use  financials;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Drop  database   if   exists  financials;--数据库中含有表就不能删除</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Drop database if exists  financials  cascade; --hive自行先删除表再删除数据库</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Alert database  financials  set dbproperties(‘edited-by’=’Joe Dba’);</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">创建表：</span></p>
<p><span style="font-size:18px;">Create table if not exists  mydb.employees(</span></p>
<p><span style="font-size:18px;">  Name   string comment  ‘Employee name’,</span></p>
<p><span style="font-size:18px;">  Salary    float  comment   ‘Employee   salary’,</span></p>
<p><span style="font-size:18px;">  Subordinates    array&lt;String&gt; comment  ‘names of    subordinated’,</span></p>
<p><span style="font-size:18px;">  Decuctions    map&lt;String,Float&gt;  comment ‘keys   are deducitons names,values  arepercentates’,</span></p>
<p><span style="font-size:18px;">  Address  struct&lt;street:String,city:String,state:String,zip:int&gt;  comment ‘home  address’</span></p>
<p><span style="font-size:18px;"> )</span></p>
<p><span style="font-size:18px;">Comment  ‘Desciption  of  the  table’</span></p>
<p><span style="font-size:18px;">Tblproperties(‘creator’=’me’,’created_at’=’2012-01-02  10:00:00’,…)</span></p>
<p><span style="font-size:18px;">Location ‘/user/hive/warehouse/mydb.db/employees’;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">拷贝表：</span></p>
<p><span style="font-size:18px;">Create  table if notexists   mydb.employees2  like  mydb.employees;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Use  mydb;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Show  tables;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> Describe   extended  mydb.employee;--查看表信息</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Describe  formatted    mydb.employee; --输出更多的表相关信息</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">内部表</span></p>
<p><span style="font-size:18px;">内部表又称为管理表，hive能够控制这些表数据的生命周期。删除表的同时会删除表数据。</span></p>
<p><span style="font-size:18px;">但是管理表不适合和其他工作共享数据。</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">外部表</span></p>
<p><span style="font-size:18px;">使用场景：hive没有部分数据的所有权，但是想要在这份数据上执行一些查询，这时，我们可以创建一个外部表指向这些数据，而不需要对其具有所有权。</span></p>
<p><span style="font-size:18px;">使用<span style="color:#FF0000;">external</span>关键字创建外部表：</span></p>
<p><span style="font-size:18px;">Create  external   table  if  notexists   stocks(</span></p>
<p><span style="font-size:18px;">   ……</span></p>
<p><span style="font-size:18px;">)</span></p>
<p><span style="font-size:18px;">Row format  delimited   fields   terminated  by ’,’</span></p>
<p><span style="font-size:18px;">Partitioned by(year int ,month  int ,day int)</span></p>
<p><span style="font-size:18px;">Location  ‘/data/stocks’;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">增加分区：</span></p>
<p><span style="font-size:18px;">Alert table  log_messages  add  partition(year-2012,month=1,day=2)</span></p>
<p><span style="font-size:18px;">  Location‘hdfs://master_server/data/log_messages/2012/01/02’;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">拷贝分区数据：</span></p>
<p><span style="font-size:18px;">Hadoop distcp  /data/log_message/2011/12/02  s3n://ourbucket/logs/2012/01/02</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">重新指定分区：</span></p>
<p><span style="font-size:18px;">Alter table log_messages partition(year=2011.month-12,day=2)</span></p>
<p><span style="font-size:18px;">  Set  location ‘s3n://ourbucket/logs/2012/01/02’;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">删除旧分区数据：</span></p>
<p><span style="font-size:18px;"> Hadoop   fs  -rmr  /data/log_messages/2011/01/02</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">查看分区：</span></p>
<p><span style="font-size:18px;">Show Partitions  log_messages;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">查看指定分区的存放路径</span></p>
<p><span style="font-size:18px;">Describe  extended   log_messages  partition(year=2011,month=1,day=2);</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">删除表</span></p>
<p><span style="font-size:18px;">Drop  table   if  exists employees;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">修改表</span></p>
<p><span style="font-size:18px;">Alter table  log_messages   rename to  logmsgs;--修改表名</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--增加分区</span></p>
<p><span style="font-size:18px;">Alter table log_messages  add  if  notexists</span></p>
<p><span style="font-size:18px;">   Partition(year=2011,month=1,day=1)  location ‘/logs/2011/01/01’</span></p>
<p><span style="font-size:18px;">   Partition(year=2012,month=1,day=2)  location ‘/logs/2011/01/02’</span></p>
<p><span style="font-size:18px;">Partition(year=2012,month=1,day=3) location ‘/logs/2011/01/03’</span></p>
<p><span style="font-size:18px;">……</span></p>
<p><span style="font-size:18px;">;    </span></p>
<p><span style="font-size:18px;">--修改分区路径</span></p>
<p><span style="font-size:18px;">Alter table   log_messages  partition(year=2011,month=12,day=2)</span></p>
<p><span style="font-size:18px;">Set location  ‘s3n://ourbucket/logs/2011/01/02’; </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--删除表分区</span></p>
<p><span style="font-size:18px;">Alert table log_messages  drop  if exists partition(year=2011,month=12,day=2);</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">修改列信息：</span></p>
<p><span style="font-size:18px;">Alter table  log_messages  change column  hms   hours_minutes_seconds  int</span></p>
<p><span style="font-size:18px;">  Comment  ‘The hours,minutes,and seconds  partof  the timestamp’</span></p>
<p><span style="font-size:18px;">After severity;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--增加列</span></p>
<p><span style="font-size:18px;">Alter table log_messages   add  columns(</span></p>
<p><span style="font-size:18px;">  App_name   string  comment  ‘Application   name’,</span></p>
<p><span style="font-size:18px;">  Session_id   Long  comment  ‘The current  session id’</span></p>
<p><span style="font-size:18px;">);</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--删除或替换列</span></p>
<p><span style="font-size:18px;">Alter table  log_messages  replace columns(</span></p>
<p><span style="font-size:18px;">   Hours_mins_secs  int comment ‘hour,minute,seconds  fromtimestamp’,</span></p>
<p><span style="font-size:18px;">   Severity   String comment  ‘The   message severity’,</span></p>
<p><span style="font-size:18px;">  Message  String  comment  ‘The  rest of   the  message’</span></p>
<p><span style="font-size:18px;">);</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--修改表的属性</span></p>
<p><span style="font-size:18px;">Alter table log_messages  set tblproperties(</span></p>
<p><span style="font-size:18px;">  ‘notes’=’the  process id  is  no longer  captured;’</span></p>
<p><span style="font-size:18px;">);</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--修改分区存储属性</span></p>
<p><span style="font-size:18px;">Alter table  log_messages  partition(year=2012,month=1,day=1)</span></p>
<p><span style="font-size:18px;">  Set  fileformat sequencefile;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">HiveQL:数据操作？</span></p>
<p><span style="font-size:18px;">Hive中没有行级别的数据插入、数据更新和删除操作。那么向表中装载数据的唯一途径就是</span></p>
<p><span style="font-size:18px;">使用一种“大量”的数据装载操作。</span></p>
<p><span style="font-size:18px;">或者通过其他方式仅仅将文件写入到正确的目录下。</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">使用load装载数据</span></p>
<p><span style="font-size:18px;">Load data  local   inpath ‘${env:HOME}/California-employees’</span></p>
<p><span style="font-size:18px;">  Overwrite  into  table  employee</span></p>
<p><span style="font-size:18px;">  Partition(country=’US’,state=’CA’);</span></p>
<p><span style="font-size:18px;">注意：1.如果分区不存在会自动先创建分区目录</span></p>
<p><span style="font-size:18px;">     2．Local关键字，意思是本地文件系统路径。数据会被<span style="color:#FF0000;">拷贝</span>到目标位置。</span></p>
<p><span style="font-size:18px;">         如果不使用local关键字，那么这个路径应该是分布式文件系统中的路径，这种情况下，数据是从这个路径<span style="color:#FF0000;">转移</span>到目标位置的。</span></p>
<p><span style="font-size:18px;">      3.overwrite关键字，如果使用了overwrite关键字，那么目标文件夹中之前存在的数据会先被删除掉。</span></p>
<p><span style="font-size:18px;">如果没有使用overwrite关键字，仅仅是把新增的文件增加到目标文件夹中而不会删除之前的数据。</span></p>
<p><span style="font-size:18px;">    4、inpath路径下不可以包含任何文件夹</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"><strong>通过查询语句向表中插入数据</strong></span></p>
<p><span style="font-size:18px;">--将staged_employees中查询出的数据载入employees表的对应分区中</span></p>
<p><span style="font-size:18px;">Insert overwrite  table  employees partition(country=’US’,state=’OR’)</span></p>
<p><span style="font-size:18px;">Select * fromstaged_employees  se</span></p>
<p><span style="font-size:18px;">  Where se.cnty=’US’  and se.st=’OR’;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">一次扫描多次划分的sql？</span></p>
<p><span style="font-size:18px;">--如何为3个州创建表employees分区</span></p>
<p><span style="font-size:18px;">From staged_employees  se</span></p>
<p><span style="font-size:18px;">   Insertoverwrite  table  employees</span></p>
<p><span style="font-size:18px;">   Partition  (country=’US’ ,state=’OR’)</span></p>
<p><span style="font-size:18px;">Select *  where se.cnty=’US’  and se.st=’OR’</span></p>
<p><span style="font-size:18px;">Insert overwrite  table employees</span></p>
<p><span style="font-size:18px;">   Partition  (country=’US’ ,state=’ CA’)</span></p>
<p><span style="font-size:18px;">Select *  where  se.cnty=’US’ and  se.st=’CA’</span></p>
<p><span style="font-size:18px;">Insert overwrite  table  employees</span></p>
<p><span style="font-size:18px;">   Partition  (country=’US’ ,state=’ IL’)</span></p>
<p><span style="font-size:18px;">Select *  where  se.cnty=’US’ and  se.st=’IL’</span></p>
<p><span style="font-size:18px;">注意：这里从staged_employees表中读取的每条记录都会经过一条select……where ^句子进行判断。如果某条记录满足某个select……where……语句的话，那么这条记录就会被写入到指定的表和分区中。</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">动态分区插入</span></p>
<p><span style="font-size:18px;">--hive基于查询参数推断出需要创建的分区</span></p>
<p><span style="font-size:18px;">Hive.exec.dynamic.partition=true    表示开启动态分区功能</span></p>
<p><span style="font-size:18px;">Hive.exec.dynamic.partition.mode=strict  </span></p>
<p><span style="font-size:18px;"> (strict”严格模式”，要求至少有一列分区字段是静态的。设置成nonstrict表示允许所有分区都是动态的)</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--根据select语句中最后2列来确定分区字段country和state的值。如果共有100个国家和州的话，就会生成100个分区</span></p>
<p><span style="font-size:18px;">Insert overwrite  table employees  partition(country,state)</span></p>
<p><span style="font-size:18px;">  Select  …，se.cnty,se.st</span></p>
<p><span style="font-size:18px;">From staged_employees   se;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">混合使用动态和静态分区</span></p>
<p><span style="font-size:18px;">静态分区：分区字段指定值</span></p>
<p><span style="font-size:18px;">动态分区：分区字段的值由查询结果决定</span></p>
<p><span style="font-size:18px;">Insert overwrite  table  employees</span></p>
<p><span style="font-size:18px;">   Partition(country=’US’,state)</span></p>
<p><span style="font-size:18px;">Select …，se.cnty,se.st</span></p>
<p><span style="font-size:18px;">   Fromstaged_employees  se</span></p>
<p><span style="font-size:18px;">Where  se.cnty=’US’;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">单个查询语句中创建表并加载数据</span></p>
<p><span style="font-size:18px;">--从宽表中提取部分数据到字表中</span></p>
<p><span style="font-size:18px;">Create table  ca_employees</span></p>
<p><span style="font-size:18px;">   As   select name,salary,address</span></p>
<p><span style="font-size:18px;"> Fromemployees</span></p>
<p><span style="font-size:18px;"> Wherese.state=’CA’;</span></p>
<p><span style="font-size:18px;">导出数据：</span></p>
<p><span style="font-size:18px;">--直接复制数据保存目录文件到指定目录就行了</span></p>
<p><span style="font-size:18px;">Hadoop fs  -cp  source_path  target_path; </span>
</p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--也可以使用insert…directory…，将查询数据存放到指定目录</span></p>
<p><span style="font-size:18px;">Insert overwrite local  directory ‘/tmp/ca_employees’</span></p>
<p><span style="font-size:18px;">   Selectname,salary,address</span></p>
<p><span style="font-size:18px;">     From  employees</span></p>
<p><span style="font-size:18px;">   Where se.state=’CA’;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">指定多个输入文件夹目录存放数据：</span></p>
<p><span style="font-size:18px;">From  staged_employees   se</span></p>
<p><span style="font-size:18px;">  Insert  overwrite directory  ‘/tmp/or_employees’</span></p>
<p><span style="font-size:18px;">  Select*  where se.cty=’US’ and se.st=’OR’</span></p>
<p><span style="font-size:18px;">  Insert  overwrite directory  ‘/tmp/ca_employees’</span></p>
<p><span style="font-size:18px;">  Select*  where se.cty=’US’ and se.st=’CA’</span></p>
<p><span style="font-size:18px;">Insert  overwrite  directory ‘/tmp/il_employees’ </span>
</p>
<p><span style="font-size:18px;">  Select*  where se.cty=’US’ and se.st=’IL’</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">HiveQL:查询</span></p>
<p><span style="font-size:18px;">Case … when … then句式</span></p>
<p><span style="font-size:18px;">用于处理单个记录的多条件判断问题</span></p>
<p><span style="font-size:18px;">Select name,salary,</span></p>
<p><span style="font-size:18px;">  Case</span></p>
<p><span style="font-size:18px;">     Whensalary&lt;50000.0  then ‘low’</span></p>
<p><span style="font-size:18px;">     Whensalary&gt;=50000.0  and salary&lt;70000.0  then  ‘middle’</span></p>
<p><span style="font-size:18px;">     Whensalary&gt;=70000.0  andsalary&lt;100000.0  then ‘high’</span></p>
<p><span style="font-size:18px;">     Else  ‘very high’</span></p>
<p><span style="font-size:18px;">  Endas  bracket  from employees;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">什么情况下hive可以避免进行mapreduce？</span></p>
<p><span style="font-size:18px;">Hive中某些查询不用使用mapreduce，也就是本地模式。</span></p>
<p><span style="font-size:18px;">  Select  *  from employees;--直接读取employees对应的存储目录文件</span></p>
<p><span style="font-size:18px;">  Select  *  fromemployees         --直接读取对于分区数据</span></p>
<p><span style="font-size:18px;">     Where  country=’US’  and state=’CA’</span></p>
<p><span style="font-size:18px;">     Limit  100;</span></p>
<p><span style="font-size:18px;">一般查询语句中包含group by的时候，会执行reduce过程。</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">设置开启额外的本地模式</span></p>
<p><span style="font-size:18px;">     Hive.exec.mode.local.auto=true</span></p>
<p><span style="font-size:18px;">浮点数比较的陷阱：</span></p>
<p><span style="font-size:18px;">一定要2边都是相同的浮点型，才能避免误差</span></p>
<p><span style="font-size:18px;"> Where  deductionsp[‘Federal  Taxes’] &gt;  cast(0.2  as Float);</span></p>
<p><span style="font-size:18px;">如果是java中，支持0.2F表示float类型，但是HIVE中并不支持。</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Like和RLike：</span></p>
<p><span style="font-size:18px;">Select * from employees whereaddress.street  like  ‘%Ave.’;</span></p>
<p><span style="font-size:18px;">Select * from employees whereaddress.street  Rlike  ‘.*(Chicage|Ontario).*’;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Join语句：</span></p>
<p><span style="font-size:18px;"><span style="color:#FF0000;">Hive</span><span style="color:#FF0000;">只支持等值连接</span>,Pig提供交叉查询功能，所以支持非等值的关联查询。</span></p>
<p><span style="font-size:18px;">内连接inner  join</span></p>
<p><span style="font-size:18px;">Select *  from  stocks a <span style="color:#FF0000;">join</span> stocks  b <span style="color:#FF0000;">on</span></span></p>
<p><span style="color:#FF0000;"><span style="font-size:18px;">a.ymd=b.ymd</span></span></p>
<p><span style="font-size:18px;">   where a.symbol=’AAPL’  and  b.symbol=’IBM’;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"><strong>join优化：</strong></span></p>
<p><span style="font-size:18px;">1.      当对3个或者更多表进行JOIN连接时，如果每个on子句都使用相同的连接键，那么只会产生一个MapReduce  job；</span></p>
<p><span style="font-size:18px;">2.      保证连续查询的表的大小从左到右是依次增加的。</span></p>
<p><span style="font-size:18px;">Hive在对每行记录进行连接操作时，它会尝试将其他表缓存起来，然后扫描最后那个表进行计算。</span></p>
<p><span style="font-size:18px;">       使用“标记”显示指出最大表</span></p>
<p><span style="font-size:18px;">Select /*+STREAMTABLE(s)*/ s.ymd,s.symbol</span></p>
<p><span style="font-size:18px;">   From  stocks s  join  dividends d </span></p>
<p><span style="font-size:18px;">   On  s.ymd=d.ymd and s.symbol=d.symbol</span></p>
<p><span style="font-size:18px;">  Where  s.symbol=’AAPL’;</span></p>
<p><span style="font-size:18px;">3.</span><span style="font-size:18px;font-family:Arial;line-height:26px;">小表载入内存中/*+mapjoin(d)*/</span><span style="font-size:18px;"></span></p>
<p style="font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-size:18px;">Hive&gt;set hive.auto.convert.join=true           --自动将小表缓存</span></p>
<p style="font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-size:18px;"> Hive.mapjoin.smalltable.filesize=25000000         --判断是否是小表的阀值</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">左外连接left outer  join</span></p>
<p><span style="font-size:18px;">右边的没有对应项使用null</span></p>
<p><span style="font-size:18px;">Select s.ymd,s,symbol,s.price_close</span></p>
<p><span style="font-size:18px;">   Fromstocks s left  outer  join dividends  d  on  s.ymd=d.ymd  and s.symbol=d.symbol</span></p>
<p><span style="font-size:18px;">   Wheres.symbol=’AAPL’</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">外连接查询中添加分区过滤条件：</span></p>
<p><span style="font-size:18px;">使用嵌套select，先进行分区过滤查询，然后在进行外连接</span></p>
<p><span style="font-size:18px;">  Select  s.ymd,s.symbol,s.price_close,d.dividend  from</span></p>
<p><span style="font-size:18px;">    (select * from stocks  wheresymbol=’AAPL’ and exchange=’NASDAQ’)  s</span></p>
<p><span style="font-size:18px;">   Left  outer join</span></p>
<p><span style="font-size:18px;">    (select * from dividends  wheresymbol=’AAPL’  and exchange=’NASDAQ’) d</span></p>
<p><span style="font-size:18px;">   On  s.ymd=d.ymd;</span></p>
<p><span style="font-size:18px;">注意：<span style="color:#FF0000;">on</span><span style="color:#FF0000;">语句中的分区过滤条件在外连接（</span><span style="color:#FF0000;">outer join</span><span style="color:#FF0000;">）中是无效的，不过在内连接（</span><span style="color:#FF0000;">inner join</span><span style="color:#FF0000;">）中是有效的</span>。</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Right outer  join  右连接查询</span></p>
<p><span style="font-size:18px;">Full outer  join   完全外连接查询</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Hive中如何实现sql中的in…exists结构？</span></p>
<p><span style="font-size:18px;">Hive中是不支持in和exists的，不过可以使用左半开连接（left semi-join）来实现。</span></p>
<p><span style="font-size:18px;">--查询stocks表中ymd和symbol在dividends 表中的记录</span></p>
<p><span style="font-size:18px;">Select s.ymd,s.symbol,s.price_close</span></p>
<p><span style="font-size:18px;">     From  stocks s<span style="color:#FF0000;">  left semi  join</span>  dividends d</span></p>
<p><span style="font-size:18px;">     On   s.ymd=d.ymd and s.symbol=d.symbol;</span></p>
<p><span style="font-size:18px;">注意：hive不支持右半开连接（right  semi-join）</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">笛卡尔积join</span></p>
<p><span style="font-size:18px;"><span style="color:#FF0000;">注意：</span><span style="color:#FF0000;">hive</span><span style="color:#FF0000;">中不会对</span><span style="color:#FF0000;">where</span><span style="color:#FF0000;">条件查询自动优化为内连接查询</span></span></p>
<p><span style="font-size:18px;">Select * from stocks  join dividends</span></p>
<p><span style="font-size:18px;">Where  stock.symbol=dividends.symbol andstock.symbol=’AAPL’;</span></p>
<p><span style="font-size:18px;">这个查询会先执行where语句前的查询，即先进行笛卡尔积计算，然后进行where条件判断。</span></p>
<p><span style="font-size:18px;">  Hive.mapred.mode=strict      --严格模式，禁止笛卡尔积</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">内连接查询中针对小表的优化？</span></p>
<p><span style="font-size:18px;">将小表的数据集全部缓存到内存中</span></p>
<p><span style="font-size:18px;">Hive0.7前</span></p>
<p><span style="font-size:18px;">Select /*+ mapjoin(d)*/   s.ymd,s.symbol,s.price_close,d.dividend</span></p>
<p><span style="font-size:18px;">   Fromstocks  s   join dividends   d on  s.ymd=d.ymd  and s.symbol=d.symbol</span></p>
<p><span style="font-size:18px;">   Wheres.symbol=’AAPL’;</span></p>
<p><span style="font-size:18px;">Hive0.7后</span></p>
<p><span style="font-size:18px;"> Hive&gt;set  hive.auto.convert.join=true            --自动将小表缓存</span></p>
<p><span style="font-size:18px;"> Hive.mapjoin.smalltable.filesize=25000000         --判断是否是小表的阀值</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><br></p>
<p><span style="font-size:18px;">Order by和sort  by的区别：</span></p>
<p><span style="font-size:18px;">Order by：全局排序</span></p>
<p><span style="font-size:18px;">Sort by：局部排序，只会在每个reducer中对数据进行排序</span></p>
<p><span style="font-size:18px;">Asc 表示升序排序（默认）</span></p>
<p><span style="font-size:18px;">Desc 表示降序排序</span></p>
<p><span style="font-size:18px;">Select s.ymd,s.symbol,s.price_close</span></p>
<p><span style="font-size:18px;">From  stock s</span></p>
<p><span style="font-size:18px;">Order by  s.ymd asc,s.symbol  desc;</span></p>
<p><span style="font-size:18px;">注意：由于order by全局排序会导致运行时间过长，如果属性hive.mapred.mode=strict的话，那么hive要求这样的语句必须加有limit语句进行限制。</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Distribute by </span></p>
<p><span style="font-size:18px;">作用：控制map的输出在reducer中是如何划分的。</span></p>
<p><span style="font-size:18px;">--使用distribute by保证具有相同股票交易码的记录会分发到同一个reducer中进行处理</span></p>
<p><span style="font-size:18px;">--全局排序</span></p>
<p><span style="font-size:18px;">Select s.ymd,s.symbol,s.price_close</span></p>
<p><span style="font-size:18px;">From   stock s</span></p>
<p><span style="font-size:18px;">Distribute  by s.symbol</span></p>
<p><span style="font-size:18px;">Sort  by s.symbol  ASC,s.ymd  ASC</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Cluster by</span></p>
<p><span style="font-size:18px;">能实现全局排序，等同于Distribute  by …sort by,相当于一种简写形式，</span></p>
<p><span style="font-size:18px;">--按照symbol字段全局排序，速度应该比直接使用order by快</span></p>
<p><span style="font-size:18px;">Select s.ymd,s.symbol,s.price_close</span></p>
<p><span style="font-size:18px;">From  stock s</span></p>
<p><span style="font-size:18px;"> Cluster  by s.symbol;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">全局排序的3种实现？</span></p>
<p><span style="font-size:18px;">1.      order  by</span></p>
<p><span style="font-size:18px;">2.      Distribute  by …sort by</span></p>
<p><span style="font-size:18px;">3.      Cluster  by</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">类型转换？</span></p>
<p><span style="font-size:18px;">Case(value as  type)</span></p>
<p><span style="font-size:18px;">其中binary类型只能转换为String类型</span></p>
<p><span style="font-size:18px;">Select (2.0*cast(cast(b  as  string) as   double))  from src;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">抽样查询</span></p>
<p><span style="font-size:18px;">Select *  from  numbers  tablesample(bucket  3  out of  10  on rand()) s;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Union all</span></p>
<p><span style="font-size:18px;">将2个或多个表进行合并</span></p>
<p><span style="font-size:18px;">Select log.ymd,log.level,log.message</span></p>
<p><span style="font-size:18px;">   From  (</span></p>
<p><span style="font-size:18px;">     Select l1.ymd,l1.level,l1.message,’Log1’ as  source</span></p>
<p><span style="font-size:18px;">     From log1 l1</span></p>
<p><span style="font-size:18px;">     Union  all</span></p>
<p><span style="font-size:18px;">     Select l2.ymd,l2.level,l2.message,’Log2’ as  source</span></p>
<p><span style="font-size:18px;">     From log2 l2</span></p>
<p><span style="font-size:18px;"> )log</span></p>
<p><span style="font-size:18px;">Sort by log.ymd asc;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">第七章   HiveQL：视图</span></p>
<p><span style="font-size:18px;">Hive不支持物理视图，hive中视图只是一个逻辑结构。</span></p>
<p><span style="font-size:18px;">Hive先执行这个视图，然后使用这个结果进行余下的查询。</span></p>
<p><span style="font-size:18px;">作用：</span></p>
<p><span style="font-size:18px;">1.      降低查询的负责度</span></p>
<p><span style="font-size:18px;">2.      通过创建视图限制数据访问</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Create  view    shorter_join   as</span></p>
<p><span style="font-size:18px;">Select   *  from  people   join cart</span></p>
<p><span style="font-size:18px;">   On  (cart.people_id=people.id)</span></p>
<p><span style="font-size:18px;">Where   firstname=’john’;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">查询语句简化为：</span></p>
<p><span style="font-size:18px;">Select lastname  from shorter_join  where id=3;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">创建视图时也能使用if  not  exists和comment子句</span></p>
<p><span style="font-size:18px;">Create view if   not   exists shipments(time,part)</span></p>
<p><span style="font-size:18px;">  Comment  ‘time and parts  for  shipments’</span></p>
<p><span style="font-size:18px;">Tblproperties(‘creator’=’me’)</span></p>
<p><span style="font-size:18px;">As select …;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">删除视图：</span></p>
<p><span style="font-size:18px;">Delete view  if   exists  shipments;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">查看视图：</span></p>
<p><span style="font-size:18px;">Show tables;--注意，没有show   view</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">第八章   HiveQL:索引</span></p>
<p><span style="font-size:18px;">Hive只有有限的索引功能。Hive中一张表的索引存储在另一张表中。</span></p>
<p><span style="font-size:18px;">1.      提高查询速度</span></p>
<p><span style="font-size:18px;">剪裁掉一张表的部分数据块，减少MapReduce的输入数据量。</span></p>
<p><span style="font-size:18px;">通过explain命令可以查看某个查询语句是否用到了索引。</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--创建索引</span></p>
<p><span style="font-size:18px;">Create index   employees_index</span></p>
<p><span style="font-size:18px;">   Ontable  employees(country)</span></p>
<p><span style="font-size:18px;">  As  ‘org.apache.hadoop.hive.ql.index.compact.CompactIndexHandler’  --索引处理器</span></p>
<p><span style="font-size:18px;">  With  deferred rebuild</span></p>
<p><span style="font-size:18px;">  Idxproperties(‘creator’=’me’,’created_at’=’some_time’)    --索引额外描述信息</span></p>
<p><span style="font-size:18px;">  In   table  employees_index_table                --索引信息存储的表</span></p>
<p><span style="font-size:18px;">  Partitioned  by (country,name)                      --索引包含的分区</span></p>
<p><span style="font-size:18px;">Comment ‘Employees  indexed   by  country  and  name’;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--创建内置的Bitmao索引</span></p>
<p><span style="font-size:18px;">Create index   employees_index</span></p>
<p><span style="font-size:18px;">   Ontable  employees(country)</span></p>
<p><span style="font-size:18px;">  As  ‘BITMAP’ --索引处理器</span></p>
<p><span style="font-size:18px;">  With  deferred rebuild</span></p>
<p><span style="font-size:18px;">  Idxproperties(‘creator’=’me’,’created_at’=’some_time’)    --索引额外描述信息</span></p>
<p><span style="font-size:18px;">  In   table  employees_index_table                --索引信息存储的表</span></p>
<p><span style="font-size:18px;">  Partitioned  by (country,name)                      --索引包含的分区</span></p>
<p><span style="font-size:18px;">Comment ‘Employees  indexed   by  country  and  name’;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--重建索引</span></p>
<p><span style="font-size:18px;">Alter index   employees_index</span></p>
<p><span style="font-size:18px;">On   table  employees</span></p>
<p><span style="font-size:18px;">Partition(country=’US’)</span></p>
<p><span style="font-size:18px;">Rebuild;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--显示索引</span></p>
<p><span style="font-size:18px;">Show  formatted  index  on employees;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--删除索引</span></p>
<p><span style="font-size:18px;">Drop index   if   exists employees_index  on  table  employees;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">第10章    调优</span></p>
<p><span style="font-size:18px;">1.使用explain查看执行计划</span></p>
<p><span style="font-size:18px;"> Hive&gt;Explain  select sum(number)   from   onecol;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">2.使用explain   extended 查看更多信息</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">3.限制调整</span></p>
<p><span style="font-size:18px;">  主要是对limit的一些控制优化。</span></p>
<p><span style="font-size:18px;">Hive.limit.optimize.enable=true   --当开启后，使用limit会对源数据进行抽样</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">4.join优化</span></p>
<p><span style="font-size:18px;">  大表放在join语句的最右边或使用/*+STREAMTABLE(s)*/显示指出大表</span></p>
<p><span style="font-size:18px;">  小表载入内存中/*+mapjoin(d)*/</span></p>
<p><span style="font-size:18px;">Hive&gt;set hive.auto.convert.join=true           --自动将小表缓存</span></p>
<p><span style="font-size:18px;"> Hive.mapjoin.smalltable.filesize=25000000         --判断是否是小表的阀值</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">5.本地模式</span></p>
<p><span style="font-size:18px;">  Set  hive.exec.mode.local.auto=true</span></p>
<p><span style="font-size:18px;">  不进行MapReduce计算</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">6.并行执行</span></p>
<p><span style="font-size:18px;">特定job包含众多的阶段，有些阶段是可以并行执行的，那么job可能越快完成</span></p>
<p><span style="font-size:18px;">Hive.exec.parallel=true</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">7.严格模式</span></p>
<p><span style="font-size:18px;">  Hive.mapred.mode=strict</span></p>
<p><span style="font-size:18px;">禁止3中查询：</span></p>
<p><span style="font-size:18px;">Ø  对于分区表，用户不允许扫描所有分区</span></p>
<p><span style="font-size:18px;">Ø  对于使用了order by语句的查询，要求必须使用limit语句</span></p>
<p><span style="font-size:18px;">Ø  限制笛卡尔积</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">8.调整mapper和reducer个数</span></p>
<p><span style="font-size:18px;">9.JVM重用</span></p>
<p><span style="font-size:18px;">Hadoop的默认配置通常是使用派生JVM来执行map和reduce任务的。</span></p>
<p><span style="font-size:18px;">而启用JVM重用可以使得JVM实例在同一个job中重新使用N次。</span></p>
<p><span style="font-size:18px;">  Mapred.job.reuser.jvm.num.tasks=10</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">10.索引</span></p>
<p><span style="font-size:18px;">11.动态分区调整</span></p>
<p><span style="font-size:18px;">   开启动态分区的“严格模式”</span></p>
<p><span style="font-size:18px;">   Hive.exec.dynamic.partition.mode=strict</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">12.开启中间压缩</span></p>
<p><span style="font-size:18px;">Hive.exec.compress.intermediate=true</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">13.开启最终输出结果压缩</span></p>
<p><span style="font-size:18px;">Hive.exec.compress.output=true      --开启输入结果压缩</span></p>
<p><span style="font-size:18px;">Mapred.output.compression.codec=org.apache.hadoop.id.compress.GzipCodec–指定压缩格式</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">第18章    安全和授权</span></p>
<p><span style="font-size:18px;">Hive.security.authorization.enabled=true    --开启授权</span></p>
<p><span style="font-size:18px;">Hive.security.authorization.createtable.owner.grants=All       --文件的创建者具有所有权限</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--授权，给用户Edward授予创建表的权限</span></p>
<p><span style="font-size:18px;">Hive&gt; Grant  create  ondatabase  default  to user  Edward;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--查看权限</span></p>
<p><span style="font-size:18px;">Hive&gt;show   grant user Edward  on database default;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--使用revoke取消权限</span></p>
<p><span style="font-size:18px;">Hive&gt; revoke  create  ondatabase  default  to user  Edward;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">权限列表：</span></p>
<p><span style="font-size:18px;">All        赋予所有的权限</span></p>
<p><span style="font-size:18px;">Alter      有修改表结构的权限</span></p>
<p><span style="font-size:18px;">Create     有创建表的权限</span></p>
<p><span style="font-size:18px;">Drop      有删除表或表的分区的权限</span></p>
<p><span style="font-size:18px;">Index      有创建索引的权限</span></p>
<p><span style="font-size:18px;">Lock       开启并发后，锁定和解锁表的权限</span></p>
<p><span style="font-size:18px;">Select      查询表或者分区中数据的权限</span></p>
<p><span style="font-size:18px;">Show_database    查看所有数据库的权限</span></p>
<p><span style="font-size:18px;">Update           向表或者分区中插入或加载数据的权限</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">自动授权：</span></p>
<p><span style="font-size:18px;">Hive.security.authorization.createtable.owner.grants=select,drop</span></p>
<p><span style="font-size:18px;">设置创建表的用户自动授予对这张表的查询和删除的权限</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">在创建表时自动授予指定用户指定的权限：</span></p>
<p><span style="font-size:18px;">--hive管理员admin1和Edward用户默认授予所有表的读权限，user1只有创建的权限</span></p>
<p><span style="font-size:18px;">&lt;property&gt;</span></p>
<p><span style="font-size:18px;">&lt;name&gt;Hive.security.authorization.createtable.owner.grants&lt;/name&gt;</span></p>
<p><span style="font-size:18px;">  &lt;value&gt;admin1,Edward:select;user1:create&lt;/value&gt;</span></p>
<p><span style="font-size:18px;">&lt;/property&gt;</span></p>
<p><span style="font-size:18px;">第19章   锁</span></p>
<p><span style="font-size:18px;">Hive缺少update和insert类型的查询中用到的对于列、行或者查询级别的锁支持。</span></p>
<p><span style="font-size:18px;">多用户操作时，锁和协调时非常有用的。</span></p>
<p><span style="font-size:18px;">Hive的锁机制需要Zookeeper的支持。</span></p>
<p><span style="font-size:18px;">Hive.zookeeper.quorum           --配置Zookeeper集群所有机器的ip</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">Hive.support.concurrency=true    --开启hive的锁机制</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--查看锁</span></p>
<p><span style="font-size:18px;">Show locks；</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--对表people创建一个显示锁</span></p>
<p><span style="font-size:18px;">Hive&gt; lock  table   people exclusive;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;">--解锁</span></p>
<p><span style="font-size:18px;">Hive&gt; unlock  table  people;</span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
<p><span style="font-size:18px;"> </span></p>
            </div>
                </div>