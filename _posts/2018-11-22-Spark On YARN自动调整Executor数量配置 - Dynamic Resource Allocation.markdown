---
layout:     post
title:      Spark On YARN自动调整Executor数量配置 - Dynamic Resource Allocation
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><a href="http://blog.csdn.net/levy_cui/article/details/51143225" rel="nofollow" style="text-decoration:none;color:rgb(0,0,0);font-family:'microsoft yahei';font-size:18px;font-weight:bold;">Spark On YARN自动调整Executor数量配置 - Dynamic Resource
 Allocation</a></p>
<p>原文： http://blog.csdn.net/levy_cui/article/details/51143225</p>
<p><br></p>
<p><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">Spark 1.5.2版本支持为Spark On YARN模式的Spark Application根据Task自动调整Executor数，要启用该功能，需做以下操作：</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">一：在所有的NodeManager中，修改yarn-site.xml，为yarn.nodemanager.aux-services添加spark_shuffle值，设置yarn.nodemanager.aux-services.spark_shuffle.class值为org.apache.spark.network.yarn.YarnShuffleService，如下：</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">修改：</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"></p>
<div style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">
<div class="codeheads">
<p>
点击(<span style="color:#FF0000;">此处</span>)折叠或打开</p>
</div>
<div id="code60" class="codeText">
<ol start="1" class="dp-css"><li><span style="color:rgb(0,0,0);"><span style="color:rgb(0,0,204);">&lt;</span>property<span style="color:rgb(0,0,204);">&gt;</span><br></span></li><li><span style="color:rgb(0,0,204);">&lt;</span><span style="color:rgb(255,0,0);">name</span><span style="color:rgb(0,0,204);">&gt;</span>yarn<span style="color:rgb(0,0,204);">.</span>nodemanager<span style="color:rgb(0,0,204);">.</span>aux<span style="color:rgb(0,0,204);">-</span>services<span style="color:rgb(0,0,204);">&lt;</span><span style="color:rgb(0,0,204);">/</span><span style="color:rgb(255,0,0);">name</span><span style="color:rgb(0,0,204);">&gt;</span><br></li><li><span style="color:rgb(0,0,204);">&lt;</span>value<span style="color:rgb(0,0,204);">&gt;</span>mapreduce_shuffle<span style="color:rgb(0,0,204);">,</span>spark_shuffle<span style="color:rgb(0,0,204);">&lt;</span><span style="color:rgb(0,0,204);">/</span>value<span style="color:rgb(0,0,204);">&gt;</span><br></li><li><span style="color:rgb(0,0,204);">&lt;</span><span style="color:rgb(0,0,204);">/</span>property<span style="color:rgb(0,0,204);">&gt;</span></li></ol></div>
</div>
<span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">添加：</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><div style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">
<div class="codeheads">
<p>
点击(<span style="color:#FF0000;">此处</span>)折叠或打开</p>
</div>
<div id="code624" class="codeText">
<ol start="1" class="dp-css"><li><span style="color:rgb(0,0,0);"><span style="color:rgb(0,0,204);">&lt;</span>property<span style="color:rgb(0,0,204);">&gt;</span><br></span></li><li><span style="color:rgb(0,0,204);">&lt;</span><span style="color:rgb(255,0,0);">name</span><span style="color:rgb(0,0,204);">&gt;</span>yarn<span style="color:rgb(0,0,204);">.</span>nodemanager<span style="color:rgb(0,0,204);">.</span>aux<span style="color:rgb(0,0,204);">-</span>services<span style="color:rgb(0,0,204);">.</span>spark_shuffle<span style="color:rgb(0,0,204);">.</span>class<span style="color:rgb(0,0,204);">&lt;</span><span style="color:rgb(0,0,204);">/</span><span style="color:rgb(255,0,0);">name</span><span style="color:rgb(0,0,204);">&gt;</span><br></li><li><span style="color:rgb(0,0,204);">&lt;</span>value<span style="color:rgb(0,0,204);">&gt;</span><span style="color:rgb(0,0,255);">org</span><span style="color:rgb(0,0,204);">.</span>apache<span style="color:rgb(0,0,204);">.</span>spark<span style="color:rgb(0,0,204);">.</span>network<span style="color:rgb(0,0,204);">.</span>yarn<span style="color:rgb(0,0,204);">.</span>YarnShuffleService<span style="color:rgb(0,0,204);">&lt;</span><span style="color:rgb(0,0,204);">/</span>value<span style="color:rgb(0,0,204);">&gt;</span><br></li><li><span style="color:rgb(0,0,204);">&lt;</span><span style="color:rgb(0,0,204);">/</span>property<span style="color:rgb(0,0,204);">&gt;</span></li><li><span style="color:rgb(0,0,204);"><br></span></li><li><span style="color:rgb(0,0,204);">&lt;</span>property<span style="color:rgb(0,0,204);">&gt;</span><br></li><li><span style="color:rgb(0,0,204);">&lt;</span><span style="color:rgb(255,0,0);">name</span><span style="color:rgb(0,0,204);">&gt;</span>spark<span style="color:rgb(0,0,204);">.</span>shuffle<span style="color:rgb(0,0,204);">.</span>service<span style="color:rgb(0,0,204);">.</span>port<span style="color:rgb(0,0,204);">&lt;</span><span style="color:rgb(0,0,204);">/</span><span style="color:rgb(255,0,0);">name</span><span style="color:rgb(0,0,204);">&gt;</span><br></li><li><span style="color:rgb(0,0,204);">&lt;</span>value<span style="color:rgb(0,0,204);">&gt;</span>7337<span style="color:rgb(0,0,204);">&lt;</span><span style="color:rgb(0,0,204);">/</span>value<span style="color:rgb(0,0,204);">&gt;</span><br></li><li><span style="color:rgb(0,0,204);">&lt;</span><span style="color:rgb(0,0,204);">/</span>property<span style="color:rgb(0,0,204);">&gt;</span></li></ol></div>
</div>
<br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">二：将 $SPARK_HOME/lib/spark-1.5.2-yarn-shuffle.jar 文件拷贝到hadoop/lib （hadoop lib）目录下，我的是/usr/lib/hadoop/lib/这个路径下，有些文章还说拷贝到/usr/lib/hadoop-yarn/lib/（yarn lib）或者软连接处理</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">备注：</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">这个操作在所有的 nodemanager 中操作</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">三：配置 $SPARK_HOME/conf/spark-defaults.conf，内容如下</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">spark.dynamicAllocation.minExecutors 1 #最小Executor数</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">spark.dynamicAllocation.maxExecutors 100 #最大Executor数</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">开启自动调节</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">spark.dynamicAllocation.enabled true</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">spark.shuffle.service.enabled true</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">四：执行时开启自动调整Executor数开关，以spark-sql yarn client模式为例：</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">spark-sql  --master yarn-client --conf spark.shuffle.service.enabled=true --conf spark.dynamicAllocation.enabled=true -e "SELECT COUNT(*) FROM xx"</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">这里的--conf spark.shuffle.service.enabled=true --conf spark.dynamicAllocation.enabled=true 如果在spark-defaults.conf设置开启就可以省略了</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">对于使用spark-submit也是一样：</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">    spark-submit \</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">    --class SySpark.SqlOnSpark \</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">    --master yarn-client \</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">    --conf spark.shuffle.service.enabled=true \</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">    --conf spark.dynamicAllocation.enabled=true \</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">    /data/jars/SqlOnSpark.jar \</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">    "SELECT COUNT(*) FROM xx"</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">参考：</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">http://blog.chinaunix.net/uid-22570852-id-5182664.html</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">http://lxw1234.com/archives/2015/12/593.htm</span><br style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><p><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;">https://spark.apache.org/docs/1.5.2/job-scheduling.html#default-behavior-of-pools </span></p>
<p><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"><br></span></p>
<p><span style="color:rgb(85,85,85);font-family:'microsoft yahei';font-size:15px;line-height:35px;"></span></p>
<p style="color:rgb(51,51,51);font-family:Arial;font-size:14px;line-height:26px;margin-left:.37in;text-indent:-.37in;vertical-align:baseline;">
<a href="http://lib.csdn.net/base/spark" rel="nofollow" class="replace_word" title="Apache Spark知识库" style="color:rgb(223,52,52);text-decoration:none;font-weight:bold;">Spark</a> on yarn 支持资源的动态分配。<br>
         <br>
资源请求策略：<br>
    一个spark程序使用轮询来请求资源。具体过程如下：<br>
1.如果程序中有任务在等待，超过spark.dynamicAllocation.schedulerBacklogTimeout参数配置的时间（默认是1s），将会得到新的资源，分配executor<br>
2. 如果等待spark.dynamicAllocation.sustainedSchedulerBacklogTimeout参数配置的时间（默认是1s）后，还有任务在等待，第一步的逻辑将会再次被触发。<br>
注意：每次轮询分配的executor的数目是呈指数增长的：<br>
如第一次申请分配1个executor，第二次申请分配2个executor，第n次申请分配2的n-1次方。<br>
      <br>
资源移除策略：<br>
1.如果spark任务中仍有任务在等待被执行，则这些executor将不会被判定为空闲的。<br>
2.经过spark.dynamicAllocation.executorIdleTimeout参数设定的时间（默认是60s），如果executor仍然没有任务，则会被判定为空闲的。<br>
3.如果executor是空闲的，这个资源就可以被回收。<br><br><br>
安全的移除executor：<br>
在不启用动态分配的模式下，executor将会在程序执行完毕之后移除，这个executor的所有状态都将被废弃。但是在动态分配模式下，在程序没有执行完毕，如果一个executor被移除完毕，程序有可能会读取这个executor存储的一些状态，因此spark需要一种机制来安全的移除executors。<br>
这个过程主要是在shuffle过程。在shuffle过程中，executor会将一些输出写到磁盘，然后作为server让其他executors可以获取shuffle的结果文件。为了保护这个过程，spark从1.2开始，提过了一个额外的shuffle服务：org.apache.spark.yarn.network.YarnShuffleService。<br>
   如果这个服务启动，executor将会通过这个服务来获取shuffle文件，而不受executor的影响。<span style="font-family:'黑体';"></span></p>
<p style="color:rgb(51,51,51);font-family:Arial;font-size:14px;line-height:26px;margin-left:.37in;text-indent:-.37in;vertical-align:baseline;">
<br></p>
<p style="color:rgb(51,51,51);font-family:Arial;font-size:14px;line-height:26px;margin-left:.37in;text-indent:-.37in;vertical-align:baseline;">
<br></p>
<p style="color:rgb(51,51,51);font-family:Arial;font-size:14px;line-height:26px;margin-left:.37in;text-indent:-.37in;vertical-align:baseline;">
在spark on yarn 配置完毕的基础上<br>
一.配置spark-default.conf<br><br>
spark.dynamicAllocation.enabled<span> </span>              true<br>
spark.shuffle.service.enabled                    true<br>
这两个参数如果想要生效的话就不能设置spark.executor.instances参数<br><br><br>
spark.dynamicAllocation.minExecutors<span> </span>       1<br>
最小分配的executor数量<br>
spark.dynamicAllocation.maxExecutors            infinity<br>
最大分配的executor数量<br><br><br>
二 .配置yarn-site.xml,添加spark动态分配和收回executor的服务<br>
 &lt;property&gt;<br>
    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;<br>
    &lt;value&gt;mapreduce_shuffle,spark_shuffle&lt;/value&gt;<br>
  &lt;/property&gt;<br>
  &lt;property&gt;<br>
     &lt;name&gt;yarn.nodemanager.aux-services.spark_shuffle.class&lt;/name&gt;<br>
     &lt;value&gt;org.apache.spark.network.yarn.YarnShuffleService&lt;/value&gt;<br>
  &lt;/property&gt;<br><br><br>
三.将spark的lib目录里的spark-1.5.2-yarn-shuffle.jar分发到<a href="http://lib.csdn.net/base/hadoop" rel="nofollow" class="replace_word" title="Hadoop知识库" style="color:rgb(223,52,52);text-decoration:none;font-weight:bold;">Hadoop</a>集群的每一个安装目录里（可以放置在/usr/local/hadoop/share/hadoop/common/）。<br><br><br>
四.重新启动集群的nodemanger服务。<br></p>
<p style="color:rgb(51,51,51);font-family:Arial;font-size:14px;line-height:26px;margin-left:.37in;text-indent:-.37in;vertical-align:baseline;">
   </p>
<br><p></p>
            </div>
                </div>