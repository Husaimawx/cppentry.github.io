---
layout:     post
title:      Spark编程环境搭建-超详细代码（可下载）
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h4 style="color:rgb(51,51,51);">基于Intellij IDEA搭建Spark开发环境搭</h4>
<p style="color:rgb(51,51,51);">基于Intellij IDEA搭建Spark开发环境搭——参考文档</p>
<p style="color:rgb(51,51,51);">● 参考文档<a href="http://spark.apache.org/docs/latest/programming-guide.html" rel="nofollow" style="color:rgb(51,122,183);">http://spark.apache.org/docs/latest/programming-guide.html</a></p>
<p style="color:rgb(51,51,51);">● 操作步骤</p>
<p style="color:rgb(51,51,51);">a)创建maven 项目</p>
<p style="color:rgb(51,51,51);">b)引入依赖（Spark 依赖、打包插件等等）</p>
<p style="color:rgb(51,51,51);">基于Intellij IDEA搭建Spark开发环境—maven vs sbt</p>
<p style="color:rgb(51,51,51);">● 哪个熟悉用哪个</p>
<p style="color:rgb(51,51,51);">● Maven也可以构建scala项目</p>
<p style="color:rgb(51,51,51);">基于Intellij IDEA搭建Spark开发环境搭—maven构建scala项目</p>
<p style="color:rgb(51,51,51);">● 参考文档<a href="http://docs.scala-lang.org/tutorials/scala-with-maven.html" rel="nofollow" style="color:rgb(51,122,183);">http://docs.scala-lang.org/tutorials/scala-with-maven.html</a></p>
<p style="color:rgb(51,51,51);">● 操作步骤</p>
<p style="color:rgb(51,51,51);">a)用maven构建scala项目(基于net.alchim31.maven:scala-archetype-simple)</p>
<span style="color:rgb(51,51,51);"><img src="http://ke.dajiangtai.com/content/1913/1.png" alt=""></span>
<p style="color:rgb(51,51,51);"><img src="http://ke.dajiangtai.com/content/1913/2.png" alt=""><br></p>
<p style="color:rgb(51,51,51);"></p>
<p style="color:rgb(51,51,51);">b)pom.xml引入依赖(spark依赖、打包插件等等)</p>
<p style="color:rgb(51,51,51);">注意：scala与java版本的兼容性</p>
<p style="color:rgb(51,51,51);"><br></p>
<pre style="color:rgb(51,51,51);">&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt;    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;    &lt;groupId&gt;com.dajiangtai.test&lt;/groupId&gt;    &lt;artifactId&gt;test-spark&lt;/artifactId&gt;    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;    &lt;name&gt;myWordCount&lt;/name&gt;    &lt;inceptionYear&gt;2008&lt;/inceptionYear&gt;    &lt;properties&gt;        &lt;scala.version&gt;2.10.5&lt;/scala.version&gt;        &lt;spark.version&gt;1.6.1&lt;/spark.version&gt;    &lt;/properties&gt;    &lt;repositories&gt;        &lt;repository&gt;            &lt;id&gt;scala-tools.org&lt;/id&gt;            &lt;name&gt;Scala-Tools Maven2 Repository&lt;/name&gt;            &lt;url&gt;http://scala-tools.org/repo-releases&lt;/url&gt;        &lt;/repository&gt;    &lt;/repositories&gt;    &lt;pluginRepositories&gt;        &lt;pluginRepository&gt;            &lt;id&gt;scala-tools.org&lt;/id&gt;            &lt;name&gt;Scala-Tools Maven2 Repository&lt;/name&gt;            &lt;url&gt;http://scala-tools.org/repo-releases&lt;/url&gt;        &lt;/pluginRepository&gt;    &lt;/pluginRepositories&gt;    &lt;dependencies&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.scala-lang&lt;/groupId&gt;            &lt;artifactId&gt;scala-library&lt;/artifactId&gt;            &lt;version&gt;${scala.version}&lt;/version&gt;        &lt;/dependency&gt;        &lt;dependency&gt;            &lt;groupId&gt;junit&lt;/groupId&gt;            &lt;artifactId&gt;junit&lt;/artifactId&gt;            &lt;version&gt;4.4&lt;/version&gt;            &lt;scope&gt;test&lt;/scope&gt;        &lt;/dependency&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.specs&lt;/groupId&gt;            &lt;artifactId&gt;specs&lt;/artifactId&gt;            &lt;version&gt;1.2.5&lt;/version&gt;            &lt;scope&gt;test&lt;/scope&gt;        &lt;/dependency&gt;        &lt;!--spark --&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;            &lt;artifactId&gt;spark-core_2.10&lt;/artifactId&gt;            &lt;version&gt;${spark.version}&lt;/version&gt;            &lt;scope&gt;provided&lt;/scope&gt;        &lt;/dependency&gt;    &lt;/dependencies&gt;    &lt;build&gt;        &lt;!--        &lt;sourceDirectory&gt;src/main/scala&lt;/sourceDirectory&gt;        &lt;testSourceDirectory&gt;src/test/scala&lt;/testSourceDirectory&gt;        --&gt;        &lt;plugins&gt;            &lt;plugin&gt;                &lt;groupId&gt;org.scala-tools&lt;/groupId&gt;                &lt;artifactId&gt;maven-scala-plugin&lt;/artifactId&gt;                &lt;executions&gt;                    &lt;execution&gt;                        &lt;goals&gt;                            &lt;goal&gt;compile&lt;/goal&gt;                            &lt;goal&gt;testCompile&lt;/goal&gt;                        &lt;/goals&gt;                    &lt;/execution&gt;                &lt;/executions&gt;                &lt;configuration&gt;                    &lt;scalaVersion&gt;${scala.version}&lt;/scalaVersion&gt;                    &lt;args&gt;                        &lt;arg&gt;-target:jvm-1.5&lt;/arg&gt;                    &lt;/args&gt;                &lt;/configuration&gt;            &lt;/plugin&gt;            &lt;plugin&gt;                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;                &lt;artifactId&gt;maven-eclipse-plugin&lt;/artifactId&gt;                &lt;configuration&gt;                    &lt;downloadSources&gt;true&lt;/downloadSources&gt;                    &lt;buildcommands&gt;                        &lt;buildcommand&gt;ch.epfl.lamp.sdt.core.scalabuilder&lt;/buildcommand&gt;                    &lt;/buildcommands&gt;                    &lt;additionalProjectnatures&gt;                        &lt;projectnature&gt;ch.epfl.lamp.sdt.core.scalanature&lt;/projectnature&gt;                    &lt;/additionalProjectnatures&gt;                    &lt;classpathContainers&gt;                        &lt;classpathContainer&gt;org.eclipse.jdt.launching.JRE_CONTAINER&lt;/classpathContainer&gt;                        &lt;classpathContainer&gt;ch.epfl.lamp.sdt.launching.SCALA_CONTAINER&lt;/classpathContainer&gt;                    &lt;/classpathContainers&gt;                &lt;/configuration&gt;            &lt;/plugin&gt;            &lt;plugin&gt;                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;                &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;                &lt;version&gt;2.4.1&lt;/version&gt;                &lt;executions&gt;                    &lt;!-- Run shade goal on package phase --&gt;                    &lt;execution&gt;                        &lt;phase&gt;package&lt;/phase&gt;                        &lt;goals&gt;                            &lt;goal&gt;shade&lt;/goal&gt;                        &lt;/goals&gt;                        &lt;configuration&gt;                            &lt;transformers&gt;                                &lt;!-- add Main-Class to manifest file --&gt;                                &lt;transformer                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"&gt;                                    &lt;!--&lt;mainClass&gt;com.dajiang.MyDriver&lt;/mainClass&gt;--&gt;                                &lt;/transformer&gt;                            &lt;/transformers&gt;                            &lt;createDependencyReducedPom&gt;false&lt;/createDependencyReducedPom&gt;                        &lt;/configuration&gt;                    &lt;/execution&gt;                &lt;/executions&gt;            &lt;/plugin&gt;        &lt;/plugins&gt;    &lt;/build&gt;    &lt;reporting&gt;        &lt;plugins&gt;            &lt;plugin&gt;                &lt;groupId&gt;org.scala-tools&lt;/groupId&gt;                &lt;artifactId&gt;maven-scala-plugin&lt;/artifactId&gt;                &lt;configuration&gt;                    &lt;scalaVersion&gt;${scala.version}&lt;/scalaVersion&gt;                &lt;/configuration&gt;            &lt;/plugin&gt;        &lt;/plugins&gt;    &lt;/reporting&gt;&lt;/project&gt;</pre>
<p style="color:rgb(51,51,51);"><br></p>
<p style="color:rgb(51,51,51);">● 第一个Scala版本的spark程序</p>
<pre style="color:rgb(51,51,51);">package com.dajiangtai.testimport org.apache.spark.{SparkConf, SparkContext}/**  * Created by lifei on 2016-6-19.  */object MyWordCout {  def main(args: Array[String]): Unit = {    //参数检查    if (args.length &lt; 2) { System.err.println("Usage: MyWordCout") System.exit(1) } //获取参数 val input=args(0) val output=args(1) //创建scala版本的SparkContext val conf=new SparkConf().setAppName("myWordCount") val sc=new SparkContext(conf) //读取数据 val lines=sc.textFile(input) //进行相关计算 val resultRdd=lines.flatMap(_.split(" ")).map((_,1)).reduceByKey(_+_) //保存结果 resultRdd.saveAsTextFile(output) sc.stop() } }</pre>
<p style="color:rgb(51,51,51);"></p>
<pre style="color:rgb(51,51,51);">package com.dajiangtai.test;import org.apache.spark.SparkConf;import org.apache.spark.api.java.JavaPairRDD;import org.apache.spark.api.java.JavaRDD;import org.apache.spark.api.java.JavaSparkContext;import org.apache.spark.api.java.function.FlatMapFunction;import org.apache.spark.api.java.function.Function2;import org.apache.spark.api.java.function.PairFunction;import scala.Tuple2;import java.util.Arrays;/** * Created by lifei on 2016-6-19. */public class MyJavaWordCount {    public static void main(String[] args) {        //参数检查        if(args.length&lt;2){ System.err.println("Usage: MyJavaWordCount"); System.exit(1); } //获取参数 String input=args[0]; String output=args[1]; //创建java版本的SparkContext SparkConf conf=new SparkConf().setAppName("MyJavaWordCount"); JavaSparkContext sc=new JavaSparkContext(conf); //读取数据 JavaRDD inputRdd=sc.textFile(input); //进行相关计算 JavaRDD words=inputRdd.flatMap(new FlatMapFunction() { public Iterable call(String line) throws Exception { return Arrays.asList(line.split(" ")); } }); JavaPairRDD result=words.mapToPair(new PairFunction() { public Tuple2 call(String word) throws Exception { return new Tuple2(word,1); } }).reduceByKey(new Function2() { public Integer call(Integer x, Integer y) throws Exception { return x+y; } }); //保存结果 result.saveAsTextFile(output); //关闭sc sc.stop(); } }</pre>
<h4 style="color:rgb(51,51,51);">运行自己开发第一个Spark程序</h4>
<p style="color:rgb(51,51,51);">● Spark maven 项目打包</p>
<pre style="color:rgb(51,51,51);">mvn package</pre>
<p style="color:rgb(51,51,51);">● 提交Spark 集群运行</p>
<p style="color:rgb(51,51,51);">提交Scala版本的Wordcount</p>
<pre style="color:rgb(51,51,51);">bin/spark-submit --class com.dajiangtai.test.MyWordCount ~/testspark/test-spark-1.0.SNAPSHOT.jar ~/testspark/words.txt ~/testspark/result</pre>
<p style="color:rgb(51,51,51);"><img src="http://ke.dajiangtai.com/content/1913/3.png" alt=""></p>
<p style="color:rgb(51,51,51);">提交Java版本的Wordcount</p>
<pre style="color:rgb(51,51,51);">bin/spark-submit --class com.dajiangtai.test.MyJavaWordCount ~/testspark/test-spark-1.0.SNAPSHOT.jar ~/testspark/words.txt ~/testspark/result1</pre>
<p style="color:rgb(51,51,51);"><img src="http://ke.dajiangtai.com/content/1913/4.png" alt=""></p>
<div>想下载代码的朋友看这里：<a href="http://t.cn/RIElUK3" rel="nofollow">http://t.cn/RIElUK3</a></div>
            </div>
                </div>