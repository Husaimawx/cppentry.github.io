---
layout:     post
title:      hive 的相关关键字以及相应的补全规则
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p style="text-align:center;"><strong></strong></p>
<h1 align="center"><strong>hive <span style="font-family:'宋体';">查询关键字总结</span></strong></h1>
<p> </p>
<p>select<span style="font-family:'宋体';">查询语句请求。它可以是一条完成的查询语句同时还可以是别的查询语句的子语句。</span></p>
<p>SELECT [ALL | DISTINCT] select_expr, select_expr, ...</p>
<p>FROM table_name</p>
<p>[WHERE where_condition]</p>
<p>[GROUP BY col_list]</p>
<p>[ORDER BY col_list]</p>
<p>[CLUSTER BY col_list  | [DISTRIBUTE BY col_list] [SORT BY col_list]</p>
<p>]</p>
<p>[LIMIT number]</p>
<p> </p>
<p><strong>select_expr</strong><span style="font-family:'宋体';">：可以为表（</span>table_name<span style="font-family:'宋体';">） 的多个字段，检测：如果</span>” FROM “ <span style="font-family:'宋体';">后加上表名，则需要填充该表包含的字段信息。</span></p>
<p><strong>table_name</strong><span style="font-family:'宋体';">：填充</span>  “ FROM “ <span style="font-family:'宋体';">之后，需要填充选定数据库的表名。</span></p>
<p><strong>WHERE</strong><span style="font-family:'宋体';">：在</span>where<span style="font-family:'宋体';">查询中支持多个运算符和</span><span style="font-family:Calibri;">UDF</span><span style="font-family:'宋体';">查询，在自动补全时：需要提示表指点的字段，</span><span style="font-family:Calibri;">UDF</span><span style="font-family:'宋体';">和常用运算符的查询信息。（常用运算符在后面会介绍）</span></p>
<p><strong>ALL <span style="font-family:'宋体';">和 </span><span style="font-family:Calibri;">DISTINCT</span></strong> <span style="font-family:'宋体';">：</span>All<span style="font-family:'宋体';">，如果直接</span><span style="font-family:Calibri;">select col
</span><span style="font-family:'宋体';">则默认会添加</span><span style="font-family:Calibri;">ALL</span><span style="font-family:'宋体';">，返回所有有关的列。</span><span style="font-family:Calibri;">DISTINCT</span><span style="font-family:'宋体';">，去除重复列信息。
</span><span style="font-family:Calibri;">ALL </span><span style="font-family:'宋体';">和
</span><span style="font-family:Calibri;">DISTINCT</span><span style="font-family:'宋体';">都是自动补全列名信息。</span></p>
<p>eg: SELECT DISTINCT col1 FROM t1</p>
<p>LEFT/INNER/OUTER/RIGHT<span style="font-family:'宋体';">： </span><span style="font-family:Consolas;">hive</span><span style="font-family:'宋体';">表链接查询使用连接符，后面自动补全表名。</span></p>
<p><strong>AND </strong>:<span style="font-family:'宋体';">查询多个条件之间的连接符，后面自动补全表相关列（若有链接查询，则补全链接多表的字段信息）</span></p>
<p><strong>HAVING</strong><span style="font-family:'宋体';">：在</span>hive 0.7.0<span style="font-family:'宋体';">之后版本加入支持。后面可以跟</span><span style="font-family:Consolas;">GROUP BY</span><span style="font-family:'宋体';">的查询条件信息。可以补全列名和常用运算符信息。</span></p>
<p><strong>GROUP BY</strong><span style="font-family:'宋体';">：聚合函数，后面自动补全列名信息。</span></p>
<p><strong>ORDER BY / SORT BY/DITRIBUTE BY /CLUSTER BY</strong><span style="font-family:'宋体';">：</span></p>
<p>ORDER BY <span style="font-family:'宋体';">后接表字段，依照某一字段排序，在输入字段后，自动补全</span><span style="font-family:Consolas;">DESC</span><span style="font-family:'宋体';">。</span></p>
<p>SORT BY <span style="font-family:'宋体';">，</span><span style="font-family:Consolas;">HIVE
</span><span style="font-family:'宋体';">用此函数对列进行排序，然后将列放入</span><span style="font-family:Consolas;">reducer</span><span style="font-family:'宋体';">执行。后自动补全列名信息。</span><span style="font-family:Consolas;">SORT BY
</span><span style="font-family:'宋体';">只能给予部分有序的情况。</span></p>
<p>DITRIBUTE BY <span style="font-family:'宋体';">后补全列名，设定哪些列信息会被聚合到</span><span style="font-family:Consolas;">REDUCER</span><span style="font-family:'宋体';">中。</span></p>
<p>CLUSTER BY <span style="font-family:'宋体';">是</span><span style="font-family:Consolas;">SORT BY
</span><span style="font-family:'宋体';">和 </span><span style="font-family:Consolas;">DITRIBUTE BY
</span><span style="font-family:'宋体';">的结合，后接列名信息。</span><span style="color:rgb(255,0,0);"><span style="font-family:'宋体';">注意：</span>CLUSTER BY
<span style="font-family:'宋体';">只能是降序，不可自动补全</span><span style="font-family:Consolas;">DESC ASC</span><span style="font-family:'宋体';">。</span></span></p>
<p><strong>/*+ MAPJOIN(tableName) */<span style="font-family:'宋体';">：</span> </strong><span style="font-family:'宋体';">如果是</span>join<span style="font-family:'宋体';">比较小的表，那么在</span><span style="font-family:Consolas;">MAP</span><span style="font-family:'宋体';">阶段加载到内存中处理。</span><span style="font-family:Consolas;">MAPREJOIN
</span><span style="font-family:'宋体';">默认会自动补全</span><span style="font-family:Consolas;">tableName.</span><span style="font-family:'宋体';">如果出现</span><span style="font-family:Consolas;">MAPJOIN</span><span style="font-family:'宋体';">需要自动补全</span><span style="font-family:Consolas;">/*
  */</span></p>
<p>UNION:<span style="font-family:'宋体';">用于多个</span><span style="font-family:Consolas;">SELECT</span><span style="font-family:'宋体';">语句结果的合并为单个结果集。自动补全</span><span style="font-family:Consolas;">ALL(</span><span style="font-family:'宋体';">也可以不补</span><span style="font-family:Consolas;">)</span><span style="font-family:'宋体';">或者</span><span style="font-family:Consolas;">SELECT</span><span style="font-family:'宋体';">。</span></p>
<p>eg<span style="font-family:'宋体';">：</span>SELECT   av.uid   FROM   action_video   UNION   ALL  SELECT  uid  AS  uid</p>
<p>eg:SELECT .... UNION SELECT ....</p>
<p> </p>
<p><strong>TABLESAMPLE</strong>: HIVE<span style="font-family:'宋体';">查询信息取样。</span></p>
<p>eg<span style="font-family:'宋体';">：</span>SELECT * FROM <span style="font-family:'宋体';">
表名</span> TABLESAMPLE (50 PERCENT/rows);</p>
<p>eg:  SELECT COUNT(1) FROM  lxw1 <span style="color:rgb(255,0,0);">TABLESAMPLE (BUCKET</span> 1 OUT OF 10 ON rand());</p>
<p><span style="font-family:'宋体';">自动补全</span> TABLESAMPLE<span style="font-family:'宋体';">取样信息，后接数字则补全</span><span style="font-family:Calibri;">PERCENT
</span><span style="font-family:'宋体';">或 </span><span style="font-family:Calibri;">ROWS
</span><span style="font-family:'宋体';">，取</span><span style="font-family:Calibri;">50%</span><span style="font-family:'宋体';">信息或者</span><span style="font-family:Calibri;">50</span><span style="font-family:'宋体';">行；还可以补全</span><span style="font-family:Calibri;">BUCKET</span><span style="font-family:'宋体';">桶取样，这个补全比较麻烦，具体看样例。</span></p>
<p><strong>EXIST: </strong><span style="font-family:'宋体';">表明是否存在，可以接（</span>Select .. from
<span style="font-family:'宋体';">表名）</span><strong></strong></p>
<p><strong><span style="font-family:'宋体';">虚拟列：</span> INPUT_FILE_NAME</strong>.<span style="font-family:'宋体';">在</span><span style="font-family:Consolas;">map task</span><span style="font-family:'宋体';">中的输入文件名</span></p>
<p>         <strong>BLOCK_OFFSET_INSIDE_FILE</strong>  <span style="font-family:'宋体';">当前全局文件位置</span></p>
<p><span style="font-family:'宋体';">位于</span>select <span style="font-family:'宋体';">关键字后自动补全此类关键字。</span></p>
<p><strong>Lateral view </strong>:  lateral<span style="font-family:'宋体';">后自动补全</span><span style="font-family:Calibri;">view</span><span style="font-family:'宋体';">，横向视图关键字，</span></p>
<p><span style="font-family:'宋体';">与</span>udf<span style="font-family:'宋体';">函数进行联合使用 ：
</span>LATERAL VIEW udtf(expression) tableAlias AS columnAlias (<span style="color:rgb(0,0,255);">','</span><span style="color:rgb(51,51,51);">  </span>columnAlias)*   view<span style="font-family:'宋体';">后自动补全</span><span style="font-family:Consolas;">udtf</span><span style="font-family:'宋体';">函数名（用户选中的）</span></p>
<p><span style="font-family:'宋体';">接</span>from<span style="font-family:'宋体';">后： </span>
<span style="font-family:Consolas;">from table (lateralView) </span><span style="font-family:'宋体';">字段名   自动补全字段信息</span></p>
<p> <img src="https://img-blog.csdn.net/20170113143015861?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZ2FvcWlkYQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p> </p>
<p>将列拆分开平铺每个对应的值。</p>
<p><strong>OVER</strong><span style="font-family:'宋体';">：</span> <span style="font-family:'宋体';">
开窗函数，用法：</span></p>
<p><strong>over<span style="font-family:'宋体';">后自动补全</span></strong></p>
<p><strong>over<span style="font-family:'宋体';">（</span><span style="font-family:Calibri;">order by salary</span> between 2 preceding and 2 following<span style="font-family:'宋体';">）</span> </strong><span style="font-family:'宋体';">加</span>2<span style="font-family:'宋体';">和减</span><span style="font-family:Calibri;">2</span><span style="font-family:'宋体';">的范围。</span></p>
<p><strong>over<span style="font-family:'宋体';">（</span><span style="font-family:Calibri;">partition by deptno</span><span style="font-family:'宋体';">）</span> </strong></p>
<p><strong>OVER <span style="font-family:'宋体';">前自动补全有 </span><span style="font-family:Calibri;">row_number()    rank()     dense_rank()   first_value()   last_value()    lag()   lead()   </span></strong></p>
<p><strong> </strong></p>
<p><strong>partition by :</strong><span style="font-family:'宋体';">分区。后接字段，获取当前字段的分区信息，做</span>order by<span style="font-family:'宋体';">等。不用全表查字段所有数据。</span><strong></strong></p>
<p><strong> </strong></p>
<p><strong><span style="font-family:'宋体';">子查询补全策略：</span></strong></p>
<p>1.<strong>FROM <span style="font-family:'宋体';">后补全：</span></strong> from <span style="font-family:'宋体';">
后接（</span><span style="font-family:Consolas;">SELECT</span><span style="font-family:'宋体';">）</span><strong></strong></p>
<p><strong>2.WHERE<span style="font-family:'宋体';">后补全：</span></strong><span style="font-family:'宋体';">后接字段，接运算符和（</span>SELECT<span style="font-family:'宋体';">）
</span><span style="font-family:Consolas;">eg where id = (select id from ..)</span></p>
<p> </p>
<p> </p>
<p> </p>
<p><strong>hive <span style="font-family:'宋体';">自带函数：</span></strong></p>
<p><strong>=, &lt;&gt; , &lt; , &lt;=, &gt;, &gt;=, , +, -, *, /, % ,&amp; ,| , ^, ~, or, and <span style="font-family:'宋体';">
。</span></strong>基本符号之后补全列名</p>
<p><strong>IS NULL, IS NOTNULL, LIKE, RLIKE, REGEXP</strong> <span style="font-family:'宋体';">自动补全关键字</span><strong></strong></p>
<p><strong> </strong></p>
<p><strong>round </strong><span style="font-family:'宋体';">自动补全关键字</span> <strong>round(col)
</strong>后补全列名<strong></strong></p>
<p><strong>round(?),  round(?,?) </strong>取整指定精度</p>
<p> </p>
<p><a href="http://blog.csdn.net/wisgood/article/details/17376393" rel="nofollow"><u><span style="color:rgb(0,0,255);">http://blog.csdn.net/wisgood/article/details/17376393</span></u></a></p>
<p> </p>
<p> </p>
<h3><strong>时间函数：</strong></h3>
<p>1. UNIX <span style="font-family:'宋体';">时间戳转日期：</span><span style="font-family:Calibri;">from_unixtime</span>    from_unixtime(bigint unixtime[, string format])</p>
<p>bigint unixtime<span style="font-family:'宋体';">可以为 列名或者用户输入的信息，此处需自动补全列名</span></p>
<p>from_unixtime<span style="font-family:'宋体';">（</span><span style="font-family:Calibri;">expr</span><span style="font-family:'宋体';">）</span></p>
<p>2.<span style="font-family:'宋体';">获取当前</span>UNIX<span style="font-family:'宋体';">时间戳
</span>unix_timestamp <span style="font-family:'宋体';">自动补全函数</span></p>
<p>3.<span style="font-family:'宋体';">日期转</span>UNIX<span style="font-family:'宋体';">时间戳函数  </span><span style="font-family:Calibri;">unix_timestamp(String date)   </span><span style="font-family:'宋体';">其中可以接列名</span></p>
<p>4.<span style="font-family:'宋体';">指定格式转</span><span style="font-family:Calibri;">UNIX</span><span style="font-family:'宋体';">时间戳函数：
</span>unix_timestamp(string date, string pattern)</p>
<p> </p>
<p>unix_timestamp <span style="font-family:'宋体';">格式类型：</span></p>
<p>unix_timestamp()  </p>
<p>unix_timestamp(String date)</p>
<p>unix_timestamp(String date, format)</p>
<p> </p>
<p>5.<span style="font-family:'宋体';">时间日期转日期函数</span> to_date(String timestamp) <span style="font-family:'宋体';">
返回日期时间字段中日期部分</span></p>
<p>6.<span style="font-family:'宋体';">日期转年</span>   year(String date)  <span style="font-family:'宋体';">返回日期时间中的年</span></p>
<p>7.<span style="font-family:'宋体';">日期转月</span>   month(String date)</p>
<p>8.<span style="font-family:'宋体';">日期转天</span>   day(String date)</p>
<p>9.<span style="font-family:'宋体';">日期转小时</span> hour(String date)</p>
<p>10.<span style="font-family:'宋体';">日期转分钟</span>   minute(String date)</p>
<p>11.<span style="font-family:'宋体';">日期转秒</span>     second(String date)</p>
<p>12.<span style="font-family:'宋体';">日期转周函数</span>   weekofyear(String date)</p>
<p>13.<span style="font-family:'宋体';">日期比较函数</span>   datediff(String enddate, String startdate)  <span style="font-family:'宋体';">结束日期减开始日期 差几天</span></p>
<p>14.<span style="font-family:'宋体';">日期增加函数</span>   date_add(String date, int days)</p>
<p>15.<span style="font-family:'宋体';">日期减少函数</span>   date_sub(String date, int days)
</p>
<p> </p>
<h3><strong>条件函数：</strong></h3>
<p>1. if <span style="font-family:'宋体';">： </span>if(boolean testCondition, T valueTrue, T valueFalseOrNull) </p>
<p>当条件testCondition为TRUE时，返回valueTrue；否则返回valueFalseOrNull</p>
<p> </p>
<p>2. COALESCE  <span style="font-family:'宋体';">非空查找函数  </span>COALESCE(T v1, T v2,…) </p>
<p>返回参数中的第一个非空值；如果所有值都为NULL，那么返回NULL</p>
<p> </p>
<p>3. CASE  <span style="font-family:'宋体';">条件判断函数 </span>CASE a WHEN b THEN c [WHEN d THEN e]* [ELSE f] END</p>
<p>如果a等于b，那么返回c；如果a等于d，那么返回e；否则返回f</p>
<p> </p>
<p>字符串函数：</p>
<p>1. length :   length(String A)  <span style="font-family:'宋体';">返回</span><span style="font-family:Calibri;">A</span><span style="font-family:'宋体';">的长度</span></p>
<p>2. reverse :  reverse(String A)  <span style="font-family:'宋体';">字符串反转函数</span></p>
<p>3. concat :  concat(String A, String B) <span style="font-family:'宋体';">字符串链接函数</span></p>
<p>4. concat_ws :  concat_ws(string SEP, string A, string B…) SEP<span style="font-family:'宋体';">分隔符  返回</span><span style="font-family:Calibri;">ASEPBSEP..</span></p>
<p>5. substr,substring:  substr(string A, int start),substring(string A, int start)  <span style="font-family:'宋体';">返回字符串</span>A<span style="font-family:'宋体';">从</span><span style="font-family:Calibri;">start</span><span style="font-family:'宋体';">位置到结尾的字符串</span></p>
<p>6. substr,substring:  substr(string A, int start, int len),substring(string A, intstart, int len) <span style="font-family:'宋体';">字符串截取函数</span>   <span style="font-family:'宋体';">返回字符串</span>A<span style="font-family:'宋体';">从</span><span style="font-family:Calibri;">start</span><span style="font-family:'宋体';">位置开始，长度为</span><span style="font-family:Calibri;">len</span><span style="font-family:'宋体';">的字符串</span></p>
<p> </p>
<p>substr,substring: <span style="font-family:'宋体';">主要有两种格式：</span></p>
<p>substr(string A, int start),substring(string A, int start)</p>
<p>substr(string A, int start, int len),substring(string A, intstart, int len) </p>
<p> </p>
<p>7. upper, ucase : upper(String A)  ucase(String A) <span style="font-family:'宋体';">
字符串转大写</span></p>
<p>8. lower, lcase: lower(String A)  lcase(String A)<span style="font-family:'宋体';">字符串转小写</span></p>
<p>9. trim<span style="font-family:'宋体';">： </span><span style="font-family:Calibri;">trim(String A)
</span><span style="font-family:'宋体';">去空格函数</span></p>
<p>10. ltrim: ltrim(String A) <span style="font-family:'宋体';">去左边空格函数</span></p>
<p>11. rtrim: rtrim(String A) <span style="font-family:'宋体';">右边去空格函数</span></p>
<p>12. regexp_replace: regexp_replace(string A, string B, string C)<span style="font-family:'宋体';">将字符串</span><span style="font-family:Calibri;">A</span><span style="font-family:'宋体';">中的符合</span><span style="font-family:Calibri;">java</span><span style="font-family:'宋体';">正则表达式</span><span style="font-family:Calibri;">B</span><span style="font-family:'宋体';">的部分替换为</span><span style="font-family:Calibri;">C</span><span style="font-family:'宋体';">。注意，在有些情况下要使用转义字符</span><span style="font-family:Calibri;">,</span><span style="font-family:'宋体';">类似</span><span style="font-family:Calibri;">oracle</span><span style="font-family:'宋体';">中的</span><span style="font-family:Calibri;">regexp_replace</span><span style="font-family:'宋体';">函数。</span></p>
<p>13. regexp_extract: <span style="font-family:'宋体';">正则表达式解析函数，</span></p>
<p><span style="font-family:'宋体';">格式：</span> regexp_extract(string subject, string pattern, int index) <span style="font-family:'宋体';">将字符串</span>subject<span style="font-family:'宋体';">按照</span><span style="font-family:Calibri;">pattern</span><span style="font-family:'宋体';">正则表达式的规则拆分，返回</span><span style="font-family:Calibri;">index</span><span style="font-family:'宋体';">指定的字符。</span></p>
<p>14. parse_url:  URL<span style="font-family:'宋体';">解析函</span><span style="font-family:'宋体';">数</span>
</p>
<p><span style="font-family:'宋体';">格式：</span>parse_url(string urlString, string partToExtract [, stringkeyToExtract])  </p>
<p><span style="font-family:'宋体';">返回</span>URL<span style="font-family:'宋体';">中指定的部分。</span><span style="font-family:Calibri;">partToExtract</span><span style="font-family:'宋体';">的有效值为：</span><span style="font-family:Calibri;">HOST, PATH, QUERY, REF, PROTOCOL, AUTHORITY,
 FILE, and USERINFO.</span></p>
<p>15. get_json_object: json<span style="font-family:'宋体';">解析函数 </span></p>
<p><span style="font-family:'宋体';">格式：</span>get_json_object(string json_string, string path) <span style="font-family:'宋体';">解析</span>json<span style="font-family:'宋体';">的字符串</span><span style="font-family:Calibri;">json_string,</span><span style="font-family:'宋体';">返回</span><span style="font-family:Calibri;">path</span><span style="font-family:'宋体';">指定的内容。如果输入的</span><span style="font-family:Calibri;">json</span><span style="font-family:'宋体';">字符串无效，那么返回</span><span style="font-family:Calibri;">NULL</span><span style="font-family:'宋体';">。</span></p>
<p>16. space : space(int n) <span style="font-family:'宋体';">返回长度为</span><span style="font-family:Calibri;">n</span><span style="font-family:'宋体';">的字符串</span></p>
<p>17. repeat <span style="font-family:'宋体';">： </span></p>
<p><br clear="all"></p>
<br>            </div>
                </div>