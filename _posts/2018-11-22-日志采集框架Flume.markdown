---
layout:     post
title:      日志采集框架Flume
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p>http://blog.csdn.net/a2011480169/article/details/51544664<br></p>
<p>1.1 Flume介绍</p>
<p>1.1.1 概述<br>
Flume是一个分布式、可靠、和高可用的海量日志采集、聚合和传输的系统。<br>
Flume可以采集文件，socket数据包等各种形式源数据，又可以将采集到的数据输出到HDFS、hbase、hive、kafka等众多外部存储系统中<br>
一般的采集需求，通过对flume的简单配置即可实现<br>
Flume针对特殊场景也具备良好的自定义扩展能力，因此，flume可以适用于大部分的日常数据采集场景<br></p>
<p><br></p>
<p>1.1.2 运行机制<br>
1、Flume分布式系统中最核心的角色是agent，flume采集系统就是由一个个agent所连接起来形成<br></p>
<p>2、每一个agent相当于一个数据传递员(Source 到 Channel 到 Sink之间传递数据的形式是Event事件；Event事件是一个数据流单元。)，内部有三个组件：<br>
a)Source：采集源，用于跟数据源对接，以获取数据<br>
b)Sink：下沉地，采集数据的传送目的，用于往下一级agent传递数据或者往最终存储系统传递数据<br>
c)Channel：angent内部的数据传输通道，用于从source将数据传递到sink<br></p>
<p><br></p>
<p><img src="https://img-blog.csdn.net/20170421150805225?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></p>
<p><br></p>
<p>1.1.4 Flume采集系统结构图<br></p>
<p>1. 简单结构<br>
单个agent采集数据<br></p>
<p><img src="https://img-blog.csdn.net/20170421150922663?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></p>
<p><br></p>
<p>2. 复杂结构<br>
多级agent之间串联<br></p>
<p><img src="https://img-blog.csdn.net/20170421151048976?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></p>
<p>1.2 Flume实战案例<br>
1.2.1 Flume的安装部署<br>
1、Flume的安装非常简单，只需要解压即可，当然，前提是已有hadoop环境<br>
上传安装包到数据源所在节点上<br>
然后解压  tar -zxvf apache-flume-1.6.0-bin.tar.gz<br>
然后进入flume的目录，修改conf下的flume-env.sh，在里面配置JAVA_HOME</p>
<p>2、根据数据采集的需求配置采集方案，描述在配置文件中(文件名可任意自定义)<br>
3、指定采集方案配置文件，在相应的节点上启动flume agent<br><br><br>
先用一个最简单的例子来测试一下程序环境是否正常<br>
1、先在flume的conf目录下新建一个文件<br>
vi   netcat-logger.conf<br></p>
<p></p>
<pre><code class="language-html"># 定义这个agent中各组件的名字
a1.sources = r1
a1.sinks = k1
a1.channels = c1

# 描述和配置source组件：r1
a1.sources.r1.type = netcat
a1.sources.r1.bind = localhost
a1.sources.r1.port = 44444

# 描述和配置sink组件：k1
a1.sinks.k1.type = logger

# 描述和配置channel组件，此处使用是内存缓存的方式
a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100

# 描述和配置source  channel   sink之间的连接关系
a1.sources.r1.channels = c1
a1.sinks.k1.channel = c1</code></pre>
<p></p>
<p>2、启动agent去采集数据<br></p>
<p></p>
<pre><code class="language-html">bin/flume-ng agent -c conf -f conf/netcat-logger.conf -n a1  -Dflume.root.logger=INFO,console</code></pre><br>
c conf   指定flume自身的配置文件所在目录<br>
-f conf/netcat-logger.con  指定我们所描述的采集方案<br>
-n a1  指定我们这个agent的名字<br><p></p>
3、测试<br>
先要往agent采集监听的端口上发送数据，让agent有数据可采<br>
随便在一个能跟agent节点联网的机器上<br>
telnet anget-hostname  port   （telnet localhost 44444） <br><p><img src="https://img-blog.csdn.net/20170421151440680?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDY5NTE4OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></p>
<p>1.2.2 采集案例<br>
1、采集目录到HDFS<br>
采集需求：某服务器的某特定目录下，会不断产生新的文件，每当有新文件出现，就需要把文件采集到HDFS中去<br>
根据需求，首先定义以下3大要素<br>
采集源，即source——监控文件目录 :  spooldir<br>
下沉目标，即sink——HDFS文件系统  :  hdfs sink<br>
source和sink之间的传递通道——channel，可用file channel 也可以用内存channel<br><br><br>
配置文件编写：<br></p>
<p></p>
<pre><code class="language-html">#定义三大组件的名称
agent1.sources = source1
agent1.sinks = sink1
agent1.channels = channel1

# 配置source组件
agent1.sources.source1.type = spooldir
agent1.sources.source1.spoolDir = /home/hadoop/logs/
agent1.sources.source1.fileHeader = false

#配置拦截器
agent1.sources.source1.interceptors = i1
agent1.sources.source1.interceptors.i1.type = host
agent1.sources.source1.interceptors.i1.hostHeader = hostname

# 配置sink组件
agent1.sinks.sink1.type = hdfs
agent1.sinks.sink1.hdfs.path =hdfs://hdp-node-01:9000/weblog/flume-collection/%y-%m-%d/%H-%M
agent1.sinks.sink1.hdfs.filePrefix = access_log
agent1.sinks.sink1.hdfs.maxOpenFiles = 5000
agent1.sinks.sink1.hdfs.batchSize= 100
agent1.sinks.sink1.hdfs.fileType = DataStream
agent1.sinks.sink1.hdfs.writeFormat =Text
agent1.sinks.sink1.hdfs.rollSize = 102400
agent1.sinks.sink1.hdfs.rollCount = 1000000
agent1.sinks.sink1.hdfs.rollInterval = 60
#agent1.sinks.sink1.hdfs.round = true
#agent1.sinks.sink1.hdfs.roundValue = 10
#agent1.sinks.sink1.hdfs.roundUnit = minute
agent1.sinks.sink1.hdfs.useLocalTimeStamp = true
# Use a channel which buffers events in memory
agent1.channels.channel1.type = memory
agent1.channels.channel1.keep-alive = 120
agent1.channels.channel1.capacity = 500000
agent1.channels.channel1.transactionCapacity = 600

# Bind the source and sink to the channel
agent1.sources.source1.channels = channel1
agent1.sinks.sink1.channel = channel1</code></pre><br>
Channel参数解释：<br>
capacity：默认该通道中最大的可以存储的event数量<br>
trasactionCapacity：每次最大可以从source中拿到或者送到sink中的event数量<br>
keep-alive：event添加到通道中或者移出的允许时间<br><p></p>
<p>2、采集文件到HDFS<br>
采集需求：比如业务系统使用log4j生成的日志，日志内容不断增加，需要把追加到日志文件中的数据实时采集到hdfs<br><br><br>
根据需求，首先定义以下3大要素<br>
采集源，即source——监控文件内容更新 :  exec  ‘tail -F file’<br>
下沉目标，即sink——HDFS文件系统  :  hdfs sink<br>
Source和sink之间的传递通道——channel，可用file channel 也可以用 内存channel<br><br><br>
配置文件编写：<br></p>
<p></p>
<pre><code class="language-html">agent1.sources = source1
agent1.sinks = sink1
agent1.channels = channel1

# Describe/configure tail -F source1
agent1.sources.source1.type = exec
agent1.sources.source1.command = tail -F /home/hadoop/logs/access_log
agent1.sources.source1.channels = channel1

#configure host for source
agent1.sources.source1.interceptors = i1
agent1.sources.source1.interceptors.i1.type = host
agent1.sources.source1.interceptors.i1.hostHeader = hostname

# Describe sink1
agent1.sinks.sink1.type = hdfs
#a1.sinks.k1.channel = c1
agent1.sinks.sink1.hdfs.path =hdfs://hdp-node-01:9000/weblog/flume-collection/%y-%m-%d/%H-%M
agent1.sinks.sink1.hdfs.filePrefix = access_log
agent1.sinks.sink1.hdfs.maxOpenFiles = 5000
agent1.sinks.sink1.hdfs.batchSize= 100
agent1.sinks.sink1.hdfs.fileType = DataStream
agent1.sinks.sink1.hdfs.writeFormat =Text
agent1.sinks.sink1.hdfs.rollSize = 102400
agent1.sinks.sink1.hdfs.rollCount = 1000000
agent1.sinks.sink1.hdfs.rollInterval = 60
agent1.sinks.sink1.hdfs.round = true
agent1.sinks.sink1.hdfs.roundValue = 10
agent1.sinks.sink1.hdfs.roundUnit = minute
agent1.sinks.sink1.hdfs.useLocalTimeStamp = true

# Use a channel which buffers events in memory
agent1.channels.channel1.type = memory
agent1.channels.channel1.keep-alive = 120
agent1.channels.channel1.capacity = 500000
agent1.channels.channel1.transactionCapacity = 600

# Bind the source and sink to the channel
agent1.sources.source1.channels = channel1
agent1.sinks.sink1.channel = channel1</code></pre>1.3 更多source和sink组件<br>
Flume支持众多的source和sink类型，详细手册可参考官方文档<br>
http://flume.apache.org/FlumeUserGuide.html<br><br><p></p>
            </div>
                </div>