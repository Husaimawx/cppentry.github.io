---
layout:     post
title:      Flume ng 实战图解篇
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p>转自：http://www.cnblogs.com/smartloli/p/4468708.html</p>
<p><br>
</p>
<p></p>
<div id="cnblogs_post_body" style="margin:0px 0px 20px; padding:0px; word-break:break-word; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
<h1 style="font-size:28px; margin:0px; padding:0px">1.概述</h1>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　今天补充一篇关于Flume的博客，前面在讲解高可用的Hadoop平台的时候遗漏了这篇，本篇博客为大家讲述以下内容：</p>
<ul style="font-size:14px; margin:0px 0px 0px 30px; padding:0px; word-break:break-all">
<li style="margin:0px 0px 1em; padding:0px; list-style:disc">Flume NG简述</li><li style="margin:0px 0px 1em; padding:0px; list-style:disc">单点Flume NG搭建、运行</li><li style="margin:0px 0px 1em; padding:0px; list-style:disc">高可用Flume NG搭建</li><li style="margin:0px 0px 1em; padding:0px; list-style:disc">Failover测试</li><li style="margin:0px 0px 1em; padding:0px; list-style:disc">截图预览</li></ul>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　下面开始今天的博客介绍。</p>
<h1 style="font-size:28px; margin:0px; padding:0px">2.Flume NG简述</h1>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　Flume NG是一个分布式，高可用，可靠的系统，它能将不同的海量数据收集，移动并存储到一个数据存储系统中。轻量，配置简单，适用于各种日志收集，并支持Failover和负载均衡。并且它拥有非常丰富的组件。Flume NG采用的是三层架构：Agent层，Collector层和Store层，每一层均可水平拓展。其中Agent包含Source，Channel和Sink，三者组建了一个Agent。三者的职责如下所示：</p>
<ul style="font-size:14px; margin:0px 0px 0px 30px; padding:0px; word-break:break-all">
<li style="margin:0px 0px 1em; padding:0px; list-style:disc">Source：用来消费（收集）数据源到Channel组件中</li><li style="margin:0px 0px 1em; padding:0px; list-style:disc">Channel：中转临时存储，保存所有Source组件信息</li><li style="margin:0px 0px 1em; padding:0px; list-style:disc">Sink：从Channel中读取，读取成功后会删除Channel中的信息</li></ul>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　下图是Flume NG的架构图，如下所示：</p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<img src="http://images.cnitblog.com/blog2015/666745/201504/301134200832379.png" alt="" style="margin:0px; padding:0px; border:0px; max-width:900px"></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　图中描述了，从外部系统（Web Server）中收集产生的日志，然后通过Flume的Agent的Source组件将数据发送到临时存储Channel组件，最后传递给Sink组件，Sink组件直接把数据存储到HDFS文件系统中。</p>
<h1 style="font-size:28px; margin:0px; padding:0px">3.单点Flume NG搭建、运行</h1>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　我们在熟悉了Flume NG的架构后，我们先搭建一个单点Flume收集信息到HDFS集群中，由于资源有限，本次直接在之前的高可用Hadoop集群上搭建Flume。</p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　场景如下：在NNA节点上搭建一个Flume NG，将本地日志收集到HDFS集群。</p>
<h2 style="font-size:21px; margin:15px auto 2px; padding:0px">3.1基础软件</h2>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　在搭建Flume NG之前，我们需要准备必要的软件，具体下载地址如下所示：</p>
<ul style="font-size:14px; margin:0px 0px 0px 30px; padding:0px; word-break:break-all">
<li style="margin:0px 0px 1em; padding:0px; list-style:disc">Flume　　<a target="_blank" href="http://www.apache.org/dyn/closer.cgi/flume/1.5.2/apache-flume-1.5.2-bin.tar.gz" rel="nofollow" style="margin:0px; padding:0px; color:black">《下载地址》</a></li></ul>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　JDK由于之前在安装Hadoop集群时已经配置过，这里就不赘述了，若需要配置的同学，可参考《<a target="_blank" id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_16" class="postTitle2" href="http://www.cnblogs.com/smartloli/p/4298430.html" rel="nofollow" style="margin:0px; padding:0px; color:black">配置高可用的Hadoop平台</a>》。</p>
<h2 style="font-size:21px; margin:15px auto 2px; padding:0px">3.2安装与配置</h2>
<ul style="font-size:14px; margin:0px 0px 0px 30px; padding:0px; word-break:break-all">
<li style="margin:0px 0px 1em; padding:0px; list-style:disc">安装</li></ul>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　首先，我们解压flume安装包，命令如下所示：</p>
<div class="cnblogs_code" style="font-size:12px!important; margin:5px 0px; padding:5px; border:1px solid rgb(204,204,204); overflow:auto; font-family:'Courier New'!important; background-color:rgb(245,245,245)">
<pre style="margin-top:0px; margin-bottom:0px; padding:0px; white-space:pre-wrap; word-wrap:break-word; font-family:'Courier New'!important">[hadoop@nna ~]$ <span style="margin:0px; padding:0px; color:rgb(0,0,255); line-height:1.5!important">tar</span> -zxvf apache-flume-<span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">1.5</span>.<span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">2</span>-bin.<span style="margin:0px; padding:0px; color:rgb(0,0,255); line-height:1.5!important">tar</span>.gz</pre>
</div>
<ul style="font-size:14px; margin:0px 0px 0px 30px; padding:0px; word-break:break-all">
<li style="margin:0px 0px 1em; padding:0px; list-style:disc">配置</li></ul>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　环境变量配置内容如下所示：</p>
<div class="cnblogs_code" style="font-size:12px!important; margin:5px 0px; padding:5px; border:1px solid rgb(204,204,204); overflow:auto; font-family:'Courier New'!important; background-color:rgb(245,245,245)">
<pre style="margin-top:0px; margin-bottom:0px; padding:0px; white-space:pre-wrap; word-wrap:break-word; font-family:'Courier New'!important">export FLUME_HOME=/home/hadoop/flume-<span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">1.5</span>.<span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">2</span><span style="margin:0px; padding:0px; line-height:1.5!important">
export PATH</span>=$PATH:$FLUME_HOME/bin</pre>
</div>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　flume-conf.properties</p>
<div class="cnblogs_code" style="font-size:12px!important; margin:5px 0px; padding:5px; border:1px solid rgb(204,204,204); overflow:auto; font-family:'Courier New'!important; background-color:rgb(245,245,245)">
<div class="cnblogs_code_toolbar" style="margin:5px 0px 0px; padding:0px"><span class="cnblogs_code_copy" style="margin:0px; padding:0px 5px 0px 0px; line-height:1.5!important"><a target="_blank" title="复制代码" style="margin:0px; padding:0px; text-decoration:underline; border:none!important"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="margin:0px; padding:0px; max-width:900px; border:none!important"></a></span></div>
<pre style="margin-top:0px; margin-bottom:0px; padding:0px; white-space:pre-wrap; word-wrap:break-word; font-family:'Courier New'!important"><span style="margin:0px; padding:0px; line-height:1.5!important">#agent1 name
agent1.sources</span>=<span style="margin:0px; padding:0px; line-height:1.5!important">source1
agent1.sinks</span>=<span style="margin:0px; padding:0px; line-height:1.5!important">sink1
agent1.channels</span>=<span style="margin:0px; padding:0px; line-height:1.5!important">channel1


#Spooling Directory
#set source1
agent1.sources.source1.type</span>=<span style="margin:0px; padding:0px; line-height:1.5!important">spooldir
agent1.sources.source1.spoolDir</span>=/home/hadoop/<span style="margin:0px; padding:0px; color:rgb(0,0,255); line-height:1.5!important">dir</span>/<span style="margin:0px; padding:0px; line-height:1.5!important">logdfs
agent1.sources.source1.channels</span>=<span style="margin:0px; padding:0px; line-height:1.5!important">channel1
agent1.sources.source1.fileHeader </span>= <span style="margin:0px; padding:0px; color:rgb(0,0,255); line-height:1.5!important">false</span><span style="margin:0px; padding:0px; line-height:1.5!important">
agent1.sources.source1.interceptors </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> i1
agent1.sources.source1.interceptors.i1.type </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> timestamp

#set sink1
agent1.sinks.sink1.type</span>=<span style="margin:0px; padding:0px; line-height:1.5!important">hdfs
agent1.sinks.sink1.hdfs.path</span>=/home/hdfs/flume/<span style="margin:0px; padding:0px; line-height:1.5!important">logdfs
agent1.sinks.sink1.hdfs.fileType</span>=<span style="margin:0px; padding:0px; line-height:1.5!important">DataStream
agent1.sinks.sink1.hdfs.writeFormat</span>=<span style="margin:0px; padding:0px; line-height:1.5!important">TEXT
agent1.sinks.sink1.hdfs.rollInterval</span>=<span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">1</span><span style="margin:0px; padding:0px; line-height:1.5!important">
agent1.sinks.sink1.channel</span>=<span style="margin:0px; padding:0px; line-height:1.5!important">channel1
agent1.sinks.sink1.hdfs.filePrefix</span>=%Y-%m-%<span style="margin:0px; padding:0px; line-height:1.5!important">d

#set channel1
agent1.channels.channel1.type</span>=<span style="margin:0px; padding:0px; color:rgb(0,0,255); line-height:1.5!important">file</span><span style="margin:0px; padding:0px; line-height:1.5!important">
agent1.channels.channel1.checkpointDir</span>=/home/hadoop/<span style="margin:0px; padding:0px; color:rgb(0,0,255); line-height:1.5!important">dir</span>/logdfstmp/<span style="margin:0px; padding:0px; line-height:1.5!important">point
agent1.channels.channel1.dataDirs</span>=/home/hadoop/<span style="margin:0px; padding:0px; color:rgb(0,0,255); line-height:1.5!important">dir</span>/logdfstmp</pre>
<div class="cnblogs_code_toolbar" style="margin:5px 0px 0px; padding:0px"><span class="cnblogs_code_copy" style="margin:0px; padding:0px 5px 0px 0px; line-height:1.5!important"><a target="_blank" title="复制代码" style="margin:0px; padding:0px; text-decoration:underline; border:none!important"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="margin:0px; padding:0px; max-width:900px; border:none!important"></a></span></div>
</div>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　flume-env.sh</p>
<div class="cnblogs_code" style="font-size:12px!important; margin:5px 0px; padding:5px; border:1px solid rgb(204,204,204); overflow:auto; font-family:'Courier New'!important; background-color:rgb(245,245,245)">
<pre style="margin-top:0px; margin-bottom:0px; padding:0px; white-space:pre-wrap; word-wrap:break-word; font-family:'Courier New'!important">JAVA_HOME=/usr/java/jdk1.<span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">7</span></pre>
</div>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　<span style="margin:0px; padding:0px; color:rgb(255,0,0)">注：配置中的目录若不存在，需提前创建。</span></p>
<h2 style="font-size:21px; margin:15px auto 2px; padding:0px">3.3启动</h2>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　启动命令如下所示：</p>
<div class="cnblogs_code" style="font-size:12px!important; margin:5px 0px; padding:5px; border:1px solid rgb(204,204,204); overflow:auto; font-family:'Courier New'!important; background-color:rgb(245,245,245)">
<pre style="margin-top:0px; margin-bottom:0px; padding:0px; white-space:pre-wrap; word-wrap:break-word; font-family:'Courier New'!important">flume-ng agent -n agent1 -c conf -f flume-conf.properties -Dflume.root.logger=DEBUG,console</pre>
</div>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　注：命令中的agent1表示配置文件中的Agent的Name，如配置文件中的agent1。flume-conf.properties表示配置文件所在配置，需填写准确的配置文件路径。</p>
<h2 style="font-size:21px; margin:15px auto 2px; padding:0px">3.4效果预览</h2>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<img src="http://images.cnitblog.com/blog2015/666745/201504/301152442402786.png" alt="" style="margin:0px; padding:0px; border:0px; max-width:900px"></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<img src="http://images.cnitblog.com/blog2015/666745/201504/301154001306202.png" alt="" style="margin:0px; padding:0px; border:0px; max-width:900px"></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<img src="http://images.cnitblog.com/blog2015/666745/201504/301154402405814.png" alt="" style="margin:0px; padding:0px; border:0px; max-width:900px"></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　之后，成功上传后本地目的会被标记完成。如下图所示：</p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<img src="http://images.cnitblog.com/blog2015/666745/201504/301156335997016.png" alt="" style="margin:0px; padding:0px; border:0px; max-width:900px"></p>
<h1 style="font-size:28px; margin:0px; padding:0px"> 4.高可用Flume NG搭建</h1>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　在完成单点的Flume NG搭建后，下面我们搭建一个高可用的Flume NG集群，架构图如下所示：</p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<img src="http://images.cnitblog.com/blog2015/666745/201504/301254248495863.png" alt="" style="margin:0px; padding:0px; border:0px; max-width:900px"></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　图中，我们可以看出，Flume的存储可以支持多种，这里只列举了HDFS和Kafka（如：存储最新的一周日志，并给Storm系统提供实时日志流）。</p>
<h2 style="font-size:21px; margin:15px auto 2px; padding:0px">4.1节点分配</h2>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　Flume的Agent和Collector分布如下表所示：</p>
<table border="0" style="font-size:14px; margin:0px; padding:0px; border-collapse:collapse; border-spacing:0px; border:1px solid silver; word-break:break-word">
<tbody style="margin:0px; padding:0px">
<tr style="margin:0px; padding:0px">
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
名称</td>
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
HOST</td>
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
角色</td>
</tr>
<tr style="margin:0px; padding:0px">
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
Agent1</td>
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
10.211.55.14</td>
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
Web Server</td>
</tr>
<tr style="margin:0px; padding:0px">
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
Agent2</td>
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
10.211.55.15</td>
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
Web Server</td>
</tr>
<tr style="margin:0px; padding:0px">
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
Agent3</td>
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
10.211.55.16</td>
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
Web Server</td>
</tr>
<tr style="margin:0px; padding:0px">
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
Collector1</td>
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
10.211.55.18</td>
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
AgentMstr1</td>
</tr>
<tr style="margin:0px; padding:0px">
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
Collector2</td>
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
10.211.55.19</td>
<td style="margin:0px; padding:3px; border:1px solid silver; border-collapse:collapse">
AgentMstr2</td>
</tr>
</tbody>
</table>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
 </p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　图中所示，Agent1，Agent2，Agent3数据分别流入到Collector1和Collector2，Flume NG本身提供了Failover机制，可以自动切换和恢复。在上图中，有3个产生日志服务器分布在不同的机房，要把所有的日志都收集到一个集群中存储。下面我们开发配置Flume NG集群</p>
<h2 style="font-size:21px; margin:15px auto 2px; padding:0px">4.2配置</h2>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　在下面单点Flume中，基本配置都完成了，我们只需要新添加两个配置文件，它们是flume-client.properties和flume-server.properties，其配置内容如下所示：</p>
<ul style="font-size:14px; margin:0px 0px 0px 30px; padding:0px; word-break:break-all">
<li style="margin:0px 0px 1em; padding:0px; list-style:disc">flume-client.properties</li></ul>
<div class="cnblogs_code" style="font-size:12px!important; margin:5px 0px; padding:5px; border:1px solid rgb(204,204,204); overflow:auto; font-family:'Courier New'!important; background-color:rgb(245,245,245)">
<div class="cnblogs_code_toolbar" style="margin:5px 0px 0px; padding:0px"><span class="cnblogs_code_copy" style="margin:0px; padding:0px 5px 0px 0px; line-height:1.5!important"><a target="_blank" title="复制代码" style="margin:0px; padding:0px; text-decoration:underline; border:none!important"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="margin:0px; padding:0px; max-width:900px; border:none!important"></a></span></div>
<pre style="margin-top:0px; margin-bottom:0px; padding:0px; white-space:pre-wrap; word-wrap:break-word; font-family:'Courier New'!important"><span style="margin:0px; padding:0px; line-height:1.5!important">#agent1 name
agent1.channels </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> c1
agent1.sources </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> r1
agent1.sinks </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> k1 k2

#set gruop
agent1.sinkgroups </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> g1 

#set channel
agent1.channels.c1.type </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> memory
agent1.channels.c1.capacity </span>= <span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">1000</span><span style="margin:0px; padding:0px; line-height:1.5!important">
agent1.channels.c1.transactionCapacity </span>= <span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">100</span><span style="margin:0px; padding:0px; line-height:1.5!important">

agent1.sources.r1.channels </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> c1
agent1.sources.r1.type </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> exec
agent1.sources.r1.command </span>= <span style="margin:0px; padding:0px; color:rgb(0,0,255); line-height:1.5!important">tail</span> -F /home/hadoop/<span style="margin:0px; padding:0px; color:rgb(0,0,255); line-height:1.5!important">dir</span>/logdfs/<span style="margin:0px; padding:0px; line-height:1.5!important">test.log

agent1.sources.r1.interceptors </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> i1 i2
agent1.sources.r1.interceptors.i1.type </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> static
agent1.sources.r1.interceptors.i1.key </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> Type
agent1.sources.r1.interceptors.i1.value </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> LOGIN
agent1.sources.r1.interceptors.i2.type </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> timestamp

# set sink1
agent1.sinks.k1.channel </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> c1
agent1.sinks.k1.type </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> avro
agent1.sinks.k1.</span><span style="margin:0px; padding:0px; color:rgb(0,0,255); line-height:1.5!important">hostname</span> =<span style="margin:0px; padding:0px; line-height:1.5!important"> nna
agent1.sinks.k1.port </span>= <span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">52020</span><span style="margin:0px; padding:0px; line-height:1.5!important">

# set sink2
agent1.sinks.k2.channel </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> c1
agent1.sinks.k2.type </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> avro
agent1.sinks.k2.</span><span style="margin:0px; padding:0px; color:rgb(0,0,255); line-height:1.5!important">hostname</span> =<span style="margin:0px; padding:0px; line-height:1.5!important"> nns
agent1.sinks.k2.port </span>= <span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">52020</span><span style="margin:0px; padding:0px; line-height:1.5!important">

#set sink group
agent1.sinkgroups.g1.sinks </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> k1 k2

#set failover
agent1.sinkgroups.g1.processor.type </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> failover
agent1.sinkgroups.g1.processor.priority.k1 </span>= <span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">10</span><span style="margin:0px; padding:0px; line-height:1.5!important">
agent1.sinkgroups.g1.processor.priority.k2 </span>= <span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">1</span><span style="margin:0px; padding:0px; line-height:1.5!important">
agent1.sinkgroups.g1.processor.maxpenalty </span>= <span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">10000</span></pre>
<div class="cnblogs_code_toolbar" style="margin:5px 0px 0px; padding:0px"><span class="cnblogs_code_copy" style="margin:0px; padding:0px 5px 0px 0px; line-height:1.5!important"><a target="_blank" title="复制代码" style="margin:0px; padding:0px; text-decoration:underline; border:none!important"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="margin:0px; padding:0px; max-width:900px; border:none!important"></a></span></div>
</div>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　注：指定Collector的IP和Port。</p>
<ul style="font-size:14px; margin:0px 0px 0px 30px; padding:0px; word-break:break-all">
<li style="margin:0px 0px 1em; padding:0px; list-style:disc">flume-server.properties</li></ul>
<div class="cnblogs_code" style="font-size:12px!important; margin:5px 0px; padding:5px; border:1px solid rgb(204,204,204); overflow:auto; font-family:'Courier New'!important; background-color:rgb(245,245,245)">
<div class="cnblogs_code_toolbar" style="margin:5px 0px 0px; padding:0px"><span class="cnblogs_code_copy" style="margin:0px; padding:0px 5px 0px 0px; line-height:1.5!important"><a target="_blank" title="复制代码" style="margin:0px; padding:0px; text-decoration:underline; border:none!important"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="margin:0px; padding:0px; max-width:900px; border:none!important"></a></span></div>
<pre style="margin-top:0px; margin-bottom:0px; padding:0px; white-space:pre-wrap; word-wrap:break-word; font-family:'Courier New'!important"><span style="margin:0px; padding:0px; line-height:1.5!important">#set Agent name
a1.sources </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> r1
a1.channels </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> c1
a1.sinks </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> k1

#set channel
a1.channels.c1.type </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> memory
a1.channels.c1.capacity </span>= <span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">1000</span><span style="margin:0px; padding:0px; line-height:1.5!important">
a1.channels.c1.transactionCapacity </span>= <span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">100</span><span style="margin:0px; padding:0px; line-height:1.5!important">

# other node,nna to nns
a1.sources.r1.type </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> avro
a1.sources.r1.bind </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> nna
a1.sources.r1.port </span>= <span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">52020</span><span style="margin:0px; padding:0px; line-height:1.5!important">
a1.sources.r1.interceptors </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> i1
a1.sources.r1.interceptors.i1.type </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> static
a1.sources.r1.interceptors.i1.key </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> Collector
a1.sources.r1.interceptors.i1.value </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> NNA
a1.sources.r1.channels </span>=<span style="margin:0px; padding:0px; line-height:1.5!important"> c1

#set sink to hdfs
a1.sinks.k1.type</span>=<span style="margin:0px; padding:0px; line-height:1.5!important">hdfs
a1.sinks.k1.hdfs.path</span>=/home/hdfs/flume/<span style="margin:0px; padding:0px; line-height:1.5!important">logdfs
a1.sinks.k1.hdfs.fileType</span>=<span style="margin:0px; padding:0px; line-height:1.5!important">DataStream
a1.sinks.k1.hdfs.writeFormat</span>=<span style="margin:0px; padding:0px; line-height:1.5!important">TEXT
a1.sinks.k1.hdfs.rollInterval</span>=<span style="margin:0px; padding:0px; color:rgb(128,0,128); line-height:1.5!important">1</span><span style="margin:0px; padding:0px; line-height:1.5!important">
a1.sinks.k1.channel</span>=<span style="margin:0px; padding:0px; line-height:1.5!important">c1
a1.sinks.k1.hdfs.filePrefix</span>=%Y-%m-%d</pre>
<div class="cnblogs_code_toolbar" style="margin:5px 0px 0px; padding:0px"><span class="cnblogs_code_copy" style="margin:0px; padding:0px 5px 0px 0px; line-height:1.5!important"><a target="_blank" title="复制代码" style="margin:0px; padding:0px; text-decoration:underline; border:none!important"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="margin:0px; padding:0px; max-width:900px; border:none!important"></a></span></div>
</div>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
　　注：在另一台Collector节点上修改IP，如在NNS节点将绑定的对象有nna修改为nns。</p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
</p>
<div class="section" id="failover-client" style="font-family:Simsun">
<p style="font-size:16px; text-align:justify; line-height:20.8px"></p>
<p style="text-align:justify; line-height:20.8px"><span style="font-size:14px"><span style="color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; line-height:21px">  flume的拦截器也是chain形式的，可以对一个source指定多个拦截器，按先后顺序依次处理。如下是几种常用拦截器：</span><br style="word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; line-height:21px">
<span style="color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; line-height:21px">    （1）、Timestamp Interceptor :在event的header中添加一个key叫：timestamp,value为当前的时间戳。这个拦截器在sink为hdfs 时很有用</span><br style="word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; line-height:21px">
<span style="color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; line-height:21px">   <span style="color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; font-size:14px; line-height:21px; text-align:justify">（2）、</span>Host Interceptor：在event的header中添加一个key叫：host,value为当前机器的hostname或者ip。</span><br style="word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; line-height:21px">
<span style="color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; line-height:21px"><span style="color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; font-size:14px; line-height:21px; text-align:justify">    </span><span style="color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; font-size:14px; line-height:21px">（3）、</span>Static
 Interceptor:可以在event的header中添加自定义的key和value。</span><br style="word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; line-height:21px">
<span style="color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; line-height:21px"><span style="color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; font-size:14px; line-height:21px; text-align:justify">    </span><span style="color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; font-size:14px; line-height:21px">（4）、</span>Regex
 Filtering Interceptor:通过正则来清洗或包含匹配的events。</span><br style="word-wrap:break-word; color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; line-height:21px">
<span style="color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; line-height:21px"><span style="color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; font-size:14px; line-height:21px; text-align:justify">    </span><span style="color:rgb(68,68,68); font-family:Tahoma,'Microsoft Yahei',Simsun; font-size:14px; line-height:21px">（5）、</span>Regex
 Extractor Interceptor：通过正则表达式来在header中添加指定的key,value则为正则匹配的部分</span></span></p>
<h2 style="font-size:21px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px; margin:15px auto 2px; padding:0px">
4.3启动</h2>
<p style="font-size:16px"></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
　　在Agent节点上启动命令如下所示：</p>
<div class="cnblogs_code" style="font-size:16px; line-height:21px; margin:5px 0px; padding:5px; border:1px solid rgb(204,204,204); overflow:auto; font-family:'Courier New'!important; background-color:rgb(245,245,245)">
<pre style="margin-top:0px; margin-bottom:0px; padding:0px; white-space:pre-wrap; word-wrap:break-word; font-family:'Courier New'!important">flume-ng agent -n agent1 -c conf -f flume-client.properties -Dflume.root.logger=DEBUG,console</pre>
</div>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
　<span style="margin:0px; padding:0px; color:rgb(255,0,0)">　注：命令中的agent1表示配置文件中的Agent的Name，如配置文件中的agent1。flume-client.properties表示配置文件所在配置，需填写准确的配置文件路径。</span></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
　　在Collector节点上启动命令如下所示：</p>
<div class="cnblogs_code" style="font-size:16px; line-height:21px; margin:5px 0px; padding:5px; border:1px solid rgb(204,204,204); overflow:auto; font-family:'Courier New'!important; background-color:rgb(245,245,245)">
<pre style="margin-top:0px; margin-bottom:0px; padding:0px; white-space:pre-wrap; word-wrap:break-word; font-family:'Courier New'!important">flume-ng agent -n a1 -c conf -f flume-server.properties -Dflume.root.logger=DEBUG,console</pre>
</div>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
　　<span style="margin:0px; padding:0px; color:rgb(255,0,0)">注：命令中的a1表示配置文件中的Agent的Name，如配置文件中的a1。flume-server.properties表示配置文件所在配置，需填写准确的配置文件路径。</span></p>
<h1 style="font-size:28px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px; margin:0px; padding:0px">
5.Failover测试</h1>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
　　下面我们来测试下Flume NG集群的高可用（故障转移）。场景如下：我们在Agent1节点上传文件，由于我们配置Collector1的权重比Collector2大，所以Collector1优先采集并上传到存储系统。然后我们kill掉Collector1，此时有Collector2负责日志的采集上传工作，之后，我们手动恢复Collector1节点的Flume服务，再次在Agent1上次文件，发现Collector1恢复优先级别的采集工作。具体截图如下所示：</p>
<ul style="font-size:14px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px; margin:0px 0px 0px 30px; padding:0px; word-break:break-all">
<li style="margin:0px 0px 1em; padding:0px; list-style:disc">Collector1优先上传</li></ul>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
<img src="http://images.cnitblog.com/blog2015/666745/201504/301332017866055.png" alt="" style="max-width:900px; margin:0px; padding:0px; border:0px"></p>
<ul style="font-size:14px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px; margin:0px 0px 0px 30px; padding:0px; word-break:break-all">
<li style="margin:0px 0px 1em; padding:0px; list-style:disc">HDFS集群中上传的log内容预览</li></ul>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
<img src="http://images.cnitblog.com/blog2015/666745/201504/301333144439058.png" alt="" style="max-width:900px; margin:0px; padding:0px; border:0px"></p>
<ul style="font-size:14px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px; margin:0px 0px 0px 30px; padding:0px; word-break:break-all">
<li style="margin:0px 0px 1em; padding:0px; list-style:disc">Collector1宕机，Collector2获取优先上传权限</li></ul>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
<img src="http://images.cnitblog.com/blog2015/666745/201504/301334173803698.png" alt="" style="max-width:900px; margin:0px; padding:0px; border:0px"></p>
<ul style="font-size:14px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px; margin:0px 0px 0px 30px; padding:0px; word-break:break-all">
<li style="margin:0px 0px 1em; padding:0px; list-style:disc">重启Collector1服务，Collector1重新获得优先上传的权限</li></ul>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
<img src="http://images.cnitblog.com/blog2015/666745/201504/301337249113173.png" alt="" style="max-width:900px; margin:0px; padding:0px; border:0px"></p>
<h1 style="font-size:28px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px; margin:0px; padding:0px">
6.截图预览</h1>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
　　下面为大家附上HDFS文件系统中的截图预览，如下图所示：</p>
<ul style="font-size:14px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px; margin:0px 0px 0px 30px; padding:0px; word-break:break-all">
<li style="margin:0px 0px 1em; padding:0px; list-style:disc">HDFS文件系统中的文件预览</li></ul>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
<img src="http://images.cnitblog.com/blog2015/666745/201504/301339545059404.png" alt="" style="max-width:900px; margin:0px; padding:0px; border:0px"></p>
<ul style="font-size:14px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px; margin:0px 0px 0px 30px; padding:0px; word-break:break-all">
<li style="margin:0px 0px 1em; padding:0px; list-style:disc">上传的文件内容预览</li></ul>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
<img src="http://images.cnitblog.com/blog2015/666745/201504/301341061618579.png" alt="" style="max-width:900px; margin:0px; padding:0px; border:0px"></p>
<h1 style="font-size:28px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px; margin:0px; padding:0px">
7.总结</h1>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
　　在配置高可用的Flume NG时，需要注意一些事项。在Agent中需要绑定对应的Collector1和Collector2的IP和Port，另外，在配置Collector节点时，需要修改当前Flume节点的配置文件，Bind的IP（或HostName）为当前节点的IP（或HostName），最后，在启动的时候，指定配置文件中的Agent的Name和配置文件的路径，否则会出错。</p>
<h1 style="font-size:28px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px; margin:0px; padding:0px">
8.结束语</h1>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px; font-family:Verdana,Arial,Helvetica,sans-serif; line-height:21px">
　　这篇博客就和大家分享到这里，如果大家在研究学习的过程当中有什么问题，可以加群进行讨论或发送邮件给我，我会尽我所能为您解答，与君共勉！</p>
<br>
<p style="font-size:16px; text-align:justify; line-height:20.8px"><br>
</p>
<p style="font-size:16px; text-align:justify; line-height:20.8px">配置文件详解：</p>
<p style="font-size:16px; text-align:justify; line-height:20.8px">  For more flexibility, the failover Flume client can be configured with these properties:</p>
<div class="highlight-properties" style="font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">client.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">default_failover</span>

<span class="na" style="color:rgb(0,128,128)">hosts</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">h1 h2 h3                     # at least one is required, but 2 or</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># more makes better sense</span>

<span class="na" style="color:rgb(0,128,128)">hosts.h1</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">host1.example.org:41414</span>

<span class="na" style="color:rgb(0,128,128)">hosts.h2</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">host2.example.org:41414</span>

<span class="na" style="color:rgb(0,128,128)">hosts.h3</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">host3.example.org:41414</span>

<span class="na" style="color:rgb(0,128,128)">max-attempts</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">3                     # Must be &gt;=0 (default: number of hosts</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># specified, 3 in this case). A '0'</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># value doesn't make much sense because</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># it will just cause an append call to</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># immmediately fail. A '1' value means</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># that the failover client will try only</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># once to send the Event, and if it</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># fails then there will be no failover</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># to a second client, so this value</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># causes the failover client to</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># degenerate into just a default client.</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># It makes sense to set this value to at</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># least the number of hosts that you</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># specified.</span>

<span class="na" style="color:rgb(0,128,128)">batch-size</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">100                     # Must be &gt;=1 (default: 100)</span>

<span class="na" style="color:rgb(0,128,128)">connect-timeout</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">20000              # Must be &gt;=1000 (default: 20000)</span>

<span class="na" style="color:rgb(0,128,128)">request-timeout</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">20000              # Must be &gt;=1000 (default: 20000)</span>
</pre>
</div>
</div>
</div>
<br>
<p style="font-size:14px"></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
</p>
<p style="font-size:16px; text-align:justify; line-height:20.8px; font-family:Simsun">
For more flexibility, the load-balancing Flume client can be configured with these properties:</p>
<div class="highlight-properties" style="font-size:16px; font-family:Simsun">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">client.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">default_loadbalance</span>

<span class="na" style="color:rgb(0,128,128)">hosts</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">h1 h2 h3                     # At least 2 hosts are required</span>

<span class="na" style="color:rgb(0,128,128)">hosts.h1</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">host1.example.org:41414</span>

<span class="na" style="color:rgb(0,128,128)">hosts.h2</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">host2.example.org:41414</span>

<span class="na" style="color:rgb(0,128,128)">hosts.h3</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">host3.example.org:41414</span>

<span class="na" style="color:rgb(0,128,128)">backoff</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">false                      # Specifies whether the client should</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># back-off from (i.e. temporarily</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># blacklist) a failed host</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># (default: false).</span>

<span class="na" style="color:rgb(0,128,128)">maxBackoff</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">0                       # Max timeout in millis that a will</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># remain inactive due to a previous</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># failure with that host (default: 0,</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># which effectively becomes 30000)</span>

<span class="na" style="color:rgb(0,128,128)">host-selector</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">round_robin          # The host selection strategy used</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># when load-balancing among hosts</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># (default: round_robin).</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># Other values are include "random"</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># or the FQCN of a custom class</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># that implements</span>
                                     <span class="c" style="color:rgb(153,153,136); font-style:italic"># LoadBalancingRpcClient$HostSelector</span>

<span class="na" style="color:rgb(0,128,128)">batch-size</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">100                     # Must be &gt;=1 (default: 100)</span>

<span class="na" style="color:rgb(0,128,128)">connect-timeout</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">20000              # Must be &gt;=1000 (default: 20000)</span>

<span class="na" style="color:rgb(0,128,128)">request-timeout</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">20000              # Must be &gt;=1000 (default: 20000)</span></pre>
</div>
</div>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
</p>
<h3 style="font-size:22.4px; font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-family:Simsun; background-color:rgb(242,242,242)">
Fan out flow<a target="_blank" class="headerlink" href="https://flume.apache.org/FlumeUserGuide.html#fan-out-flow" rel="nofollow" title="Permalink to this headline" style="color:rgb(198,15,15); text-decoration:none; visibility:hidden; font-size:0.8em; padding:0px 4px"></a></h3>
<p style="font-size:14px"></p>
<p style="font-size:16px; text-align:justify; line-height:20.8px; font-family:Simsun">
Flume supports fanning out the flow from one source to multiple channels.</p>
<span style="font-size:16px; font-family:Simsun; line-height:20.8px; text-align:justify">There are two modes：replicating and multiplexing.</span><br>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">In the replicating flow, the event is sent to all the configured channels. </span></span></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">In case of multiplexing, the event is sent to only a subset of qualifying channels.</span></span></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">replicating: </span><br>
</span></span></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"></span></span></p>
<pre style="font-size:14px; overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="c" style="color:rgb(153,153,136); font-style:italic"># List the sources, sinks and channels for the agent</span>
<span class="na" style="color:rgb(0,128,128)">&lt;Agent&gt;.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">&lt;Source1&gt;</span>
<span class="na" style="color:rgb(0,128,128)">&lt;Agent&gt;.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">&lt;Sink1&gt; &lt;Sink2&gt;</span>
<span class="na" style="color:rgb(0,128,128)">&lt;Agent&gt;.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">&lt;Channel1&gt; &lt;Channel2&gt;</span>

<span class="c" style="color:rgb(153,153,136); font-style:italic"># set list of channels for source (separated by space)</span>
<span class="na" style="color:rgb(0,128,128)">&lt;Agent&gt;.sources.&lt;Source1&gt;.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">&lt;Channel1&gt; &lt;Channel2&gt;</span>

<span class="c" style="color:rgb(153,153,136); font-style:italic"># set channel for sinks</span>
<span class="na" style="color:rgb(0,128,128)">&lt;Agent&gt;.sinks.&lt;Sink1&gt;.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">&lt;Channel1&gt;</span>
<span class="na" style="color:rgb(0,128,128)">&lt;Agent&gt;.sinks.&lt;Sink2&gt;.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">&lt;Channel2&gt;</span>

<span class="na" style="color:rgb(0,128,128)">&lt;Agent&gt;.sources.&lt;Source1&gt;.selector.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">replicating</span></pre>
<span style="font-size:16px; font-family:Simsun; line-height:20.8px; text-align:justify">multiplexing:</span><br>
<p style="font-size:14px"></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"></span></span></span></p>
<pre style="font-size:14px; overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="c" style="color:rgb(153,153,136); font-style:italic"># Mapping for multiplexing selector</span>
<span class="na" style="color:rgb(0,128,128)">&lt;Agent&gt;.sources.&lt;Source1&gt;.selector.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">multiplexing</span>
<span class="na" style="color:rgb(0,128,128)">&lt;Agent&gt;.sources.&lt;Source1&gt;.selector.header</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">&lt;someHeader&gt;</span>
<span class="na" style="color:rgb(0,128,128)">&lt;Agent&gt;.sources.&lt;Source1&gt;.selector.mapping.&lt;Value1&gt;</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">&lt;Channel1&gt;</span>
<span class="na" style="color:rgb(0,128,128)">&lt;Agent&gt;.sources.&lt;Source1&gt;.selector.mapping.&lt;Value2&gt;</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">&lt;Channel1&gt; &lt;Channel2&gt;</span>
<span class="na" style="color:rgb(0,128,128)">&lt;Agent&gt;.sources.&lt;Source1&gt;.selector.mapping.&lt;Value3&gt;</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">&lt;Channel2&gt;</span>
<span class="c" style="color:rgb(153,153,136); font-style:italic">#...</span>

<span class="na" style="color:rgb(0,128,128)">&lt;Agent&gt;.sources.&lt;Source1&gt;.selector.default</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">&lt;Channel2&gt;</span></pre>
<pre style="font-size:14px; overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="c" style="color:rgb(153,153,136); font-style:italic"># channel selector configuration</span>
<span class="na" style="color:rgb(0,128,128)">agent_foo.sources.avro-AppSrv-source1.selector.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">multiplexing</span>
<span class="na" style="color:rgb(0,128,128)">agent_foo.sources.avro-AppSrv-source1.selector.header</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">State</span>
<span class="na" style="color:rgb(0,128,128)">agent_foo.sources.avro-AppSrv-source1.selector.mapping.CA</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">mem-channel-1</span>
<span class="na" style="color:rgb(0,128,128)">agent_foo.sources.avro-AppSrv-source1.selector.mapping.AZ</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">file-channel-2</span>
<span class="na" style="color:rgb(0,128,128)">agent_foo.sources.avro-AppSrv-source1.selector.mapping.NY</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">mem-channel-1 file-channel-2</span>
<span class="na" style="color:rgb(0,128,128)">agent_foo.sources.avro-AppSrv-source1.selector.optional.CA</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">mem-channel-1 file-channel-2</span>
<span class="na" style="color:rgb(0,128,128)">agent_foo.sources.avro-AppSrv-source1.selector.mapping.AZ</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">file-channel-2</span>
<span class="na" style="color:rgb(0,128,128)">agent_foo.sources.avro-AppSrv-source1.selector.default</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">mem-channel-1</span></pre>
<span style="font-size:16px; font-family:Simsun; line-height:20.8px; text-align:justify">  The selector checks for a header called “State”. If the value is “CA” then its sent to mem-channel-1, if its “AZ” then it goes to file-channel-2 or if its “NY” then both.
 If the “State” header is not set or doesn’t match any of the three, then it goes to mem-channel-1 which is designated as ‘default’.</span><br>
<p style="font-size:14px"></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> 
 To specify optional channels for a header, the config parameter ‘optional’ is used </span><br>
</span></span></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  The selector will attempt to write to the required channels first and will fail the transaction if even one of these channels fails to consume the events. The transaction
 is reattempted on </span><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">all</span><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> of the channels. Once all required channels
 have consumed the events, then the selector will attempt to write to the optional channels. A failure by any of the optional channels to consume the event is simply ignored and not retried.</span><br>
</p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"><br>
</span></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"></span></p>
<h4 style="font-size:19.2px; font-family:Simsun; line-height:20.8px; text-align:justify; font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; background-color:rgb(242,242,242)">
Avro Source</h4>
<span style="font-size:16px; font-family:Simsun; line-height:20.8px; text-align:justify">  Listens on Avro port and receives events from external Avro client streams. When paired with the built-in Avro Sink on another (previous hop) Flume agent, it can create
 tiered collection topologies. Required properties are in </span><span style="font-size:16px; font-family:Simsun; line-height:20.8px; text-align:justify">bold</span><span style="font-size:16px; font-family:Simsun; line-height:20.8px; text-align:justify">.</span><br>
<p style="font-size:14px"></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"><br>
</span></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"></span>
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channels</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">avro</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>bind</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hostname or IP address to listen on</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>port</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Port # to bind to</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
threads</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum number of worker threads to spawn</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of interceptors</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
compression-type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
none</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
This can be “none” or “deflate”. The compression-type must match the compression-type
<br>
of matching AvroSource</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
ssl</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Set this to true to enable SSL encryption. You must also specify a “keystore” and a
<br>
“keystore-password”.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
keystore</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
This is the path to a Java keystore file. Required for SSL.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
keystore-password</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The password for the Java keystore. Required for SSL.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
keystore-type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
JKS</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The type of the Java keystore. This can be “JKS” or “PKCS12”.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
exclude-protocols</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
SSLv3</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of SSL/TLS protocols to exclude. SSLv3 will always be excluded in
<br>
addition to the protocols specified.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
ipFilter</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Set this to true to enable ipFiltering for netty</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
ipFilterRules</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Define N netty ipFilter pattern rules with this config.</td>
</tr>
</tbody>
</table>

<h4 style="font-size:19.2px; font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-family:Simsun; background-color:rgb(242,242,242)">
Thrift Source</h4>
<table border="1" class="docutils" style="font-size:16px; border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channels</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">thrift</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>bind</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hostname or IP address to listen on</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>port</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Port # to bind to</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
threads</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum number of worker threads to spawn</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space separated list of interceptors</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
ssl</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Set this to true to enable SSL encryption. You must also specify a “keystore” and a
<br>
“keystore-password”.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
keystore</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
This is the path to a Java keystore file. Required for SSL.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
keystore-password</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The password for the Java keystore. Required for SSL.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
keystore-type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
JKS</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The type of the Java keystore. This can be “JKS” or “PKCS12”.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
exclude-protocols</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
SSLv3</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of SSL/TLS protocols to exclude. SSLv3 will always be excluded<br>
 in addition to the protocols specified.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
kerberos</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Set to true to enable kerberos authentication. In kerberos mode, agent-principal and
<br>
agent-keytab are required for successful authentication. The Thrift source in secure mode,
<br>
will accept connections only from Thrift clients that have kerberos enabled and are successfully
<br>
authenticated to the kerberos KDC.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
agent-principal</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The kerberos principal used by the Thrift Source to authenticate to the kerberos KDC.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
agent-keytab</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
—-</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The keytab location used by the Thrift Source in combination with the agent-principal to
<br>
authenticate to the kerberos KDC.</td>
</tr>
</tbody>
</table>
<p style="font-size:14px"></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"></span></p>
<h4 style="font-size:19.2px; font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-family:Simsun; background-color:rgb(242,242,242)">
Exec Source</h4>
<p style="font-size:14px"></p>
<p style="font-size:16px; text-align:justify; line-height:20.8px; font-family:Simsun">
  Exec source runs a given Unix command on start-up and expects that process to continuously produce data on standard out (stderr is simply discarded, unless property logStdErr is set to true). If the process exits for any reason, the source also exits and
 will produce no further data. This means configurations such as <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">cat</span> <span class="pre">[named</span> <span class="pre">pipe]</span></tt> or <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">tail</span> <span class="pre">-F</span> <span class="pre">[file]</span></tt> are
 going to produce the desired results where as <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">date</span></tt> will probably not - the former two commands produce streams of data where
 as the latter produces a single event and exits.</p>
<p style="font-size:16px; text-align:justify; line-height:20.8px; font-family:Simsun">
  Required properties are in <strong>bold</strong>.</p>
<table border="1" class="docutils" style="font-size:16px; border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun">
<colgroup><col width="8%"><col width="6%"><col width="85%"></colgroup>
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channels</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">exec</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>command</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The command to execute</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
shell</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
A shell invocation used to run the command. e.g. /bin/sh -c. Required only for commands
<br>
relying on shell features like wildcards, back ticks, pipes etc.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
restartThrottle</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
10000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Amount of time (in millis) to wait before attempting a restart</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
restart</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Whether the executed cmd should be restarted if it dies</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
logStdErr</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Whether the command’s stderr should be logged</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
20</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The max number of lines to read and send to the channel at a time</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchTimeout</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
3000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Amount of time (in milliseconds) to wait, if the buffer size was not reached, before data is
<br>
pushed downstream</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating or multiplexing</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Depends on the selector.type value</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of interceptors</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
</tbody>
</table>
<p style="font-size:16px; text-align:justify; line-height:20.8px; font-family:Simsun">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-size:16px; font-family:Simsun">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">exec</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.command</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">tail -F /var/log/secure</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span></pre>
</div>
</div>
<br>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  The ‘shell’ config is used to invoke the ‘command’ through a command shell</span><br>
</span></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"></span></p>
<p style="font-size:16px; text-align:justify; line-height:20.8px; font-family:Simsun">
  In the absence of the ‘shell’ config, the ‘command’ will be invoked directly. Common values for ‘shell’ : ‘/bin/sh -c’, ‘/bin/ksh -c’, ‘cmd /c’, ‘powershell -Command’, etc.</p>
<div class="highlight-properties" style="font-size:16px; font-family:Simsun">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources.tailsource-1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">exec</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.tailsource-1.shell</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/bin/bash -c</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.tailsource-1.command</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">for i in /path/*.txt; do cat $i; done</span></pre>
</div>
</div>
<h4 style="font-size:19.2px; font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-family:Simsun; background-color:rgb(242,242,242)">
JMS Source</h4>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"></span></p>
<pre style="font-size:14px; overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">jms</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.initialContextFactory</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.apache.activemq.jndi.ActiveMQInitialContextFactory</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.connectionFactory</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">GenericConnectionFactory</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.providerURL</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">tcp://mqserver:61616</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.destinationName</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">BUSINESS_DATA</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.destinationType</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">QUEUE</span></pre>
<br>
<p style="font-size:14px"></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"></span></p>
<h4 style="font-size:19.2px; font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-family:Simsun; background-color:rgb(242,242,242)">
Spooling Directory Source</h4>
<p style="font-size:14px"></p>
<p style="font-size:14px"><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  This source lets you ingest data by placing files to be ingested into a “spooling” directory on disk. This source will watch the specified directory
 for new files, and will parse events out of new files as they appear. The event parsing logic is pluggable. After a given file has been fully read into the channel, it is renamed to indicate completion (or optionally deleted).</span><br>
</p>
<p style="font-size:14px">
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channels</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">spooldir</span></tt>.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>spoolDir</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The directory from which to read files from.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
fileSuffix</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
.COMPLETED</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Suffix to append to completely ingested files</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
deletePolicy</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
never</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
When to delete completed files: <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">never</span></tt> or <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">immediate</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
fileHeader</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Whether to add a header storing the absolute path filename.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
fileHeaderKey</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
file</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Header key to use when appending absolute path filename to event header.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
basenameHeader</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Whether to add a header storing the basename of the file.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
basenameHeaderKey</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
basename</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Header Key to use when appending basename of file to event header.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
ignorePattern</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
^$</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Regular expression specifying which files to ignore (skip)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
trackerDir</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
.flumespool</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Directory to store metadata related to processing of files. If this path is not an absolute path,<br>
then it is interpreted as relative to the spoolDir.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
consumeOrder</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
oldest</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
In which order files in the spooling directory will be consumed <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">oldest</span></tt>, <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">youngest</span></tt> and <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">random</span></tt>.<br>
 In case of <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">oldest</span></tt> and <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">youngest</span></tt>,
 the last modified time of the files will be used to compare <br>
the files. In case of a tie, the file with smallest laxicographical order will be consumed first.<br>
In case of<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">random</span></tt> any file will be picked randomly. When using <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">oldest</span></tt> and <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">youngest</span></tt> the<br>
whole directory will be scanned to pick the oldest/youngest file, which might be slow if there<br>
are a large number of files, while using <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">random</span></tt> may cause old files to be consumed very late<br>
if new files keep coming in the spooling directory.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
maxBackoff</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
4000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The maximum time (in millis) to wait between consecutive attempts to write to the channel(s)<br>
if the channel is full. The source will start at a low backoff and increase it exponentially each<br>
time the channel throws a ChannelException, upto the value specified by this parameter.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Granularity at which to batch transfer to the channel</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
inputCharset</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
UTF-8</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Character set used by deserializers that treat the input file as text.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
decodeErrorPolicy</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">FAIL</span></tt></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
What to do when we see a non-decodable character in the input file. <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">FAIL</span></tt>: Throw an exception<br>
and fail to parse the file. <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">REPLACE</span></tt>: Replace the unparseable character with the “replacement<br>
character” char, typically Unicode U+FFFD. <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">IGNORE</span></tt>: Drop the unparseable character sequence.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
deserializer</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">LINE</span></tt></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Specify the deserializer used to parse the file into events. Defaults to parsing each line as an<br>
event. The class specified must implement <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">EventDeserializer.Builder</span></tt>.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
deserializer.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Varies per event deserializer.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
bufferMaxLines</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
(Obselete) This option is now ignored.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
bufferMaxLineLength</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
5000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
(Deprecated) Maximum length of a line in the commit buffer. Use deserializer.maxLineLength instead.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating or multiplexing</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Depends on the selector.type value</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of interceptors</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
</tbody>
</table>
<br>

<p style="font-size:16px; text-align:justify; line-height:20.8px; font-family:Simsun">
Example for an agent named agent-1:</p>
<div class="highlight-properties" style="font-size:16px; font-family:Simsun">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">ch-1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">src-1</span>

<span class="na" style="color:rgb(0,128,128)">a1.sources.src-1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">spooldir</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.src-1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">ch-1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.src-1.spoolDir</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/var/log/apache/flumeSpool</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.src-1.fileHeader</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">true</span></pre>
</div>
</div>
<br>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"></span></p>
<h4 style="font-size:19.2px; font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-family:Simsun; background-color:rgb(242,242,242)">
Kafka Source</h4>
<table border="1" class="docutils" style="font-size:16px; border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channels</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.source.kafka,KafkaSource</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>zookeeperConnect</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
URI of ZooKeeper used by Kafka cluster</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>groupId</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
flume</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Unique identified of consumer group. Setting the same id in multiple sources or agents indicates<br>
that they are part of the same consumer group</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>topic</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Kafka topic we’ll read messages from. At the time, this is a single topic only.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
1000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum number of messages written to Channel in one batch</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchDurationMillis</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
1000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum time (in ms) before a batch will be written to Channel The batch will be written<br>
whenever the first of size and time will be reached.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
backoffSleepIncrement</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
1000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Initial and incremental wait time that is triggered when a Kafka Topic appears to be empty.<br>
Wait period will reduce aggressive pinging of an empty Kafka Topic. One second is ideal for<br>
ingestion use cases but a lower value may be required for low latency operations with interceptors.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
maxBackoffSleep</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
5000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum wait time that is triggered when a Kafka Topic appears to be empty. Five seconds is ideal<br>
for ingestion use cases but a lower value may be required for low latency operations with interceptors.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Other Kafka Consumer Properties</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
These properties are used to configure the Kafka Consumer. Any producer property supported<br>
by Kafka can be used. The only requirement is to prepend the property name with the prefix<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">kafka.</span></tt>.<br>
For example: kafka.consumer.timeout.ms Check <cite>Kafka documentation &lt;https://kafka.apache.org/08/configuration.html#consumerconfigs&gt;</cite> for details</td>
</tr>
</tbody>
</table>
<br>
<p style="font-size:14px"></p>
<p style="font-size:14px; margin:10px auto; padding-top:0px; padding-bottom:0px">
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"></span></p>
<p style="font-size:16px; text-align:justify; line-height:20.8px; font-family:Simsun">
Example for agent named tier1:</p>
<div class="highlight-properties" style="font-size:16px; font-family:Simsun">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">tier1.sources.source1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.apache.flume.source.kafka.KafkaSource</span>
<span class="na" style="color:rgb(0,128,128)">tier1.sources.source1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">channel1</span>
<span class="na" style="color:rgb(0,128,128)">tier1.sources.source1.zookeeperConnect</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">localhost:2181</span>
<span class="na" style="color:rgb(0,128,128)">tier1.sources.source1.topic</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">test1</span>
<span class="na" style="color:rgb(0,128,128)">tier1.sources.source1.groupId</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">flume</span>
<span class="na" style="color:rgb(0,128,128)">tier1.sources.source1.kafka.consumer.timeout.ms</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">100</span></pre>
</div>
</div>
<br>
<h2 style="font-size:21px; margin:15px auto 2px; padding:0px"></h2>
<h4 style="font-size:19.2px; font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-family:Simsun; background-color:rgb(242,242,242)">
NetCat Source</h4>
<span style="font-size:16px; font-family:Simsun; line-height:20.8px; text-align:justify">A netcat-like source that listens on a given port and turns each line of text into an event. Acts like </span><tt class="docutils literal" style="font-size:0.95em; padding:0px 1px; line-height:20.8px; text-align:justify; background-color:rgb(236,240,243)"><span class="pre">nc</span> <span class="pre">-k</span> <span class="pre">-l</span> <span class="pre">[host]</span> <span class="pre">[port]</span></tt><span style="font-size:16px; font-family:Simsun; line-height:20.8px; text-align:justify">.</span><br>
<div style="font-size:14px"><br>
</div>
<div style="font-size:14px">
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channels</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">netcat</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>bind</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Host name or IP address to bind to</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>port</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Port # to bind to</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
max-line-length</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
512</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Max line length per event body (in bytes)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
ack-every-event</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
true</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Respond with an “OK” for every event received</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating or multiplexing</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Depends on the selector.type value</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of interceptors</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">netcat</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.bind</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">0.0.0.0</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.port</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">6666</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span></pre>
</div>
</div>
</div>
<div style="font-size:14px">
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Sequence Generator Source</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channels</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">seq</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating or multiplexing</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Depends on the selector.type value</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of interceptors</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
1</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">seq</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span></pre>
</div>
</div>
<br>
</div>
<div style="font-size:14px">
<h5 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:17.6px; font-family:Simsun; background-color:rgb(242,242,242)">
Syslog TCP Source</h5>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
The original, tried-and-true syslog TCP source.</p>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<colgroup><col width="19%"><col width="15%"><col width="67%"></colgroup>
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channels</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">syslogtcp</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>host</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Host name or IP address to bind to</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>port</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Port # to bind to</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
eventSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
2500</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum size of a single event line, in bytes</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
keepFields</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
none</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Setting this to ‘all’ will preserve the Priority, Timestamp and Hostname in the body of the event. A spaced separated list of fields to include is allowed as well. Currently, the following fields can be included: priority, version, timestamp, hostname. The
 values ‘true’ and ‘false’ have been deprecated in favor of ‘all’ and ‘none’.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating or multiplexing</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Depends on the selector.type value</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of interceptors</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
For example, a syslog TCP source for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">syslogtcp</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.port</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">5140</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.host</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">localhost</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span></pre>
</div>
</div>
<h5 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:17.6px; font-family:Simsun; background-color:rgb(242,242,242)">
Multiport Syslog TCP Source</h5>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channels</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">multiport_syslogtcp</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>host</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Host name or IP address to bind to.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>ports</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list (one or more) of ports to bind to.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
eventSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
2500</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum size of a single event line, in bytes.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
keepFields</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
none</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Setting this to ‘all’ will preserve the Priority, Timestamp and Hostname in the body of the event.<br>
A spaced separated list of fields to include is allowed as well. Currently, the following fields can<br>
be included: priority, version, timestamp, hostname. The values ‘true’ and ‘false’ have been<br>
deprecated in favor of ‘all’ and ‘none’.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
portHeader</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
If specified, the port number will be stored in the header of each event using the header name specified here.<br>
This allows for interceptors and channel selectors to customize routing logic based on the incoming port.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
charset.default</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
UTF-8</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Default character set used while parsing syslog events into strings.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
charset.port.&lt;port&gt;</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Character set is configurable on a per-port basis.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum number of events to attempt to process per request loop. Using the default is usually fine.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
readBufferSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
1024</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Size of the internal Mina read buffer. Provided for performance tuning. Using the default is usually fine.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
numProcessors</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
(auto-detected)</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Number of processors available on the system for use while processing messages. Default is to<br>
auto-detect # of CPUs using the Java Runtime API. Mina will spawn 2 request-processing threads<br>
per detected CPU, which is often reasonable.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating, multiplexing, or custom</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Depends on the <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">selector.type</span></tt> value</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of interceptors.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
For example, a multiport syslog TCP source for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">multiport_syslogtcp</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.host</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">0.0.0.0</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.ports</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">10001 10002 10003</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.portHeader</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">port</span></pre>
</div>
</div>
</div>
<div style="font-size:14px">
<h5 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:17.6px; font-family:Simsun; background-color:rgb(242,242,242)">
Syslog UDP Source</h5>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channels</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">syslogudp</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>host</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Host name or IP address to bind to</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>port</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Port # to bind to</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
keepFields</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Setting this to true will preserve the Priority, Timestamp and Hostname in the body of the event.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating or multiplexing</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Depends on the selector.type value</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of interceptors</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
For example, a syslog UDP source for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">syslogudp</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.port</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">5140</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.host</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">localhost</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
HTTP Source</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  A source which accepts Flume Events by HTTP POST and GET. GET should be used for experimentation only. HTTP requests are converted into flume events by a pluggable “handler”
 which must implement the HTTPSourceHandler interface. <span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">This handler takes a HttpServletRequest and returns a list of flume events. </span></span><br>
</div>
<div style="font-size:14px"><br>
</div>
<div style="font-size:14px">
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">http</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>port</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The port the source should bind to.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
bind</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
0.0.0.0</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The hostname or IP address to listen on</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
handler</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.source.http.JSONHandler</span></tt></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The FQCN of the handler class.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
handler.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Config parameters for the handler</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating or multiplexing</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Depends on the selector.type value</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of interceptors</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
enableSSL</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Set the property true, to enable SSL. <em>HTTP Source does not support SSLv3.</em></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
excludeProtocols</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
SSLv3</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of SSL/TLS protocols to exclude. SSLv3 is always excluded.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
keystore</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Location of the keystore includng keystore file name</td>
</tr>
<tr class="row-even">
<td colspan="3" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
keystorePassword Keystore password</td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
  For example, a http source for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">http</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.port</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">5140</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.handler</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.example.rest.RestHandler</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.handler.nickname</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">random props</span></pre>
</div>
</div>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  By default HTTPSource splits JSON input into Flume events. </span><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">JsonHandler
 is provided out of the box which can handle events represented in JSON format</span></div>
<div style="font-size:14px">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="p">[{</span>
  <span class="s2" style="color:rgb(187,136,68)">"headers"</span> <span class="o" style="font-weight:bold">:</span> <span class="p">{</span>
             <span class="s2" style="color:rgb(187,136,68)">"timestamp"</span> <span class="o" style="font-weight:bold">:</span> <span class="s2" style="color:rgb(187,136,68)">"434324343"</span><span class="p">,</span>
             <span class="s2" style="color:rgb(187,136,68)">"host"</span> <span class="o" style="font-weight:bold">:</span> <span class="s2" style="color:rgb(187,136,68)">"random_host.example.com"</span>
             <span class="p">},</span>
  <span class="s2" style="color:rgb(187,136,68)">"body"</span> <span class="o" style="font-weight:bold">:</span> <span class="s2" style="color:rgb(187,136,68)">"random_body"</span>
  <span class="p">},</span>
  <span class="p">{</span>
  <span class="s2" style="color:rgb(187,136,68)">"headers"</span> <span class="o" style="font-weight:bold">:</span> <span class="p">{</span>
             <span class="s2" style="color:rgb(187,136,68)">"namenode"</span> <span class="o" style="font-weight:bold">:</span> <span class="s2" style="color:rgb(187,136,68)">"namenode.example.com"</span><span class="p">,</span>
             <span class="s2" style="color:rgb(187,136,68)">"datanode"</span> <span class="o" style="font-weight:bold">:</span> <span class="s2" style="color:rgb(187,136,68)">"random_datanode.example.com"</span>
             <span class="p">},</span>
  <span class="s2" style="color:rgb(187,136,68)">"body"</span> <span class="o" style="font-weight:bold">:</span> <span class="s2" style="color:rgb(187,136,68)">"really_random_body"</span>
  <span class="p">}]</span></pre>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px">  To set the charset, the request must have content type specified as </span><tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; line-height:20.8px; text-align:justify; background-color:rgb(236,240,243)"><span class="pre">application/json;</span> <span class="pre">charset=UTF-8</span></tt><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> (replace
 UTF-8 with UTF-16 or UTF-32 as required).</span><br>
</div>
<div style="font-size:14px"><br>
</div>
<div style="font-size:14px"><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  BlobHandler is a handler for HTTPSource that returns an event that contains the request parameters as well as the Binary Large Object (BLOB)
 uploaded with this request.</span><br>
</div>
<div style="font-size:14px">
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>handler</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The FQCN of this class: <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.sink.solr.morphline.BlobHandler</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
handler.maxBlobLength</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100000000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The maximum number of bytes to read and buffer for a given request</td>
</tr>
</tbody>
</table>
<br>
</div>
<div style="font-size:14px">
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Custom Source</h4>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
  A custom source’s class and its dependencies must be included in the agent’s classpath when starting the Flume agent. The type of the custom source is its FQCN.</p>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<colgroup><col width="20%"><col width="15%"><col width="65%"></colgroup>
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channels</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be your FQCN</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">replicating</span></tt> or <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">multiplexing</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Depends on the selector.type value</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of interceptors</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
interceptors.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
  Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.example.MySource</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span></pre>
</div>
</div>
<br>
</div>
<div style="font-size:14px">
<h3 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:22.4px; font-family:Simsun; background-color:rgb(242,242,242)">
Flume Sinks</h3>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
HDFS Sink</h4>
</div>
<div style="font-size:14px">
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
The following are the escape sequences supported:</p>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<colgroup><col width="10%"><col width="90%"></colgroup>
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Alias</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%{host}</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Substitute value of event header named “host”. Arbitrary header names are supported.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%t</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Unix time in milliseconds</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%a</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
locale’s short weekday name (Mon, Tue, ...)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%A</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
locale’s full weekday name (Monday, Tuesday, ...)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%b</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
locale’s short month name (Jan, Feb, ...)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%B</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
locale’s long month name (January, February, ...)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%c</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
locale’s date and time (Thu Mar 3 23:05:25 2005)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%d</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
day of month (01)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%e</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
day of month without padding (1)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%D</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
date; same as %m/%d/%y</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%H</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hour (00..23)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%I</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hour (01..12)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%j</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
day of year (001..366)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%k</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hour ( 0..23)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%m</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
month (01..12)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%n</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
month without padding (1..12)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%M</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
minute (00..59)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%p</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
locale’s equivalent of am or pm</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%s</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
seconds since 1970-01-01 00:00:00 UTC</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%S</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
second (00..59)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%y</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
last two digits of year (00..99)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%Y</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
year (2010)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
%z</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
+hhmm numeric timezone (for example, -0400)</td>
</tr>
</tbody>
</table>
<br>
</div>
<div style="font-size:14px">
<div class="admonition note" style="margin-top:10px; margin-bottom:10px; padding:7px; border:1px solid rgb(204,204,204); font-family:Simsun; font-size:16px; background-color:rgb(238,238,238)">
<p class="first admonition-title" style="margin-top:0px; margin-right:10px; margin-bottom:5px; font-weight:bold; display:inline; text-align:justify; line-height:20.8px">
note</p>
 
<p class="last" style="text-align:justify; line-height:20.8px; margin-bottom:5px; display:inline">
For all of the time related escape sequences, a header with the key “timestamp” must exist among the headers of the event (unless <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background:rgb(214,214,214)"><span class="pre">hdfs.useLocalTimeStamp</span></tt> is
 set to <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background:rgb(214,214,214)"><span class="pre">true</span></tt>). One way to add this automatically is to use the TimestampInterceptor.</p>
</div>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<colgroup><col width="12%"><col width="6%"><col width="82%"></colgroup>
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channel</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">hdfs</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>hdfs.path</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
HDFS directory path (eg hdfs://namenode/flume/webdata/)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.filePrefix</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
FlumeData</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Name prefixed to files created by Flume in hdfs directory</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.fileSuffix</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Suffix to append to file (eg <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">.avro</span></tt> - <em>NOTE: period is not automatically added</em>)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.inUsePrefix</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Prefix that is used for temporal files that flume actively writes into</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.inUseSuffix</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">.tmp</span></tt></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Suffix that is used for temporal files that flume actively writes into</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.rollInterval</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
30</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Number of seconds to wait before rolling current file (0 = never roll based on time interval)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.rollSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
1024</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
File size to trigger roll, in bytes (0: never roll based on file size)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.rollCount</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
10</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Number of events written to file before it rolled (0 = never roll based on number of events)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.idleTimeout</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
0</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Timeout after which inactive files get closed (0 = disable automatic closing of idle files)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
number of events written to file before it is flushed to HDFS</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.codeC</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Compression codec. one of following : gzip, bzip2, lzo, lzop, snappy</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.fileType</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
SequenceFile</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
File format: currently <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">SequenceFile</span></tt>, <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">DataStream</span></tt> or <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">CompressedStream</span></tt> (1)DataStream
 will <br>
not compress output file and please don’t set codeC (2)CompressedStream requires set<br>
hdfs.codeC with an available codeC</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.maxOpenFiles</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
5000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Allow only this number of open files. If this number is exceeded, the oldest file is closed.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.minBlockReplicas</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Specify minimum number of replicas per HDFS block. If not specified, it comes from the<br>
default Hadoop config in the classpath.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.writeFormat</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Format for sequence file records. One of “Text” or “Writable” (the default).</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.callTimeout</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
10000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Number of milliseconds allowed for HDFS operations, such as open, write, flush, close.<br>
This number should be increased if many HDFS timeout operations are occurring.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.threadsPoolSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
10</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Number of threads per HDFS sink for HDFS IO ops (open, write, etc.)</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.rollTimerPoolSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
1</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Number of threads per HDFS sink for scheduling timed file rolling</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.kerberosPrincipal</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Kerberos user principal for accessing secure HDFS</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.kerberosKeytab</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Kerberos keytab for accessing secure HDFS</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.proxyUser</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.round</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Should the timestamp be rounded down (if true, affects all time based escape sequences except %t)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.roundValue</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
1</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Rounded down to the highest multiple of this (in the unit configured using <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">hdfs.roundUnit</span></tt>), less than current time.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.roundUnit</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
second</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The unit of the round down value - <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">second</span></tt>, <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">minute</span></tt> or <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">hour</span></tt>.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.timeZone</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Local Time</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Name of the timezone that should be used for resolving the directory path, e.g. America/Los_Angeles.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.useLocalTimeStamp</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Use the local time (instead of the timestamp from the event header) while replacing the escape sequences.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.closeTries</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
0</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Number of times the sink must try renaming a file, after initiating a close attempt. If set to 1, this sink will not re-try<br>
a failed rename (due to, for example, NameNode or DataNode failure), and may leave the file in an open state<br>
with a .tmp extension. If set to 0, the sink will try to rename the file until the file is eventually renamed (there is<br>
no limit on the number of times it would try). The file may still remain open if the close call fails but the data will<br>
be intact and in this case, the file will be closed only after a Flume restart.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hdfs.retryInterval</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
180</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Time in seconds between consecutive attempts to close a file. Each close call costs multiple RPC round-trips to<br>
the Namenode, so setting this too low can cause a lot of load on the name node. If set to 0 or less, the sink will<br>
not attempt to close the file if the first attempt fails, and may leave the file open or with a ”.tmp” extension.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
serializer</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">TEXT</span></tt></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Other possible options include <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">avro_event</span></tt> or the fully-qualified class name of an implementation of the <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">EventSerializer.Builder</span></tt> interface.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
serializer.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">hdfs</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.hdfs.path</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/flume/events/%y-%m-%d/%H%M/%S</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.hdfs.filePrefix</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">events-</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.hdfs.round</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">true</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.hdfs.roundValue</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">10</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.hdfs.roundUnit</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">minute</span></pre>
</div>
</div>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  The above configuration will round down the timestamp to the last 10th minute. For example, an event with timestamp 11:54:34 AM, June 12, 2012 will cause the hdfs path
 to become </span><tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; line-height:20.8px; text-align:justify; background-color:rgb(236,240,243)"><span class="pre">/flume/events/2012-06-12/1150/00</span></tt><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">.</span><br>
</div>
<div style="font-size:14px"><br>
</div>
<div style="font-size:14px">
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Hive Sink</h4>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
<strong>This sink is provided as a preview feature and not recommended for use in production.</strong></p>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<colgroup><col width="15%"><col width="8%"><col width="77%"></colgroup>
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channel</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">hive</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>hive.metastore</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Hive metastore URI (eg thrift://a.b.com:9083 )</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>hive.database</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Hive database name</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>hive.table</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Hive table name</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hive.partition</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Comma separate list of partition values identifying the partition to write to. May contain escape sequences.
<br>
E.g: If the table is partitioned by (continent: string, country :string, time : string) then ‘Asia,India,2014-02-26-01-21’
<br>
will indicate continent=Asia,country=India,time=2014-02-26-01-21</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hive.txnsPerBatchAsk</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Hive grants a <em>batch of transactions</em> instead of single transactions to streaming clients like Flume. This setting
<br>
configures the number of desired transactions per Transaction Batch. Data from all transactions in a single<br>
 batch end up in a single file. Flume will write a maximum of batchSize events in each transaction in the batch.
<br>
This setting in conjunction with batchSize provides control over the size of each file. Note that eventually
<br>
Hive will transparently compact these files into larger files.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
heartBeatInterval</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
240</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
(In seconds) Interval between consecutive heartbeats sent to Hive to keep unused transactions from expiring.<br>
 Set this value to 0 to disable heartbeats.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
autoCreatePartitions</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
true</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Flume will automatically create the necessary Hive partitions to stream to</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
15000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Max number of events written to Hive in a single Hive transaction</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
maxOpenConnections</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
500</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Allow only this number of open connections. If this number is exceeded, the least recently used
<br>
connection is closed.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
callTimeout</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
10000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
(In milliseconds) Timeout for Hive &amp; HDFS I/O operations, such as openTxn, write, commit, abort.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>serializer</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Serializer is responsible for parsing out field from the event and mapping them to columns in the hive table.
<br>
Choice of serializer depends upon the format of the data in the event. Supported serializers: DELIMITED
<br>
and JSON</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
roundUnit</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
minute</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The unit of the round down value - <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">second</span></tt>, <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">minute</span></tt> or <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">hour</span></tt>.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
roundValue</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
1</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Rounded down to the highest multiple of this (in the unit configured using hive.roundUnit), less than current time</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
timeZone</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Local Time</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Name of the timezone that should be used for resolving the escape sequences in partition, e.g. America/Los_Angeles.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
useLocalTimeStamp</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Use the local time (instead of the timestamp from the event header) while replacing the escape sequences.</td>
</tr>
</tbody>
</table>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Logger Sink</h4>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Logs event at INFO level. Typically useful for testing/debugging purpose. Required properties are in <strong>bold</strong>.</p>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<colgroup><col width="20%"><col width="10%"><col width="70%"></colgroup>
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channel</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">logger</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
maxBytesToLog</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
16</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum number of bytes of the Event body to log</td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">logger</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span></pre>
</div>
</div>
</div>
<div style="font-size:14px">
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Avro Sink</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channel</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">avro</span></tt>.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>hostname</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The hostname or IP address to bind to.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>port</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The port # to listen on.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batch-size</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
number of event to batch together for send.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
connect-timeout</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
20000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Amount of time (ms) to allow for the first (handshake) request.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
request-timeout</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
20000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Amount of time (ms) to allow for requests after the first.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
reset-connection-interval</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
none</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Amount of time (s) before the connection to the next hop is reset. This will force the Avro Sink to<br>
reconnect to the next hop. This will allow the sink to connect to hosts behind a hardware<br>
load-balancer when news hosts are added without having to restart the agent.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
compression-type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
none</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
This can be “none” or “deflate”. The compression-type must match the compression-type of<br>
 matching AvroSource</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
compression-level</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
6</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The level of compression to compress event. 0 = no compression and 1-9 is compression.<br>
The higher the number the more compression</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
ssl</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Set to true to enable SSL for this AvroSink. When configuring SSL, you can optionally set a “truststore”,<br>
“truststore-password”, “truststore-type”, and specify whether to “trust-all-certs”.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
trust-all-certs</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
If this is set to true, SSL server certificates for remote servers (Avro Sources) will not be checked.<br>
This should NOT be used in production because it makes it easier for an attacker to execute a<br>
man-in-the-middle attack and “listen in” on the encrypted connection.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
truststore</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The path to a custom Java truststore file. Flume uses the certificate authority information in this file to<br>
determine whether the remote Avro Source’s SSL authentication credentials should be trusted.<br>
If not specified, the default Java JSSE certificate authority files (typically “jssecacerts” or “cacerts” in the Oracle JRE) will be used.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
truststore-password</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The password for the specified truststore.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
truststore-type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
JKS</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The type of the Java truststore. This can be “JKS” or other supported Java truststore type.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
exclude-protocols</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
SSLv3</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of SSL/TLS protocols to exclude. SSLv3 will always be excluded in addition to the protocols specified.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
maxIoWorkers</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
2 * the number of available processors in the machine</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The maximum number of I/O worker threads. This is configured on the NettyAvroRpcClient NioClientSocketChannelFactory.</td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
 Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">avro</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.hostname</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">10.10.10.10</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.port</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">4545</span></pre>
</div>
</div>
</div>
<div style="font-size:14px">
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Thrift Sink</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channel</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">thrift</span></tt>.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>hostname</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The hostname or IP address to bind to.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>port</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The port # to listen on.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batch-size</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
number of event to batch together for send.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
connect-timeout</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
20000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Amount of time (ms) to allow for the first (handshake) request.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
request-timeout</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
20000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Amount of time (ms) to allow for requests after the first.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
connection-reset-interval</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
none</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Amount of time (s) before the connection to the next hop is reset. This will force the Thrift Sink to<br>
reconnect to the next hop. This will allow the sink to connect to hosts behind a hardware<br>
load-balancer when news hosts are added without having to restart the agent.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
ssl</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Set to true to enable SSL for this ThriftSink. When configuring SSL, you can optionally set a “truststore”,<br>
“truststore-password” and “truststore-type”</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
truststore</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The path to a custom Java truststore file. Flume uses the certificate authority information in this file to<br>
determine whether the remote Thrift Source’s SSL authentication credentials should be trusted.<br>
If not specified, the default Java JSSE certificate authority files (typically “jssecacerts” or “cacerts”<br>
in the Oracle JRE) will be used.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
truststore-password</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The password for the specified truststore.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
truststore-type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
JKS</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The type of the Java truststore. This can be “JKS” or other supported Java truststore type.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
exclude-protocols</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
SSLv3</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of SSL/TLS protocols to exclude</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
kerberos</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Set to true to enable kerberos authentication. In kerberos mode, client-principal, client-keytab<br>
and server-principal are required for successful authentication and communication to a kerberos<br>
enabled Thrift Source.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
client-principal</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
—-</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The kerberos principal used by the Thrift Sink to authenticate to the kerberos KDC.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
client-keytab</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
—-</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The keytab location used by the Thrift Sink in combination with the client-principal to authenticate<br>
to the kerberos KDC.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
server-principal</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The kerberos principal of the Thrift Source to which the Thrift Sink is configured to connect to.</td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
 Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">thrift</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.hostname</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">10.10.10.10</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.port</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">4545</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
IRC Sink</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channel</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">irc</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>hostname</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The hostname or IP address to connect to</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
port</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
6667</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The port number of remote host to connect</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>nick</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Nick name</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
user</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
User name</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
password</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
User password</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>chan</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
channel</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
name</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
splitlines</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
(boolean)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
splitchars</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
n</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
line separator (if you were to enter the default value into the config file, then you would need to escape the backslash, like this: “\n”)</td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
 Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">irc</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.hostname</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">irc.yourdomain.com</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.nick</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">flume</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.chan</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">#flume</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
File Roll Sink</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">Stores events on the local filesystem.</span><br>
</div>
<div style="font-size:14px">
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channel</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">file_roll</span></tt>.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>sink.directory</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The directory where files will be stored</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
sink.rollInterval</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
30</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Roll the file every 30 seconds. Specifying 0 will disable rolling and cause all events to be written to a single file.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
sink.serializer</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
TEXT</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Other possible options include <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">avro_event</span></tt> or the FQCN of an implementation of EventSerializer.Builder interface.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
 Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">file_roll</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.sink.directory</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/var/log/flume</span></pre>
</div>
</div>
</div>
<div style="font-size:14px">
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Null Sink</h4>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Discards all events it receives from the channel. Required properties are in <strong>bold</strong>.</p>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<colgroup><col width="20%"><col width="11%"><col width="70%"></colgroup>
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channel</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">null</span></tt>.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">null</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
HBaseSinks</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channel</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">hbase</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>table</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The name of the table in Hbase to write to.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>columnFamily</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The column family in Hbase to write to.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
zookeeperQuorum</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The quorum spec. This is the value for the property<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">hbase.zookeeper.quorum</span></tt> in hbase-site.xml</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
znodeParent</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
/hbase</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The base path for the znode for the -ROOT- region. Value of <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">zookeeper.znode.parent</span></tt> in hbase-site.xml</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Number of events to be written per txn.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
coalesceIncrements</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Should the sink coalesce multiple increments to a cell per batch. This might give better performance if there are multiple increments to a limited number of cells.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
serializer</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
org.apache.flume.sink.hbase.SimpleHbaseEventSerializer</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Default increment column = “iCol”, payload column = “pCol”.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
serializer.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Properties to be passed to the serializer.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
kerberosPrincipal</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Kerberos user principal for accessing secure HBase</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
kerberosKeytab</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Kerberos keytab for accessing secure HBase</td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">hbase</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.table</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">foo_table</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.columnFamily</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">bar_cf</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.serializer</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.apache.flume.sink.hbase.RegexHbaseEventSerializer</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span></pre>
</div>
</div>
<h5 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:17.6px; font-family:Simsun; background-color:rgb(242,242,242)">
AsyncHBaseSink</h5>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channel</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">asynchbase</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>table</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The name of the table in Hbase to write to.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
zookeeperQuorum</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The quorum spec. This is the value for the property<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">hbase.zookeeper.quorum</span></tt> in hbase-site.xml</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
znodeParent</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
/hbase</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The base path for the znode for the -ROOT- region. Value of <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">zookeeper.znode.parent</span></tt> in hbase-site.xml</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>columnFamily</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The column family in Hbase to write to.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Number of events to be written per txn.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
coalesceIncrements</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Should the sink coalesce multiple increments to a cell per batch. This might give better performance if there are multiple increments to a limited number of cells.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
timeout</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
60000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The length of time (in milliseconds) the sink waits for acks from hbase for all events in a transaction.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
serializer</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
org.apache.flume.sink.hbase.SimpleAsyncHbaseEventSerializer</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
serializer.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Properties to be passed to the serializer.</td>
</tr>
</tbody>
</table>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
MorphlineSolrSink</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  This sink extracts data from Flume events, transforms it, and loads it in near-real-time into Apache Solr servers</span></div>
<div style="font-size:14px"><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"><br>
</span></div>
<div style="font-size:14px">
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channel</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.sink.solr.morphline.MorphlineSolrSink</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>morphlineFile</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The relative or absolute path on the local file system to the morphline configuration file. Example:<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">/etc/flume-ng/conf/morphline.conf</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
morphlineId</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
null</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Optional name used to identify a morphline if there are multiple morphlines in a morphline config file</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
1000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The maximum number of events to take per flume transaction.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchDurationMillis</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
1000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The maximum duration per flume transaction (ms). The transaction commits after this<br>
duration or when batchSize is exceeded, whichever comes first.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
handlerClass</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
org.apache.flume.sink.solr.morphline.MorphlineHandlerImpl</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The FQCN of a class implementing org.apache.flume.sink.solr.morphline.MorphlineHandler</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
isProductionMode</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
This flag should be enabled for mission critical, large-scale online production systems<br>
that need to make progress without downtime when unrecoverable exceptions occur. <br>
Corrupt or malformed parser input data, parser bugs, and errors related to unknown<br>
Solr schema fields produce unrecoverable exceptions.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
recoverableExceptionClasses</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
org.apache.solr.client.solrj.SolrServerException</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Comma separated list of recoverable exceptions that tend to be transient, in which case<br>
the corresponding task can be retried. Examples include network connection errors,<br>
timeouts, etc. When the production mode flag is set to true, the recoverable exceptions<br>
configured using this parameter will not be ignored and hence will lead to retries.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
isIgnoringRecoverableExceptions</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
This flag should be enabled, if an unrecoverable exception is accidentally misclassified<br>
as recoverable. This enables the sink to make progress and avoid retrying an event forever.</td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.apache.flume.sink.solr.morphline.MorphlineSolrSink</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.morphlineFile</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/etc/flume-ng/conf/morphline.conf</span>
<span class="c" style="color:rgb(153,153,136); font-style:italic"># a1.sinks.k1.morphlineId = morphline1</span>
<span class="c" style="color:rgb(153,153,136); font-style:italic"># a1.sinks.k1.batchSize = 1000</span>
<span class="c" style="color:rgb(153,153,136); font-style:italic"># a1.sinks.k1.batchDurationMillis = 1000</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
ElasticSearchSink</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  This sink writes data to an elasticsearch cluster. By default, events will be written so that the </span><a target="_blank" class="reference external" href="http://kibana.org/" rel="nofollow" style="color:rgb(53,95,124); text-decoration:none; font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">Kibana</a><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> graphical
 interface can display them - just as if </span><a target="_blank" class="reference external" href="https://logstash.net/" rel="nofollow" style="color:rgb(53,95,124); text-decoration:none; font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">logstash</a><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> wrote
 them.</span></div>
</div>
<p><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  The elasticsearch and lucene-core jars required for your environment must be placed in the lib directory of the Apache Flume installation.</span><br>
</p>
<p><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  Events are serialized for elasticsearch by the ElasticSearchLogStashEventSerializer by default. This behaviour can be overridden with the serializer parameter.</span><br>
</p>
<p><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  The type is the FQCN: org.apache.flume.sink.elasticsearch.ElasticSearchSink</span><br>
</p>
<p>
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channel</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.sink.elasticsearch.ElasticSearchSink</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>hostNames</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Comma separated list of hostname:port, if the port is not present the default port ‘9300’ will be used</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
indexName</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
flume</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The name of the index which the date will be appended to. Example ‘flume’ -&gt; ‘flume-yyyy-MM-dd’<br>
Arbitrary header substitution is supported, eg. %{header} replaces with value of named event header</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
indexType</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
logs</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The type to index the document to, defaults to ‘log’ Arbitrary header substitution is supported, eg. %{header}<br>
 replaces with value of named event header</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
clusterName</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
elasticsearch</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Name of the ElasticSearch cluster to connect to</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Number of events to be written per txn.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
ttl</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
TTL in days, when set will cause the expired documents to be deleted automatically, if not set documents<br>
will never be automatically deleted. TTL is accepted both in the earlier form of integer only<br>
e.g. a1.sinks.k1.ttl = 5 and also with a qualifier ms (millisecond), s (second), m (minute), h (hour),<br>
d (day) and w (week). Example a1.sinks.k1.ttl = 5d will set TTL to 5 days. Follow<a target="_blank" class="reference external" href="http://www.elasticsearch.org/guide/reference/mapping/ttl-field/" rel="nofollow" style="color:rgb(53,95,124); text-decoration:none">http://www.elasticsearch.org/guide/reference/mapping/ttl-field/</a> for
 more information.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
serializer</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
org.apache.flume.sink.elasticsearch.ElasticSearchLogStashEventSerializer</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The ElasticSearchIndexRequestBuilderFactory or ElasticSearchEventSerializer to use. Implementations of either class are accepted but ElasticSearchIndexRequestBuilderFactory is preferred.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
serializer.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Properties to be passed to the serializer.</td>
</tr>
</tbody>
</table>

<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
  Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">elasticsearch</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.hostNames</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">127.0.0.1:9200,127.0.0.2:9300</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.indexName</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">foo_index</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.indexType</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">bar_type</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.clusterName</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">foobar_cluster</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.batchSize</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">500</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.ttl</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">5d</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.serializer</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.apache.flume.sink.elasticsearch.ElasticSearchDynamicSerializer</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span></pre>
</div>
</div>
<p></p>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Kafka Sink</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  This is a Flume Sink implementation that can publish data to a </span><a target="_blank" class="reference external" href="http://kafka.apache.org/" rel="nofollow" style="color:rgb(53,95,124); text-decoration:none; font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">Kafka</a><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> topic. </span><br>
<p></p>
<p>
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Must be set to <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.sink.kafka.KafkaSink</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>brokerList</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
List of brokers Kafka-Sink will connect to, to get the list of topic partitions This can be a partial list of brokers,<br>
but we recommend at least two for HA. The format is comma separated list of hostname:port</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
topic</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
default-flume-topic</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The topic in Kafka to which the messages will be published. If this parameter is configured, messages will<br>
be published to this topic. If the event header contains a “topic” field, the event will be published to that topic<br>
overriding the topic configured here.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
batchSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
How many messages to process in one batch. Larger batches improve throughput while adding latency.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
requiredAcks</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
1</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
How many replicas must acknowledge a message before its considered successfully written. Accepted<br>
values are 0 (Never wait for acknowledgement), 1 (wait for leader only), -1 (wait for all replicas) Set this<br>
to -1 to avoid data loss in some cases of leader failure.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Other Kafka Producer Properties</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
These properties are used to configure the Kafka Producer. Any producer property supported by Kafka<br>
can be used. The only requirement is to prepend the property name with the prefix <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">kafka.</span></tt>. For example: kafka.producer.type</td>
</tr>
</tbody>
</table>
<br>

<p></p>
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.apache.flume.sink.kafka.KafkaSink</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.topic</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">mytopic</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.brokerList</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">localhost:9092</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.requiredAcks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.batchSize</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">20</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span></pre>
<p></p>
<p></p>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Custom Sink</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  A custom sink is your own implementation of the Sink interface. A custom sink’s class and its dependencies must be included in the agent’s classpath when starting the
 Flume agent. The type of the custom sink is its FQCN.</span><br>
<p></p>
<p>
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>channel</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be your FQCN</td>
</tr>
</tbody>
</table>

<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.example.MySink</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span></pre>
</div>
</div>
<h3 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:22.4px; font-family:Simsun; background-color:rgb(242,242,242)">
Flume Channels</h3>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Memory Channel</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">memory</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
capacity</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The maximum number of events stored in the channel</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
transactionCapacity</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The maximum number of events the channel will take from a source or give to a sink per transaction</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
keep-alive</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
3</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Timeout in seconds for adding or removing an event</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
byteCapacityBufferPercentage</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
20</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Defines the percent of buffer between byteCapacity and the estimated total size of all events in the channel,<br>
to account for data in headers. See below.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
byteCapacity</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
see description</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum total <strong>bytes</strong> of memory allowed as a sum of all events in this channel. The implementation only<br>
counts the Event <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">body</span></tt>, which is the reason for providing the<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">byteCapacityBufferPercentage</span></tt> configuration<br>
parameter as well. Defaults to a computed value equal to 80% of the maximum memory available to the<br>
JVM (i.e. 80% of the -Xmx value passed on the command line). Note that if you have multiple memory<br>
channels on a single JVM, and they happen to hold the same physical events (i.e. if you are using a<br>
replicating channel selector from a single source) then those event sizes may be double-counted for<br>
 channel byteCapacity purposes. Setting this value to <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">0</span></tt> will cause this value to fall back to a hard internal<br>
 limit of about 200 GB.</td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">memory</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.capacity</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">10000</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.transactionCapacity</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">10000</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.byteCapacityBufferPercentage</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">20</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.byteCapacity</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">800000</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
JDBC Channel</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">jdbc</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
db.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
DERBY</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Database vendor, needs to be DERBY.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
driver.class</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
org.apache.derby.jdbc.EmbeddedDriver</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Class for vendor’s JDBC driver</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
driver.url</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
(constructed from other properties)</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
JDBC connection URL</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
db.username</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
“sa”</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
User id for db connection</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
db.password</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
password for db connection</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
connection.properties.file</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
JDBC Connection property file path</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
create.schema</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
true</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
If true, then creates db schema if not there</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
create.index</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
true</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Create indexes to speed up lookups</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
create.foreignkey</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
true</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
transaction.isolation</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
“READ_COMMITTED”</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Isolation level for db session READ_UNCOMMITTED, READ_COMMITTED, SERIALIZABLE, REPEATABLE_READ</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
maximum.connections</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
10</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Max connections allowed to db</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
maximum.capacity</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
0 (unlimited)</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Max number of events in the channel</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
sysprop.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
DB Vendor specific properties</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
sysprop.user.home</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Home path to store embedded Derby database</td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
 Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">jdbc</span></pre>
</div>
</div>
<p></p>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Kafka Channel</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.channel.kafka.KafkaChannel</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>brokerList</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
List of brokers in the Kafka cluster used by the channel This can be a partial list of brokers,<br>
but we recommend at least two for HA. The format is comma separated list of hostname:port</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>zookeeperConnect</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
URI of ZooKeeper used by Kafka cluster The format is comma separated list of hostname:port.<br>
If chroot is used, it is added once at the end. For example: zookeeper-1:2181,zookeeper-2:2182,<br>
zookeeper-3:2181/kafka</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
topic</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
flume-channel</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Kafka topic which the channel will use</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
groupId</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
flume</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Consumer group ID the channel uses to register with Kafka. Multiple channels must use the<br>
same topic and group to ensure that when one agent fails another can get the data Note that<br>
having non-channel consumers with the same ID can lead to data loss.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
parseAsFlumeEvent</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
true</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Expecting Avro datums with FlumeEvent schema in the channel. This should be true if Flume<br>
source is writing to the channel And false if other producers are writing into the topic that the<br>
channel is using Flume source messages to Kafka can be parsed outside of Flume by using<br>
org.apache.flume.source.avro.AvroFlumeEvent provided by the flume-ng-sdk artifact</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
readSmallestOffset</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
When set to true, the channel will read all data in the topic, starting from the oldest event when<br>
false, it will read only events written after the channel started When “parseAsFlumeEvent” is true,<br>
this will be false. Flume source will start prior to the sinks and this guarantees that events sent by<br>
source before sinks start will not be lost.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Other Kafka Properties</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
These properties are used to configure the Kafka Producer and Consumer used by the channel.<br>
Any property supported by Kafka can be used. The only requirement is to prepend the property<br>
name with the prefix <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">kafka.</span></tt>. For example: kafka.producer.type</td>
</tr>
</tbody>
</table>
<p></p>
<p></p>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels.channel1.type</span>   <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.apache.flume.channel.kafka.KafkaChannel</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.channel1.capacity</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">10000</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.channel1.transactionCapacity</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">1000</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.channel1.brokerList</span><span class="o" style="font-weight:bold">=</span><span class="s" style="color:rgb(187,136,68)">kafka-2:9092,kafka-3:9092</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.channel1.topic</span><span class="o" style="font-weight:bold">=</span><span class="s" style="color:rgb(187,136,68)">channel1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.channel1.zookeeperConnect</span><span class="o" style="font-weight:bold">=</span><span class="s" style="color:rgb(187,136,68)">kafka-1:2181</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
File Channel</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
 </th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">file</span></tt>.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
checkpointDir</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
~/.flume/file-channel/checkpoint</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The directory where checkpoint file will be stored</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
useDualCheckpoints</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Backup the checkpoint. If this is set to <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">true</span></tt>, <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">backupCheckpointDir</span></tt> <strong>must</strong>be
 set</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
backupCheckpointDir</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The directory where the checkpoint is backed up to. This directory<strong>must not</strong> be the<br>
same as the data directories or the checkpoint directory</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
dataDirs</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
~/.flume/file-channel/data</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Comma separated list of directories for storing log files. Using multiple directories on<br>
separate disks can improve file channel peformance</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
transactionCapacity</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
10000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The maximum size of transaction supported by the channel</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
checkpointInterval</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
30000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Amount of time (in millis) between checkpoints</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
maxFileSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
2146435071</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Max size (in bytes) of a single log file</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
minimumRequiredSpace</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
524288000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Minimum Required free space (in bytes). To avoid data corruption, File Channel stops accepting<br>
take/put requests when free space drops below this value</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
capacity</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
1000000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum capacity of the channel</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
keep-alive</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
3</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Amount of time (in sec) to wait for a put operation</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
use-log-replay-v1</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Expert: Use old replay logic</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
use-fast-replay</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Expert: Replay without using queue</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
checkpointOnClose</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
true</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Controls if a checkpoint is created when the channel is closed. Creating a checkpoint on<br>
 close speeds up subsequent startup of the file channel by avoiding replay.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
encryption.activeKey</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Key name used to encrypt new data</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
encryption.cipherProvider</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Cipher provider type, supported types: AESCTRNOPADDING</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
encryption.keyProvider</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Key provider type, supported types: JCEKSFILE</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
encryption.keyProvider.keyStoreFile</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Path to the keystore file</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
encrpytion.keyProvider.keyStorePasswordFile</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Path to the keystore password file</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
encryption.keyProvider.keys</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
List of all keys (e.g. history of the activeKey setting)</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
encyption.keyProvider.keys.*.passwordFile</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Path to the optional key password file</td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
  Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">file</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.checkpointDir</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/mnt/flume/checkpoint</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.dataDirs</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/mnt/flume/data</span></pre>
</div>
</div>
<br>
<p><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">Encryption</span><br>
</p>
<p></p>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Generating a key with a password seperate from the key store password:</p>
<div class="highlight-bash" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)">keytool -genseckey -alias key-0 -keypass keyPassword -keyalg AES <span class="se" style="color:rgb(187,136,68)">\</span>
  -keysize 128 -validity 9000 -keystore test.keystore <span class="se" style="color:rgb(187,136,68)">\</span>
  -storetype jceks -storepass keyStorePassword
</pre>
</div>
</div>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Generating a key with the password the same as the key store password:</p>
<div class="highlight-bash" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)">keytool -genseckey -alias key-1 -keyalg AES -keysize 128 -validity 9000 <span class="se" style="color:rgb(187,136,68)">\</span>
  -keystore src/test/resources/test.keystore -storetype jceks <span class="se" style="color:rgb(187,136,68)">\</span>
  -storepass keyStorePassword
</pre>
</div>
</div>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.activeKey</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">key-0</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.cipherProvider</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">AESCTRNOPADDING</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">key-provider-0</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">JCEKSFILE</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider.keyStoreFile</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/path/to/my.keystore</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider.keyStorePasswordFile</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/path/to/my.keystore.password</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider.keys</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">key-0</span>
</pre>
</div>
</div>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Let’s say you have aged key-0 out and new files should be encrypted with key-1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.activeKey</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">key-1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.cipherProvider</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">AESCTRNOPADDING</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">JCEKSFILE</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider.keyStoreFile</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/path/to/my.keystore</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider.keyStorePasswordFile</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/path/to/my.keystore.password</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider.keys</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">key-0 key-1</span>
</pre>
</div>
</div>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
The same scenerio as above, however key-0 has its own password:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.activeKey</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">key-1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.cipherProvider</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">AESCTRNOPADDING</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">JCEKSFILE</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider.keyStoreFile</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/path/to/my.keystore</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider.keyStorePasswordFile</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/path/to/my.keystore.password</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider.keys</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">key-0 key-1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.encryption.keyProvider.keys.key-0.passwordFile</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/path/to/key-0.password</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Spillable Memory Channel</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  The events are stored in an in-memory queue and on disk. The in-memory queue serves as the primary store and the disk as overflow. </span><br>
<p>
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">SPILLABLEMEMORY</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
memoryCapacity</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
10000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum number of events stored in memory queue. To disable use of in-memory <br>
queue, set this to zero.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
overflowCapacity</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
100000000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum number of events stored in overflow disk (i.e File channel). To disable <br>
use of overflow, set this to zero.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
overflowTimeout</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
3</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The number of seconds to wait before enabling disk overflow when memory fills up.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
byteCapacityBufferPercentage</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
20</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Defines the percent of buffer between byteCapacity and the estimated total size of all<br>
events in the channel, to account for data in headers. See below.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
byteCapacity</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
see description</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Maximum <strong>bytes</strong> of memory allowed as a sum of all events in the memory queue.<br>
The implementation only counts the Event <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">body</span></tt>, which is the reason for providing<br>
the<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">byteCapacityBufferPercentage</span></tt> configuration parameter as well. Defaults to a<br>
computed value equal to 80% of the maximum memory available to the JVM <br>
(i.e. 80% of the -Xmx value passed on the command line). Note that if you have <br>
multiple memory channels on a single JVM, and they happen to hold the same <br>
physical events (i.e. if you are using a replicating channel selector from a single<br>
source) then those event sizes may be double-counted for channel byteCapacity <br>
purposes. Setting this value to <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">0</span></tt> will cause this value to fall back to a hard internal<br>
limit of about 200 GB.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
avgEventSize</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
500</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Estimated average size of events, in bytes, going into the channel</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
&lt;file channel properties&gt;</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
see file channel</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Any file channel property with the exception of ‘keep-alive’ and ‘capacity’ can be used.<br>
The keep-alive of file channel is managed by Spillable Memory Channel. Use ‘overflowCapacity’<br>
 to set the File channel’s capacity.</td>
</tr>
</tbody>
</table>

<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
 In-memory queue is considered full if either memoryCapacity or byteCapacity limit is reached.</p>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
 Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">SPILLABLEMEMORY</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.memoryCapacity</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">10000</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.overflowCapacity</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">1000000</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.byteCapacity</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">800000</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.checkpointDir</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/mnt/flume/checkpoint</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.dataDirs</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/mnt/flume/data</span>
</pre>
</div>
</div>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
 To disable the use of the in-memory queue and function like a file channel:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">SPILLABLEMEMORY</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.memoryCapacity</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">0</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.overflowCapacity</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">1000000</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.checkpointDir</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/mnt/flume/checkpoint</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.dataDirs</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/mnt/flume/data</span>
</pre>
</div>
</div>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
 To disable the use of overflow disk and function purely as a in-memory channel:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">SPILLABLEMEMORY</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.memoryCapacity</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">100000</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.overflowCapacity</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">0</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Custom Channel</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be a FQCN</td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels.c1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.example.MyChannel</span></pre>
</div>
</div>
<h3 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:22.4px; font-family:Simsun; background-color:rgb(242,242,242)">
Flume Channel Selectors</h3>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Replicating Channel Selector (default)</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">replicating</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.optional</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Set of channels to be marked as <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">optional</span></tt></td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
  Example for agent named a1 and it’s source called r1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1 c2 c3</span>
<span class="na" style="color:rgb(0,128,128)">a1.source.r1.selector.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">replicating</span>
<span class="na" style="color:rgb(0,128,128)">a1.source.r1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1 c2 c3</span>
<span class="na" style="color:rgb(0,128,128)">a1.source.r1.selector.optional</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c3</span></pre>
</div>
</div>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  In the above configuration, c3 is an optional channel. Failure to write to c3 is simply ignored. Since c1 and c2 are not marked optional, failure to write to those channels
 will cause the transaction to fail.</span><br>
<p></p>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Multiplexing Channel Selector</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replicating</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">multiplexing</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.header</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
flume.selector.header</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.default</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
selector.mapping.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
</tbody>
</table>
<p></p>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1 and it’s source called r1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1 c2 c3 c4</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.selector.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">multiplexing</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.selector.header</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">state</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.selector.mapping.CZ</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.selector.mapping.US</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c2 c3</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.selector.default</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c4</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Custom Channel Selector</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>sinks</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of sinks that are participating in the group</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>processor.type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">default</span></tt></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">default</span></tt>, <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">failover</span></tt> or <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">load_balance</span></tt></td>
</tr>
</tbody>
</table>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sinkgroups</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">g1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinkgroups.g1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1 k2</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinkgroups.g1.processor.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">load_balance</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Default Sink Processor</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  Default sink processor accepts only a single sink. User is not forced to create processor (sink group) for single sinks.</span><br>
<p></p>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Failover Sink Processor</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  The Sinks have a priority associated with them, larger the number, higher the priority. If a Sink fails while sending a Event the next Sink with highest priority shall
 be tried next for sending Events.</span><br>
<p></p>
<p>
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>sinks</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of sinks that are participating in the group</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>processor.type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">default</span></tt></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">failover</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>processor.priority.&lt;sinkName&gt;</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Priority value. &lt;sinkName&gt; must be one of the sink instances associated with the <br>
current sink group A higher priority value Sink gets activated earlier. A larger absolute<br>
value indicates higher priority</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
processor.maxpenalty</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
30000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The maximum backoff period for the failed Sink (in millis)</td>
</tr>
</tbody>
</table>

<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
 Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sinkgroups</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">g1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinkgroups.g1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1 k2</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinkgroups.g1.processor.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">failover</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinkgroups.g1.processor.priority.k1</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">5</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinkgroups.g1.processor.priority.k2</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">10</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinkgroups.g1.processor.maxpenalty</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">10000</span></pre>
</div>
</div>
<p></p>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Load balancing Sink Processor</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> via </span><tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; line-height:20.8px; text-align:justify; background-color:rgb(236,240,243)"><span class="pre">round_robin</span></tt><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> or </span><tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; line-height:20.8px; text-align:justify; background-color:rgb(236,240,243)"><span class="pre">random</span></tt><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> selection
 mechanisms.</span><br>
<p></p>
<p>
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>processor.sinks</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of sinks that are participating in the group</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>processor.type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">default</span></tt></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, needs to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">load_balance</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
processor.backoff</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Should failed sinks be backed off exponentially.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
processor.selector</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">round_robin</span></tt></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Selection mechanism. Must be either <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">round_robin</span></tt>, <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">random</span></tt> or
 FQCN of custom class that inherits from <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">AbstractSinkSelector</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
processor.selector.maxTimeOut</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
30000</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Used by backoff selectors to limit exponential backoff (in milliseconds)</td>
</tr>
</tbody>
</table>

<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sinkgroups</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">g1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinkgroups.g1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1 k2</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinkgroups.g1.processor.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">load_balance</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinkgroups.g1.processor.backoff</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">true</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinkgroups.g1.processor.selector</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">random</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Custom Sink Processor</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">Custom sink processors are not supported at the moment.</span><br>
<p></p>
<h3 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:22.4px; font-family:Simsun; background-color:rgb(242,242,242)">
Flume Interceptors</h3>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  Flume has the capability to modify/drop events in-flight. Interceptors are classes that implement </span><tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; line-height:20.8px; text-align:justify; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.interceptor.Interceptor</span></tt><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> interface. </span><br>
<p></p>
<p></p>
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">k1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">i1 i2</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.apache.flume.interceptor.HostInterceptor$Builder</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.preserveExisting</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">false</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.hostHeader</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">hostname</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i2.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.apache.flume.interceptor.TimestampInterceptor$Builder</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.filePrefix</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">FlumeData.%{CollectorHost}.%Y-%m-%d</span>
<span class="na" style="color:rgb(0,128,128)">a1.sinks.k1.channel</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span></pre>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  In the above example, events are passed to the HostInterceptor first and the events returned by the HostInterceptor are then passed along to the TimestampInterceptor.
 You can specify either the fully qualified class name (FQCN) or the alias </span><tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; line-height:20.8px; text-align:justify; background-color:rgb(236,240,243)"><span class="pre">timestamp</span></tt><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">.
 If you have multiple collectors writing to the same HDFS path, then you could also use the HostInterceptor.</span><br>
<p></p>
<p></p>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Timestamp Interceptor</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> This interceptor inserts a header with key </span><tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; line-height:20.8px; text-align:justify; background-color:rgb(236,240,243)"><span class="pre">timestamp</span></tt><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> whose
 value is the relevant timestamp. <span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">This interceptor can preserve an existing timestamp if it is already present in the configuration.</span> </span><br>
<p></p>
<p>
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, has to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">timestamp</span></tt> or the FQCN</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
preserveExisting</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
If the timestamp already exists, should it be preserved - true or false</td>
</tr>
</tbody>
</table>

<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.channels</span> <span class="o" style="font-weight:bold">=</span>  <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">seq</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">i1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">timestamp</span></pre>
</div>
</div>
<p></p>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Host Interceptor</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  It inserts a header with key </span><tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; line-height:20.8px; text-align:justify; background-color:rgb(236,240,243)"><span class="pre">host</span></tt><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> or
 a configured key whose value is the hostname or IP address of the host, based on configuration.</span><br>
<p></p>
<p>
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, has to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">host</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
preserveExisting</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
If the host header already exists, should it be preserved - true or false</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
useIP</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
true</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Use the IP Address if true, else use hostname.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
hostHeader</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
host</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The header key to be used.</td>
</tr>
</tbody>
</table>

<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">i1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">host</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.hostHeader</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">hostname</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Static Interceptor</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  Static interceptor allows user to append a static header with static value to all events.<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">The
 current implementation does not allow specifying multiple headers at one time.</span></span><br>
<p>
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name, has to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">static</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
preserveExisting</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
true</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
If configured header already exists, should it be preserved - true or false</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
key</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
key</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Name of header that should be created</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
value</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
value</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Static value that should be created</td>
</tr>
</tbody>
</table>

<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example for agent named a1:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">r1</span>
<span class="na" style="color:rgb(0,128,128)">a1.channels</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.channels</span> <span class="o" style="font-weight:bold">=</span>  <span class="s" style="color:rgb(187,136,68)">c1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">seq</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">i1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">static</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.key</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">datacenter</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.value</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">NEW_YORK</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
UUID Interceptor</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">This interceptor sets a universally unique identifier on all events that are intercepted.</span><br>
<p>
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name has to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.sink.solr.morphline.UUIDInterceptor$Builder</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
headerName</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
id</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The name of the Flume header to modify</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
preserveExisting</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
true</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
If the UUID header already exists, should it be preserved - true or false</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
prefix</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
“”</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The prefix string constant to prepend to each generated UUID</td>
</tr>
</tbody>
</table>
<br>

<p></p>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Morphline Interceptor</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">  This interceptor filters the events through a </span><a target="_blank" class="reference external" href="http://cloudera.github.io/cdk/docs/current/cdk-morphlines/index.html" rel="nofollow" style="color:rgb(53,95,124); text-decoration:none; font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">morphline
 configuration file</a><span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify"> that defines a chain of transformation commands that pipe records from one command to another.</span><br>
<p></p>
<p>
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name has to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.sink.solr.morphline.MorphlineInterceptor$Builder</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>morphlineFile</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The relative or absolute path on the local file system to the morphline configuration file. Example:<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">/etc/flume-ng/conf/morphline.conf</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
morphlineId</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
null</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Optional name used to identify a morphline if there are multiple morphlines in a morphline config file</td>
</tr>
</tbody>
</table>

<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Sample flume.conf file:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources.avroSrc.interceptors</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">morphlineinterceptor</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.avroSrc.interceptors.morphlineinterceptor.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.apache.flume.sink.solr.morphline.MorphlineInterceptor$Builder</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.avroSrc.interceptors.morphlineinterceptor.morphlineFile</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">/etc/flume-ng/conf/morphline.conf</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.avroSrc.interceptors.morphlineinterceptor.morphlineId</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">morphline1</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Search and Replace Interceptor</h4>
<span style="font-family:Simsun; font-size:16px; line-height:20.8px; text-align:justify">This interceptor provides simple string-based search-and-replace functionality based on Java regular expressions.</span><br>
<p>
</p><table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name has to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">search_replace</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
searchPattern</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The pattern to search for and replace.</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
replaceString</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The replacement string.</td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
charset</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
UTF-8</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The charset of the event body. Assumed by default to be UTF-8.</td>
</tr>
</tbody>
</table>

<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Example configuration:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources.avroSrc.interceptors</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">search-replace</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.avroSrc.interceptors.search-replace.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">search_replace</span>

<span class="c" style="color:rgb(153,153,136); font-style:italic"># Remove leading alphanumeric characters in an event body.</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.avroSrc.interceptors.search-replace.searchPattern</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">^[A-Za-z0-9_]+</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.avroSrc.interceptors.search-replace.replaceString</span> <span class="o" style="font-weight:bold">=</span></pre>
</div>
</div>
<p style="text-align:justify; line-height:20.8px; font-family:Simsun; font-size:16px">
Another example:</p>
<div class="highlight-properties" style="font-family:Simsun; font-size:16px">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources.avroSrc.interceptors</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">search-replace</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.avroSrc.interceptors.search-replace.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">search_replace</span>

<span class="c" style="color:rgb(153,153,136); font-style:italic"># Use grouping operators to reorder and munge words on a line.</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.avroSrc.interceptors.search-replace.searchPattern</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">The quick brown ([a-z]+) jumped over the lazy ([a-z]+)</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.avroSrc.interceptors.search-replace.replaceString</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">The hungry $2 ate the careless $1</span></pre>
</div>
</div>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Regex Filtering Interceptor</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name has to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">regex_filter</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
regex</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
”.*”</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Regular expression for matching against events</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
excludeEvents</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
false</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
If true, regex determines events to exclude, otherwise regex determines events to include.</td>
</tr>
</tbody>
</table>
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; font-family:Simsun; background-color:rgb(242,242,242)">
Regex Extractor Interceptor</h4>
<table border="1" class="docutils" style="border:0px; border-collapse:collapse; color:rgb(0,0,0); font-family:Simsun; font-size:16px">
<thead valign="bottom">
<tr class="row-odd">
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Property Name</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Default</th>
<th class="head" style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170); background-color:rgb(238,221,238)">
Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>type</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
The component type name has to be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">regex_extractor</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>regex</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Regular expression for matching against events</td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
<strong>serializers</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Space-separated list of serializers for mapping matches to header names and serializing<br>
their values. (See example below) Flume provides built-in support for the following serializers:<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer<br>
</span></tt><tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer</span></tt></td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
serializers.&lt;s1&gt;.type</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
default</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Must be <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">default</span></tt> (org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer),<br>
<tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer</span></tt>, or the FQCN of a<br>
custom class that implements <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">org.apache.flume.interceptor.RegexExtractorInterceptorSerializer</span></tt></td>
</tr>
<tr class="row-even">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
serializers.&lt;s1&gt;.<strong>name</strong></td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
 </td>
</tr>
<tr class="row-odd">
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
serializers.*</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
–</td>
<td style="padding:1px 8px 1px 5px; border-width:0px 0px 1px; border-bottom-style:solid; border-bottom-color:rgb(170,170,170)">
Serializer-specific properties</td>
</tr>
</tbody>
</table>
<div class="section" id="example-1" style="font-family:Simsun; font-size:16px">
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; background-color:rgb(242,242,242)">
Example 1:<a target="_blank" class="headerlink" href="https://flume.apache.org/FlumeUserGuide.html#example-1" rel="nofollow" title="Permalink to this headline" style="color:rgb(198,15,15); text-decoration:none; visibility:hidden; font-size:0.8em; padding:0px 4px"></a></h4>
<p style="text-align:justify; line-height:20.8px">If the Flume event body contained <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">1:2:3.4foobar5</span></tt> and the following configuration
 was used</p>
<div class="highlight-properties">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.regex</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">(\\d):(\\d):(\\d)</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.serializers</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">s1 s2 s3</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.serializers.s1.name</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">one</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.serializers.s2.name</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">two</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.serializers.s3.name</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">three</span>
</pre>
</div>
</div>
<p style="text-align:justify; line-height:20.8px">The extracted event will contain the same body but the following headers will have been added <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">one=&gt;1,</span> <span class="pre">two=&gt;2,</span> <span class="pre">three=&gt;3</span></tt></p>
</div>
<div class="section" id="example-2" style="font-family:Simsun; font-size:16px">
<h4 style="font-weight:normal; color:darkblue; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(204,204,204); margin:20px -20px 10px; padding:3px 0px 3px 10px; font-size:19.2px; background-color:rgb(242,242,242)">
Example 2:<a target="_blank" class="headerlink" href="https://flume.apache.org/FlumeUserGuide.html#example-2" rel="nofollow" title="Permalink to this headline" style="color:rgb(198,15,15); text-decoration:none; visibility:hidden; font-size:0.8em; padding:0px 4px"></a></h4>
<p style="text-align:justify; line-height:20.8px">If the Flume event body contained <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">2012-10-18</span> <span class="pre">18:47:57,614</span> <span class="pre">some</span> <span class="pre">log</span> <span class="pre">line</span></tt> and
 the following configuration was used</p>
<div class="highlight-properties">
<div class="highlight" style="">
<pre style="overflow-x:auto; overflow-y:hidden; padding:5px; color:rgb(51,51,51); line-height:15.6px; border-top-width:1px; border-bottom-width:1px; border-style:solid none; border-top-color:rgb(170,204,153); border-bottom-color:rgb(170,204,153); background-color:rgb(238,255,204)"><span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.regex</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">^(?:\\n)?(\\d\\d\\d\\d-\\d\\d-\\d\\d\\s\\d\\d:\\d\\d)</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.serializers</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">s1</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.serializers.s1.type</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.serializers.s1.name</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">timestamp</span>
<span class="na" style="color:rgb(0,128,128)">a1.sources.r1.interceptors.i1.serializers.s1.pattern</span> <span class="o" style="font-weight:bold">=</span> <span class="s" style="color:rgb(187,136,68)">yyyy-MM-dd HH:mm</span>
</pre>
</div>
</div>
<p style="text-align:justify; line-height:20.8px">the extracted event will contain the same body but the following headers will have been added <tt class="docutils literal" style="padding:0px 1px; font-size:0.95em; background-color:rgb(236,240,243)"><span class="pre">timestamp=&gt;1350611220000</span></tt></p>
</div>
<br>
<p><br>
</p>
<p><br>
</p>
<p><br>
</p>
<p><br>
</p>
<p><br>
</p>
<p><br>
</p>
<p></p>
            </div>
                </div>