---
layout:     post
title:      hadoop HA
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h1 id="hadoop-ha">hadoop HA</h1>



<h2 id="1集群规划">1.集群规划</h2>

<table>
<thead>
<tr>
  <th>主机名</th>
  <th align="left">ip</th>
  <th align="left">安装软件</th>
</tr>
</thead>
<tbody><tr>
  <td>master01</td>
  <td align="left">192.168.232.128</td>
  <td align="left">jdk,hadoop</td>
</tr>
<tr>
  <td>master02</td>
  <td align="left">192.168.232.133</td>
  <td align="left">jdk,hadoop</td>
</tr>
<tr>
  <td>slave01</td>
  <td align="left">192.168.232.135</td>
  <td align="left">jdk,hadoop,zookeeper</td>
</tr>
<tr>
  <td>slave02</td>
  <td align="left">192.168.232.132</td>
  <td align="left">jdk,hadoop,zookeeper</td>
</tr>
<tr>
  <td>slave03</td>
  <td align="left">192.168.232.134</td>
  <td align="left">jdk,hadoop,zookeeper</td>
</tr>
</tbody></table>




<h2 id="2准备">2.准备</h2>

<p>  将个机器安装好jdk,并配置好免密登陆</p>

<h2 id="3-在slave01slave02slave03上安装zookeeper">3. 在slave01/slave02/slave03上安装zookeeper</h2>

<p>  参考<a href="http://blog.csdn.net/qq_34056219/article/details/78745915" rel="nofollow">http://blog.csdn.net/qq_34056219/article/details/78745915</a></p>

<h2 id="4-安装hadoop">4. 安装hadoop</h2>



<h3 id="41-准备">4.1. 准备</h3>

<p>下载hadoop-2.7.0.tar.gz，并将其移动到/usr/local/下 <br>
<img src="https://img-blog.csdn.net/20180113184919552?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzQwNTYyMTk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""> <br>
解压</p>

<pre class="prettyprint"><code class=" hljs perl">[root<span class="hljs-variable">@master01</span> <span class="hljs-keyword">local</span>]<span class="hljs-comment"># tar -zxvf hadoop-2.7.0.tar.gz</span></code></pre>

<p>得到文件夹hadoop.-2.7.0 <br>
将hadoop-2.7.0改名为hadoop</p>

<pre class="prettyprint"><code class=" hljs perl">[root<span class="hljs-variable">@master01</span> <span class="hljs-keyword">local</span>]<span class="hljs-comment"># mv hadoop-2.7.0 hadoop</span></code></pre>

<p>将文件夹hadoop的所属者/组改为hadoop</p>

<pre class="prettyprint"><code class=" hljs perl">[root<span class="hljs-variable">@master01</span> <span class="hljs-keyword">local</span>]<span class="hljs-comment"># chown -R hadoop:hadoop /usr/local/hadoop</span></code></pre>



<h3 id="42-设置环境变量">4.2. 设置环境变量</h3>



<pre class="prettyprint"><code class=" hljs perl">[root<span class="hljs-variable">@master01</span> <span class="hljs-keyword">local</span>]<span class="hljs-comment"># vi /etc/profile</span></code></pre>

<p>  在最后写上</p>

<pre class="prettyprint"><code class=" hljs bash"><span class="hljs-keyword">export</span> HADOOP_HOME=/usr/local/hadoop
<span class="hljs-keyword">export</span> PATH=<span class="hljs-variable">$HADOOP_HOME</span>/bin:<span class="hljs-variable">$HADOOP_HOME</span>/sbin：<span class="hljs-variable">$PATH</span></code></pre>

<p>  更新配置</p>

<pre class="prettyprint"><code class=" hljs perl">[root<span class="hljs-variable">@master01</span> <span class="hljs-keyword">local</span>]<span class="hljs-comment"># source /etc/profile</span></code></pre>



<h3 id="43-修改配置">4.3. 修改配置</h3>



<h5 id="配置hadoop-envsh">配置hadoop-env.sh</h5>

<p>  配置生效</p>

<pre class="prettyprint"><code class=" hljs perl">[root<span class="hljs-variable">@master01</span> <span class="hljs-keyword">local</span>]<span class="hljs-comment"># cd /hadoop/etc/hadoop</span>
[root<span class="hljs-variable">@master01</span> <span class="hljs-keyword">local</span>]<span class="hljs-comment"># vi hadoop-evn.sh</span></code></pre>

<p>  进入文件后</p>

<pre class="prettyprint"><code class=" hljs bash"><span class="hljs-keyword">export</span> JAVA_HOME=<span class="hljs-variable">${JAVA_HOME}</span>  <span class="hljs-comment">#将这个改成JDK路径，如下  </span>
<span class="hljs-keyword">export</span> JAVA_HOME=/usr/local/java/jdk1.<span class="hljs-number">8.0</span>_144</code></pre>

<p>  然后更新文件配置</p>



<pre class="prettyprint"><code class=" hljs perl">[root<span class="hljs-variable">@master01</span> <span class="hljs-keyword">local</span>]<span class="hljs-comment"># source ./hadoop-evn.sh</span></code></pre>



<h4 id="配置core-sitexml">配置core-site.xml</h4>



<pre class="prettyprint"><code class=" hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">configuration</span>&gt;</span>
    #这里的值指的是默认的HDFS路径。当有多个HDFS集群同时工作时，集群名称在这里指定！该值来自于hdfs-site.xml中的配置
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>fs.defaultFS<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>hdfs://cluster1<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
    #这里的路径默认是NameNode、DataNode、JournalNode等存放数据的公共目录。用户也可以自己单独指定这三类节点的目录
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hadoop.tmp.dir<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>/usr/local/hadoop/data/hadoop/tmp<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-comment">&lt;!--这里是ZooKeeper集群的地址和端口。注意，数量一定是奇数，且不少于三个节点--&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
       <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>ha.zookeeper.quorum<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
       <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>slave01:2181,slave02:2181,slave03:2181<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">configuration</span>&gt;</span></code></pre>

<h4 id="配置hdfs-sitexml">配置hdfs-site.xml</h4>



<pre class="prettyprint"><code class=" hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">configuration</span>&gt;</span>
    <span class="hljs-comment">&lt;!--指定hdfs的nameservice为cluster1，需要和core-site.xml中的保持一致 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.nameservices<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>cluster1<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-comment">&lt;!-- cluster1下面有两个NameNode，分别是nn1，nn2 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.ha.namenodes.cluster1<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>nn1,nn2<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>      
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span> 
    <span class="hljs-comment">&lt;!-- nn1的RPC通信地址 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>   
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.namenode.rpc-address.cluster1.nn1<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>     
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>master01:9000<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-comment">&lt;!-- nn1的http通信地址 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.namenode.http-address.cluster1.nn1<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>master01:50070<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-comment">&lt;!-- nn2的RPC通信地址 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.namenode.rpc-address.cluster1.nn2<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>master02:9000<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-comment">&lt;!-- nn2的http通信地址 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.namenode.http-address.cluster1.nn2<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>master02:50070<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-comment">&lt;!-- 指定NameNode的元数据在JournalNode上的存放位置 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.namenode.shared.edits.dir<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>qjournal://slave01:8485;slave02:8485;slave03:8485/cluster1<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-comment">&lt;!-- 指定JournalNode在本地磁盘存放数据的位置 --&gt;</span> 
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.journalnode.edits.dir<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>/usr/local/hadoop/data/journaldata<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>  
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
    <span class="hljs-comment">&lt;!-- 开启NameNode失败自动切换 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.ha.automatic-failover.enabled<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>  
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>  
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
    <span class="hljs-comment">&lt;!-- 配置失败自动切换实现方式 --&gt;</span> 
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.client.failover.proxy.provider.cluster1<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
    <span class="hljs-comment">&lt;!-- 配置隔离机制方法，多个机制用换行分割，即每个机制暂用一行--&gt;</span> 
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.ha.fencing.methods<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>  
            sshfence  
            shell(/bin/true)  
        <span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>  
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
    <span class="hljs-comment">&lt;!-- 使用sshfence隔离机制时需要ssh免登陆 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.ha.fencing.ssh.private-key-files<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>/home/hadoop/.ssh/id_rsa<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
    <span class="hljs-comment">&lt;!-- 配置sshfence隔离机制超时时间 --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>dfs.ha.fencing.ssh.connect-timeout<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>  
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>30000<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>  
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
<span class="hljs-tag">&lt;/<span class="hljs-title">configuration</span>&gt;</span></code></pre>



<h4 id="配置mapred-sitexml">配置mapred-site.xml</h4>

<p>  先将mapred-site.xml.template改名为mapred-site.xml然后修改mapred-site.xml</p>

<pre class="prettyprint"><code class=" hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">configuration</span>&gt;</span>  
    <span class="hljs-comment">&lt;!-- 指定运行mapreduce的环境是yarn --&gt;</span>  
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>mapreduce.framework.name<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>  
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>yarn<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>  
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
<span class="hljs-tag">&lt;/<span class="hljs-title">configuration</span>&gt;</span></code></pre>



<h4 id="配置yarn-sitexml">配置yarn-site.xml</h4>



<pre class="prettyprint"><code class=" hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">configuration</span>&gt;</span>  
    <span class="hljs-comment">&lt;!-- 开启RM高可用--&gt;</span>  
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.resourcemanager.ha.enabled<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>  
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
    <span class="hljs-comment">&lt;!-- 指定resourcemanager的cluster id --&gt;</span>  
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.resourcemanager.cluster-id<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>yrc<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>  
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
    <span class="hljs-comment">&lt;!-- 指定ResourceManager的名字 --&gt;</span>  
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.resourcemanager.ha.rm-ids<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>rm1,rm2<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>  
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
    <span class="hljs-comment">&lt;!-- 分别指定ResourceManager1的地址 --&gt;</span>  
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.resourcemanager.hostname.rm1<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>master01<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>  
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span> 
    <span class="hljs-comment">&lt;!-- 分别指定ResourceManager2的地址 --&gt;</span>  
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.resourcemanager.hostname.rm2<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>master02<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>  
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
    <span class="hljs-comment">&lt;!-- 指定zookeeper集群地址 --&gt;</span>  
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.resourcemanager.zk-address<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>slave01:2181,slave02:2181,slave03:2181<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>  
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>  
       <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>mapreduce_shuffle<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>  
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>  
<span class="hljs-tag">&lt;/<span class="hljs-title">configuration</span>&gt;</span></code></pre>

<h4 id="配置slaves">配置slaves</h4>

<pre class="prettyprint"><code class=" hljs ">slave01
slave02
slave03</code></pre>



<h3 id="5-拷贝">5. 拷贝</h3>

<p>最后，把Hadoop整个目录拷贝到master02,slave01/02/03，拷之前把share下doc删了（文档不用拷），这样会快点</p>



<pre class="prettyprint"><code class=" hljs ruby">[hadoop<span class="hljs-variable">@master01</span> local]<span class="hljs-comment"># scp -r hadoop hadoop<span class="hljs-yardoctag">@master</span>02:/usr/local/</span>
[hadoop<span class="hljs-variable">@master01</span> local]<span class="hljs-comment"># scp -r hadoop hadoop<span class="hljs-yardoctag">@slave</span>01:/usr/local/</span>
[hadoop<span class="hljs-variable">@master01</span> local]<span class="hljs-comment"># scp -r hadoop hadoop<span class="hljs-yardoctag">@slave</span>02:/usr/local/</span>
[hadoop<span class="hljs-variable">@master01</span> local]<span class="hljs-comment"># scp -r hadoop hadoop<span class="hljs-yardoctag">@slave</span>03:/usr/local/</span></code></pre>

<h3 id="6-启动">6. 启动</h3>

<h3 id="61-启动zookeeper集群在slave01slave02slave03上启动">6.1.  启动zookeeper集群（在slave01、slave02、slave03上启动）</h3>

<pre class="prettyprint"><code class=" hljs xml">[hadoop@slave01 ~]# cd /usr/local/zookeeper/bin
[hadoop@slave01 bin]# ./zkServer.sh start
<span class="hljs-comment">&lt;!--查看状态：一个leader，两个follower--&gt;</span>
[hadoop@slave01 bin]# ./zkServer.sh status  </code></pre>

<h3 id="62-启动journalnode分别在在slave01slave02slave03上执行">6.2. 启动journalnode（分别在在slave01、slave02、slave03上执行）</h3>



<pre class="prettyprint"><code class=" hljs ruby">[hadoop<span class="hljs-variable">@slave01</span> ~]<span class="hljs-comment"># cd /usr/local/hadoop/sbin</span>
[hadoop<span class="hljs-variable">@slave01</span> sbin]<span class="hljs-comment"># ./hadoop-daemon.sh start journalnode</span>
<span class="hljs-comment">#验证</span>
[hadoop<span class="hljs-variable">@slave01</span> sbin]<span class="hljs-comment"># jps</span>
<span class="hljs-comment">#显示JouralNode + QuorumpeerMain</span></code></pre>

<h3 id="63-格式化namenodemaster01">6.3. 格式化namenode（master01）</h3>



<pre class="prettyprint"><code class=" hljs ruby">[hadoop<span class="hljs-variable">@master01</span> ~]<span class="hljs-comment"># hdfs namenode -format</span></code></pre>

<p><strong>注意：格式化之后需要把tmp目录拷给master02（不然master02的namenode起不来）</strong></p>



<pre class="prettyprint"><code class=" hljs ruby">[hadoop<span class="hljs-variable">@master01</span> ~]<span class="hljs-comment"># cd /usr/local/hadoop/data/hadoop</span>
[hadoop<span class="hljs-variable">@master01</span> hadoop]<span class="hljs-comment"># scp -r tmp hadoop<span class="hljs-yardoctag">@master</span>02:/usr/local/hadoop/data/hadoop/</span></code></pre>

<h3 id="64-格式化zkfcmaster01">6.4. 格式化zkfc（master01）</h3>

<pre class="prettyprint"><code class=" hljs ruby">[hadoop<span class="hljs-variable">@master01</span> ~]<span class="hljs-comment"># hdfs zkfc -formatZK</span></code></pre>

<h3 id="65-启动hdfsmaster01">6.5. 启动HDFS(master01)</h3>

<pre class="prettyprint"><code class=" hljs ruby">[hadoop<span class="hljs-variable">@master01</span> ~]<span class="hljs-comment"># cd /usr/local/hadoop/sbin</span>
[hadoop<span class="hljs-variable">@master01</span> sbin]<span class="hljs-comment"># ./start-dfs.sh</span></code></pre>



<h3 id="66-启动yarnmaster01">6.6. 启动YARN(master01)</h3>



<pre class="prettyprint"><code class=" hljs ruby">[hadoop<span class="hljs-variable">@master01</span> sbin]<span class="hljs-comment"># ./start-yarn.sh</span></code></pre>

<p><strong>注意</strong>:</p>

<ul>
<li>master02的resourcemanager需要手动单独启动： <br>
yarn-daemon.sh start resourcemanager</li>
<li>namenode、datanode也可以单独启动： <br>
hadoop-daemon.sh start namenode <br>
hadoop-daemon.sh start datanode</li>
</ul>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>