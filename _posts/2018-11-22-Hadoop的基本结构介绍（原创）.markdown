---
layout:     post
title:      Hadoop的基本结构介绍（原创）
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p class="MsoNormal" style="text-align:center;" align="center"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">Hadoop</span>
</span>
<span>的基本结构介绍（原创）</span>
</span>
</p>
<p class="MsoNormal"><strong><span style="font-size:small;"><span>概述：</span>
</span>
</strong>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;">         </span>
</span>
</span>
<span>这是我看了</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">Hadoop core 0.17.0</span>
</span>
<span>文档只有做的一些总结，有不对的地方请给我指出。</span>
</span>
</p>
<p class="MsoNormal"><span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;font-size:small;"> </span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><strong><span>什么是</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">Hadoop?</span>
</span>
</strong>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;">         </span>
</span>
</span>
<span>Hadoop</span>
<span>是一个用于运行应用程序在大型集群的廉价硬件设备上的框架。</span>
<span>Hadoop</span>
<span>为应用程序透明的提供了一组稳定</span>
<span>/</span>
<span>可靠的接口和数据运动。在</span>
<span>Hadoop</span>
<span>中实现了</span>
<span>Google</span>
<span>的</span>
<span>MapReduce</span>
<span>算法，它能够把应用程序分割成许多很小的工作单元，每个单元可以在任何集群节点上执行或重复执行。此外，</span>
<span>Hadoop</span>
<span>还提供一个分布式文件系统用来在各个计算节点上存储数据，并提供了对数据读写的高吞吐率。由于应用了</span>
<span>map/reduce</span>
<span>和分布式文件系统使得</span>
<span>Hadoop</span>
<span>框架具有高容错性，它会自动处理失败节点。</span>
</span>
</p>
<p class="MsoNormal"><span><span style="font-size:small;"> </span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">Hadoop</span>
</span>
<span>的项目组成</span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;"><span>         </span>
Hadoop core </span>
</span>
<span>主要的子项目，提供分布是文件系统（</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">HDFS</span>
</span>
<span>）和支持</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">MapReduce</span>
</span>
<span>计算。</span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;"><span>         </span>
HBase<span>                </span>
</span>
</span>
<span>建立在</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">Hadoop Core </span>
</span>
<span>基础上的分布是数据库。</span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;">         </span>
</span>
</span>
<span>我只研究</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">Hadoop core</span>
</span>
<span>的功能和实现，不涉及</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">HBase</span>
</span>
</span>
</p>
<p class="MsoNormal"><span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;font-size:small;"> </span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><strong><span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">MapReduce</span>
</span>
<span>介绍</span>
</strong>
</span>
</p>
<p class="MsoNormal"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;font-size:small;">         </span>
</span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;">         </span>
</span>
</span>
<span>这是</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">Hadoop</span>
</span>
<span>的核心。</span>
</span>
</p>
<p class="MsoNormal"><span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;font-size:small;"> </span>
</span>
</p>
<p class="MsoNormal"><span><span style="font-size:small;"><strong>思想</strong>
</span>
</span>
</p>
<p class="MsoNormal">1.  <span style="font-size:small;"><span>就是做一个计算，如果计算过程中如果数据传输消耗的资源大于计算消耗的资源，考虑在计算过程中，将算法（程序），移动到数据存放的服务器中，再进行计算。</span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;">2.</span>
</span>
</span>
<span>在做一个巨型计算时，利用多台（例如</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">2000</span>
</span>
<span>）台服务器的</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">cpu</span>
</span>
<span>和内存同时计算。</span>
</span>
</p>
<p class="MsoNormal"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;font-size:small;"><strong>算法描述</strong>
      </span>
</span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;">第一种方式描述</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;">         </span>
</span>
</span>
<span>将计算要用的数据切分，放在各个服务器上，然后将计算程序分发到各个服务器，计算出各个部分的结果。最后将各个计算结果合并。</span>
</span>
<span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;font-size:small;"><br>
第二种方式描述</span>
</span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;">         </span>
</span>
</span>
<span>另外一种描述为，</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">MapReduce</span>
</span>
<span>的名字源于这个模型中的两项核心操作：</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">Map</span>
</span>
<span>和</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;"> Reduce</span>
</span>
<span>。也许熟悉</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">Functional Programming</span>
</span>
<span>（函数式编程）的人见到这两个词会倍感亲切。简单的说来，</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">Map</span>
</span>
<span>是把一组数据一对一的映射为另外的一组数据，其映射的规则由一个函数来指定，比如对</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">[1, 2, 3, 4]</span>
</span>
<span>进行乘</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">2</span>
</span>
<span>的映射就变成了</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">[2, 4, 6, 8]</span>
</span>
<span>。</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">Reduce</span>
</span>
<span>是对一组数据进行归约，这个归约的规则由一个函数指定，比如对</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">[1, 2, 3, 4]</span>
</span>
<span>进行求和的归约得到结果是</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">10</span>
</span>
<span>，而对它进行求积的归约结果是</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">24</span>
</span>
</span>
</p>
<p class="MsoNormal"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;font-size:small;">         </span>
</span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;">         </span>
</span>
</span>
<span>我觉得意思是差不多的。</span>
</span>
</p>
<p class="MsoNormal"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;font-size:small;">         </span>
</span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;">         </span>
</span>
</span>
<span>总的来说算法必须可以切分，包含小列步骤。</span>
</span>
</p>
<p class="MsoNormal"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;font-size:small;">         </span>
</span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;">         </span>
</span>
</span>
<span>切分、分别计算、合并。</span>
</span>
</p>
<p class="MsoNormal"><span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;font-size:small;"> </span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;">         </span>
</span>
</span>
<span>最典型的是大规模日志计算。</span>
</span>
</p>
<p class="MsoNormal"><span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;font-size:small;"> </span>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><strong><span>Hadoop</span>
<span>文件系统（</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">HDFS</span>
</span>
<span>）</span>
</strong>
</span>
</p>
<p class="MsoNormal"><span style="font-size:small;"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;">         </span>
</span>
</span>
<span>因为</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">MapReduce</span>
</span>
<span>算法需要切分数据，</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">HDFS</span>
</span>
<span>设计为将大文件分别部署到各个服务器。主要有下列特性：</span>
</span>
</p>
<p class="MsoListParagraph"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;font-size:small;">1．</span>
<span>  </span>
</span>
</span>
<span style="font-size:small;"><span>冗余存储，默认任何文件保留</span>
<span lang="en-us" xml:lang="en-us"><span style="font-family:Calibri;">3</span>
</span>
<span>个备份（考虑到部署在不同机架的情况），保证了服务器失效时，不丢失数据。即使一个机架全部断电，或者烧毁，数据依然健壮存在。</span>
</span>
</p>
<p class="MsoListParagraph"><span lang="en-us" xml:lang="en-us"><span><span style="font-family:Calibri;font-size:small;">2．</span>
<span>  </span>
</span>
</span>
<span><span style="font-size:small;">大文件分块分散在各个服务器上存储。</span>
</span>
</p>            </div>
                </div>