---
layout:     post
title:      Hbase 统计表行数的3种方式总结
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/liuxiao723846/article/details/52825808				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p>有些时候需要我们去统计某一个hbase表的行数，由于hbase本身不支持SQL语言，只能通过其他方式实现。可以通过一下几种方式实现hbase表的行数统计工作：</p>
<p><br></p>
1、count命令<br><p>最直接的方式是在hbase shell中执行count的命令可以统计行数。</p>
<p></p><pre><code class="language-html">hbase&gt; count ‘t1′  
hbase&gt; count ‘t1′, INTERVAL =&gt; 100000  
hbase&gt; count ‘t1′, CACHE =&gt; 1000  
hbase&gt; count ‘t1′, INTERVAL =&gt; 10, CACHE =&gt; 1000  </code></pre><br><p style="font-family:Calibri;font-size:10.5pt;">count一般会比较耗时，使用mapreduce进行统计。</p>
<p style="font-family:Calibri;font-size:10.5pt;">语法：count&lt;table&gt;, {INTERVAL =&gt; intervalNum, CACHE =&gt; cacheNum}</p>
<ul type="disc" style="margin-left:.375in;"><li style="vertical-align:middle;"><span style="font-family:Calibri;font-size:10.5pt;">INTERVAL设置多少行显示一次及对应的rowkey，默认1000；</span>
</li><li style="vertical-align:middle;"><span style="font-family:Calibri;font-size:10.5pt;">CACHE每次去取的缓存区大小，默认是10，调整该参数可提高查询速度</span></li></ul><p><br></p>
2、调用Mapreduce：
<p></p><pre><code class="language-html">$HBASE_HOME/bin/hbase   org.apache.hadoop.hbase.mapreduce.RowCounter ‘tablename’  </code></pre><br>
这种方式效率比上一种要高很多，调用的hbase jar中自带的统计行数的类。<br><p><br></p>
<p>3、hive over hbase：<br>
如果已经见了hive和hbase的关联表的话，可以直接在hive中执行sql语句统计hbase表的行数。<br>
hive over hbase 表的建表语句为：<br>
/*创建hive与hbase的关联表*/</p>
<p></p><pre><code class="language-html">CREATE TABLE hive_hbase_1(key INT,value STRING)  
STORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'  
WITH SERDEPROPERTIES ("hbase.columns.mapping"=":key,cf:val")  
TBLPROPERTIES("hbase.table.name"="t_hive","hbase.table.default.storage.type"="binary");  </code></pre><br>
/*hive关联已经存在的hbase*/<br><p></p><pre><code class="language-html">CREATE EXTERNAL TABLE hive_hbase_1(key INT,value STRING)  
STORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'  
WITH SERDEPROPERTIES ("hbase.columns.mapping"=":key,cf:val")  
TBLPROPERTIES("hbase.table.name"="t_hive","hbase.table.default.storage.type"="binary");</code></pre><br><br>            </div>
                </div>