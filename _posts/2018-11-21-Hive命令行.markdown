---
layout:     post
title:      Hive命令行
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h2 style="border:0px;vertical-align:baseline;font-weight:500;font-size:1.8em;line-height:35px;color:rgb(13,15,15);font-family:verdana;background-color:rgb(250,254,254);">
1. hive命令行技巧</h2>
<p style="border:0px;vertical-align:baseline;color:rgb(13,15,15);font-family:verdana;font-size:15px;line-height:22px;background-color:rgb(250,254,254);">
在hive中,直接执行$HIVE_HOME/bin/hive或者执行$HIVE_HOME/bin/hive –service cli就进入了Hive的命令行模式。<br>
常常用于直接进行交互式命令的执行。<br>
(1). 在hive中，使用可以得到类似bash的自动补全功能。<br>
(2). 历史命令，保存在 $HOME/.hivehistory<br>
(3). 在hive的命令行下输入！来输入host命令（和sqlplus一样）。<br>
(4). hive下面查看dfs的内容:<br>
hive&gt; dfs -ls /tmp;<br>
Found 2 items<br>
-rw-r–r– 3 ambari-qa hdfs 1916 2014-03-12 06:14 /tmp/ida8c0d201_date141214<br>
-rw-r–r– 3 ambari-qa hdfs 1958 2014-03-12 07:45 /tmp/ida8c0d201_date441214<br><span id="more-470" style="border:0px;vertical-align:baseline;"></span><br>
(5). hive的注释，同SQL注释’–‘<br>
(6). 显示列表，需要设置hive.cli.print.header变量<br>
hive&gt; set hive.cli.print.header=true;<br>
(7). 查看变量<br>
hive&gt; set;<br>
…<br>
hive&gt; set-v;<br>
… even more output!…<br>
‘set’输出hivevar,hiveconf,system和env命名空间下的所有变量。<br>
‘set -v’包括了输出Hadoop定义的全部变量。</p>
<p style="border:0px;vertical-align:baseline;color:rgb(13,15,15);font-family:verdana;font-size:15px;line-height:22px;background-color:rgb(250,254,254);">
hive&gt; set hivevar:foo=hello;<br>
hive&gt; set hivevar:foo;<br>
hivevar:foo=hello<br>
(8). 使用变量：<br>
hive&gt; create table toss1(i int, ${hivevar:foo} string);<br>
OK<br>
Time taken: 0.652 seconds<br>
hive&gt; desc toss1;<br>
OK<br>
i int None<br>
hello string None<br>
Time taken: 0.055 seconds, Fetched: 2 row(s)<br>
(9). 变量属于不同的命名空间。这些命名空间分别是：<br>
namespace – access – description<br>
hivevar – Read/Write – User-defined custom variables.<br>
hiveconf – Read/Write – Hive-specific configuration properties.<br>
system – Read/Write – Configuration properties defined by Java.<br>
env – Read only – Environment variables defined by the shell environment (e.g., bash).<br>
(10). 设置hiveconf命名空间变量<br>
hiveconf是hive的配置变量，这里用hiveconf hive.cli.print.current.db=true ( It turns on printing of the current working database name in the CLI prompt.)<br>
[hadoop@cloud011 ~]$ hive –hiveconf hive.cli.print.current.db=true<br>
hive (default)&gt; set hiveconf:hive.cli.print.current.db=false;<br>
hive&gt;</p>
<h2 style="border:0px;vertical-align:baseline;font-weight:500;font-size:1.8em;line-height:35px;color:rgb(13,15,15);font-family:verdana;background-color:rgb(250,254,254);">
2. Hive batch mode</h2>
<p style="border:0px;vertical-align:baseline;color:rgb(13,15,15);font-family:verdana;font-size:15px;line-height:22px;background-color:rgb(250,254,254);">
并使用hive直接执行SQL语句<br>
hive&gt; create table test(a string, b string) row format delimited fields terminated by ‘ ‘ stored as textfile;<br>
OK<br>
构造一些数据并load<br>
SHELL$ \<br>
for (( i = 0; i &lt; MAX ; i ++ ))<br>
do<br>
echo "a$i b$1" &gt;&gt; a1<br>
done<br>
Time taken: 0.565 seconds<br>
hive&gt; load data local inpath ‘/home/hadoop/a1.txt’ into table test;<br>
Copying data from file:/home/hadoop/a1.txt<br>
Copying file: file:/home/hadoop/a1.txt<br>
Loading data to table default.test<br>
Table default.test stats: [num_partitions: 0, num_files: 1, num_rows: 0, total_size: 2603212700, raw_data_size: 0]<br>
OK<br>
Time taken: 22.882 seconds<br>
下面获取前三行记录, use -S for slient mode<br>
SHELL$ hive -S -e “select * FROM test LIMIT 3″ &gt; /tmp/data.1<br>
SHELL$ cat /tmp/data.1<br>
a0 b0<br>
a1 b1<br>
a2 b2<br>
也可以把要执行的命令写到文件中，使用-f参数来指定这个文件：<br>
SHELL$ hive -S -f query.hql<br>
在hive提示符中执行一个命令脚本<br>
hive&gt; source query.hql;<br>
获取hive的配置参数也可以使用类似的方式：<br>
SHELL$ hive -S -e “set” | grep warehouse<br>
hive.metastore.warehouse.dir=/user/hive/warehouse<br>
hive.warehouse.subdir.inherit.perms=false<br>
hive的常用参数如下：<br>
-d,–define Variable substitution to apply to hive commands. e.g. -d A=B or –define A=B<br>
-e SQL from command line<br>
-f SQL from files<br>
-i Initialization SQL file<br>
-S,–silent Silent mode in interactive shell<br>
-v,–verbose Verbose mode (echo executed SQL to the console)</p>
<h2 style="border:0px;vertical-align:baseline;font-weight:500;font-size:1.8em;line-height:35px;color:rgb(13,15,15);font-family:verdana;background-color:rgb(250,254,254);">
3. hive web模式</h2>
<p style="border:0px;vertical-align:baseline;color:rgb(13,15,15);font-family:verdana;font-size:15px;line-height:22px;background-color:rgb(250,254,254);">
hive提供了一个web的界面，这个功能不是很常用。一般情况下需要将让该进程放到后台运行（&amp;）。hive启动了一个jetty服务器，web端口是9999。<br>
SHELL$ hive –service hwi<br>
14/03/15 10:59:44 INFO mortbay.log: <span style="border:0px;vertical-align:baseline;">jetty-6.1.26</span><br>
14/03/15 10:59:44 INFO mortbay.log: Extract /home/hadoop/hive-0.12.0/lib/hive-hwi-0.12.0.war to /tmp/Jetty_0_0_0_0_9999_hive.hwi.0.12.0.war__hwi__ow27i/webapp<br>
14/03/15 10:59:44 INFO mortbay.log:<span style="border:0px;vertical-align:baseline;">Started SocketConnector@0.0.0.0:9999</span><br>
……<br>
这时候在可以查到该进程:<br><code style="border-width:1px 0px;border-top-style:solid;border-bottom-style:solid;border-top-color:rgb(217,217,217);border-bottom-color:rgb(217,217,217);vertical-align:baseline;background-color:rgb(237,237,237);display:inline;font-size:12px;line-height:24px;font-family:Consolas, 'Andale Mono WT', 'Andale Mono', 'Lucida Console', 'Lucida Sans Typewriter', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Liberation Mono', 'Nimbus Mono L', Monaco, 'Courier New', Courier, monospace;">/usr/local/jdk1.7.0_51/bin/java
 -Xmx256m<br>
-Djava.library.path=/home/hadoop/hadoop-2.3.0/lib/native<br>
-Djava.net.preferIPv4Stack=true<br>
-Dhadoop.log.dir=/home/hadoop/hadoop-2.3.0/logs<br>
-Dhadoop.log.file=hadoop.log<br>
-Dhadoop.home.dir=/home/hadoop/hadoop-2.3.0<br>
-Dhadoop.id.str=hadoop<br>
-Dhadoop.root.logger=INFO,console<br>
-Dhadoop.policy.file=hadoop-policy.xml<br>
-Djava.net.preferIPv4Stack=true<br>
-Xmx512m<br>
-Dhadoop.security.logger=INFO,NullAppender<br>
org.apache.hadoop.util.RunJar <span style="border:0px;vertical-align:baseline;">/home/hadoop/hive-0.12.0/lib/hive-hwi-0.12.0.jar org.apache.hadoop.hive.hwi.HWIServer</span></code></p>
<h2 style="border:0px;vertical-align:baseline;font-weight:500;font-size:1.8em;line-height:35px;color:rgb(13,15,15);font-family:verdana;background-color:rgb(250,254,254);">
4. thrift hiveserver模式</h2>
<p style="border:0px;vertical-align:baseline;color:rgb(13,15,15);font-family:verdana;font-size:15px;line-height:22px;background-color:rgb(250,254,254);">
该模式是hive最常用的，启动了hiveserver以后，应用程序就可以通过jdbc等驱动来访问hive。<br>
(HiveServer is an optional service that allows a remote client to submit requests to Hive, using a variety of programming languages, and retrieve results.)<br>
SHELL$ hive –service hiveserver &amp;<br>
或者自己指定端口：<br>
SHELL$ hive –service hiveserver -p 50000 &amp;<br><code style="border-width:1px 0px;border-top-style:solid;border-bottom-style:solid;border-top-color:rgb(217,217,217);border-bottom-color:rgb(217,217,217);vertical-align:baseline;background-color:rgb(237,237,237);display:inline;font-size:12px;line-height:24px;font-family:Consolas, 'Andale Mono WT', 'Andale Mono', 'Lucida Console', 'Lucida Sans Typewriter', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Liberation Mono', 'Nimbus Mono L', Monaco, 'Courier New', Courier, monospace;">/usr/local/jdk1.7.0_51/bin/java
 -Xmx256m<br>
-Djava.library.path=/home/hadoop/hadoop-2.3.0/lib/native<br>
-Djava.net.preferIPv4Stack=true<br>
-Dhadoop.log.dir=/home/hadoop/hadoop-2.3.0/logs<br>
-Dhadoop.log.file=hadoop.log<br>
-Dhadoop.home.dir=/home/hadoop/hadoop-2.3.0<br>
-Dhadoop.id.str=hadoop<br>
-Dhadoop.root.logger=INFO,console<br>
-Dhadoop.policy.file=hadoop-policy.xml<br>
-Djava.net.preferIPv4Stack=true -Xmx512m<br>
-Dhadoop.security.logger=INFO,NullAppender<br>
org.apache.hadoop.util.RunJar /home/hadoop/hive-0.12.0/lib/hive-service-0.12.0.jar org.apache.hadoop.hive.service.HiveServer -p 50000</code></p>
<h2 style="border:0px;vertical-align:baseline;font-weight:500;font-size:1.8em;line-height:35px;color:rgb(13,15,15);font-family:verdana;background-color:rgb(250,254,254);">
5. hiveserver2</h2>
<p style="border:0px;vertical-align:baseline;color:rgb(13,15,15);font-family:verdana;font-size:15px;line-height:22px;background-color:rgb(250,254,254);">
hive 0.11以后加入了hiveserver2的功能，这个是hiveserver的升级版，解决了daemon不稳定、并发请求(HiveServer cannot handle concurrent requests from more than one client)、session管理等问题。hiveserver2的相关参数：<br>
SHELL$ hive -S -e “set” | grep server2<br>
hive.server2.async.exec.shutdown.timeout=10<br>
hive.server2.async.exec.threads=50<br>
hive.server2.authentication=NONE<br>
hive.server2.enable.doAs=true<br>
hive.server2.table.type.mapping=CLASSIC<br><span style="border:0px;vertical-align:baseline;">hive.server2.thrift.bind.host=localhost<br>
hive.server2.thrift.http.max.worker.threads=500<br>
hive.server2.thrift.http.min.worker.threads=5</span><br>
hive.server2.thrift.http.path=cliservice<br>
hive.server2.thrift.http.port=10001<br>
hive.server2.thrift.max.worker.threads=500<br>
hive.server2.thrift.min.worker.threads=5<br><span style="border:0px;vertical-align:baseline;">hive.server2.thrift.port=10000</span><br>
hive.server2.thrift.sasl.qop=auth<br>
hive.server2.transport.mode=binary<br><br>
由此可以看到，默认的port=10000 &amp; bond host=localhost，最大线程数为500。<br>
下面启动hiveserver2:<br>
SHELL$ hive –service hiveserver2 &amp;<br>
….<br>
查看ps进程，可以看出hiveserver2被启动：<br>
java … org.apache.hadoop.util.RunJar /home/hadoop/hive-0.12.0/lib/hive-service-0.12.0.jar org.apache.hive.service.server.HiveServer2<br>
hiveserver和hiveserver2并不是以后台服务的形式运行，而命令行也只提供了设置hiveserver2参数的方法，关闭在后台运行的hiveserver2只有通过kill来实现了(cloudra和HDP中已经将hiveserver2设置成了一个service)。<br>
[hadoop@cloud011 ~]$ hive –service hiveserver2 -H<br>
usage: hiveserver2<br>
-H,–help Print help information<br>
–hiveconf Use value for given property<br>
hiveserver2同时提供了一个client端的命令行工具beeline，<a style="border:0px;vertical-align:baseline;text-decoration:underline;color:rgb(98,166,228);line-height:inherit;"> 官方文档</a>上会给出详细使用说明。</p>
<h2 style="border:0px;vertical-align:baseline;font-weight:500;font-size:1.8em;line-height:35px;color:rgb(13,15,15);font-family:verdana;background-color:rgb(250,254,254);">
6. metastore</h2>
<p style="border:0px;vertical-align:baseline;color:rgb(13,15,15);font-family:verdana;font-size:15px;line-height:22px;background-color:rgb(250,254,254);">
metastore服务负责连接到保存metastore信息的关系型数据库，一般情况和hiveserver服务在一起运行。也可以单独启动作为一个服务，通过METASTORE_PORT参数来设置端口。<br>
hive –service metastore &amp;<br>
所以hiveserver的连接也有几种方式，这里借http://www.iteblog.com/archives/957的图一用。<br><a href="http://www.debugo.com/wp-content/uploads/2014/03/hive-metastore.jpg" rel="nofollow" style="border:0px;vertical-align:baseline;color:rgb(98,166,228);line-height:inherit;"><img src="http://www.debugo.com/wp-content/uploads/2014/03/hive-metastore.jpg" alt="hive metastore" width="584" height="627" class="alignnone size-full wp-image-491" style="border:0px;vertical-align:baseline;"></a><br>
参考:<br>
《Programming Hive》<br>
Hive Server 2 调研，安装和部署 http://tech.ddvip.com/2013-10/1381239121203713.html</p>
            </div>
                </div>