---
layout:     post
title:      前回顾
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <ul><li>
	<h3>Hadoop</h3>

	<ol><li>HDFS分布式文件系统， yarn 分布式资源调度（管理）系统  MapReduce分布式运算框架</li>
		<li>HDFS：分布式文件系统
		<ol><li>namenode和datanode</li>
			<li>HDFS的读写流程，什么是块 块的默认大小</li>
		</ol></li>
		<li>Hadoop的安装方式：
		<ol><li>单单机版  伪分布式   完全分布式</li>
		</ol></li>
		<li>HDFS的Shell使用hdfs dfs -put get ls</li>
		<li>HDFS在JavaAPI----&gt;FileSystem文件系统  Configuration配置</li>
		<li>单点故障，SecondaryNameNode不能完全解决单点故障，就是一个备份合并fsimage和edit log</li>
		<li>高可用HA----&gt; 双namenode 一主一备</li>
		<li>引用了一个中间技术，解决数据传输问题QJM  JournalNode</li>
		<li>Zookeeper（分布式协调服务）：可以帮助我们决定谁住谁备 zookeeper中也是选举机制，在Zookeeper中一个leader改变所有的flower都会跟着改变   
		<ol><li>有一个专门用来监控namenode的进程---&gt;ZKFC</li>
			<li>Zookeeper中shell，Zookeeper中的数据叫znode   Zookeeper中的数据最大不能超过1M，因为Zookeeper是协调服务，不能存储数据</li>
			<li>Zookeeper中的JavaAPI（增删改查）</li>
		</ol></li>
		<li>yarn（分布式资源管理调度系统）：
		<ol><li>ResourceManager   nodemanager   AppMaster    Container   四个重要的角色</li>
			<li>yarn的执行流程：</li>
		</ol></li>
		<li>MapReduce（分布式运算（计算）框架）：
		<ol><li>MapTask：切片大小是有一个计算规则的（1.1等于）， map对数据的操作----&gt;shuffle过程</li>
			<li>ReduceTask：拉取MapTask处理完成的结果，--&gt;合并并排序（内部有序外部无序（归并））---&gt;Reduce处理</li>
			<li>整套的数据传输加处理，都使用的是键值对方式，
			<ol><li>MapReduce的基本执行流程</li>
				<li>shuffle流程</li>
			</ol></li>
			<li>案例处理方式：</li>
			<li>MapRadeon在处理任务时可以用到的一些组件（可干预组件）
			<ol><li>InputFormat  OutputFormat  Partition Combiner   GroupingComparator  key中compareTO方法（实现自定义数据类型）</li>
			</ol></li>
		</ol></li>
	</ol></li>
</ul>            </div>
                </div>