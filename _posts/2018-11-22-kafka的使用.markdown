---
layout:     post
title:      kafka的使用
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/cabing2005/article/details/78721867				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>kafka的优点</p>

<pre><code>1 通过O(1)的磁盘数据结构提供消息的持久化，
    这种结构对于即使数以TB的消息存储也能够
    保持长时间的稳定性能。
2 高吞吐量[2]：即使是非常普通的硬件Kafka
    也可以支持每秒数百万[2]的消息。
3 支持通过Kafka服务器和消费机集群来分区消息。
4 支持Hadoop并行数据加载。[3] 
</code></pre>

<p>kafka的关键字</p>

<pre><code>Broker

    Kafka集群包含一个或多个服务器，这种服务器被称为broker

Topic

    每条发布到Kafka集群的消息都有一个类别，这个类别被称为Topic。
    （
        物理上不同Topic的消息分开存储，
        逻辑上一个Topic的消息虽然保存于一个或多个broker上
        但用户只需指定消息的Topic即可生产或消费数据而不必关心数据存于何处）

Partition

    Partition是物理上的概念，每个Topic包含一个或多个Partition.

Producer

    负责发布消息到Kafka broker

Consumer

    消息消费者，向Kafka broker读取消息的客户端。

Consumer Group
    每个Consumer属于一个特定的Consumer Group
    （可为每个Consumer指定group name，若不指定group name则属于默认的group）。
</code></pre>



<h3 id="kafka的基本的使用">kafka的基本的使用</h3>

<p>使用最新版的php</p>

<p>kafka的使用</p>

<pre><code>https://arnaud-lb.github.io/php-rdkafka/phpdoc/index.html
</code></pre>

<p>安装kafka扩展</p>

<p>mac下安装</p>

<pre><code>1 安装 brew install kafka
</code></pre>

<p>kafka配置</p>

<pre><code>/usr/local/etc/kafka/server.properties
/usr/local/etc/kafka/zookeeper.properties
</code></pre>

<p>启动zookeeper</p>

<pre><code>zookeeper-server-start /usr/local/etc/kafka/zookeeper.properties &amp;
</code></pre>

<p>启动kafka</p>

<pre><code>kafka-server-start /usr/local/etc/kafka/server.properties &amp;
</code></pre>

<p>创建一个topic</p>

<pre><code>kafka-topics --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test
</code></pre>

<p>列出topic</p>

<pre><code>kafka-topics --list --zookeeper localhost:2181
</code></pre>

<p>发送消息</p>

<pre><code>kafka-console-producer --broker-list localhost:9092 --topic test 
</code></pre>

<p>消费消息</p>

<pre><code>kafka-console-consumer --bootstrap-server localhost:9092 --topic test --from-beginning
</code></pre>

<p>php可用的扩展</p>

<pre><code>https://packagist.org/packages/nmred/kafka-php
https://arnaud-lb.github.io/php-rdkafka/phpdoc/book.rdkafka.html
</code></pre>

<p>产生消息</p>

<pre class="prettyprint"><code class=" hljs lasso"><span class="hljs-comment">// 安装php kafka扩展</span>
<span class="hljs-comment">//创建一个</span>
<span class="hljs-variable">$rk</span> <span class="hljs-subst">=</span> <span class="hljs-literal">new</span> RdKafka<span class="hljs-subst">\</span>Producer();
<span class="hljs-variable">$rk</span><span class="hljs-subst">-&gt;</span>setLogLevel(LOG_DEBUG);
<span class="hljs-variable">$rk</span><span class="hljs-subst">-&gt;</span>addBrokers(<span class="hljs-string">"localhost:9092"</span>);

<span class="hljs-comment">// new topic</span>
<span class="hljs-variable">$topic</span> <span class="hljs-subst">=</span> <span class="hljs-variable">$rk</span><span class="hljs-subst">-&gt;</span>newTopic(<span class="hljs-string">"test"</span>);

<span class="hljs-variable">$topic</span><span class="hljs-subst">-&gt;</span>produce(RD_KAFKA_PARTITION_UA, <span class="hljs-number">0</span>, <span class="hljs-string">"Message payload"</span>);</code></pre>

<p>消费消息</p>



<pre class="prettyprint"><code class=" hljs lasso"><span class="hljs-variable">$rk</span> <span class="hljs-subst">=</span> <span class="hljs-literal">new</span> RdKafka<span class="hljs-subst">\</span>Consumer();
<span class="hljs-variable">$rk</span><span class="hljs-subst">-&gt;</span>setLogLevel(LOG_DEBUG);
<span class="hljs-comment">// 指定 broker 地址,多个地址用"," 分割</span>
<span class="hljs-variable">$rk</span><span class="hljs-subst">-&gt;</span>addBrokers(<span class="hljs-string">"localhost:9092"</span>);
<span class="hljs-variable">$topic</span> <span class="hljs-subst">=</span> <span class="hljs-variable">$rk</span><span class="hljs-subst">-&gt;</span>newTopic(<span class="hljs-string">"test"</span>);
<span class="hljs-variable">$topic</span><span class="hljs-subst">-&gt;</span>consumeStart(<span class="hljs-number">0</span>, RD_KAFKA_OFFSET_BEGINNING);

<span class="hljs-comment">//消费</span>
<span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {
    <span class="hljs-comment">// 第一个参数是分区号</span>
    <span class="hljs-comment">// 第二个参数是超时时间</span>
    <span class="hljs-variable">$msg</span> <span class="hljs-subst">=</span> <span class="hljs-variable">$topic</span><span class="hljs-subst">-&gt;</span>consume(<span class="hljs-number">0</span>, <span class="hljs-number">1000</span>);
    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$msg</span><span class="hljs-subst">-&gt;</span>err) {
        echo <span class="hljs-variable">$msg</span><span class="hljs-subst">-&gt;</span>errstr(), <span class="hljs-string">"\n"</span>;
        break;
    } <span class="hljs-keyword">else</span> {
        echo <span class="hljs-variable">$msg</span><span class="hljs-subst">-&gt;</span>payload, <span class="hljs-string">"\n"</span>;
    }
}</code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>