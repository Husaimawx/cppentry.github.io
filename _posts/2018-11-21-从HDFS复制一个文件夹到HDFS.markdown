---
layout:     post
title:      从HDFS复制一个文件夹到HDFS
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：欢迎进群一起探讨 企鹅群246068961					https://blog.csdn.net/HANLIPENGHANLIPENG/article/details/52693364				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileHandle</span> {</span>
    <span class="hljs-javadoc">/**
     * 设置hadoop HDFS 初始化配置方法
     *<span class="hljs-javadoctag"> @throws</span> IOException 
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> FileSystem <span class="hljs-title">init</span>(){
        Configuration config=<span class="hljs-keyword">new</span> Configuration();
        config.set(<span class="hljs-string">"fs.defaultFS"</span>, <span class="hljs-string">"hdfs://192.168.100.200:9000/"</span>);
        FileSystem fs=<span class="hljs-keyword">null</span>;
        <span class="hljs-keyword">try</span>{
            fs=FileSystem.get(config);
        }<span class="hljs-keyword">catch</span>(Exception e){
            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> RuntimeException(<span class="hljs-string">"初始化异常"</span>);
        }   
        <span class="hljs-keyword">return</span> fs;
    }



    <span class="hljs-javadoc">/**
     * 将HDFS上文件复制到HDFS上
     *<span class="hljs-javadoctag"> @param</span> src   原目标
     *<span class="hljs-javadoctag"> @param</span> dsc   复制到的目标
     *<span class="hljs-javadoctag"> @throws</span> Exception 
     *<span class="hljs-javadoctag"> @throws</span> IllegalArgumentException 
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">copy</span>(String src,String dsc) <span class="hljs-keyword">throws</span> IllegalArgumentException, Exception{
        <span class="hljs-javadoc">/**
         * 1:建立输入流
         * 2：建立输出流
         * 3:两个流的对接
         * 4:资源的关闭
         */</span>
        FileSystem fs=init();

        <span class="hljs-comment">//1:建立输入流</span>
        FSDataInputStream input=fs.open(<span class="hljs-keyword">new</span> Path(src));

        <span class="hljs-comment">//2:建立输出流</span>
        FSDataOutputStream output=fs.create(<span class="hljs-keyword">new</span> Path(dsc));

        <span class="hljs-comment">//3:两个流的对接</span>
        <span class="hljs-keyword">byte</span>[] b= <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[<span class="hljs-number">1024</span>];
        <span class="hljs-keyword">int</span> hasRead=<span class="hljs-number">0</span>;
        <span class="hljs-keyword">while</span>((hasRead=input.read(b))&gt;<span class="hljs-number">0</span>){
            output.write(b, <span class="hljs-number">0</span>, hasRead);
        }
        <span class="hljs-comment">//4:资源的关闭</span>
        input.close();
        output.close();
        fs.close();

    }
    <span class="hljs-javadoc">/**
     * 复制一个目录下面的所有文件
     *<span class="hljs-javadoctag"> @param</span> src   需要复制的文件夹或文件
     *<span class="hljs-javadoctag"> @param</span> dsc   目的地
     *<span class="hljs-javadoctag"> @throws</span> Exception 
     *<span class="hljs-javadoctag"> @throws</span> FileNotFoundException 
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">copyDir</span>(String src,String dsc) <span class="hljs-keyword">throws</span> FileNotFoundException, Exception{
        FileSystem fs=init();
        Path srcPath=<span class="hljs-keyword">new</span> Path(src);
        String[] strs=src.split(<span class="hljs-string">"/"</span>);
        String lastName=strs[strs.length-<span class="hljs-number">1</span>];
        <span class="hljs-keyword">if</span>(fs.isDirectory(srcPath)){    
            fs.mkdirs(<span class="hljs-keyword">new</span> Path(dsc+<span class="hljs-string">"/"</span>+lastName));

            <span class="hljs-comment">//遍历</span>
            FileStatus[] fileStatus=fs.listStatus(srcPath);
            <span class="hljs-keyword">for</span>(FileStatus fileSta:fileStatus){
                copyDir(fileSta.getPath().toString(),dsc+<span class="hljs-string">"/"</span>+lastName);
            }

        }<span class="hljs-keyword">else</span>{
            fs.mkdirs(<span class="hljs-keyword">new</span> Path(dsc));
            System.out.println(<span class="hljs-string">"src"</span>+src+<span class="hljs-string">"\n"</span>+dsc+<span class="hljs-string">"/"</span>+lastName);
            copy(src,dsc+<span class="hljs-string">"/"</span>+lastName);
        }
    }
}
</code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>