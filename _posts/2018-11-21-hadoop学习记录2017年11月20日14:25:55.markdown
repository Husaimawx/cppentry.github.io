---
layout:     post
title:      hadoop学习记录2017年11月20日14:25:55
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/ws379374000/article/details/78581917				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p>· Hadoop核心</p>
<p>        Hadoop的核心就是HDFS和MapReduce，而两者只是理论基础，不是具体可使用的高级应用，Hadoop旗下有很多经典子项目，比如HBase、Hive等，这些都是基于HDFS和MapReduce发展出来的。要想了解Hadoop，就必须知道HDFS和MapReduce是什么。</p>
<p> </p>
<p>· HDFS</p>
<p>HDFS（Hadoop Distributed File System，Hadoop分布式文件系统），它是一个高度容错性的系统，适合部署在廉价的机器上。HDFS能提供高吞吐量的数据访问，适合那些有着超大数据集（large data set）的应用程序。</p>
<p> </p>
<p>HDFS的设计特点是：</p>
<p>1、大数据文件，非常适合上T级别的大文件或者一堆大数据文件的存储，如果文件只有几个G甚至更小就没啥意思了。</p>
<p>2、文件分块存储，HDFS会将一个完整的大文件平均分块存储到不同计算器上，它的意义在于读取文件时可以同时从多个主机取不同区块的文件，多主机读取比单主机读取效率要高得多得都。</p>
<p>3、流式数据访问，一次写入多次读写，这种模式跟传统文件不同，它不支持动态改变文件内容，而是要求让文件一次写入就不做变化，要变化也只能在文件末添加内容。</p>
<p>4、廉价硬件，HDFS可以应用在普通PC机上，这种机制能够让给一些公司用几十台廉价的计算机就可以撑起一个大数据集群。</p>
<p>5、硬件故障，HDFS认为所有计算机都可能会出问题，为了防止某个主机失效读取不到该主机的块文件，它将同一个文件块副本分配到其它某几个主机上，如果其中一台主机失效，可以迅速找另一块副本取文件。</p>
<p> </p>
<p>HDFS的关键元素：</p>
<p>Block：将一个文件进行分块，通常是64M。</p>
<p>NameNode：保存整个文件系统的目录信息、文件信息及分块信息，这是由唯一一台主机专门保存，当然这台主机如果出错，NameNode就失效了。在Hadoop2.*开始支持activity-standy模式----如果主NameNode失效，启动备用主机运行NameNode。</p>
<p>DataNode：分布在廉价的计算机上，用于存储Block块文件。</p>
<p><br>
 </p>
<p> </p>
<p>· MapReduce</p>
<p><span style="font-family:'微软雅黑';">通俗说</span>MapReduce是一套从海量·源数据提取分析元素最后返回结果集的编程模型，将文件分布式存储到硬盘是第一步，而从海量数据中提取分析我们需要的内容就是MapReduce做的事了。</p>
<p> </p>
<p>下面以一个计算海量数据最大值为例：一个银行有上亿储户，银行希望找到存储金额最高的金额是多少，按照传统的计算方式，我们会这样：</p>
<p><strong>Java<span style="font-family:'宋体';">代码</span><span style="font-family:'DejaVu Sans Mono';">  </span></strong></p>
<p style="background:rgb(250,250,250);">1. Long moneys[] ...  </p>
<p style="background:rgb(250,250,250);">2. Long max = 0L;  </p>
<p style="background:rgb(250,250,250);"><span style="color:rgb(127,0,85);">3. </span><strong><span style="color:rgb(127,0,85);">for</span></strong>(<strong><span style="color:rgb(127,0,85);">int</span></strong> i=<span style="color:rgb(192,0,0);">0</span>;i&lt;moneys.length;i++){  </p>
<p style="background:rgb(250,250,250);">4.   <strong><span style="color:rgb(127,0,85);">if</span></strong>(moneys[i]&gt;max){  </p>
<p style="background:rgb(250,250,250);">5.     max = moneys[i];  </p>
<p style="background:rgb(250,250,250);">6.   }  </p>
<p style="background:rgb(250,250,250);">7. }  </p>
<p> </p>
<p> 如果计算的数组长度少的话，这样实现是不会有问题的，还是面对海量数据的时候就会有问题。</p>
<p>MapReduce会这样做：首先数字是分布存储在不同块中的，以某几个块为一个Map，计算出Map中最大的值，然后将每个Map中的最大值做Reduce操作，Reduce再取最大值给用户。</p>
<p><br>
        MapReduce的基本原理就是：将大的数据分析分成小块逐个分析，最后再将提取出来的数据汇总分析，最终获得我们想要的内容。当然怎么分块分析，怎么做Reduce操作非常复杂，Hadoop已经提供了数据分析的实现，我们只需要编写简单的需求命令即可达成我们想要的数据。</p>
<p> </p>
<p> </p>
<p>· 总结</p>
<p>        总的来说Hadoop适合应用于大数据存储和大数据分析的应用，适合于服务器几千台到几万台的集群运行，支持PB级的存储容量。</p>
<p>        Hadoop典型应用有：搜索、日志处理、推荐系统、数据分析、视频图像分析、数据保存等。</p>
<p>        但要知道，Hadoop的使用范围远小于SQL或Python之类的脚本语言，所以不要盲目使用Hadoop，看完这篇试读文章，我知道Hadoop不适用于我们的项目。不过Hadoop作为大数据的热门词，我觉得一个狂热的编程爱好者值得去学习了解，或许你下一个归宿就需要Hadoop人才，不是吗。</p>
<p> </p>
            </div>
                </div>