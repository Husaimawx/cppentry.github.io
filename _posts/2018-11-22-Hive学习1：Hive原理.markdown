---
layout:     post
title:      Hive学习1：Hive原理
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，欢迎转载，转载请注明出处！					https://blog.csdn.net/qq_36743482/article/details/78340130				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p><strong><em>Hive最终被编译成MapReduce，通过SQL执行MapReduce</em></strong></p>



<h3 id="1产生原因why">1.产生原因Why</h3>

<ul>
<li>MapReduce写起来复杂，Hive简单</li>
<li>Hive学习成本低，方便非Java编程者对hdfs的数据做MapReduce操作。便于推广，</li>
</ul>



<h3 id="hive是什么what分析hdfs上的结构化数据">Hive是什么What（分析HDFS上的结构化数据）</h3>

<ul>
<li>是数据仓库(不是交互式的，一般存储历史数据，反范式，面向分析)  范式数据库？解决数据冗余</li>
<li>解释器、编译器、优化器等</li>
<li>Hive运行时，元数据(表、数据库、分区、字段的定义和属性等)存储在关系型数据库(Mysql等，默认DB)里面（考虑到性能问题，访问读取多）</li>
</ul>



<h3 id="hive架构">Hive架构</h3>

<ul>
<li>用户接口主要有三个：CLI、Client、WUI。最常用CLI。 <br>
    - CLI启动时，会同时生成一个Hive副本。 <br>
    - Client是Hive的客户端，用户连接至Hive Server。在启动Client时，需要指出Hive Server的所在节点，并且在该节点上启动Hive Server。 <br>
    - WUI是通过浏览器访问Hive</li>
<li>Hive将元数据存储在关系数据库中：MataStore。如Mysql、derby。 <br>
    Hive元数据包括：表的名字、列和分区及其属性。表的属性(是否外部表)，表的数据所在目录。</li>
<li>解释器、编译器、优化器完成HQL查询语句从词法分析、语法分析、编译、优化以及查询计划的生成。生成的查询计划存储在HDFS中，并在随后由MapReduce调用。</li>
<li>Hive的数据存储在HDFS中，大部分的查询、计算由MapReduce完成。(包含* 等的直接查询，不会生成MapReduce任务)</li>
</ul>

<p><img src="https://img-blog.csdn.net/20171025131544396?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY3NDM0ODI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""> <br>
<em>注：在hadoop2.x之后，Job Tracker 由YARN的Source Manager实现。</em> <br>
<img src="https://img-blog.csdn.net/20171025132146708?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY3NDM0ODI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>



<h4 id="hive编译解析结果执行计划operator">Hive编译解析结果：执行计划Operator</h4>

<ul>
<li>编译器将一个HQL转为<strong>操作符</strong>(最小的执行单元：Operator：树状结构)</li>
<li>操作符是Hive最小的处理单元</li>
<li>每个操作符代表HDFS的一个操作或者一道MapReduce作业 <br>
<img src="https://img-blog.csdn.net/20171025132431037?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY3NDM0ODI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></li>
</ul>



<h5 id="antlr词法语法分析工具解析hql">antlr词法语法分析工具解析HQL</h5>

<p><img src="https://img-blog.csdn.net/20171025195417962?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY3NDM0ODI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>



<h3 id="hive三种模式">Hive三种模式</h3>

<ul>
<li>local模式(本地derby)：数据库用内置的Derby，即客户端和数据库在同一个服务器上。一般用于单元测试 <br>
<img src="https://img-blog.csdn.net/20171025195648472?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY3NDM0ODI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></li>
<li>单用户模式：客户端单独一台服务器，数据库单独一台服务器，Mysql  Hive CLI-&gt; Mysql <br>
限制：多台Hive服务器不能同时对同一元数据（Mysql）进行访问。 <br>
<img src="https://img-blog.csdn.net/20171025195914859?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY3NDM0ODI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></li>
<li>多用户模式(远程服务器模式：项目上线用这种模式)： Hive CLI-&gt;MataStore Server-&gt;Mysql <br>
用于非Java客户端访问元数据，在服务器端启动MetaStoreServer，客户端利用Thrift协议通过MetaStoreServer访问元数据库 <br>
        Remote一体：MataStore Client和MataStore Server放在一起，类似于单用户模式 <br>
        Remote分开 <br>
      <img src="https://img-blog.csdn.net/20171025200137431?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY3NDM0ODI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">  </li>
</ul>

<p><strong><em>可以看出划分方式：划分方式：元数据存储位置和管理</em></strong></p>

<p>下一节：Hive搭建 <br>
<a href="http://blog.csdn.net/qq_36743482/article/details/78380141" rel="nofollow">http://blog.csdn.net/qq_36743482/article/details/78380141</a></p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>