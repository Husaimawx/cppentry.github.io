---
layout:     post
title:      Hive系统架构简介
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>文章转载自：<a href="http://www.yiibai.com/hive/" rel="nofollow">http://www.yiibai.com/hive/</a></p>

<p><br></p>

<h2 id="hive是什么">Hive是什么？</h2>

<p>Hive是一个数据仓库基础工具在Hadoop中用来处理结构化数据。它架构在Hadoop之上，总归为大数据，并使得查询和分析方便。最初，Hive是由Facebook开发，后来由Apache软件基金会开发，并作为进一步将它作为名义下Apache Hive为一个开源项目。它用在好多不同的公司。例如，亚马逊使用它在 Amazon Elastic MapReduce。</p>

<p><br></p>



<h2 id="hive-不是">Hive 不是</h2>

<p>一个关系数据库 <br>
一个设计用于联机事务处理（OLTP） <br>
实时查询和行级更新的语言</p>

<p><br></p>



<h2 id="hive特点">Hive特点</h2>

<p>它存储架构在一个数据库中并处理数据到HDFS。 <br>
它是专为OLAP设计。 <br>
它提供SQL类型语言查询叫HiveQL或HQL。 <br>
它是熟知，快速，可扩展和可扩展的。</p>

<p><br></p>



<h2 id="hive架构">Hive架构</h2>

<p>下面的组件图描绘了Hive的结构：</p>

<p><img src="http://www.yiibai.com/uploads/allimg/141228/1-14122R10152108.jpg" alt="Hive系统架构" title=""></p>

<p>该组件图包含不同的单元。下表描述每个单元：</p>

<table>
<thead>
<tr>
  <th>单元名称</th>
  <th>操作</th>
</tr>
</thead>
<tbody><tr>
  <td>用户接口/界面</td>
  <td>Hive是一个数据仓库基础工具软件，可以创建用户和HDFS之间互动。用户界面，Hive支持是Hive的Web UI，Hive命令行，HiveHD洞察（在Windows服务器）。</td>
</tr>
<tr>
  <td>元存储</td>
  <td>Hive选择各自的数据库服务器，用以储存表，数据库，列模式或元数据表，它们的数据类型和HDFS映射。</td>
</tr>
<tr>
  <td>HiveQL处理引擎</td>
  <td>HiveQL类似于SQL的查询上Metastore模式信息。这是传统的方式进行MapReduce程序的替代品之一。相反，使用Java编写的MapReduce程序，可以编写为MapReduce工作，并处理它的查询。</td>
</tr>
<tr>
  <td>执行引擎</td>
  <td>HiveQL处理引擎和MapReduce的结合部分是由Hive执行引擎。执行引擎处理查询并产生结果和MapReduce的结果一样。它采用MapReduce方法。</td>
</tr>
<tr>
  <td>HDFS 或 HBASE</td>
  <td>Hadoop的分布式文件系统或者HBASE数据存储技术是用于将数据存储到文件系统。</td>
</tr>
</tbody></table>


<p><br></p>



<h2 id="hive架构的更一般的架构">Hive架构的更一般的架构</h2>

<p><img src="http://images.cnitblog.com/blog/306623/201306/02191203-0ca56f3a577f4a9d872099fa357c9189.png" alt="Hive更一般的架构" title=""></p>

<p>该组件图包含不同的单元。下表描述每个单元：</p>

<table>
<thead>
<tr>
  <th>单元名称</th>
  <th>操作</th>
</tr>
</thead>
<tbody><tr>
  <td>用户接口</td>
  <td>用户接口主要有三个：CLI，JDBC/ODBC和 WebUI <br>CLI，即Shell命令行 <br>JDBC/ODBC 是 Hive 的Java，与使用传统数据库JDBC的方式类似<br>WebGUI是通过浏览器访问 Hive</td>
</tr>
<tr>
  <td>metastore</td>
  <td>Hive 将元数据存储在数据库中(metastore)，目前只支持 mysql、derby。Hive 中的元数据包括表的名字，表的列和分区及其属性，表的属性（是否为外部表等），表的数据所在目录等</td>
</tr>
<tr>
  <td>Driver</td>
  <td>解释器、编译器、优化器完成 HQL 查询语句从词法分析、语法分析、编译、优化以及查询计划（plan）的生成。生成的查询计划存储在 HDFS 中，并在随后有 MapReduce 调用执行</td>
</tr>
</tbody></table>


<p><br></p>



<h2 id="hive工作原理">Hive工作原理</h2>

<p>下图描述了Hive 和Hadoop之间的工作流程。 <br>
<img src="http://www.yiibai.com/uploads/allimg/141228/1-14122R10220b9.jpg" alt="How Hive Works" title=""></p>

<p>下表定义Hive和Hadoop框架的交互方式：</p>

<table>
<thead>
<tr>
  <th>Step No.</th>
  <th>操作</th>
</tr>
</thead>
<tbody><tr>
  <td>1</td>
  <td><strong>Execute Query</strong><br>Hive接口，如命令行或Web UI发送查询驱动程序（任何数据库驱动程序，如JDBC，ODBC等）来执行。</td>
</tr>
<tr>
  <td>2</td>
  <td><strong>Get Plan</strong><br>在驱动程序帮助下查询编译器，分析查询检查语法和查询计划或查询的要求。</td>
</tr>
<tr>
  <td>3</td>
  <td><strong>Get Metadata</strong><br>编译器发送元数据请求到Metastore（任何数据库）。</td>
</tr>
<tr>
  <td>4</td>
  <td><strong>Send Metadata</strong><br>Metastore发送元数据，以编译器的响应。</td>
</tr>
<tr>
  <td>5</td>
  <td><strong>Send Plan</strong><br>编译器检查要求，并重新发送计划给驱动程序。到此为止，查询解析和编译完成。</td>
</tr>
<tr>
  <td>6</td>
  <td><strong>Execute Plan</strong><br>驱动程序发送的执行计划到执行引擎。</td>
</tr>
<tr>
  <td>7</td>
  <td><strong>Execute Job</strong><br>在内部，执行作业的过程是一个MapReduce工作。执行引擎发送作业给JobTracker，在名称节点并把它分配作业到TaskTracker，这是在数据节点。在这里，查询执行MapReduce工作。</td>
</tr>
<tr>
  <td>7.1</td>
  <td><strong>Metadata Ops</strong><br>与此同时，在执行时，执行引擎可以通过Metastore执行元数据操作。</td>
</tr>
<tr>
  <td>8</td>
  <td><strong>Fetch Result</strong><br>执行引擎接收来自数据节点的结果。</td>
</tr>
<tr>
  <td>9</td>
  <td><strong>Send Results</strong><br>执行引擎发送这些结果值给驱动程序。</td>
</tr>
<tr>
  <td>10</td>
  <td><strong>Send Results</strong><br>驱动程序将结果发送给Hive接口。</td>
</tr>
</tbody></table>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>