---
layout:     post
title:      详解kafka集群搭建
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h2>安装zookeeper集群</h2>
<h3>新建conf/zoo.cfg文件</h3>
<pre><span style="color:#008000;">#server1</span></pre>
<p>dataDir=/home/pass/zk-cluster/ zookeeper1/data</p>
<p>dataLogDir=/home/pass/zk-cluster/zookeeper1/logs</p>
<p>clientPort=2181</p>
<p><span style="color:#C00000;">server.1=zk:2188:3188</span></p>
<p>server.2=zk:2288:3288</p>
<p>server.3=zk:2388:3388</p>
<pre><span style="color:#008000;">#server2</span></pre>
<p>dataDir=/home/pass/zk-cluster/ zookeeper2/data</p>
<p>dataLogDir=/home/pass/zk-cluster/zookeeper2/logs</p>
<p>clientPort=2281</p>
<p>server.1=zk:2188:3188</p>
<p><span style="color:#C00000;">server.2=zk:2288:3288</span></p>
<p>server.3=zk:2388:3388</p>
<pre><span style="color:#008000;">#server3</span></pre>
<p>dataDir=/home/pass/zk-cluster/ zookeeper3/data</p>
<p>dataLogDir=/home/pass/zk-cluster/zookeeper3/logs</p>
<p>clientPort=2381</p>
<p>server.1=zk:2188:3188</p>
<p>server.2=zk:2288:3288</p>
<p><span style="color:#C00000;">server.3=zk:2388:3388</span></p>
<p><span style="color:#C00000;"><br></span></p>
<h3>创建数据存储和日志存储目录</h3>
<pre><span style="color:#008000;">#server1</span></pre>
<p>mkdir ./zookeeper1/data ./zookeeper1/logs</p>
<pre><span style="color:#008000;">#server2</span></pre>
<p>mkdir ./zookeeper2/data ./zookeeper2/logs</p>
<pre><span style="color:#008000;">#server3</span></pre>
<p>mkdir ./zookeeper3/data ./zookeeper3/logs</p>
<p> </p>
<h3>创建myid文件</h3>
<pre><span style="color:#008000;">#server1</span></pre>
<pre>echo <span style="color:#800000;">"1"</span> &gt; /home/pass/zk-cluster/zookeeper1/data /myid</pre>
<pre><span style="color:#008000;">#server2</span></pre>
<pre>echo <span style="color:#800000;">"2"</span> &gt; /home/pass/zk-cluster/zookeeper2/data /myid</pre>
<pre><span style="color:#008000;">#server3</span></pre>
<pre>echo <span style="color:#800000;">"3"</span> &gt; /home/pass/zk-cluster/zookeeper3/data /myid</pre>
<p> </p>
<h3>启动zookeeper集群</h3>
<p>./zookeeper1/bin/zkServer.sh start</p>
<p>./zookeeper2/bin/zkServer.sh start</p>
<p>./zookeeper3/bin/zkServer.sh start</p>
<p> </p>
<h3>查看实例状态</h3>
<p>./zookeeper1/bin/zkServer.sh status</p>
<p></p>
<p> <img src="https://img-blog.csdn.net/20170906162914381?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb25seXN1bm55Ym95/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p> </p>
<p>./zookeeper2/bin/zkServer.sh status</p>
<p></p>
<p> <img src="https://img-blog.csdn.net/20170906162922747?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb25seXN1bm55Ym95/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p>./zookeeper3/bin/zkServer.sh status</p>
<p><img src="https://img-blog.csdn.net/20170906163122480?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb25seXN1bm55Ym95/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></p>
<p></p>
<h2><br></h2>
<h2>kafka集群安装</h2>
<h3>修改配置信息/config/server.properties</h3>
<h4>broker.id=1                     #每个broker需要不一样</h4>
<p>port=9092                      #根据实际情况而定</p>
<p>host.name=192.168.1.13          #根据实际情况而定</p>
<p>num.network.threads=3          #borker进行网络处理的线程数</p>
<p>num.io.threads=                 #borker进行I/O处理的线程数 </p>
<p>socket.send.buffer.bytes=102400  #发送缓冲区buffer大小，数据不是一下子就发送的，先回存储到缓冲区了到达一定的大小后在发送，能提高性能</p>
<p>socket.receive.buffer.bytes=102400 #kafka接收缓冲区大小，当数据到达一定大小后在序列化到磁盘</p>
<p>socket.request.max.bytes=104857600 #这个参数是向kafka请求消息或者向kafka发送消息的请请求的最大数，这个值不能超过java的堆栈大小</p>
<p>num.partitions=1                 #默认的分区数，一个topic默认1个分区数</p>
<p>num.recovery.threads.per.data.dir=1</p>
<p>transaction.state.log.replication.factor=1</p>
<p>transaction.state.log.min.isr=1</p>
<p>log.retention.hours=168            #默认消息的最大持久化时间，168小时，7天</p>
<p>message.max.byte=5242880         #消息保存的最大值5M</p>
<p>replica.fetch.max.bytes=5242880 #取消息的最大直接数</p>
<p>log.segment.bytes=1073741824  #因为kafka的消息是以追加的形式落地到文件，当超过这个值的时候，kafka会新起一个文件</p>
<p>log.retention.check.interval.ms=300000  #每隔300000毫秒去检查上面配置的log失效时间</p>
<p>log.cleaner.enable=false #是否启用log压缩，一般不用启用，启用的话可以提高性能</p>
<p>zookeeper.connect=zk3:2181,zk3:2281,zk3:2381   #根据实际情况而定</p>
<p>group.initial.rebalance.delay.ms=0</p>
<p><br></p>
<h2>kafka集群测试</h2>
<h3>启动集群</h3>
<p align="left">./bin/kafka-server-start.sh -daemon  /config/server.properties</p>
<p align="left"><img src="https://img-blog.csdn.net/20170906162903330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb25seXN1bm55Ym95/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></p>
<h3>创建一个主题</h3>
<p>kafka1/bin/kafka-topics.sh --create  --zookeeper 192.168.1.13:2181  --replication-factor 2 --partitions 1 --topickafkatest</p>
<p><img src="https://img-blog.csdn.net/20170906162856590?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb25seXN1bm55Ym95/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<h3>查看主题状态</h3>
<p>./kafka1/bin/kafka-topics.sh --list--zookeeper zk:2181</p>
<p></p>
<p> <img src="https://img-blog.csdn.net/20170906162846897?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb25seXN1bm55Ym95/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<h3>启动一个消息发布者</h3>
<p>kafka1/bin/kafka-console-producer.sh--broker-list 192.168.1.13:9092 --topic kafkatest</p>
<p></p>
<p> <img src="https://img-blog.csdn.net/20170906162840252?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb25seXN1bm55Ym95/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<h3>启动一个消息消费者</h3>
<p>kafka1/bin/kafka-console-consumer.sh--zookeeper 192.168.1.13:2181 --topic kafkatest --from-beginning</p>
<p><img src="https://img-blog.csdn.net/20170906162831072?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb25seXN1bm55Ym95/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></p>
            </div>
                </div>