---
layout:     post
title:      Hive CLI
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><strong>Variables and Properties -- 设置 hive 变量</strong></p>
<p><br></p>
<p></p>
<pre><code class="language-sql">$ hive --define foo=bar
hive&gt; set foo;
foo=bar;
hive&gt; set hivevar:foo;
hivevar:foo=bar;
hive&gt; set hivevar:foo=bar2;
hive&gt; set foo;
foo=bar2</code></pre><br><p></p>
<p></p>
<pre><code class="language-sql">hive&gt; create table toss1(i int, ${hivevar:foo} string);
hive&gt; describe toss1;
i       int
bar2    string
hive&gt; create table toss2(i2 int, ${foo} string);
hive&gt; describe toss2;
i2      int
bar2    string
hive&gt; drop table toss1;
hive&gt; drop table toss2;</code></pre>
<p></p>
<p><br></p>
<p><strong>Hive “One Shot” Commands</strong><br></p>
<p><br></p>
<p>A quick and dirty technique is to use this feature to output the query results to a file.<br>
Adding the -S for silent mode removes the OK and Time taken ... lines, as well as other<br>
inessential output, as in this example:<br></p>
<pre><code class="language-sql">$ hive -S -e "select * FROM mytable LIMIT 3" &gt; /tmp/myquery
$ cat /tmp/myquery
name1 10
name2 20
name3 30</code></pre><br><p><br></p>
<p>Finally, here is a useful trick for finding a property name that you can’t quite remember,<br>
without having to scroll through the list of the set output. Suppose you can’t remember<br>
the name of the property that specifies the “warehouse” location for managed tables:<br></p>
<p></p>
<p></p>
<pre><code class="language-sql">$ hive -S -e "set" | grep warehouse
hive.metastore.warehouse.dir=/user/hive/wa
hive.warehouse.subdir.inherit.perms=false</code></pre><br><br><p></p>
<p><br></p>
<p><strong>Executing Hive Queries from Files  -- 执行命令文件.hql .q<br></strong></p>
<p><br>
Hive can execute one or more queries that were saved to a file using the -f file argu-<br>
ment. By convention, saved Hive query files use the .q or .hql extension.<br>
$ hive -f /path/to/file/withqueries.hql<br>
If you are already inside the Hive shell you can use the SOURCE command to execute a<br>
script file. Here is an example:<br>
$ cat /path/to/file/withqueries.hql<br>
SELECT x.* FROM src x;<br>
$ hive<br>
hive&gt; source /path/to/file/withqueries.hql;</p>
<p><br></p>
<p></p>
<pre><code class="language-sql">The details for xpath don’t concern us here, but note that we pass string literals to the
xpath function and use FROM src LIMIT 1 to specify the required FROM clause and to limit
the output. Substitute src with the name of a table you have already created or create
a dummy table named src:
CREATE TABLE src(s STRING);
Also the source table must have at least one row of content in it:
$ echo "one row" &gt; /tmp/myfile
$ hive -e "LOAD DATA LOCAL INPATH '/tmp/myfile' INTO TABLE src;</code></pre>
<p></p>
<p><br></p>
<p><strong>The .hiverc File -- HIVE 系统参数配制<br></strong></p>
<p><br></p>
<p>The following shows an example of a typical $HOME/.hiverc file:<br>
ADD JAR /path/to/custom_hive_extensions.jar;<br>
set hive.cli.print.current.db=true;<br>
set hive.exec.mode.local.auto=true;<br>
The first line adds a JAR file to the Hadoop distributed cache. The second line modifies<br>
the CLI prompt to show the current working Hive database, as we described earlier in<br>
“Variables and Properties” on page 31. The  last  line “encourages” Hive  to be more<br>
aggressive about using local-mode execution when possible, even when Hadoop is<br>
running in distributed or pseudo-distributed mode, which speeds up queries for small<br>
data sets.<br></p>
<p><br></p>
<p></p>
<p>配置如下参数，可以开启Hive的本地模式：</p>
<p>hive&gt; set hive.exec.mode.local.auto=true;(默认为false)</p>
<p><strong>当一个job满足如下条件才能真正使用本地模式：</strong></p>
<p>1.job的输入数据大小必须小于参数：hive.exec.mode.local.auto.inputbytes.max(默认128MB)</p>
<p>2.job的map数必须小于参数：hive.exec.mode.local.auto.tasks.max(默认4)</p>
<p>3.job的reduce数必须为0或者1</p>
<p>可用参数hive.mapred.local.mem(默认0)控制child jvm使用的最大内存数</p>
<p><br></p>
<p><strong>Autocomplete   -- TAB 自动命令补齐<br></strong></p>
<p><br>
If you start typing and hit the Tab key, the CLI will autocomplete possible keywords<br>
and function names. For example, if you type SELE and then the Tab key, the CLI will<br>
complete the word SELECT.<br>
If you type the Tab key at the prompt, you’ll get this reply:<br>
hive&gt;<br>
Display all 407 possibilities? (y or n)<br></p>
<p><br></p>
<p><strong>Command History</strong></p>
<p><br>
You can use the up and down arrow keys to scroll through previous commands. Ac-<br>
tually, each previous line of input is shown separately; the CLI does not combine mul-<br>
tiline commands and queries into a single history entry. Hive saves the last 100,00 lines<br>
into a file <span style="color:#FF0000;"><strong>$HOME/.hivehistory</strong></span>.</p>
<p><br></p>
<p><strong>Shell Execution -- 执行SELL 命令<br></strong></p>
<p><br>
You don’t need to leave the  hive CLI  to  run  simple bash  shell  commands.  Simply<br>
type ! followed by the command and terminate the line with a semicolon (;):<br>
hive&gt; ! /bin/echo "what up dog";<br>
"what up dog"<br>
hive&gt; ! pwd;<br>
/home/me/hiveplay</p>
<p><br></p>
<p><strong>Hadoop dfs Commands from Inside Hive --查询DFS 命令<br></strong></p>
<p><br>
You can run the hadoop dfs ... commands from within the hive CLI; just drop the<br>
hadoop word from the command and add the semicolon at the end:<br>
hive&gt; dfs -ls / ;<br>
Found 3 items<br>
drwxr-xr-x   - root   supergroup          0 2011-08-17 16:27 /etl<br>
drwxr-xr-x   - edward supergroup          0 2012-01-18 15:51 /flag<br>
drwxrwxr-x   - hadoop supergroup          0 2010-02-03 17:50 /users<br>
This method of accessing hadoop commands is actually more efficient than using the<br>
hadoop dfs ... equivalent at the bash shell, because the  latter starts up a new JVM<br>
instance each time, whereas Hive just runs the same code in its current process.</p>
<p><br></p>
<p><strong>Comments in Hive Scripts -- 注释<br></strong></p>
<p><br>
As of Hive v0.8.0, you can embed lines of comments that start with the string --, for<br>
example:<br>
-- Copyright (c) 2012 Megacorp, LLC.<br>
-- This is the best Hive script evar!!<br>
SELECT * FROM massive_table;<br>
...</p>
<p><strong><br></strong></p>
<p><strong><strong>Query Column Headers</strong>  --显示字段名 <br></strong><br>
As a final example that pulls together a few things we’ve learned, let’s tell the CLI to<br>
print column headers, which is disabled by default. We can enable this feature by setting<br>
the hiveconf property hive.cli.print.header to true:<br>
hive&gt; set hive.cli.print.header=true;</p>
<p><br>
hive&gt; SELECT * FROM system_logs LIMIT 3;<br>
tstamp severity server message<br>
1335667117.337715 ERROR server1 Hard drive hd1 is 90% full!<br>
1335667117.338012 WARN  server1 Slow response from server2.<br>
1335667117.339234 WARN  server2 Uh, Dude, I'm kinda busy right now...</p>
<p><br></p>
<p><br></p>
<br>            </div>
                </div>