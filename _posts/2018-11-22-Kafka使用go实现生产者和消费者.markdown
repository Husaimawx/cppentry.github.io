---
layout:     post
title:      Kafka使用go实现生产者和消费者
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h3 id="什么是Kafka" style="line-height:1.5;font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:18px;color:rgb(85,85,85);text-align:justify;">
什么是Kafka</h3>
<p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
Apache kafka是消息中间件的一种，是一个分布式的流平台,可以应用于高吞吐,高性能的消息队列服务.具体说明可以参考<a href="http://kafka.apache.org/documentation" rel="nofollow" style="background-color:transparent;color:rgb(85,85,85);text-decoration:none;border-bottom:1px solid rgb(153,153,153);">Apache
 Kafka官网</a>.下面简单的说下使用golang来实现Kafka的生产者和消费者.</p>
<a id="more" style="color:rgb(85,85,85);border-bottom:1px solid rgb(153,153,153);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;"></a><span style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;"></span>
<h3 id="安装Kafka" style="line-height:1.5;font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:18px;color:rgb(85,85,85);text-align:justify;">
<a href="http://blog.frenlee.com/2017/05/kafka-demo-golang-implementation/#%E5%AE%89%E8%A3%85Kafka" rel="nofollow" class="headerlink" title="安装Kafka" style="background-color:transparent;color:rgb(85,85,85);text-decoration:none;border-bottom:1px solid rgb(153,153,153);"></a>安装Kafka</h3>
<h4 id="下载" style="line-height:1.5;font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;color:rgb(85,85,85);text-align:justify;">
<a href="http://blog.frenlee.com/2017/05/kafka-demo-golang-implementation/#%E4%B8%8B%E8%BD%BD" rel="nofollow" class="headerlink" title="下载" style="background-color:transparent;color:rgb(85,85,85);text-decoration:none;border-bottom:1px solid rgb(153,153,153);"></a>下载</h4>
<p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
官网下载页面:<code style="font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(77,77,76);background:rgb(247,247,247);">http://kafka.apache.org/downloads</code><br></p>
<table style="border-collapse:collapse;border-spacing:0px;border:none;font-size:14px;table-layout:fixed;"><tbody><tr style="background-color:rgb(249,249,249);"><td class="gutter" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(134,145,148);background:rgb(239,242,243);line-height:1.6;border:none;text-align:right;"></pre><div class="line">1</div><div class="line">2</div><div class="line">3</div>
</td>
<td class="code" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(77,77,76);background:rgb(247,247,247);line-height:1.6;border:none;"></pre><div class="line">wget http://mirror.bit.edu.cn/apache/kafka/<span class="number" style="color:rgb(113,140,0);">0.10</span><span class="meta" style="color:rgb(137,89,168);">.2</span><span class="meta" style="color:rgb(137,89,168);">.1</span>/kafka_2<span class="meta" style="color:rgb(137,89,168);">.12</span>-<span class="number" style="color:rgb(113,140,0);">0.10</span><span class="meta" style="color:rgb(137,89,168);">.2</span><span class="meta" style="color:rgb(137,89,168);">.1</span>.tgz</div><div class="line">tar -zxvf kafka_2<span class="meta" style="color:rgb(137,89,168);">.12</span>-<span class="number" style="color:rgb(113,140,0);">0.10</span><span class="meta" style="color:rgb(137,89,168);">.2</span><span class="meta" style="color:rgb(137,89,168);">.1</span>.tgz</div><div class="line">cd kafka_2<span class="meta" style="color:rgb(137,89,168);">.12</span>-<span class="number" style="color:rgb(113,140,0);">0.10</span><span class="meta" style="color:rgb(137,89,168);">.2</span><span class="meta" style="color:rgb(137,89,168);">.1</span></div>
</td>
</tr></tbody></table><p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
</p>
<h4 id="启动服务" style="line-height:1.5;font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;color:rgb(85,85,85);text-align:justify;">
<a href="http://blog.frenlee.com/2017/05/kafka-demo-golang-implementation/#%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1" rel="nofollow" class="headerlink" title="启动服务" style="background-color:transparent;color:rgb(85,85,85);text-decoration:none;border-bottom:1px solid rgb(153,153,153);"></a>启动服务</h4>
<table style="border-collapse:collapse;border-spacing:0px;border:none;font-size:14px;table-layout:fixed;"><tbody><tr style="background-color:rgb(249,249,249);"><td class="gutter" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(134,145,148);background:rgb(239,242,243);line-height:1.6;border:none;text-align:right;"></pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div>
</td>
<td class="code" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(77,77,76);background:rgb(247,247,247);line-height:1.6;border:none;"></pre><div class="line"><span class="comment" style="color:rgb(142,144,140);">// 1.启动zookeeper</span></div><div class="line">bin/zookeeper-server-start<span class="selector-class">.sh</span> config/zookeeper<span class="selector-class">.properties</span> &amp;</div><div class="line"><span class="comment" style="color:rgb(142,144,140);">// 2.启动kafka</span></div><div class="line">bin/kafka-server-start<span class="selector-class">.sh</span> config/server<span class="selector-class">.properties</span> &amp;</div>
</td>
</tr></tbody></table><h4 id="创建Topic" style="line-height:1.5;font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;color:rgb(85,85,85);text-align:justify;">
<a href="http://blog.frenlee.com/2017/05/kafka-demo-golang-implementation/#%E5%88%9B%E5%BB%BATopic" rel="nofollow" class="headerlink" title="创建Topic" style="background-color:transparent;color:rgb(85,85,85);text-decoration:none;border-bottom:1px solid rgb(153,153,153);"></a>创建Topic</h4>
<table style="border-collapse:collapse;border-spacing:0px;border:none;font-size:14px;table-layout:fixed;"><tbody><tr style="background-color:rgb(249,249,249);"><td class="gutter" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(134,145,148);background:rgb(239,242,243);line-height:1.6;border:none;text-align:right;"></pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div>
</td>
<td class="code" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(77,77,76);background:rgb(247,247,247);line-height:1.6;border:none;"></pre><div class="line"><span class="string" style="color:rgb(113,140,0);">//</span> 创建Topic</div><div class="line">bin/kafka-topics.sh <span class="params" style="color:rgb(245,135,31);">--create</span> <span class="params" style="color:rgb(245,135,31);">--zookeeper</span> localhost<span class="function" style="color:rgb(66,113,174);">:2181</span> <span class="params" style="color:rgb(245,135,31);">--replication-factor</span> 1 <span class="params" style="color:rgb(245,135,31);">--partitions</span> 1 <span class="params" style="color:rgb(245,135,31);">--topic</span> test</div><div class="line"></div><div class="line"><span class="string" style="color:rgb(113,140,0);">//</span> 列出Topic是否创建成功</div><div class="line">bin/kafka-topics.sh <span class="params" style="color:rgb(245,135,31);">--list</span> <span class="params" style="color:rgb(245,135,31);">--zookeeper</span> localhost<span class="function" style="color:rgb(66,113,174);">:2181</span></div>
</td>
</tr></tbody></table><h4 id="发送消息" style="line-height:1.5;font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;color:rgb(85,85,85);text-align:justify;">
<a href="http://blog.frenlee.com/2017/05/kafka-demo-golang-implementation/#%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF" rel="nofollow" class="headerlink" title="发送消息" style="background-color:transparent;color:rgb(85,85,85);text-decoration:none;border-bottom:1px solid rgb(153,153,153);"></a>发送消息</h4>
<p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
向创建的test Topic 发送消息(生产者)<br></p>
<table style="border-collapse:collapse;border-spacing:0px;border:none;font-size:14px;table-layout:fixed;"><tbody><tr style="background-color:rgb(249,249,249);"><td class="gutter" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(134,145,148);background:rgb(239,242,243);line-height:1.6;border:none;text-align:right;"></pre><div class="line">1</div><div class="line">2</div><div class="line">3</div>
</td>
<td class="code" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(77,77,76);background:rgb(247,247,247);line-height:1.6;border:none;"></pre><div class="line">bin/kafka-console-producer.<span class="keyword" style="color:rgb(137,89,168);">sh</span> --broker-<span class="keyword" style="color:rgb(137,89,168);">list</span> localhos<span class="variable" style="color:rgb(200,40,41);">t:9092</span> --topic test</div><div class="line">This <span class="keyword" style="color:rgb(137,89,168);">is</span> <span class="keyword" style="color:rgb(137,89,168);">a</span> message</div><div class="line">This <span class="keyword" style="color:rgb(137,89,168);">is</span> another message</div>
</td>
</tr></tbody></table><p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
</p>
<h4 id="创建消费者" style="line-height:1.5;font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;color:rgb(85,85,85);text-align:justify;">
<a href="http://blog.frenlee.com/2017/05/kafka-demo-golang-implementation/#%E5%88%9B%E5%BB%BA%E6%B6%88%E8%B4%B9%E8%80%85" rel="nofollow" class="headerlink" title="创建消费者" style="background-color:transparent;color:rgb(85,85,85);text-decoration:none;border-bottom:1px solid rgb(153,153,153);"></a>创建消费者</h4>
<p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
订阅一个test Topic,并进行消费<br></p>
<table style="border-collapse:collapse;border-spacing:0px;border:none;font-size:14px;table-layout:fixed;"><tbody><tr style="background-color:rgb(249,249,249);"><td class="gutter" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(134,145,148);background:rgb(239,242,243);line-height:1.6;border:none;text-align:right;"></pre><div class="line">1</div><div class="line">2</div><div class="line">3</div>
</td>
<td class="code" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(77,77,76);background:rgb(247,247,247);line-height:1.6;border:none;"></pre><div class="line">bin/kafka-<span class="built_in" style="color:rgb(245,135,31);">console</span>-consumer.sh --bootstrap-server localhost:<span class="number" style="color:rgb(113,140,0);">9092</span> --topic test --<span class="keyword" style="color:rgb(137,89,168);">from</span>-beginning</div><div class="line">This <span class="keyword" style="color:rgb(137,89,168);">is</span> a message</div><div class="line">This <span class="keyword" style="color:rgb(137,89,168);">is</span> another message</div>
</td>
</tr></tbody></table><p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
</p>
<p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
如果你的生产者和消费者是成功的话,消费者开启的时候是可以收到所有生产者的消息的.</p>
<h3 id="生产者消费者具体实现" style="line-height:1.5;font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:18px;color:rgb(85,85,85);text-align:justify;">
<a href="http://blog.frenlee.com/2017/05/kafka-demo-golang-implementation/#%E7%94%9F%E4%BA%A7%E8%80%85%E6%B6%88%E8%B4%B9%E8%80%85%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0" rel="nofollow" class="headerlink" title="生产者消费者具体实现" style="background-color:transparent;color:rgb(85,85,85);text-decoration:none;border-bottom:1px solid rgb(153,153,153);"></a>生产者消费者具体实现</h3>
<p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
下载Kafka客户端Go语言Library<br></p>
<table style="border-collapse:collapse;border-spacing:0px;border:none;font-size:14px;table-layout:fixed;"><tbody><tr style="background-color:rgb(249,249,249);"><td class="gutter" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(134,145,148);background:rgb(239,242,243);line-height:1.6;border:none;text-align:right;"></pre><div class="line">1</div>
</td>
<td class="code" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(77,77,76);background:rgb(247,247,247);line-height:1.6;border:none;"></pre><div class="line"><span class="keyword" style="color:rgb(137,89,168);">go</span> <span class="built_in" style="color:rgb(245,135,31);">get</span> github.<span class="keyword" style="color:rgb(137,89,168);">com</span>/Shopify/sarama</div>
</td>
</tr></tbody></table><p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
</p>
<p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
<a href="https://cwiki.apache.org/confluence/display/KAFKA/Clients" rel="nofollow" style="background-color:transparent;color:rgb(85,85,85);text-decoration:none;border-bottom:1px solid rgb(153,153,153);">官方语言客户端Library</a></p>
<h4 id="生产者的实现" style="line-height:1.5;font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;color:rgb(85,85,85);text-align:justify;">
<a href="http://blog.frenlee.com/2017/05/kafka-demo-golang-implementation/#%E7%94%9F%E4%BA%A7%E8%80%85%E7%9A%84%E5%AE%9E%E7%8E%B0" rel="nofollow" class="headerlink" title="生产者的实现" style="background-color:transparent;color:rgb(85,85,85);text-decoration:none;border-bottom:1px solid rgb(153,153,153);"></a>生产者的实现</h4>
<table style="border-collapse:collapse;border-spacing:0px;border:none;font-size:14px;table-layout:fixed;"><tbody><tr style="background-color:rgb(249,249,249);"><td class="gutter" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(134,145,148);background:rgb(239,242,243);line-height:1.6;border:none;text-align:right;"></pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div>
</td>
<td class="code" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(77,77,76);background:rgb(247,247,247);line-height:1.6;border:none;"></pre><div class="line"><span class="keyword" style="color:rgb(137,89,168);">package</span> main</div><div class="line"></div><div class="line"><span class="keyword" style="color:rgb(137,89,168);">import</span> (</div><div class="line">	<span class="string" style="color:rgb(113,140,0);">"bufio"</span></div><div class="line">	<span class="string" style="color:rgb(113,140,0);">"fmt"</span></div><div class="line">	<span class="string" style="color:rgb(113,140,0);">"os"</span></div><div class="line">	<span class="string" style="color:rgb(113,140,0);">"sarama"</span></div><div class="line">	<span class="string" style="color:rgb(113,140,0);">"strings"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="function" style="color:rgb(66,113,174);"><span class="keyword" style="color:rgb(137,89,168);">func</span> <span class="title" style="color:rgb(62,153,159);">main</span><span class="params" style="color:rgb(245,135,31);">()</span></span> {</div><div class="line">	config := sarama.NewConfig()</div><div class="line">	config.Producer.Return.Successes = <span class="literal" style="color:rgb(245,135,31);">true</span> </div><div class="line">	config.Producer.RequiredAcks = sarama.WaitForAll</div><div class="line">	config.Producer.Partitioner = sarama.NewRandomPartitioner</div><div class="line"></div><div class="line">	producer, err := sarama.NewSyncProducer([]<span class="keyword" style="color:rgb(137,89,168);">string</span>{<span class="string" style="color:rgb(113,140,0);">"localhost:9092"</span>}, config)</div><div class="line"></div><div class="line">	<span class="keyword" style="color:rgb(137,89,168);">if</span> err != <span class="literal" style="color:rgb(245,135,31);">nil</span> {</div><div class="line">		<span class="built_in" style="color:rgb(245,135,31);">panic</span>(err)</div><div class="line">	}</div><div class="line">	<span class="keyword" style="color:rgb(137,89,168);">defer</span> producer.Close()</div><div class="line"></div><div class="line">	msg := &amp;sarama.ProducerMessage{</div><div class="line">		Topic:     <span class="string" style="color:rgb(113,140,0);">"testGo"</span>,</div><div class="line">		Partition: <span class="keyword" style="color:rgb(137,89,168);">int32</span>(<span class="number" style="color:rgb(113,140,0);">-1</span>),</div><div class="line">		Key:       sarama.StringEncoder(<span class="string" style="color:rgb(113,140,0);">"key"</span>),</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="keyword" style="color:rgb(137,89,168);">var</span> value <span class="keyword" style="color:rgb(137,89,168);">string</span></div><div class="line">	<span class="keyword" style="color:rgb(137,89,168);">for</span> {</div><div class="line">        <span class="comment" style="color:rgb(142,144,140);">// 生产消息</span></div><div class="line">		inputReader := bufio.NewReader(os.Stdin)</div><div class="line">		value, err = inputReader.ReadString(<span class="string" style="color:rgb(113,140,0);">'\n'</span>)</div><div class="line">		<span class="keyword" style="color:rgb(137,89,168);">if</span> err != <span class="literal" style="color:rgb(245,135,31);">nil</span> {</div><div class="line">			<span class="built_in" style="color:rgb(245,135,31);">panic</span>(err)</div><div class="line">		}</div><div class="line">		value = strings.Replace(value, <span class="string" style="color:rgb(113,140,0);">"\n"</span>, <span class="string" style="color:rgb(113,140,0);">""</span>, <span class="number" style="color:rgb(113,140,0);">-1</span>)</div><div class="line">		msg.Value = sarama.ByteEncoder(value)</div><div class="line">		paritition, offset, err := producer.SendMessage(msg)</div><div class="line"></div><div class="line">		<span class="keyword" style="color:rgb(137,89,168);">if</span> err != <span class="literal" style="color:rgb(245,135,31);">nil</span> {</div><div class="line">			fmt.Println(<span class="string" style="color:rgb(113,140,0);">"Send Message Fail"</span>)</div><div class="line">		}</div><div class="line"></div><div class="line">		fmt.Printf(<span class="string" style="color:rgb(113,140,0);">"Partion = %d, offset = %d\n"</span>, paritition, offset)</div><div class="line">	}</div><div class="line">}</div>
</td>
</tr></tbody></table><h4 id="消费者的实现" style="line-height:1.5;font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;color:rgb(85,85,85);text-align:justify;">
<a href="http://blog.frenlee.com/2017/05/kafka-demo-golang-implementation/#%E6%B6%88%E8%B4%B9%E8%80%85%E7%9A%84%E5%AE%9E%E7%8E%B0" rel="nofollow" class="headerlink" title="消费者的实现" style="background-color:transparent;color:rgb(85,85,85);text-decoration:none;border-bottom:1px solid rgb(153,153,153);"></a>消费者的实现</h4>
<table style="border-collapse:collapse;border-spacing:0px;border:none;font-size:14px;table-layout:fixed;"><tbody><tr style="background-color:rgb(249,249,249);"><td class="gutter" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(134,145,148);background:rgb(239,242,243);line-height:1.6;border:none;text-align:right;"></pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div>
</td>
<td class="code" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(77,77,76);background:rgb(247,247,247);line-height:1.6;border:none;"></pre><div class="line"><span class="keyword" style="color:rgb(137,89,168);">package</span> main</div><div class="line"></div><div class="line"><span class="keyword" style="color:rgb(137,89,168);">import</span> (</div><div class="line">	<span class="string" style="color:rgb(113,140,0);">"fmt"</span></div><div class="line">	<span class="string" style="color:rgb(113,140,0);">"sarama"</span></div><div class="line">	<span class="string" style="color:rgb(113,140,0);">"sync"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="keyword" style="color:rgb(137,89,168);">var</span> (</div><div class="line">	wg sync.WaitGroup</div><div class="line">)</div><div class="line"></div><div class="line"><span class="function" style="color:rgb(66,113,174);"><span class="keyword" style="color:rgb(137,89,168);">func</span> <span class="title" style="color:rgb(62,153,159);">main</span><span class="params" style="color:rgb(245,135,31);">()</span></span> {</div><div class="line">	consumer, err := sarama.NewConsumer([]<span class="keyword" style="color:rgb(137,89,168);">string</span>{<span class="string" style="color:rgb(113,140,0);">"localhost:9092"</span>}, <span class="literal" style="color:rgb(245,135,31);">nil</span>)</div><div class="line"></div><div class="line">	<span class="keyword" style="color:rgb(137,89,168);">if</span> err != <span class="literal" style="color:rgb(245,135,31);">nil</span> {</div><div class="line">		<span class="built_in" style="color:rgb(245,135,31);">panic</span>(err)</div><div class="line">	}</div><div class="line"></div><div class="line">	partitionList, err := consumer.Partitions(<span class="string" style="color:rgb(113,140,0);">"testGo"</span>)</div><div class="line"></div><div class="line">	<span class="keyword" style="color:rgb(137,89,168);">if</span> err != <span class="literal" style="color:rgb(245,135,31);">nil</span> {</div><div class="line">		<span class="built_in" style="color:rgb(245,135,31);">panic</span>(err)</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="keyword" style="color:rgb(137,89,168);">for</span> partition := <span class="keyword" style="color:rgb(137,89,168);">range</span> partitionList {</div><div class="line">		pc, err := consumer.ConsumePartition(<span class="string" style="color:rgb(113,140,0);">"testGo"</span>, <span class="keyword" style="color:rgb(137,89,168);">int32</span>(partition), sarama.OffsetNewest)</div><div class="line">		<span class="keyword" style="color:rgb(137,89,168);">if</span> err != <span class="literal" style="color:rgb(245,135,31);">nil</span> {</div><div class="line">			<span class="built_in" style="color:rgb(245,135,31);">panic</span>(err)</div><div class="line">		}</div><div class="line"></div><div class="line">		<span class="keyword" style="color:rgb(137,89,168);">defer</span> pc.AsyncClose()</div><div class="line"></div><div class="line">		wg.Add(<span class="number" style="color:rgb(113,140,0);">1</span>)</div><div class="line"></div><div class="line">		<span class="keyword" style="color:rgb(137,89,168);">go</span> <span class="function" style="color:rgb(66,113,174);"><span class="keyword" style="color:rgb(137,89,168);">func</span><span class="params" style="color:rgb(245,135,31);">(sarama.PartitionConsumer)</span></span> {</div><div class="line">			<span class="keyword" style="color:rgb(137,89,168);">defer</span> wg.Done()</div><div class="line">			<span class="keyword" style="color:rgb(137,89,168);">for</span> msg := <span class="keyword" style="color:rgb(137,89,168);">range</span> pc.Messages() {</div><div class="line">				fmt.Printf(<span class="string" style="color:rgb(113,140,0);">"Partition:%d, Offset:%d, Key:%s, Value:%s\n"</span>, msg.Partition, msg.Offset, <span class="keyword" style="color:rgb(137,89,168);">string</span>(msg.Key), <span class="keyword" style="color:rgb(137,89,168);">string</span>(msg.Value))</div><div class="line">			}</div><div class="line">		}(pc)</div><div class="line">		wg.Wait()</div><div class="line">		consumer.Close()</div><div class="line">	}</div><div class="line">}</div>
</td>
</tr></tbody></table><blockquote style="color:rgb(102,102,102);border-left:4px solid rgb(221,221,221);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
<p>PS:如果你的代码不是运行在loalhost这台机器上的话,需要修改 <code style="font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(77,77,76);background:rgb(247,247,247);">config/server.properties</code> 配置文件的listeners中的host,否则kafka服务端会拒绝你非localhost的连接请求,配置好后重启kafka服务.</p>
</blockquote>
<h4 id="测试运行" style="line-height:1.5;font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;color:rgb(85,85,85);text-align:justify;">
<a href="http://blog.frenlee.com/2017/05/kafka-demo-golang-implementation/#%E6%B5%8B%E8%AF%95%E8%BF%90%E8%A1%8C" rel="nofollow" class="headerlink" title="测试运行" style="background-color:transparent;color:rgb(85,85,85);text-decoration:none;border-bottom:1px solid rgb(153,153,153);"></a>测试运行</h4>
<p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
运行生产者<br></p>
<table style="border-collapse:collapse;border-spacing:0px;border:none;font-size:14px;table-layout:fixed;"><tbody><tr style="background-color:rgb(249,249,249);"><td class="gutter" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(134,145,148);background:rgb(239,242,243);line-height:1.6;border:none;text-align:right;"></pre><div class="line">1</div>
</td>
<td class="code" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(77,77,76);background:rgb(247,247,247);line-height:1.6;border:none;"></pre><div class="line">go <span class="keyword" style="color:rgb(137,89,168);">run</span><span class="bash"> producer/main.go</span></div>
</td>
</tr></tbody></table><p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
</p>
<p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
运行消费者<br></p>
<table style="border-collapse:collapse;border-spacing:0px;border:none;font-size:14px;table-layout:fixed;"><tbody><tr style="background-color:rgb(249,249,249);"><td class="gutter" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(134,145,148);background:rgb(239,242,243);line-height:1.6;border:none;text-align:right;"></pre><div class="line">1</div>
</td>
<td class="code" style="vertical-align:middle;border:none;">
<pre style="overflow:auto;font-family:consolas, Menlo, 'PingFang SC', 'Microsoft YaHei', monospace;font-size:13px;color:rgb(77,77,76);background:rgb(247,247,247);line-height:1.6;border:none;"></pre><div class="line">go <span class="keyword" style="color:rgb(137,89,168);">run</span><span class="bash"> consumer/main.go</span></div>
</td>
</tr></tbody></table><p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
</p>
<p style="color:rgb(85,85,85);font-family:Lato, 'PingFang SC', 'Microsoft YaHei', sans-serif;font-size:16px;text-align:justify;">
<a href="http://blog.frenlee.com/images/kafka-go.png" rel="nofollow" class="fancybox" style="background-color:transparent;color:rgb(85,85,85);text-decoration:none;border-bottom:1px solid rgb(153,153,153);"><img src="http://blog.frenlee.com/images/kafka-go.png" alt="执行" style="border:1px solid rgb(221,221,221);display:block !important;"></a></p>
            </div>
                </div>