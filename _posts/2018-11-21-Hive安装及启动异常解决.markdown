---
layout:     post
title:      Hive安装及启动异常解决
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/b_x_p/article/details/78579338				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h3 id="前期准备">前期准备</h3>

<p><strong>1、关于Hive的安装包和文档可以从这里获取：</strong></p>

<p><a href="https://cwiki.apache.org/confluence/display/Hive/Home" rel="nofollow" target="_blank">Hive官方文档</a></p>

<p><a href="http://mirrors.hust.edu.cn/apache/hive/" rel="nofollow" target="_blank">Hive下载地址</a></p>

<p><a href="https://github.com/apache/hive" rel="nofollow" target="_blank">Hive源码地址</a></p>

<p><strong>2、Hive依赖于Hadoop，关于Hadoop的安装可以查看这里：</strong></p>

<p><a href="http://blog.csdn.net/b_x_p/article/details/78410990" rel="nofollow" target="_blank">Hadoop安装——启动模式，基本配置，启动方式</a></p>

<p><a href="http://blog.csdn.net/b_x_p/article/details/78503275" rel="nofollow" target="_blank">Hadoop集群搭建——环境配置</a></p>

<p><strong>3、安装mysql</strong></p>

<p>由于Hive需要在数据库中存储元数据信息，所以安装hive之前需要先安装mysql。hive有一个默认的存放在内存中的数据库，企业开发一般不使用，这里就不使用默认数据库。如果你是Centos7可以点击这里进行安装——&gt;<a href="http://blog.csdn.net/b_x_p/article/details/78587422" rel="nofollow" target="_blank">Centos7安装Mysql</a></p>



<h3 id="安装hive">安装Hive</h3>

<p>我这里采用的是hive-2.2.0-bin版本。</p>

<p><strong>1、解压</strong></p>



<pre class="prettyprint"><code class=" hljs lasso">tar <span class="hljs-attribute">-xzvf</span> apache<span class="hljs-attribute">-hive</span><span class="hljs-subst">-</span><span class="hljs-number">2.2</span><span class="hljs-number">.0</span><span class="hljs-attribute">-bin</span><span class="hljs-built_in">.</span>tar<span class="hljs-built_in">.</span>gz <span class="hljs-attribute">-C</span> Documents/install<span class="hljs-subst">/</span></code></pre>

<p><strong>2、配置，进入和Hive的配置目录conf</strong></p>

<p>（1）配置hive.env.sh运行环境， 先将hive-env.sh.template重命名为hive.env.sh。</p>



<pre class="prettyprint"><code class=" hljs lasso"><span class="hljs-comment">//重命名</span>
mv hive<span class="hljs-attribute">-env</span><span class="hljs-built_in">.</span>sh<span class="hljs-built_in">.</span>template  hive<span class="hljs-attribute">-env</span><span class="hljs-built_in">.</span>sh

<span class="hljs-comment">//修改hive-env.sh配置如下</span>
<span class="hljs-comment">//HADOOP_HOME为hadoop的安装目录</span>
<span class="hljs-comment">//HIVE_CONF_DIR为Hive的配置文件所在目录</span>
HADOOP_HOME<span class="hljs-subst">=</span>/home/bxp/Documents/install/hadoop<span class="hljs-subst">-</span><span class="hljs-number">2.6</span><span class="hljs-number">.5</span>
export HIVE_CONF_DIR<span class="hljs-subst">=</span>/home/bxp/Documents/install/hive<span class="hljs-subst">-</span><span class="hljs-number">2.2</span><span class="hljs-number">.0</span><span class="hljs-attribute">-bin</span>/conf</code></pre>

<p>（2）配置hive-site.xml，此时文件下没有hive-site.xml，需要拷贝一份hive-default.xml.template命名为hive-site.xml，并将hive-default.xml.template重命名为hive-default.xml。将hive-site.xml文件中的配置全部删除，只需要添加以下配置即可。</p>



<pre class="prettyprint"><code class=" hljs xml"><span class="hljs-pi">&lt;?xml version="1.0"?&gt;</span>
<span class="hljs-pi">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">configuration</span>&gt;</span>
    <span class="hljs-comment">&lt;!--配置数据库连接--&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>jdbc:mysql://localhost:3306/hive2?createDatabaseIfNotExist=true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>JDBC connect string for a JDBC metastore<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-comment">&lt;!--配置数据库连接驱动--&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>Driver class name for a JDBC metastore<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-comment">&lt;!--配置数据库连接用户名--&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>username to use against metastore database<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-comment">&lt;!--配置数据库连接密码--&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>password to use against metastore database<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-comment">&lt;!--配置使用hive查询数据时，显示所查询字段的头信息--&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hive.cli.print.header<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>Whether to print the names of the columns in query output.<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hive.cli.print.current.db<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>Whether to include the current database in the Hive prompt.<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">configuration</span>&gt;</span></code></pre>

<p>（3）将hive-log4j2.properties.template重命名为hive-log4j2.properties</p>

<p><strong>3、下载mysql数据库连接驱动</strong> <br>
默认情况下Hive的lib目录下没有mysql的驱动，所以需要去<a href="https://dev.mysql.com/downloads/connector/j/" rel="nofollow">下载mysql驱动jar</a>包放于Hive的lib目录下。如果没有驱动，在hive启动的时候会报错，当然根据报错提示很容易就能够发现。</p>

<p><strong>4、在HDFS创建目录</strong> <br>
启动已经安装好的hadoop，启动，并在hdfs文件系统上创建/tmp和/user/hive/warehouse目录，并为创建的目录添加同组写权限</p>

<pre class="prettyprint"><code class=" hljs lasso"><span class="hljs-comment">//创建目录</span>
bin/hdfs dfs <span class="hljs-attribute">-mkdir</span> <span class="hljs-attribute">-p</span> /tmp
bin/hdfs dfs <span class="hljs-attribute">-mkdir</span> <span class="hljs-attribute">-p</span> /user/hive/warehouse
<span class="hljs-comment">//添加权限</span>
dfs <span class="hljs-attribute">-chmod</span> g<span class="hljs-subst">+</span>w /tmp
dfs <span class="hljs-attribute">-chmod</span> g<span class="hljs-subst">+</span>w /user/hive/warehouse
</code></pre>

<p><strong>5、初始化metadata</strong></p>



<pre class="prettyprint"><code class=" hljs lasso">bin/schematool <span class="hljs-attribute">-dbType</span> mysql <span class="hljs-attribute">-initSchema</span></code></pre>

<p><strong>6、启动</strong></p>



<pre class="prettyprint"><code class=" hljs ">bin/hive</code></pre>



<h3 id="启动失败解决方案">启动失败解决方案</h3>

<p>配置过程中细节很重要，下面就看看我在配置结束后，启动时遇到的问题以及解决方案，通过异常提示能够看出来的问题，这里就不再强调说明。</p>

<p>（<strong>1）问题一：与数据库建立连接时候没有权限的问题，无法连接的问题</strong></p>



<pre class="prettyprint"><code class=" hljs livecodeserver">Caused <span class="hljs-keyword">by</span>: java.sql.SQLException: Unable <span class="hljs-built_in">to</span> <span class="hljs-built_in">open</span> <span class="hljs-operator">a</span> test connection <span class="hljs-built_in">to</span> <span class="hljs-operator">the</span> given database. JDBC url = jdbc:mysql://<span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.103</span>:<span class="hljs-number">3306</span>/hivemetastore, username = admin. Terminating connection pool (<span class="hljs-built_in">set</span> lazyInit <span class="hljs-built_in">to</span> <span class="hljs-constant">true</span> <span class="hljs-keyword">if</span> you expect <span class="hljs-built_in">to</span> start your database <span class="hljs-keyword">after</span> your app). Original Exception: <span class="hljs-comment">------</span>
java.sql.SQLException: Access denied <span class="hljs-keyword">for</span> user <span class="hljs-string">'admin'</span>@<span class="hljs-string">'hadoop-series.bxp.com'</span> (<span class="hljs-keyword">using</span> password: YES)</code></pre>

<p>这个问题我查了很多说法，都是众说纷纭，最后发现，最简单的解决办法就是，不要去尝试创建一个新的数据库用户用于连接，直接使用mysql root用户连接即可。</p>

<p>但是使用root用户连接的时候，发只能够使用localhost（<code>jdbc:mysql://localhost:3306</code>） 才能够连接成功，而无法使用IP（<code>jdbc:mysql://192.168.1.103:3306</code>）进行连接。实际中hive和mysql不一定在一台主机上，所以必须要使用IP进行连接，要解决这个问题，只需要修改mysql root用户权限即可。具体步骤如下：</p>



<pre class="prettyprint"><code class=" hljs sql">//登陆mysql
sudo mysql -uroot -p
//对mysql表进行操作
use mysql
//查看表中的信息
<span class="hljs-operator"><span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>,host <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span>;</span>
//修改root用户权限，默认是只能够本地登陆（localhost，127.0.0.1），修改为"%"就可以远程登陆
<span class="hljs-operator"><span class="hljs-keyword">update</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> host=<span class="hljs-string">'%'</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span>=<span class="hljs-string">'root'</span> <span class="hljs-keyword">and</span> host=<span class="hljs-string">'localhost'</span>;</span>
//将root本地登陆权限删除，具体的看表中的信息
<span class="hljs-operator"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span>=<span class="hljs-string">'root'</span> <span class="hljs-keyword">and</span> host=<span class="hljs-string">'::1'</span>;</span>
<span class="hljs-operator"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span>=<span class="hljs-string">'root'</span> <span class="hljs-keyword">and</span> host=<span class="hljs-string">'127.0.0.1'</span>;</span>
<span class="hljs-operator"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span>=<span class="hljs-string">'root'</span> <span class="hljs-keyword">and</span> host=<span class="hljs-string">'localhost.localdomain'</span>;</span>
//刷新权限
flush privileges;</code></pre>

<p>此时就可以通过IP（<code>jdbc:mysql://192.168.1.103:3306</code>）进行连接。</p>

<p><img src="https://img-blog.csdn.net/20171121134724578?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYl94X3A=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<p>本人尝试过创建用户时使用主机IP（CREATE USER user1@IP ），此时连接时也使用IP（jdbc:mysql://IP:3306），也尝试过给创建的用户赋予”%”权限，但是还是相同的错误无法连接。新创建的用户只能够使用localhost权限，并且只能在本地进行登陆。所以初步断定这是Mysql为用户分配权限的原因。具体的原因没有深究，想了解更多的可以去查阅相关的资料进行解决。</p>

<p><strong>（2）问题二：无法找到metadata</strong></p>



<pre class="prettyprint"><code class=" hljs avrasm">Caused by: org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hive</span><span class="hljs-preprocessor">.ql</span><span class="hljs-preprocessor">.metadata</span><span class="hljs-preprocessor">.HiveException</span>: java<span class="hljs-preprocessor">.lang</span><span class="hljs-preprocessor">.RuntimeException</span>: Unable to instantiate org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hive</span><span class="hljs-preprocessor">.ql</span><span class="hljs-preprocessor">.metadata</span><span class="hljs-preprocessor">.SessionHiveMetaStoreClient</span>

Caused by: java<span class="hljs-preprocessor">.lang</span><span class="hljs-preprocessor">.RuntimeException</span>: Unable to instantiate org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hive</span><span class="hljs-preprocessor">.ql</span><span class="hljs-preprocessor">.metadata</span><span class="hljs-preprocessor">.SessionHiveMetaStoreClient</span>

Caused by: java<span class="hljs-preprocessor">.lang</span><span class="hljs-preprocessor">.reflect</span><span class="hljs-preprocessor">.InvocationTargetException</span>

Caused by: MetaException(message:Version information not found <span class="hljs-keyword">in</span> metastore. )</code></pre>

<p>这个问题我也查了很多资料，也是有各种的说法，最后选择低版本（hive-0.13.1-bin）按照上面的的配置进行一系列的配置，居然正常启动了。最后就觉得是版本问题。最终发现在Hive2以后，安装启动hive之前需要对hive metadata进行初始化。使用如下命令：</p>



<pre class="prettyprint"><code class=" hljs lasso"> bin/schematool <span class="hljs-attribute">-dbType</span> mysql <span class="hljs-attribute">-initSchema</span></code></pre>

<p>初始化完成之后就能够正常启动了。</p>

<p><strong>（3）问题三：9000端口无法访问</strong></p>



<pre class="prettyprint"><code class=" hljs avrasm">Caused by: java<span class="hljs-preprocessor">.net</span><span class="hljs-preprocessor">.ConnectException</span>: <span class="hljs-keyword">Call</span> From hadoop-series<span class="hljs-preprocessor">.bxp</span><span class="hljs-preprocessor">.com</span>/<span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.103</span> to hadoop-series<span class="hljs-preprocessor">.bxp</span><span class="hljs-preprocessor">.com</span>:<span class="hljs-number">9000</span> failed on connection exception: java<span class="hljs-preprocessor">.net</span><span class="hljs-preprocessor">.ConnectException</span>: Connection refused<span class="hljs-comment">; For more details see:  http://wiki.apache.org/hadoop/ConnectionRefused</span></code></pre>

<p>首先是防火墙，如果你的防火墙已经关闭了，那就是hdfs没有启动成功或者没有启动导致的，因为9000是hdfs其中一个服务的端口。这里有必要说一下，我使用hive-0.13.1-bin版本进行启动的时候，不需要开启hdfs也能够启动。但是2.0后必须依赖hdfs。</p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>