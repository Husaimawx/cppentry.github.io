---
layout:     post
title:      Flume的安装及简单的使用（一）
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/qq_38799155/article/details/78024887				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h2 id="1flume简介">1.Flume简介</h2>

<p>Flume是Cloudera提供的一个高可用、高可靠、分布式的海量日志采集、聚合和传输的系统。Flume支持在日志系统中定制各类数据发送方用于收集数据，同时Flume提供对数据的简单处理，并将数据处理结果写入各种数据接收方的能力。 <br>
Flume作为Cloudera开发的实时日志收集系统，受到了业界的认可与广泛应用。2010年11月Cloudera开源了Flume的第一个可用版本0.9.2，这个系列版本被统称为Flume-OG。随着Flume功能的扩展，Flume-OG代码工程臃肿、核心组件设计不合理、核心配置不标准等缺点暴露出来，尤其是在Flume-OG的最后一个发行版本 0.94.0中，日志传输不稳定的现象尤为严重。为了解决这些问题，2011年10月Cloudera重构了核心组件、核心配置和代码架构，重构后的版本统称为Flume-NG。改动的另一原因是将 Flume 纳入 Apache 旗下，Cloudera Flume改名为Apache Flume。</p>



<h2 id="2flume工作原理">2.Flume工作原理</h2>

<p>Flume的数据流由事件（Event）贯穿始终。事件是Flume的基本数据单位，它携带日志数据（字节数组形式）并且携带有头信息，这些Event由Agent外部的Source生成，当Source捕获事件后会进行特定的格式化，然后Source会把事件推入（单个或多个）Channel中。可以把Channel看作是一个缓冲区，它将保存事件直到Sink处理完该事件。Sink负责持久化日志或者把事件推向另一个Source。以下是Flume的一些核心概念： <br>
（1）Events：一个数据单元，带有一个可选的消息头,可以是日志记录、avro 对象等。 <br>
（2）Agent：JVM中一个独立的Flume进程，包含组件Source、Channel、Sink。 <br>
（3）Client：运行于一个独立线程，用于生产数据并将其发送给Agent。 <br>
（4）Source：用来消费传递到该组件的Event,从Client收集数据，传递给Channel。 <br>
（5）Channel：中转Event的一个临时存储，保存Source组件传递过来的Event，其实就是连接 Source 和 Sink ，有点像一个消息队列。 <br>
（6）Sink：从Channel收集数据，运行在一个独立线程。 <br>
Flume以Agent为最小的独立运行单位，一个Agent就是一个JVM。单Agent由Source、Sink和Channel三大组件构成，如下图所示： <br>
<img src="https://img-blog.csdn.net/20170918204709413?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzg3OTkxNTU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""> <br>
值得注意的是，Flume提供了大量内置的Source、Channel和Sink类型。不同类型的Source、Channel和Sink可以自由组合。组合方式基于用户设置的配置文件，非常灵活。比如：Channel可以把事件暂存在内存里，也可以持久化到本地硬盘上；Sink可以把日志写入HDFS、HBase、ES甚至是另外一个Source等等。Flume支持用户建立多级流，也就是说多个Agent可以协同工作,如下图所示: <br>
<img src="https://img-blog.csdn.net/20160908163150212" alt="这里写图片描述" title=""> <br>
<strong>更多的了解，请查看官网：</strong><a href="http://flume.apache.org/FlumeUserGuide.html" rel="nofollow" target="_blank">http://flume.apache.org/FlumeUserGuide.html</a></p>



<h2 id="3系统环境">3.系统环境</h2>

<table>
<thead>
<tr>
  <th>主机名称</th>
  <th align="center">操作系统</th>
  <th align="right">Java版本</th>
  <th>Fiume版本</th>
</tr>
</thead>
<tbody><tr>
  <td>hadoop</td>
  <td align="center">centos7</td>
  <td align="right">Java1.8+</td>
  <td>1.7.0</td>
</tr>
</tbody></table>


<p>**系统需求：**Flume需要Java 1.6及以上（推荐1.8），对Agent监控目录的读写权限。</p>



<h2 id="4下载及安装">4.下载及安装</h2>



<h3 id="1flume">1.Flume</h3>

<p>到Flume官网上<a href="http://flume.apache.org/download.html" rel="nofollow" target="_blank">http://flume.apache.org/download.html</a>下载软件安装包，如图： <br>
<img src="https://img-blog.csdn.net/20170918161157611?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzg3OTkxNTU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""> <br>
可以在Windows下下载完成，通过xftp上传至hadoop根目录下，也可以在图片上箭头指向的版本，点击“右键”，复制链接地址，在hadoop下通过wget安装</p>

<p><strong>下载、解压</strong></p>



<pre class="prettyprint"><code class=" hljs avrasm">$ wget http://www<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.org</span>/dyn/closer<span class="hljs-preprocessor">.lua</span>/flume/<span class="hljs-number">1.7</span><span class="hljs-number">.0</span>/apache-flume-<span class="hljs-number">1.7</span><span class="hljs-number">.0</span>-bin<span class="hljs-preprocessor">.tar</span><span class="hljs-preprocessor">.gz</span>
$ tar -xzf apache-flume-<span class="hljs-number">1.7</span><span class="hljs-number">.0</span>-bin<span class="hljs-preprocessor">.tar</span><span class="hljs-preprocessor">.gz</span>
$ mv apache-flume-<span class="hljs-number">1.7</span><span class="hljs-number">.0</span>-bin flume</code></pre>



<h3 id="2jdk18的安装">2.jdk1.8的安装</h3>

<p><strong>1.到jdk官网<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" rel="nofollow" target="_blank">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a> 下载软件安装包，如图：</strong> <br>
<img src="https://img-blog.csdn.net/20170918223731665?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzg3OTkxNTU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""> <br>
在Windows下下载完成，通过xftp上传至hadoop根目录下 <br>
首先先卸载虚拟机自带的<code>openjdk</code>，通过如下命令</p>



<pre class="prettyprint"><code class=" hljs bash">$ <span class="hljs-built_in">sudo</span> yum -y remove java*</code></pre>

<p><strong>2.安装jdk</strong></p>



<pre class="prettyprint"><code class=" hljs lasso">$ sudo yum <span class="hljs-attribute">-y</span> install jdk<span class="hljs-subst">-</span><span class="hljs-number">8</span>u144<span class="hljs-attribute">-linux</span><span class="hljs-attribute">-x64</span><span class="hljs-built_in">.</span>rpm</code></pre>

<p><strong>3.配置java环境变量（局部）</strong></p>



<pre class="prettyprint"><code class=" hljs ruby"><span class="hljs-variable">$ </span>vi .bashrc</code></pre>

<p>添加如下内容</p>



<pre class="prettyprint"><code class=" hljs bash"><span class="hljs-comment"># Java Environment Variables</span>
<span class="hljs-keyword">export</span> JAVA_HOME=/usr/java/jdk1.<span class="hljs-number">8.0</span>_144
<span class="hljs-keyword">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin
</code></pre>

<p>通过如下命令使其生效</p>



<pre class="prettyprint"><code class=" hljs bash">$ <span class="hljs-built_in">source</span> .bashrc</code></pre>

<p>测试：<code>$ echo $JAVA_HOME</code> 会显示如下：</p>



<pre class="prettyprint"><code class=" hljs ">/usr/java/jdk1.8.0_144</code></pre>

<p>至此Java环境变量配置成功</p>



<h2 id="5修改flume配置文件">5.修改Flume配置文件</h2>

<p>进入到flume的conf下，创建一个<code>flume.conf</code> 文件</p>



<pre class="prettyprint"><code class=" hljs ruby"><span class="hljs-variable">$ </span>cd /home/hadoop/flume/conf/
<span class="hljs-variable">$ </span>vi flume.conf</code></pre>

<p>输入以下内容</p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor"># 指定Agent的组件名称</span>
a1<span class="hljs-preprocessor">.sources</span> = <span class="hljs-built_in">r1</span>
a1<span class="hljs-preprocessor">.sinks</span> = k1
a1<span class="hljs-preprocessor">.channels</span> = c1

<span class="hljs-preprocessor"># 指定Flume source(要监听的路径)</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.type</span> = spooldir
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.spoolDir</span> = /home/hadoop/log

<span class="hljs-preprocessor"># 指定Flume sink</span>
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.type</span> = logger

<span class="hljs-preprocessor"># 指定Flume channel</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.type</span> = memory
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.capacity</span> = <span class="hljs-number">1000</span>
a1<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.transactionCapacity</span> = <span class="hljs-number">100</span>

<span class="hljs-preprocessor"># 绑定source和sink到channel上</span>
a1<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.channels</span> = c1
a1<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.channel</span> = c1
</code></pre>



<h2 id="6启动flume-agent">6.启动flume agent</h2>



<pre class="prettyprint"><code class=" hljs brainfuck"><span class="hljs-comment">$</span> <span class="hljs-comment">cd</span> <span class="hljs-comment">flume</span>
<span class="hljs-comment">$</span> <span class="hljs-comment">bin/flume</span><span class="hljs-literal">-</span><span class="hljs-comment">ng</span> <span class="hljs-comment">agent</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">conf</span> <span class="hljs-comment">conf</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">conf</span><span class="hljs-literal">-</span><span class="hljs-comment">file</span> <span class="hljs-comment">conf/flume</span><span class="hljs-string">.</span><span class="hljs-comment">conf</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">name</span> <span class="hljs-comment">a1</span> <span class="hljs-literal">-</span><span class="hljs-comment">Dflume</span><span class="hljs-string">.</span><span class="hljs-comment">root</span><span class="hljs-string">.</span><span class="hljs-comment">logger=INFO</span><span class="hljs-string">,</span><span class="hljs-comment">console</span></code></pre>

<table>
<thead>
<tr>
  <th>参数</th>
  <th align="center">作用</th>
  <th align="right">举例</th>
</tr>
</thead>
<tbody><tr>
  <td>–conf 或 -c</td>
  <td align="center">指定配置文件夹，包含flume-env.sh和log4j的配置文件</td>
  <td align="right">–conf conf</td>
</tr>
<tr>
  <td>–conf-file 或 -f</td>
  <td align="center">配置文件地址</td>
  <td align="right">–conf-file conf/flume.conf</td>
</tr>
<tr>
  <td>–name 或 -n</td>
  <td align="center">agent名称</td>
  <td align="right">–name a1</td>
</tr>
<tr>
  <td>-z</td>
  <td align="center">zookeeper连接字符串</td>
  <td align="right">-z zkhost:2181,zkhost1:2181</td>
</tr>
<tr>
  <td>-p</td>
  <td align="center">zookeeper中的存储路径前缀</td>
  <td align="right">-p /flume</td>
</tr>
</tbody></table>




<h2 id="7简单的操作">7.简单的操作</h2>

<p><strong>写入日志内容</strong> <br>
在<code>/home/hadoop/log</code> 下创建一个<code>flume.log</code> 日志文件，写入<code>hello flume</code> 作为测试内容</p>



<pre class="prettyprint"><code class=" hljs ruby"><span class="hljs-variable">$ </span>cd /home/hadoop/log
<span class="hljs-variable">$ </span>vi flume.log</code></pre>

<p>接着就可以在前一个终端看到刚刚采集的内容了,如下：</p>



<pre class="prettyprint"><code class=" hljs css">2017<span class="hljs-tag">-09-18</span> 22<span class="hljs-pseudo">:18</span><span class="hljs-pseudo">:28</span>,937 (<span class="hljs-tag">SinkRunner-PollingRunner-DefaultSinkProcessor</span>) <span class="hljs-attr_selector">[INFO - org.apache.flume.sink.LoggerSink.process(LoggerSink.java:95)]</span> <span class="hljs-tag">Event</span>: <span class="hljs-rules">{ <span class="hljs-rule"><span class="hljs-attribute">headers</span>:<span class="hljs-value">{</span></span></span>} <span class="hljs-tag">body</span>: 68 65 6<span class="hljs-tag">C</span> 6<span class="hljs-tag">C</span> 6<span class="hljs-tag">F</span> 20 66 6<span class="hljs-tag">C</span> 75 6<span class="hljs-tag">D</span> 65 20 21 21       <span class="hljs-tag">hello</span> <span class="hljs-tag">flume</span> !! }
</code></pre>

<p>如图： <br>
<img src="https://img-blog.csdn.net/20170918222314043?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzg3OTkxNTU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""> <br>
至此flume已经能够正常运行。</p>

<p>————————-华丽的分割线——————————–</p>

<p>笔者推荐博客：<a href="http://blog.csdn.net/qq_38799155/article/details/78025621" rel="nofollow">http://blog.csdn.net/qq_38799155/article/details/78025621</a></p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>