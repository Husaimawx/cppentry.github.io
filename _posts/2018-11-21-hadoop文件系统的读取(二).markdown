---
layout:     post
title:      hadoop文件系统的读取(二)
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p><span>
</span></p><p><span style="letter-spacing:0px;"><span style="font-size:medium;">上次我们讨论了利用HDFS的url的方式读取HDFS内文件内容的方法,今天我们讨论使用HDFS的API对HDFS内的文件进行读取.</span></span></p>
<p><span style="letter-spacing:0px;"><span></span><span style="font-size:medium;">HDFS主要通过FileSystem类来完成对文件的打开操作.和java使用java.io.File来表示文件很不相同,hadoop的HDFS文件系统中的文件是通过Hadoop的Path类来表示的.</span></span></p>
<p><span style="letter-spacing:0px;"><span></span><span style="font-size:medium;">FileSystem通过静态方法 get(Configuration conf)来获得FileSystem的实例.通过该实例,我们可以通过FileSystem的open,seek等方法来实现对hdfs的访问,具体的方法如下所示:</span></span></p>
<p><span><span style="font-size:medium;">public</span></span><span style="letter-spacing:0px;"><span style="font-size:medium;"> FSDataInputStream open(Path f) </span></span><span><span style="font-size:medium;">throws</span></span><span style="letter-spacing:0px;"><span style="font-size:medium;"> IOException</span></span></p>
<p><span><span style="font-size:medium;">public</span></span><span style="letter-spacing:0px;"><span style="font-size:medium;"> </span></span><span><span style="font-size:medium;">abstract</span></span><span style="letter-spacing:0px;"><span style="font-size:medium;"> FSDataInputStream open(Path f, </span></span><span><span style="font-size:medium;">int</span></span><span style="letter-spacing:0px;"><span style="font-size:medium;"> bufferSize)</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;">    </span></span><span><span style="font-size:medium;">throws</span></span><span style="letter-spacing:0px;"><span style="font-size:medium;"> IOException;</span></span></p>
<p><span style="letter-spacing:0px;"><span></span><span style="font-size:medium;">通过FileSystem的源代码可以看到,最终open方法落到一个抽象方法</span></span><span><span style="font-size:medium;">public</span></span><span style="letter-spacing:0px;"><span style="font-size:medium;"> </span></span><span><span style="font-size:medium;">abstract</span></span><span style="letter-spacing:0px;"><span style="font-size:medium;">FSDataInputStream open(Path f, </span></span><span><span style="font-size:medium;">int</span></span><span style="letter-spacing:0px;"><span style="font-size:medium;"> bufferSize)来实现文件的打开,具体的实现方式由继承自FileSystem的具体文件系统的实现来决定.</span></span></p>
<p><span style="letter-spacing:0px;"><span></span></span></p>
<p><span style="letter-spacing:0px;"><span></span><span style="font-size:medium;">有了上面的简单解释,我们来看一个通过HDFS的API来访问文件系统的例子:</span></span></p>
<p><span style="letter-spacing:0px;"><span></span></span></p>
<p><span style="font-size:medium;">
</span></p><pre><code class="language-java">import org.apache.hadoop.fs.*;
import org.apache.hadoop.conf.*;
import org.apache.hadoop.io.*;

public class HDFSCatWithAPI {

/**
* @param args
*/
public static void main(String[] args) throws Exception{
// 指定Configuration
Configuration conf = new Configuration();
//定义一个DataInputStream
FSDataInputStream in = null;
try{
//得到文件系统的实例
FileSystem fs = FileSystem.get(conf);
//通过FileSystem的open方法打开一个指定的文件
in = fs.open(new Path("hdfs://localhost:9000/user/myname/input/fixFontsPath.sh"));
//将InputStream中的内容通过IOUtils的copyBytes方法拷贝到System.out中
IOUtils.copyBytes(in,System.out,4096,false);
//seek到position 1
in.seek(1);
//在执行一边拷贝输出工作
IOUtils.copyBytes(in,System.out,4096,false);
}finally{
IOUtils.closeStream(in);
}
}

}</code></pre>
 
<p><span style="letter-spacing:0px;"><span style="font-size:medium;">输出如下:</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;">#!/bin/sh</span></span></p>
<p><span style="font-size:medium;"><br></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;"># Licensed to the Apache Software Foundation (ASF) under one or more</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;"># contributor license agreements.  See the NOTICE file distributed with</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;"># this work for additional information regarding copyright ownership.</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;"># The ASF licenses this file to You under the Apache License, Version</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;"> ..........(中间内容略去)</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;">&lt;/map:sitemap&gt;</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;">EOF</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;">!/bin/sh</span></span></p>
<p><span style="font-size:medium;"><br></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;"># Licensed to the Apache Software Foundation (ASF) under one or more</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;"># contributor license agreements.  See the NOTICE file distributed with</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;"># this work for additional information regarding copyright ownership.</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;"># The ASF licenses this file to You under the Apache License, Version </span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;"> ..........(中间内容略去)</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;">&lt;/map:sitemap&gt;</span></span></p>
<p><span style="letter-spacing:0px;"><span style="font-size:medium;">EOF</span></span></p>
<p><span style="font-size:medium;"><br></span></p>
<p><span style="letter-spacing:0px;"><span></span><span style="font-size:medium;">上面的例子简单介绍了Hdfs读取文件的API.值得提出的是seek方法,这里我们使用了seek(1)可以看到第二遍输出比第一遍少了一个#号,这就是seek(1)的结果.另外seek方法相对来说是一个代价比较大的操作(具体可以参见DFSInputStream中对于seek,read等的实现).因此发挥hadoop的特长还是通过Stream数据来处理数据.</span></span></p>
            </div>
                </div>