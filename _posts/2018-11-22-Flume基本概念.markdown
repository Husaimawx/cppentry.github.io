---
layout:     post
title:      Flume基本概念
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h1 id="h1_0"><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">1、Flume是什么？</span></span></h1>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"><br>
    <span>○ Flume是由cloudera开发的实时日志收集系统<br></span>    <span>○ 核心概念是由一个叫做Agent(代理节点)的java进程运行在日志收集节点<br></span>    <span>○ Flume在0.94.0版本以前(包含0.94.0版本)称为Cloudera Flume OG,由于0.94.0版本以前存在各种缺陷,因此不得不重新设计Flume并更名为Apache Flume NG(1.0.0开始)<br></span>    <span>○ Flume NG VS Flume OG<br></span>      - 目前版本都是Flume NG(1.0.0版本之后)<br>
      <span><span>架构方面：<br></span></span>        □ Flume OG有三种角色的节点：代理节点agent、收集节点collector、主节点master<br>
        □ agent负责从各个数据源收集日志数据、将收集到的数据集中到collector,再由collector节点汇总存入到HDFS.而master负责管理agent\collector的活动<br>
        □ agent、collector都称为node,node的角色根据配置的不同分为逻辑节点和物理节点,对于逻辑节点的区分、配置、使用非常复杂.<br>
        □ agent、collector由source、sink组成,表示当前节点的数据从source传送到sink</span></span></p>
<hr><p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">          以上相对于Flume NG来说:</span></span></p>
<hr><p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">        □ Flume NG只有一种角色节点：代理节点agent<br>
        □ 没有collector、master节点,这是最核心的变化.<br>
        □ 去除逻辑节点和物理节点的概念和内容<br>
        □ agent节点的组成发生变化,由source 、sink、channel三个组件组成<br>
      <span><span>Zookeeper方面：<br></span></span>        □ Flume OG的稳定性依赖zookeeper,它需要zookeeper对其多类节点的工作进行管理,虽然OG可以使用内存的方式对各类节点进行管理,但需要用户忍受机器出现故障时信息丢失的出现.<br>
        □ Flume NG的节点角色数量由原来的3个缩减为1个,不存在多类角色的问题,所以不再需要zookeeper对各类节点协调的作用,由此脱离了对zookeeper的依赖.</span></span></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"><br></span></span></p>
<span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"><span id="OSC_h1_2"></span><span style="color:rgb(61,70,77);"></span></span></span>
<h1 id="h1_1"><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">2、Flume的三个组件</span></span></h1>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"><br>
    一个Agent进程包含了三个组件：Source组件、Channel组件、Sink组件，Source组件负责收集日志文件并发送给Channel组件,Channel组件形成一个管道,再由Sink组件读取Channel组件中的日志文件并发送给其他目标或者文件系统。</span></span></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">  </span></span></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">    <span>Source组件：</span>专门收集日志文件，可以处理各种类型的日志数据，如：Avro、Thrift、Exec、JMS、Spooling Directory、Twitter、Kafka、NetCat、Sequence Generator、Syslog、HTTP、Stress、Legacy、Custom(自定义格式)、Scribe<br>
    <span>Channel组件：</span>专门用于存放临时文件，存储的位置可以是Memory、JDBC、Kafka、File、Spillable Memory、Pseudo Transaction、Custom(自定义)<br>
    <span>Sink组件：</span>专门用于发送存放在Channel组件中的数据，发送的目标包括：HDFS、Hive、Logger、Thrift、IRC、File Roll、Null、HBase、MorphlineSolr、ElasticSearch、Kite Dataset、Kafka、Custom(自定义)<br>
    <span>Note:<br></span>  ○ 具体各种使用请参官方文档：<a href="http://flume.apache.org/FlumeUserGuide.html#flume-sink-processors" rel="nofollow">http://flume.apache.org/FlumeUserGuide.html#flume-sink-processors</a><br>
  ○ Channel中的数据只有在Sink组件发送成功后才会被删除<br>
  ○ 在整个数据的传输过程中流动的是event,event可以理解为是flume中数据传输的基本单位,event表现为一条条的数据,其事务保证是event级别.<br>
  ○ flume支持多级flume的agent,支持扇入(fan-in)\扇出(fan-out)</span></span></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"><br><img src="http://static.oschina.net/uploads/space/2015/0702/025857_e36c_2377453.png" alt=""></span></span></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"> </span></span></p>
<p><span><span style="font-family:'Comic Sans MS';font-size:14px;">Note:</span></span></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">    ○ Sink支持发送多个目标</span></span></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"><br></span></span></p>
<span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"><span id="OSC_h1_3"></span><span style="color:rgb(61,70,77);"></span></span></span>
<h1 id="h1_2"><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">3、Flume的安装与配置</span></span></h1>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"><br>
 ○ 下载<br>
    apache-flume-1.6.0-bin.tar.gz<br>
    JDK版本：1.6+<br>
 ○ 解压FLUME_HOME</span></span></p>
<pre><code class="language-css"><code class="hljs css"><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"><span class="hljs-selector-tag">tar</span> <span class="hljs-selector-tag">-zxvf</span> <span class="hljs-selector-tag">apache-flume-1</span><span class="hljs-selector-class">.6</span><span class="hljs-selector-class">.0-bin</span><span class="hljs-selector-class">.tar</span><span class="hljs-selector-class">.gz</span></span></span></code></code></pre>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"> ○ 安装JDK、配置JAVA_HOME、FLUME_HOME.</span></span></p>
<pre class="brush:shell;toolbar: true; auto-links: false; hljs bash"><code class="hljs bash"><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">vi /etc/profile
<span class="hljs-built_in">export</span> FLUME_HOME=/home/app/flume
<span class="hljs-built_in">export</span> PATH=.:<span class="hljs-variable">$FLUME_HOME</span>/bin</span></span></code></pre>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"> ○ 一个简单的例子,监控/home/data/logs目录,一旦有发现文件立即上传到hdfs中<br>
  □ 首先编写一个配置文件,文件名为:example.conf</span></span></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">#agent1表示代理名称<br>
  agent1.sources=source1<br>
  agent1.sinks=sink1<br>
  agent1.channels=channel1  #Spooling Directory是监控指定文件夹中新文件的变化，一旦新文件出现，就解析该文件内容，然后写入到channle。写入完成后，标记该文件已完成或者删除该文件。<br>
  #配置source1<br>
  agent1.sources.source1.type=spooldir<br>
  #指定监控的目录<br>
  agent1.sources.source1.spoolDir=/home/data/logs<br>
  agent1.sources.source1.channels=channel1<br>
  agent1.sources.source1.fileHeader = false<br>
  agent1.sources.source1.interceptors = i1<br>
  agent1.sources.source1.interceptors.i1.type = timestamp<br>
  #配置sink1<br>
  agent1.sinks.sink1.type=hdfs<br>
  agent1.sinks.sink1.hdfs.path=hdfs://master:9000/flume/data<br>
  agent1.sinks.sink1.hdfs.fileType=DataStream<br>
  agent1.sinks.sink1.hdfs.writeFormat=TEXT<br>
  agent1.sinks.sink1.hdfs.rollInterval=1<br>
  agent1.sinks.sink1.channel=channel1<br>
  agent1.sinks.sink1.hdfs.filePrefix=%Y-%m-%d<br>
  #配置channel1<br>
  agent1.channels.channel1.type=file<br>
  #channel数据存放的备份目录<br>
  agent1.channels.channel1.checkpointDir=/home/data/channel_data.backup<br>
  #channel数据存放目录<br>
  agent1.channels.channel1.dataDirs=/home/data/channel_data<br></span></span></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">  □ 将example.conf文件放到$FLUME_HOME/conf文件夹下<br>
  □ 启动agent进程命令：需要指定agent的名字、指定配置目录和配置文件<br>
    官方格式：</span></span></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">bin/flume-ng agent -n $agent_name -c conf -f conf/flume-conf.properties.template<br></span></span></p>
<p></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">在例子中编写成如下↓↓</span></span></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"> bin/flume-ng agent -n agent1 -c conf -f conf/example.conf -Dflume.root.logger=DEBUG,console<br>
 -Dflume.root.logger=DEBUG,console是在控制台打印信息<br></span></span></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;">  □ 重新打开一个终端，上传一个文件到/home/data/logs<br>
  □ /home/data/logs中的文件被更名为.COMPLETED,查看HDFS文件存在,配置完毕</span></span></p>
<p><span style="background-color:rgb(255,255,255);"><span style="font-family:'Comic Sans MS';font-size:14px;"><br></span></span></p>
<p><span style="font-family:'Comic Sans MS';font-size:14px;"><a href="https://my.oschina.NET/u/2377453/blog/473150" rel="nofollow">原文链接：https://my.oschina.net/u/2377453/blog/473150</a></span></p>
            </div>
                </div>