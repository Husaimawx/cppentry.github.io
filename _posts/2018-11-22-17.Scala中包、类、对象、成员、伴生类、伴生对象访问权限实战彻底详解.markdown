---
layout:     post
title:      17.Scala中包、类、对象、成员、伴生类、伴生对象访问权限实战彻底详解
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p>1.包、类、对象、成员访问权限实战</p>
<p></p>
<pre><code class="language-java">package scala.oop

package spark{
  package navigation{
    private[spark] class Navigator{  //private[spark]限定了这个类的可见度，可扩展到spark这个包里的所有类和对象（当然也包含其子包里的所有类和对象）
     
      protected[navigation] def useStarChart(){}  //protected[navigation] 类Navigator和其子类以及包navigation里所有代码都可以访问这个方法
      
      class LefOfJourney{
        private[Navigator] val distance = 100  //private[Navigator]对这个类内部所有成员、方法都可见
      }
      
      private[this] var speed = 200  //private[this] 只有当前对象可访问，是对象私有的。即使那个对象也是属于这个类的，也不能访问。当然更不能被其它类型的对象访问
    }
  }
  
  package launch{
    import navigation._
    
    object Vehicle{
      private[launch] val guide = new Navigator  //launch包中所有内容都可以访问这个成员
    }
  }
}</code></pre><br><p></p>
<p>2.伴生类、伴生对象访问权限实战</p>
<p></p>
<pre><code class="language-java">class PackageOps_Advanced{
  import PackageOps_Advanced.power  //伴生对象中的私有成员变量
  private def canMakeItTrue = power &gt; 100001
}

object PackageOps_Advanced{
  private def power = 10000
  
  def makeItTrue(p: PackageOps_Advanced) : Boolean = {
    var result = p.canMakeItTrue  //伴生类中的私有成员方法
    result
  }
}</code></pre><br>
伴生类中有protected成员，那么其子类都可以访问
<p></p>
<p>若伴生对象中有protected成员，因为伴生对象无子类，所以也无法谈了。<br></p>
<p><br></p>
<p><span>参考资料来源于 DT<a href="http://lib.csdn.net/base/hadoop" rel="nofollow" class="replace_word" title="Hadoop知识库" style="color:#df3434;font-weight:bold;">大数据</a>梦工厂<a href="http://lib.csdn.net/base/scala" rel="nofollow" class="replace_word" title="Scala知识库" style="color:#df3434;font-weight:bold;">Scala</a>零基础实战经典第<span class="number">17</span><span>课 由王家林老师讲解</span></span><br></p>
<p><br></p>
            </div>
                </div>