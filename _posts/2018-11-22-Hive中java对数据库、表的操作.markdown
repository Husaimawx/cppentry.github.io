---
layout:     post
title:      Hive中java对数据库、表的操作
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>在应用Hive之前，首先搭建Hive环境，关于Hive的搭建 参考之前的搭建文档</p>

<p><a href="http://blog.csdn.net/liulihui1988/article/details/74351532" rel="nofollow" target="_blank">http://blog.csdn.net/liulihui1988/article/details/74351532</a></p>

<h2 id="java代码执行hive脚本">java代码执行Hive脚本</h2>

<p>java代码执行Hive脚本，需要启动Hive的内部服务，供其他或者java代码链接，Hive内部服务启动命令</p>

<pre class="prettyprint"><code class=" hljs vala"><span class="hljs-preprocessor"># ./hive --service hiveserver2</span></code></pre>

<p><img src="https://img-blog.csdn.net/20170707112927244?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1bGlodWkxOTg4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<p>启动成功后tcp会自动监听 一个10000的端口</p>

<p><img src="https://img-blog.csdn.net/20170707113105865?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1bGlodWkxOTg4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<p>但是这里监听的IP是127.0.0.1,是不能供其它链接的，需要修改配置文件，指定服务地址，IP或者服务器名称</p>

<ul>
<li>需改 Hive-site.xml 的配置文件</li>
</ul>



<pre class="prettyprint"><code class=" hljs vala"><span class="hljs-preprocessor"># vi ../conf/hive-site.xml </span></code></pre>

<p>需要把如下value的localhost 改为服务器名称或者IP</p>

<pre class="prettyprint"><code class=" hljs applescript">&lt;<span class="hljs-keyword">property</span>&gt;
  &lt;<span class="hljs-property">name</span>&gt;hive.server2.thrift.bind.host&lt;/<span class="hljs-property">name</span>&gt;
  &lt;value&gt;centos-node6&lt;/value&gt;
  &lt;description&gt;Bind host <span class="hljs-function_start"><span class="hljs-keyword">on</span></span> which <span class="hljs-keyword">to</span> <span class="hljs-command">run</span> <span class="hljs-keyword">the</span> HiveServer2 Thrift interface.
  Can be overridden <span class="hljs-keyword">by</span> setting $HIVE_SERVER2_THRIFT_BIND_HOST&lt;/description&gt;
&lt;/<span class="hljs-keyword">property</span>&gt;</code></pre>

<p>再次启动Hive的内部服务，查看监听的tcp和端口号服务</p>

<p><img src="https://img-blog.csdn.net/20170707114557678?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1bGlodWkxOTg4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<p>内部服务开启成功，现在可以供其它链接Hive，本地测试 命令进入/bin目录下</p>

<pre class="prettyprint"><code class=" hljs vala"><span class="hljs-preprocessor"># ./beeline </span></code></pre>



<pre class="prettyprint"><code class=" hljs haskell"><span class="hljs-title">beeline</span>&gt; !connect jdbc:hive2://centos-node6/<span class="hljs-default"><span class="hljs-keyword">default</span>;</span></code></pre>

<p><img src="https://img-blog.csdn.net/20170707132722375?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1bGlodWkxOTg4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<p>用户名默认：root  密码：无</p>

<p>登陆成功后命令查看default数据库中的表</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">show</span> tables</span></code></pre>

<p>出现错误  5000L，这是Hive的一个bug，需要修改配置文件</p>

<p><img src="https://img-blog.csdn.net/20170707133130320?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1bGlodWkxOTg4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<p>修改配置文件 hive-site.xml，修改value值为5000</p>

<pre class="prettyprint"><code class=" hljs applescript">&lt;<span class="hljs-keyword">property</span>&gt;
  &lt;<span class="hljs-property">name</span>&gt;hive.server2.long.polling.<span class="hljs-keyword">timeout</span>&lt;/<span class="hljs-property">name</span>&gt;
  &lt;value&gt;<span class="hljs-number">5000</span>&lt;/value&gt;
  &lt;description&gt;Time <span class="hljs-keyword">in</span> milliseconds <span class="hljs-keyword">that</span> HiveServer2 will wait, <span class="hljs-keyword">before</span> responding <span class="hljs-keyword">to</span> asynchronous calls <span class="hljs-keyword">that</span> use long polling&lt;/description&gt;
&lt;/<span class="hljs-keyword">property</span>&gt;</code></pre>

<p>再次命令查看default 中的表    show tables</p>

<p><img src="https://img-blog.csdn.net/20170707135836378?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1bGlodWkxOTg4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""> </p>

<p>远程链接Hive测试成功！</p>

<h2 id="java代码jdbc链接hive">java代码JDBC链接Hive</h2>

<ul>
<li>jdbc测试链接Hive代码如下</li>
</ul>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">import</span> java.sql.Connection;
<span class="hljs-keyword">import</span> java.sql.DriverManager;
<span class="hljs-keyword">import</span> java.sql.ResultSet;
<span class="hljs-keyword">import</span> java.sql.Statement;

<span class="hljs-javadoc">/**
 * Hive远程测试连接
 *<span class="hljs-javadoctag"> @author</span> llh
 *
 */</span>
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HiveTest</span> {</span>

    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span>(String[] args) <span class="hljs-keyword">throws</span> Exception{
        Class.forName(<span class="hljs-string">"org.apache.hive.jdbc.HiveDriver"</span>);
        Connection conn = DriverManager.getConnection(<span class="hljs-string">"jdbc:hive2://centos-node6/default"</span>, <span class="hljs-string">"root"</span>, <span class="hljs-string">""</span>);
        <span class="hljs-keyword">try</span> {
            Statement st = conn.createStatement();
            ResultSet re = st.executeQuery(<span class="hljs-string">"select count(*) from t_emp"</span>); 
            <span class="hljs-keyword">if</span>(re.next()){
                System.err.println(<span class="hljs-string">"t_emp数据条数:"</span>+re.getInt(<span class="hljs-number">1</span>));
            }
        } <span class="hljs-keyword">catch</span> (Exception e) {
            e.printStackTrace();
        }<span class="hljs-keyword">finally</span>{
            conn.close();
        }
    }

}
</code></pre>

<p><img src="https://img-blog.csdn.net/20170707143536837?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1bGlodWkxOTg4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<p>测试成功</p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>