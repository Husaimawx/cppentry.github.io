---
layout:     post
title:      Hbase听课笔记
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p><strong>Hbase完全分布式的安装</strong></p>

<p><strong>独立式：Standalone</strong></p>

<p><strong>完全分布式：fully-distributed</strong></p>

<p><strong>当hbase中某一个节点挂了的时候：</strong></p>

<p><strong>Hbase-daemon.sh start master</strong></p>

<p><strong>Hbase-daemon.sh start regionserver</strong></p>

<p><strong>./hbase shell  进入</strong></p>

<p><strong>List查看表</strong></p>

<p><strong> </strong></p>

<p><strong>为什么hbase到2.2了，我们用0.98</strong></p>

<p><strong>软件整合</strong></p>

<p><strong>版本有要求，要有一整套</strong></p>

<p><strong> </strong></p>

<p><strong>Hbase中删除表的时候，首先要禁用：</strong></p>

<p><strong>disable 'tbl'</strong></p>

<p><strong>报错：</strong></p>

<p><strong> Failed 1 action: NotServingRegionException: 1 time, </strong></p>

<p><strong>禁用之后，不能插入数据</strong></p>

<p><strong>Drop ‘tbl’</strong></p>

<p><strong>开启之后，才可以插入数据</strong></p>

<p><strong> put 'tbl','1111','cf:name','lisi'</strong></p>

<p><strong>创建命名空间</strong></p>

<p><strong>create_namespace 'sxt'</strong></p>

<p><strong>展示命名空间：</strong></p>

<p><strong>list_namespace</strong></p>

<p><strong>Ddl</strong></p>

<p><strong>Dml:put 、get、scan</strong></p>

<p><strong>count 'tbl':计算行数</strong></p>

<p><strong>Delete删除的时候，一定要按照rowkey来删</strong></p>

<p><strong>Scan:扫描</strong></p>

<p><strong>每次书写完，执行flush，才会写入磁盘</strong></p>

<p><strong>三个会合并在一起</strong></p>

<p><strong>Thrift:rpc:远程过程调用</strong></p>

<p><strong> </strong></p>

<p><strong>过滤器：有前缀过滤器，没有后缀过滤器</strong></p>

<p><strong>表的层面</strong></p>

<p><strong>数据的层面</strong></p>

<p><strong> <img alt="" class="has" src="https://img-blog.csdn.net/20180807231438276?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5cXdpbGxpYW0=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong>master running as process 2109. Stop it first.</strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p>Hbase的项目（通话记录查询）</p>

<p>写java的包</p>

<p>导入jar包</p>

<p>Hbase的包，hadoop的包，驱动包</p>

<p>配置文件（hbase,hdfs,regionserver,backup）</p>

<p>建类</p>

<p>设置单机测试</p>

<p>Bulidpath————&gt;addlibrary---&gt;jUnit————》jUnit4</p>

<p>正式些代码：</p>

<p>链接hbase，写类来管理</p>

<p>Hbaseadmin admin=null;</p>

<p> </p>

<p>@before</p>

<p>创建对象</p>

<p>Configuration:创建类</p>

<p> </p>

<p>@Test</p>

<p>Createtable;创建表</p>

<p>连接上之后，配置文件就没有意义了，可以删除了。</p>

<p> </p>

<p>Client客户端链接zk，</p>

<p>@Test</p>

<p>创建表之后加数据</p>

<p>加数据举，一律用put</p>

<p>没有put的话，就去创建put</p>

<p>创建表之前，需要创建rowkey=“1111”</p>

<p>然后将列族加载put中</p>

<p>接着就可以插入数据了</p>

<p>@test</p>

<p>插入完数据之后就是取数据了</p>

<p>Get</p>

<p>首先要创建get对象</p>

<p>在用get取数据之前，需要创建rowkey列族</p>

<p>取数据，所以需要结果的，所以创建result结果集</p>

<p>取到的结果存放在cell中，cell=rs.getcolumnlatestcell</p>

<p>取到数据，最后还需要打印</p>

<p> </p>

<p>上边的过时了</p>

<p> </p>

<p>System.out.println(new String(cell.getValue()));</p>

<p>上边的过时了，替代码：</p>

<p>System.out.println(new String(cellUtil.cloneValue(cell)));</p>

<p> </p>

<p>@Test</p>

<p>第二种取数据的方法：scan</p>

<p>首先需要创建结果集resultscanner</p>

<p>再用scanner取数据的时候，需要先创建scan对象</p>

<p>Scan scan=new Scan();</p>

<p>Resultscanner rss=table.getScanner(scan)</p>

<p>套用for循环输出</p>

<p> </p>

<p>代码优化：可以将scan设置一个范围，这样取出来的是一串连续的数据</p>

<p> </p>

<p>通话记录：</p>

<p>本机号码</p>

<p>对方号码</p>

<p>时间</p>

<p>时长</p>

<p>主叫/被叫</p>

<p>查询只能查询最近的数据，远一些的数据，不是丢失了，而是以一种比较小的打包方式保存起来了。</p>

<p> </p>

<p>五个字段保存需要设计rowkey</p>

<p>Rowkey是按照时间戳</p>

<p>手机号—时间戳</p>

<p>时间戳按照最近的时间去减。</p>

<p>手机号—（long.max-time）</p>

<p>Hadoop是分析离线数据的。</p>

<p> </p>

<p>@test</p>

<p>给10个用户，每个用户添加100条数据记录</p>

<p>用for循环插入</p>

<p>首先每起个用户</p>

<p>String phoneNum=getPhoneNum(“158”),同时创建getPhoneNum类，并且给出格式</p>

<p> </p>

<p>在内层循环里给出：</p>

<p>手机号</p>

<p>永华时长</p>

<p>通话类型</p>

<p>通话时间</p>

<p>都要给出格式</p>

<p>时间：dateString=sdf.parse(getDate(“2018”)</p>

<p>S四个属性都有了的时候，即可创建rowkey了，</p>

<p>String rowkey=phone+”-”+(Long.max-value-dateString);</p>

<p>用最大的时间一次相减，得出时间戳，既可以倒序排序了。这样创建rowkey，以时间戳作为rowkey了</p>

<p>后边就可以创建put去插入数据了</p>

<p>@test</p>

<p>取数据，分别有两种方式（get 和 scan）</p>

<p>查询二月份的通话时间，即：20180101000000-20180301000000</p>

<p>首先是指定手机号码</p>

<p>取数据的时候，要拿到rowkey，因为是时间段，拿到起始的rowkey和末尾的rowkey</p>

<p>将起始的和末尾的放进去，然后创建结果集，用结果集去接收</p>

<p>然后，打印输出。</p>

<p>优化就是减少重复数据</p>

<p> </p>

<p>@Test</p>

<p>查询某一个用户某一天主叫的通话，相当于where子查询，在这里不是where，而是过滤器</p>

<p>创建过滤器</p>

<p>添加前缀（列有前缀prefix，没有后缀的）</p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong>@After</strong></p>

<p><strong>又开始就有结束</strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p><strong>写单机方法测试</strong></p>

<p><strong>设置：</strong></p>

<p><strong>@before:是指在正式执行之前先导入</strong></p>

<p><strong>Zookeeper的端口号是2181</strong></p>

<p><strong>Rowkey：1111</strong></p>

<p><strong>Before：导入</strong></p>

<p><strong>Test:建表</strong></p>

<p><strong>Test:插入数据</strong></p>

<p><strong>Test:取数据</strong></p>

<p><strong>After：关闭</strong></p>

<p> </p>

<p>增加的限制条件</p>

<p> </p>

<p><strong> </strong></p>

<p><strong> </strong></p>

<p> </p>            </div>
                </div>