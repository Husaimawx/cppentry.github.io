---
layout:     post
title:      Scala学习笔记14【包、类、对象、成员、伴生类、伴生对象访问权限】
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：个人学习之路，若有误，欢迎指正。其中一些博文被证明有错误的地方，最近比较忙，没时间更正，谨慎参考！！					https://blog.csdn.net/y396397735/article/details/49023079				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<pre><code class="language-plain">package com.yl.Scala

package spark{
  package navigation{
    private[spark] class Navigator{               //private[spark]表示可见度在spark内部
      protected[navigation] def useStarChart(){}  //protected[navigation] 子类也可使用
      
      class LegOfJourney{
        private[Navigator] val distance = 100     //private[Navigator] 表示在类Navigator中可被使用
      }
      private[this] var speed = 200               //private[this]表示不能被同一个类中的其他对象访问
    }
  }
  
  package launch{
    import navigation._
    object Vehicle{
      private[launch] val guide = new Navigator    //private[launch]此成员在launch下可被访问
    }
  }
}

class ScalaTest0{
  import ScalaTest0.power  //导入伴生对象的成员
  
  private def canMakeItTrue = power &gt; 1322
}


object ScalaTest0 {
  private def power = 1000
  
  def makeItTrue(p: ScalaTest0): Boolean = {
    val result = p.canMakeItTrue                 //伴生对象可访问半生类的私有方法
    result
  }
}</code></pre><br>            </div>
                </div>