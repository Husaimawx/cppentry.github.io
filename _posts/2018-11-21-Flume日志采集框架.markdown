---
layout:     post
title:      Flume日志采集框架
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/freefish_yzx/article/details/77338311				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h1>1. 日志采集框架Flume</h1>
<h2>1.1 Flume介绍</h2>
<h3>1.1.1 概述</h3>
<p>u Flume是一个分布式、可靠、和高可用的海量日志采集、聚合和传输的系统。</p>
<p>u Flume可以采集文件，socket数据包等各种形式源数据，又可以将采集到的数据输出到HDFS、hbase、hive、kafka等众多外部存储系统中</p>
<p>u 一般的采集需求，通过对flume的简单配置即可实现</p>
<p>u Flume针对特殊场景也具备良好的自定义扩展能力，因此，flume可以适用于大部分的日常数据采集场景</p>
<p> </p>
<h3>1.1.2 运行机制</h3>
<p>1、  Flume分布式系统中最<strong>核心的角色是agent</strong>，flume采集系统就是由一个个agent所连接起来形成</p>
<p><strong>2、 每一个agent相当于一个<a>数据传递员</a></strong><a id="_anchor_1" name="_msoanchor_1">[M1]</a> <strong>，内部有三个组件：</strong></p>
<p>a)        Source：采集源，用于跟数据源对接，以获取数据</p>
<p>b)        Sink：下沉地，采集数据的传送目的，用于往下一级agent传递数据或者往最终存储系统传递数据</p>
<p>c)        Channel：angent内部的数据传输通道，用于从source将数据传递到sink</p>
<p> </p>
<p><strong></strong></p>
<p><strong> </strong></p>
<p><strong> </strong></p>
<p><strong> </strong></p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<br clear="all"><p align="left"> </p>
<h3>1.1.4 Flume采集系统结构图</h3>
<p> </p>
<h4>1. 简单结构</h4>
<p>单个agent采集数据</p>
<p></p>
<h4>2. 复杂结构</h4>
<p>多级agent之间串联</p>
<p></p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<h2>1.2 Flume实战案例</h2>
<h4>1.2.1 Flume的安装部署</h4>
<p>1、Flume的安装非常简单，只需要解压即可，当然，前提是已有hadoop环境</p>
<p>上传安装包到数据源所在节点上</p>
<p>然后解压  tar -zxvfapache-flume-1.6.0-bin.tar.gz</p>
<p>然后进入flume的目录，修改conf下的flume-env.sh，在里面配置JAVA_HOME</p>
<p> </p>
<p>2、根据数据采集的需求<strong>配置采集方案</strong>，描述在配置文件中(文件名可任意自定义)</p>
<p>3、<strong>指定采集方案配置文件</strong>，在相应的节点上启动flume agent</p>
<p> </p>
<p>先用一个最简单的例子来测试一下程序环境是否正常</p>
<p>1、先在flume的conf目录下新建一个文件</p>
<p>vi  netcat-logger.conf</p>
<table border="1" cellspacing="0" cellpadding="0" width="568"><tbody><tr><td valign="top">
<p># 定义这个agent中各组件的名字</p>
<p>a1.sources = r1</p>
<p>a1.sinks = k1</p>
<p>a1.channels = c1</p>
<p> </p>
<p># 描述和配置source组件：r1</p>
<p>a1.sources.r1.type = netcat</p>
<p>a1.sources.r1.bind = localhost</p>
<p>a1.sources.r1.port = 44444</p>
<p> </p>
<p># 描述和配置sink组件：k1</p>
<p>a1.sinks.k1.type = logger</p>
<p> </p>
<p># 描述和配置channel组件，此处使用是内存缓存的方式</p>
<p>a1.channels.c1.type = memory</p>
<p>a1.channels.c1.capacity = 1000</p>
<p>a1.channels.c1.transactionCapacity = 100</p>
<p> </p>
<p># 描述和配置source  channel   sink之间的连接关系</p>
<p>a1.sources.r1.channels = c1</p>
<p>a1.sinks.k1.channel = c1</p>
</td>
</tr></tbody></table><p> </p>
<p>2、启动agent去采集数据</p>
<table border="1" cellspacing="0" cellpadding="0" width="568"><tbody><tr><td valign="top">
<p>bin/flume-ng agent -c conf -f conf/netcat-logger.conf -n a1  -Dflume.root.logger=INFO,console</p>
</td>
</tr></tbody></table><p>-c conf  指定flume自身的配置文件所在目录</p>
<p>-f conf/netcat-logger.con  指定我们所描述的采集方案</p>
<p>-n a1 指定我们这个agent的名字</p>
<p>3、测试</p>
<p>先要往agent采集监听的端口上发送数据，让agent有数据可采</p>
<p>随便在一个能跟agent节点联网的机器上</p>
<p>telnet anget-hostname  port   （telnetlocalhost 44444）</p>
<p></p>
<p> </p>
<p> </p>
<p> </p>
<h4>1.2.2 采集案例</h4>
<h5>1、采集目录到HDFS</h5>
<p>采集需求：某服务器的某特定目录下，会不断产生新的文件，每当有新文件出现，就需要把文件采集到HDFS中去</p>
<p>根据需求，首先定义以下3大要素</p>
<p>l 采集源，即source——监控文件目录 :  spooldir</p>
<p>l 下沉目标，即sink——HDFS文件系统  :  hdfs sink</p>
<p>l source和sink之间的传递通道——channel，可用filechannel 也可以用内存channel</p>
<p> </p>
<p>配置文件编写：</p>
<table border="1" cellspacing="0" cellpadding="0" width="568"><tbody><tr><td valign="top">
<p>#定义三大组件的名称</p>
<p>agent1.sources = source1</p>
<p>agent1.sinks = sink1</p>
<p>agent1.channels = channel1</p>
<p> </p>
<p># 配置source组件</p>
<p>agent1.sources.source1.<span style="color:#FF0000;">type = spooldir</span></p>
<p>agent1.sources.source1.<span style="color:#FF0000;">spoolDir = /home/hadoop/logs/</span></p>
<p>agent1.sources.source1.fileHeader = false</p>
<p> </p>
<p>#配置拦截器</p>
<p>agent1.sources.source1.interceptors = i1</p>
<p>agent1.sources.source1.interceptors.i1.type = host</p>
<p>agent1.sources.source1.interceptors.i1.hostHeader = hostname</p>
<p> </p>
<p># 配置sink组件</p>
<p>agent1.sinks.sink1.type = hdfs</p>
<p>agent1.sinks.sink1.hdfs.path =hdfs://hdp-node-01:9000/weblog/flume-collection/%y-%m-%d/%H-%M</p>
<p>agent1.sinks.sink1.hdfs.filePrefix = access_log</p>
<p>agent1.sinks.sink1.hdfs.maxOpenFiles = 5000</p>
<p>agent1.sinks.sink1.hdfs.batchSize= 100</p>
<p>agent1.sinks.sink1.hdfs.fileType = DataStream</p>
<p>agent1.sinks.sink1.hdfs.writeFormat =Text</p>
<p>agent1.sinks.sink1.hdfs.rollSize = 102400</p>
<p>agent1.sinks.sink1.hdfs.rollCount = 1000000</p>
<p>agent1.sinks.sink1.hdfs.rollInterval = 60</p>
<p>#agent1.sinks.sink1.hdfs.round = true</p>
<p>#agent1.sinks.sink1.hdfs.roundValue = 10</p>
<p>#agent1.sinks.sink1.hdfs.roundUnit = minute</p>
<p>agent1.sinks.sink1.hdfs.useLocalTimeStamp = true</p>
<p># Use a channel which buffers events in memory</p>
<p>agent1.channels.channel1.type = memory</p>
<p>agent1.channels.channel1.keep-alive = 120</p>
<p>agent1.channels.channel1.capacity = 500000</p>
<p>agent1.channels.channel1.transactionCapacity = 600</p>
<p> </p>
<p># Bind the source and sink to the channel</p>
<p>agent1.sources.source1.channels = channel1</p>
<p>agent1.sinks.sink1.channel = channel1</p>
</td>
</tr></tbody></table><p> </p>
<p>Channel参数解释：</p>
<p>capacity：默认该通道中最大的可以存储的event数量</p>
<p>trasactionCapacity：每次最大可以从source中拿到或者送到sink中的event数量</p>
<p>keep-alive：event添加到通道中或者移出的允许时间</p>
<p> </p>
<h5>2、采集文件到HDFS</h5>
<p>采集需求：比如业务系统使用log4j生成的日志，日志内容不断增加，需要把追加到日志文件中的数据实时采集到hdfs</p>
<p> </p>
<p>根据需求，首先定义以下3大要素</p>
<p>l 采集源，即source——监控文件内容更新 :  exec  ‘tail -F file’</p>
<p>l 下沉目标，即sink——HDFS文件系统  :  hdfs sink</p>
<p>l Source和sink之间的传递通道——channel，可用filechannel 也可以用内存channel</p>
<p> </p>
<p>配置文件编写：</p>
<table border="1" cellspacing="0" cellpadding="0" width="568"><tbody><tr><td valign="top">
<p>agent1.sources = source1</p>
<p>agent1.sinks = sink1</p>
<p>agent1.channels = channel1</p>
<p> </p>
<p># Describe/configure tail -F source1</p>
<p>agent1.sources.source1.type = exec</p>
<p>agent1.sources.source1.command = tail -F /home/hadoop/logs/access_log</p>
<p>agent1.sources.source1.channels = channel1</p>
<p> </p>
<p>#configure host for source</p>
<p>agent1.sources.source1.interceptors = i1</p>
<p>agent1.sources.source1.interceptors.i1.type = host</p>
<p>agent1.sources.source1.interceptors.i1.hostHeader = hostname</p>
<p> </p>
<p># Describe sink1</p>
<p>agent1.sinks.sink1.type = hdfs</p>
<p>#a1.sinks.k1.channel = c1</p>
<p>agent1.sinks.sink1.hdfs.path =hdfs://hdp-node-01:9000/weblog/flume-collection/%y-%m-%d/%H-%M</p>
<p>agent1.sinks.sink1.hdfs.filePrefix = access_log</p>
<p>agent1.sinks.sink1.hdfs.maxOpenFiles = 5000</p>
<p>agent1.sinks.sink1.hdfs.batchSize= 100</p>
<p>agent1.sinks.sink1.hdfs.fileType = DataStream</p>
<p>agent1.sinks.sink1.hdfs.writeFormat =Text</p>
<p>agent1.sinks.sink1.hdfs.rollSize = 102400</p>
<p>agent1.sinks.sink1.hdfs.rollCount = 1000000</p>
<p>agent1.sinks.sink1.hdfs.rollInterval = 60</p>
<p>agent1.sinks.sink1.hdfs.round = true</p>
<p>agent1.sinks.sink1.hdfs.roundValue = 10</p>
<p>agent1.sinks.sink1.hdfs.roundUnit = minute</p>
<p>agent1.sinks.sink1.hdfs.useLocalTimeStamp = true</p>
<p> </p>
<p># Use a channel which buffers events in memory</p>
<p>agent1.channels.channel1.type = memory</p>
<p>agent1.channels.channel1.keep-alive = 120</p>
<p>agent1.channels.channel1.capacity = 500000</p>
<p>agent1.channels.channel1.transactionCapacity = 600</p>
<p> </p>
<p># Bind the source and sink to the channel</p>
<p>agent1.sources.source1.channels = channel1</p>
<p>agent1.sinks.sink1.channel = channel1</p>
</td>
</tr></tbody></table><p> </p>
<p> </p>
<p align="left"> </p>
<h2>1.3 更多source和sink组件</h2>
<p>Flume支持众多的source和sink类型，详细手册可参考官方文档</p>
<p align="left"><a href="http://flume.apache.org/FlumeUserGuide.html" rel="nofollow">http://flume.apache.org/FlumeUserGuide.html</a></p>
<div>
<hr align="left" size="1" width="33%"><div>
<div id="_com_1"><a name="_msocom_1"></a>
<p>Source 到 Channel 到 Sink之间传递数据的形式是Event事件；Event事件是一个数据流单元。</p>
<p> </p>
<p> </p>
</div>
</div>
</div>
            </div>
                </div>