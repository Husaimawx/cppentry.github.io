---
layout:     post
title:      复习总结02：Hive
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/u014253445/article/details/77718139				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">复习Hive：主要是HSQL语句，MySQL数据库语句。Hive的数据都自动存储在HDFS上的</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">Hive:</span></div>
<div>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>1.</span><span> </span><span>查询语言。由于</span><span> SQL 被广泛的应用在数据仓库中，因此，专门针对 Hive 的特性设计了类 SQL 的查询语言 HQL。</span><span style="color:rgb(255,0,0);">熟悉 SQL 开发的开发者可以很方便的使用 Hive 进行开发</span><span>。</span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>2.</span><span> </span><span>数据存储位置。</span><span>Hive 是建立在 Hadoop 之上的，</span><span style="color:rgb(255,0,0);">所有 Hive 的数据都是存储在 HDFS 中的</span><span>。而数据库则可以将数据保存在块设备或者本地文件系统中。</span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>3.</span><span> </span><span>数据格式。</span><span>Hive 中没有定义专门的数据格式，数据格式可以由用户指定，用户定义数据格式需要指定三个属性：列分隔符（通常为空格、”\t”、”\x001″）、行分隔符（”\n”）以及读取文件数据的方法（Hive 中默认有三个文件格式 TextFile，SequenceFile 以及 RCFile）。由于在加载数据的过程中，不需要从用户数据格式到
 Hive 定义的数据格式的转换，因此，Hive 在加载的过程中不会对数据本身进行任何修改，而只是将数据内容复制或者移动到相应的 HDFS 目录中。而在数据库中，不同的数据库有不同的存储引擎，定义了自己的数据格式。所有数据都会按照一定的组织存储，因此，数据库加载数据的过程会比较耗时。</span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>4.</span><span> </span><span>数据更新。</span><span style="color:rgb(255,0,0);"> Hive 是针对数据仓库应用设计的，而数据仓库的内容是<span>读多写少</span>的</span><span>。因此，</span><span style="color:rgb(255,0,0);"><strong><span>Hive
 中不支持对数据的改写和添加，所有的数据都是在加载的时候中确定好的。</span></strong></span><span>而数据库中的数据通常是需要经常进行修改的，因此可以使用 INSERT INTO ...  VALUES 添加数据，使用 UPDATE ... SET 修改数据。</span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>5.</span><span> </span><span>索引。之前已经说过，</span><span>Hive 在加载数据的过程中不会对数据进行任何处理，甚至不会对数据进行扫描，因此也没有对数据中的某些 Key 建立索引。Hive 要访问数据中满足条件的特定值时，需要暴力扫描整个数据，因此访问延迟较高。由于 MapReduce 的引入， Hive 可以并行访问数据，因此即使没有索引，对于大数据量的访问，Hive
 仍然可以体现出优势。数据库中，通常会针对一个或者几个列建立索引，因此对于少量的特定条件的数据的访问，数据库可以有很高的效率，较低的延迟。由于数据的访问延迟较高，决定了 Hive 不适合在线数据查询。</span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>6.</span><span> </span><span>执行。</span><span style="color:rgb(255,0,0);"><strong><span>Hive 中大多数查询的执行是通过 Hadoop 提供的 MapReduce 来实现的</span></strong></span><span>，</span><span>而数据库通常有自己的执行引擎。</span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>7.</span><span> </span><span>执行延迟。之前提到，</span><span>Hive 在查询数据的时候，由于没有索引，需要扫描整个表，因此延迟较高。另外一个导致 Hive 执行延迟高的因素是 MapReduce 框架。由于 MapReduce 本身具有较高的延迟，因此在利用 MapReduce 执行 Hive 查询时，也会有较高的延迟。相对的，数据库的执行延迟较低。当然，这个低是有条件的，即数据规模较小，当数据规模大到超过数据库的处理能力的时候，Hive
 的并行计算显然能体现出优势。</span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>8.</span><span> </span><span>可扩展性。由于</span><span> Hive 是建立在 Hadoop 之上的，因此 Hive 的可扩展性是和 Hadoop 的可扩展性是一致的（世界上最大的 Hadoop 集群在 Yahoo!，2009年的规模在 4000 台节点左右）。而数据库由于 ACID 语义的严格限制，扩展行非常有限。目前最先进的并行数据库
 Oracle 在理论上的扩展能力也只有 100 台左右。</span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>9.</span><span> </span><span>数据规模。由于</span><span> Hive 建立在集群上并可以利用 MapReduce 进行并行计算，因此可以支持很大规模的数据；对应的，数据库可以支持的数据规模较小。</span></span></p>
</div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">常用操作：</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">./beeline  退出用!quit</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">MySQL中删掉hive，然后重新create database hive;即可成为空数据库；必须执行<span style="color:rgb(51,51,51);"><span>alter database hive</span></span><span style="color:rgb(51,51,51);"><span>character</span></span><span style="color:rgb(51,51,51);"><span> </span></span><span style="color:rgb(0,0,136);"><span>set</span></span><span style="color:rgb(51,51,51);"><span> latin1;</span></span></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(51,51,51);"><span>才可以使用数据库建立新数据库</span></span><span style="color:rgb(51,51,51);">hive，并且正常使用。</span></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(51,51,51);">用hsql语言来执行hdfs里数据的操作，运算框架是MR</span><br></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></span></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(56,56,56);"><span style="color:rgb(255,0,0);">show variables like 'char%';</span></span><br></span></span></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(51,51,51);"><span><span><span style="color:rgb(255,0,0);">alter database hive</span><span style="color:rgb(255,0,0);"> </span></span></span></span><span style="color:rgb(255,0,0);">character</span><span><span style="color:rgb(255,0,0);"> </span></span><span style="color:rgb(0,0,136);"><span style="color:rgb(255,0,0);">set</span></span><span><span style="color:rgb(255,0,0);"> </span></span><span style="color:rgb(255,0,0);">latin1;</span><br></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></span></span></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);">create table texta(id int ,name string)  </span></span></span><span style="color:rgb(255,0,0);">row format delimited fields
 terminated by ',';       //创建内部表</span></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(255,0,0);">create external table textb(id int,name string)  </span><span style="color:rgb(255,0,0);">row format delimited fields terminated by ','     //创建外部表 不写location，默认和内部表放在一起</span></span></div>
<div><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;">load data local inpath '/home/hadoop/sz.dat' into table texta;    </span></span></span></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;"> //将本地的数据文件，导入hive数据表中。实质是把此文件从本地 put 到  hdfs的/user/hive/warehouse/texta  文件夹下<br></span></span></span></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></span></span></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;">load data inpath 'hdfs://server:9000/sz.dat' into table textb;<br></span></span></span></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;">//将hdfs上的数据文件，导入hive的数据表中。实质是把此文件  mv  到  /user/hive/warehouse/textb 文件夹下</span></span></span></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);"><strong><span style="font-family:'Microsoft YaHei';font-size:14px;">所谓导入：即是把数据文件放在hdfs的数据库下面</span></strong></span></span></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></span></span></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(255,0,0);"></span></span></span></span>
<div style="color:rgb(0,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;">保存数据结果的语法<span style="color:rgb(255,0,0);"><strong>(用insert)</strong></span>：</span></div>
<div style="color:rgb(0,0,0);">
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">1、将查询结果保存到一张新的hive表中  create table t_tmp as select * from t_p;</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">2、将查询结果保存到一张已经存在的hive表中  <span style="color:rgb(255,0,0);"><strong>insert</strong></span> into table t_tmp select * from t_p;</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">3、将查询结果保存到指定的文件目录（可以是本地，也可以是hdfs）<br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(255,0,0);"><strong>insert</strong></span> overwrite local directory '/home/hadoop/test' select * from t_p;</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">insert overwrite directory '/aaa/test' select * from t_p;</span></div>
</div>
</div>
<div><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></span></span></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;">创建的内部表和外部表区别：</span></span></span></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;">内部表位置固定；外部表不一定，自定义。表名可以不同于文件夹名</span></span></span></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></span></span></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(255,0,0);"></span></span></span></span>
<div style="color:rgb(0,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;">①inner join：</span></div>
<div style="color:rgb(0,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;">select * from a          innner join b       on a.id = b.id;</span></div>
<div style="color:rgb(0,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;">②left join :</span></div>
<div style="color:rgb(0,0,0);">
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">select * from a             left join b         on a.id = b.id;</span></div>
</div>
<div style="color:rgb(0,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;">③right join :</span></div>
<div style="color:rgb(0,0,0);">
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">select * from a             right join b       on a.id = b.id;</span></div>
</div>
<div style="color:rgb(0,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;">④full outer</span></div>
<div style="color:rgb(0,0,0);">
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">select * from a          full outer join b   on a.id = b.id;</span></div>
</div>
</div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></div>
<div><span style="color:rgb(51,51,51);"><span><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></span></span></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">一、</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">#创建分桶表<br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(255,0,0);">create table stu_buck(id  int,  name string,  sex string,   age int,   dept string)</span><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(255,0,0);">clustered by(id) </span><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(255,0,0);">sorted by(sno DESC)</span><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(255,0,0);">into 4 buckets</span><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(255,0,0);">row format delimited</span><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(255,0,0);">fields terminated by ',';</span><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">#设置变量,设置分桶为true, 设置reduce数量是分桶的数量个数<br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">set hive.enforce.bucketing = true;<br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">set mapreduce.job.reduces=4;<br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">#下面插入数据<span style="color:inherit;">：</span><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(255,0,0);">insert into table stu_buck  </span><span style="color:inherit;"><span style="color:rgb(255,0,0);">select id, name, sex, age, sdept from student distribute by(sno)
 sort by(sno asc);</span></span><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">往创建的分通表插入数据(插入数据需要是已分桶, 且排序的) </span></div>
<div><span style="color:inherit;"><span style="color:rgb(255,0,0);"><span style="font-family:'Microsoft YaHei';font-size:14px;">可以使用distribute by(sno)  sort by(sno asc)  </span></span></span></div>
<div><span style="color:inherit;"><span style="font-family:'Microsoft YaHei';font-size:14px;">或是排序和分桶的字段相同的时候使用Cluster by(字段)  </span></span></div>
<div><span style="color:inherit;"><span style="font-family:'Microsoft YaHei';font-size:14px;">换句话说就是：使用cluster by  就等同于分桶+排序(sort)</span></span></div>
<div><span style="color:inherit;"><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:inherit;">select id,name from t_p sort by(id)</span><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">A：将一张普通的表，设置了分桶和reduces数目，然后执行查询；</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">B：然后将次查询内容插入到分桶的表t_buck；后发现hdfs上分为4个文件来存储    </span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">按照id cluster by(id)插入后四个文件分别存储的数据如下：</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">0_0： 11，4，8     </span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">1_0： 1，12，5，9   </span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">2_0： 2，6   </span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">3_0： 10，3，7</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">二、各种排序</span></div>
<div>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>1</span><span>、</span><span>order by </span><span>会对输入做全局排序，因此只有一个</span><span>reducer</span><span>，会导致当输入规模较大时，需要较长的计算时间。</span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>2</span><span>、</span><span>sort by</span><span>不是全局排序，其在数据进入</span><span>reducer</span><span>前完成排序。因此，如果用</span><span>sort by</span><span>进行排序，并且设置</span><span>mapred.reduce.tasks&gt;1</span><span>，则</span><span>sort
 by</span><span>只保证每个</span><span>reducer</span><span>的输出有序，不保证全局有序。</span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>3</span><span>、</span><span style="color:rgb(255,0,0);">distribute by</span><span style="color:rgb(255,0,0);">(</span><span style="color:rgb(255,0,0);">字段</span><span style="color:rgb(255,0,0);">)</span><span style="color:rgb(255,0,0);">根据指定的</span><span style="color:rgb(255,0,0);">字段</span><span style="color:rgb(255,0,0);">将数据分到</span><span style="color:rgb(255,0,0);">不同的</span><span style="color:rgb(255,0,0);">reducer</span><span style="color:rgb(255,0,0);">，且分发算法是</span><span style="color:rgb(255,0,0);">hash</span><span style="color:rgb(255,0,0);">散列</span><span style="color:rgb(255,0,0);">。</span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>4</span><span>、</span><span style="color:rgb(255,0,0);"><strong>Cluster by</strong></span><strong><span style="color:rgb(255,0,0);">(</span><span style="color:rgb(255,0,0);">字段</span><span style="color:rgb(255,0,0);">)</span></strong><span style="color:rgb(255,0,0);"><strong> </strong></span><span>除了具有</span><span>Distribute
 by</span><span>的功能外，还会对该字段进行排序。</span><span style="color:inherit;"><span>因此，</span></span><span style="color:inherit;"><span>如果分桶和</span></span><span style="color:inherit;"><span>sort</span><span>字段是同一个时，</span></span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:inherit;"><span>此时，</span></span><span style="color:inherit;"><span>cluster by = distribute by + sort by</span></span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:14px;"><span>分桶表的作用：最大的作用是用来提高</span><span>join</span><span>操作的效率；</span></span></p>
<span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">三、关于join</span></div>
<div>
<div><strong><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(75,75,75);"><span style="color:rgb(255,0,0);">left join(左联接) 返回包括左表中的所有记录和右表中联结字段相等的记录 </span></span><br style="color:rgb(75,75,75);"><span style="color:rgb(75,75,75);"><span style="color:rgb(255,0,0);">right join(右联接) 返回包括右表中的所有记录和左表中联结字段相等的记录</span></span><br style="color:rgb(75,75,75);"><span style="color:rgb(75,75,75);"><span style="color:rgb(255,0,0);">inner join(等值连接) 只返回两个表中联结字段相等的行</span></span></span></strong></div>
<div><span style="color:rgb(75,75,75);"><span style="color:rgb(255,0,0);"><strong><span><span style="font-family:'Microsoft YaHei';font-size:14px;">full outer：两表都输出，不存在的字段为null。可用于两表比较</span></span></strong></span></span></div>
</div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">四、关于HSQL的常用算法语句</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">select id ,name from textb;</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><img width="858" height="268" src="https://note.wiz.cn/wiz-resource/ac7d9dc4-5f9b-47ff-9799-766fc14154e0/5b85d094-a0f8-4c64-93d4-0f723bf114b0/index_files/328844671.png" alt=""></span>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">hive中常用的数值型，字符串型运算，和逻辑运算等</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">①常用关系运算</span></div>
</div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">=等于    &lt;&gt;不等于   &lt; 小于  &gt;大于   &lt;=小于等于   &gt;=大于等于   is not null 非空   like比较</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">②逻辑运算  </span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">and 与运算  or 或运算   not非运算</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">③数值运算，数学运算，日期函数</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><br></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">五、UDF自定义函数（可能由于jdk版本与hive版本不同出现 code -101代码错误。本人还没找到解决方案）</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">transform案例:</span></div>
<div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;"><span style="color:rgb(255,0,0);">当</span><span style="color:rgb(255,0,0);">Hive</span><span style="color:rgb(255,0,0);">提供的内置函数无法满足你的业务处理需要时，此时就可以考虑使用用户自定义函数（</span><span style="color:rgb(255,0,0);">UDF</span><span style="color:rgb(255,0,0);">：</span><span style="color:rgb(255,0,0);">user-defined
 function</span><span style="color:rgb(255,0,0);">）。</span></span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">①在类内编写重载函数(或者只有一个)------&gt;因为语句会将该类变成一个函数名，那么要求只能有一个函数，可通过重载实现多个函数功能。</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">②打包上传到服务器后，添加，执行语句-----&gt;add JAR /home/hadoop/test.jar;</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">③添加后，创建临时函数test----&gt;create temporary function test as 'cn.incast.hadoop.udf.ToLowerCase';</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">④执行函数，实现业务逻辑----&gt;select phone,localadr,ID,test(phone) from table_test; 将该表：<span style="color:rgb(255,0,255);">phone</span>, <span style="color:rgb(255,0,255);">localadr</span>, <span style="color:rgb(255,0,255);">ID</span>, <span style="color:rgb(255,0,255);">phone作为参数运算后的数据</span> 等都作为一个表内容显示出来。</span></div>
<div><span style="font-family:'Microsoft YaHei';font-size:14px;">备注：这样可以通过自定义函数，实现我们想要的业务逻辑，只需在hive中对操作的元素执行函数即可。更加实用，具象，解决了只用HSQ来操作数据的复杂。</span></div>
<span style="font-family:'Microsoft YaHei';font-size:14px;">select test(line) from test<br></span><br></div>
            </div>
                </div>