---
layout:     post
title:      Kafka 安装及快速入门
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<div class="article-inner">

      <header class="article-header">


    <h1 class="article-title" id="kafka-安装及快速入门">
      Kafka 安装及快速入门
    </h1>



        <a href="/2018/01/04/Kafka/" rel="nofollow" class="archive-article-date">
    <time><i class="icon-calendar icon"></i>2018-01-04</time>
</a>

      </header>


    <!-- &#30446;&#24405;&#20869;&#23481; -->

    <p class="show-toc-btn" id="show-toc-btn">
          <span class="btn-bg"></span>
          <span class="btn-text">文章导航</span>
          </p>
    <div id="toc-article" class="toc-article">
        <span id="toc-close" class="toc-close" title="隐藏导航">×</span>
        <strong class="toc-title">文章目录</strong>
           <ol class="toc"><div class="toc">
<ul>
<li><a href="#kafka-%E5%AE%89%E8%A3%85%E5%8F%8A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8" rel="nofollow">
      Kafka 安装及快速入门
    </a><ul>
<li><ul>
<li><a href="#%E4%BB%8B%E7%BB%8D" rel="nofollow">介绍</a></li>
<li><a href="#%E5%AE%89%E8%A3%85-kafka" rel="nofollow">安装 kafka</a></li>
<li><a href="#%E5%8A%9F%E8%83%BD%E9%AA%8C%E8%AF%81%EF%BC%9A" rel="nofollow">功能验证：</a><ul>
<li><a href="#1%E3%80%81%E5%90%AF%E5%8A%A8-zk" rel="nofollow">1、启动 zk</a></li>
<li><a href="#2%E3%80%81%E5%90%AF%E5%8A%A8Kafka-%E6%9C%8D%E5%8A%A1" rel="nofollow">2、启动Kafka 服务</a></li>
<li><a href="#3%E3%80%81%E5%88%9B%E5%BB%BA-topic" rel="nofollow">3、创建 topic</a></li>
<li><a href="#4%E3%80%81%E4%BA%A7%E7%94%9F%E6%B6%88%E6%81%AF" rel="nofollow">4、产生消息</a></li>
<li><a href="#5%E3%80%81%E6%B6%88%E8%B4%B9%E6%B6%88%E6%81%AF" rel="nofollow">5、消费消息</a></li>
<li><a href="#6%E3%80%81%E6%9F%A5%E7%9C%8B%E6%8F%8F%E8%BF%B0-topics-%E4%BF%A1%E6%81%AF" rel="nofollow">6、查看描述 topics 信息</a></li>
</ul>
</li>
<li><a href="#%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE" rel="nofollow">集群配置</a><ul>
<li><a href="#%E5%8D%95%E6%9C%BA%E5%A4%9Abroker-%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE" rel="nofollow">单机多broker 集群配置</a></li>
<li><a href="#%E5%A4%9A%E6%9C%BA%E5%A4%9A-broker-%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE" rel="nofollow">多机多 broker 集群配置</a></li>
</ul>
</li>
<li><a href="#%E4%BD%BF%E7%94%A8-Kafka-Connect-%E6%9D%A5%E5%AF%BC%E5%85%A5-%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE" rel="nofollow">使用 Kafka Connect 来导入/导出数据</a></li>
<li><a href="#%E4%BD%BF%E7%94%A8-Kafka-%E6%B5%81%E6%9D%A5%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE" rel="nofollow">使用 Kafka 流来处理数据</a></li>
<li><a href="#%E5%8F%82%E8%80%83" rel="nofollow">参考</a></li>
<li><a href="#%E5%85%B3%E6%B3%A8%E6%88%91" rel="nofollow">关注我</a></li>
<li><a href="#%E6%9C%80%E5%90%8E" rel="nofollow">最后</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</ol>
         </div>
   




<!-- &#30446;&#24405;&#20869;&#23481;&#32467;&#26463; -->

    <div class="article-entry">


<h3 id="介绍"><a href="#%E4%BB%8B%E7%BB%8D" rel="nofollow" class="headerlink" title="介绍"></a>介绍</h3><p>官网：<a href="http://kafka.apache.org/" rel="nofollow" target="_blank">http://kafka.apache.org/</a></p>
<p>Apache Kafka是分布式发布-订阅消息系统。它最初由LinkedIn公司开发，之后成为Apache项目的一部分。Kafka是一种快速、可扩展的、设计内在就是分布式的，分区的和可复制的提交日志服务。<br><a id="more"></a><br>Apache Kafka与传统消息系统相比，有以下不同：</p>
<ul>
<li><p>它被设计为一个分布式系统，易于向外扩展；</p>
</li>
<li><p>它同时为发布和订阅提供高吞吐量；</p>
</li>
<li><p>它支持多订阅者，当失败时能自动平衡消费者；</p>
</li>
<li><p>它将消息持久化到磁盘，因此可用于批量消费，例如ETL，以及实时应用程序。</p>
</li>
</ul>
<h3 id="安装-kafka"><a href="#%E5%AE%89%E8%A3%85-kafka" rel="nofollow" class="headerlink" title="安装 kafka"></a>安装 kafka</h3><p>下载地址：<a href="https://kafka.apache.org/downloads" rel="nofollow" target="_blank">https://kafka.apache.org/downloads</a></p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.shuosc.org/apache/kafka/1.0.0/kafka_2.11-1.0.0.tgz</span><br></pre></td></tr></tbody></table></figure>
<p>解压：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf kafka_2.11-1.0.0.tgz</span><br><span class="line"></span><br><span class="line">cd /usr/local/kafka_2.11-1.0.0/</span><br></pre></td></tr></tbody></table></figure><p></p>
<p>修改 kafka-server 的配置文件</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/kafka/config/server.properties</span><br></pre></td></tr></tbody></table></figure>
<p>修改其中的：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">broker.id=1</span><br><span class="line">log.dir=/data/kafka/logs-1</span><br></pre></td></tr></tbody></table></figure>
<h3 id="功能验证："><a href="#%E5%8A%9F%E8%83%BD%E9%AA%8C%E8%AF%81%EF%BC%9A" rel="nofollow" class="headerlink" title="功能验证："></a>功能验证：</h3><h4 id="1、启动-zk"><a href="#1%E3%80%81%E5%90%AF%E5%8A%A8-zk" rel="nofollow" class="headerlink" title="1、启动 zk"></a>1、启动 zk</h4><p>使用安装包中的脚本启动单节点 Zookeeper 实例：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/zookeeper-server-start.sh -daemon config/zookeeper.properties</span><br></pre></td></tr></tbody></table></figure>
<h4 id="2、启动Kafka-服务"><a href="#2%E3%80%81%E5%90%AF%E5%8A%A8Kafka-%E6%9C%8D%E5%8A%A1" rel="nofollow" class="headerlink" title="2、启动Kafka 服务"></a>2、启动Kafka 服务</h4><p>使用 <code>kafka-server-start.sh</code> 启动 kafka 服务：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-server-start.sh  config/server.properties</span><br></pre></td></tr></tbody></table></figure>
<p><img src="http://ohfk1r827.bkt.clouddn.com/blog/180104/Lc2CiKfIee.png-1" alt="mark"></p>
<h4 id="3、创建-topic"><a href="#3%E3%80%81%E5%88%9B%E5%BB%BA-topic" rel="nofollow" class="headerlink" title="3、创建 topic"></a>3、创建 topic</h4><p>使用 <code>kafka-topics.sh</code> 创建单分区单副本的 topic test：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test</span><br></pre></td></tr></tbody></table></figure>
<p>查看 topic 列表：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --list --zookeeper localhost:2181</span><br></pre></td></tr></tbody></table></figure>
<p>查询创建的 topic 列表报错：</p>
<p><img src="http://ohfk1r827.bkt.clouddn.com/blog/180104/c3K5D805eI.png-1" alt="mark"></p>
<p>解决方法:</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></tbody></table></figure>
<p>将 host 里的</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br></pre></td></tr></tbody></table></figure>
<p>修改为：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         ip6-localhost ip6-localhost.localdomain localhost6 localhost6.localdomain6</span><br></pre></td></tr></tbody></table></figure>
<p>方法参考：<a href="https://stackoverflow.com/questions/28109669/zookeeper-unable-to-open-socket-to-localhost-000000012181" rel="nofollow" target="_blank">zookeeper unable to open socket to localhost/0:0:0:0:0:0:0:1:2181</a></p>
<p>再次查询就不报错了。</p>
<h4 id="4、产生消息"><a href="#4%E3%80%81%E4%BA%A7%E7%94%9F%E6%B6%88%E6%81%AF" rel="nofollow" class="headerlink" title="4、产生消息"></a>4、产生消息</h4><p>使用 <code>kafka-console-producer.sh</code> 发送消息：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test</span><br></pre></td></tr></tbody></table></figure>
<p><img src="http://ohfk1r827.bkt.clouddn.com/blog/180104/4F1EAgdmI1.png-1" alt="mark"></p>
<h4 id="5、消费消息"><a href="#5%E3%80%81%E6%B6%88%E8%B4%B9%E6%B6%88%E6%81%AF" rel="nofollow" class="headerlink" title="5、消费消息"></a>5、消费消息</h4><p>使用 <code>kafka-console-consumer.sh</code> 接收消息并在终端打印：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic test --from-beginning</span><br></pre></td></tr></tbody></table></figure>
<p>打开个新的命令窗口执行上面命令即可查看信息：</p>
<p><img src="http://ohfk1r827.bkt.clouddn.com/blog/180104/c8mg8jJFki.png-1" alt="mark"></p>
<h4 id="6、查看描述-topics-信息"><a href="#6%E3%80%81%E6%9F%A5%E7%9C%8B%E6%8F%8F%E8%BF%B0-topics-%E4%BF%A1%E6%81%AF" rel="nofollow" class="headerlink" title="6、查看描述 topics 信息"></a>6、查看描述 topics 信息</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic test</span><br></pre></td></tr></tbody></table></figure>
<p>结果：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Topic:test  PartitionCount:1    ReplicationFactor:1 Configs:</span><br><span class="line">  Topic: test Partition: 0    Leader: 1   Replicas: 1 Isr: 1</span><br></pre></td></tr></tbody></table></figure>
<p><img src="http://ohfk1r827.bkt.clouddn.com/blog/180104/6JlmHdLcI5.png-1" alt="mark"></p>
<p>第一行给出了所有分区的摘要，每个附加行给出了关于一个分区的信息。 由于我们只有一个分区，所以只有一行。</p>
<p>“Leader”: 是负责给定分区的所有读取和写入的节点。 每个节点将成为分区随机选择部分的领导者。</p>
<p>“Replicas”: 是复制此分区日志的节点列表，无论它们是否是领导者，或者即使他们当前处于活动状态。</p>
<p>“Isr”: 是一组“同步”副本。这是复制品列表的子集，当前活着并被引导到领导者。</p>
<h3 id="集群配置"><a href="#%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE" rel="nofollow" class="headerlink" title="集群配置"></a>集群配置</h3><p>Kafka 支持两种模式的集群搭建：可以在单机上运行多个 broker 实例来实现集群，也可在多台机器上搭建集群，下面介绍下如何实现单机多 broker 实例集群，其实很简单，只需要如下配置即可。</p>
<h4 id="单机多broker-集群配置"><a href="#%E5%8D%95%E6%9C%BA%E5%A4%9Abroker-%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE" rel="nofollow" class="headerlink" title="单机多broker 集群配置"></a>单机多broker 集群配置</h4><p>利用单节点部署多个 broker。 不同的 broker 设置不同的 id，监听端口及日志目录。 例如：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cp config/server.properties config/server-2.properties</span><br><span class="line"></span><br><span class="line">cp config/server.properties config/server-3.properties</span><br><span class="line"></span><br><span class="line">vim config/server-2.properties</span><br><span class="line"></span><br><span class="line">vim config/server-3.properties</span><br></pre></td></tr></tbody></table></figure>
<p>修改 ：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">broker.id=2</span><br><span class="line"></span><br><span class="line">listeners = PLAINTEXT://your.host.name:9093</span><br><span class="line"></span><br><span class="line">log.dir=/data/kafka/logs-2</span><br></pre></td></tr></tbody></table></figure>
<p>和</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">broker.id=3</span><br><span class="line"></span><br><span class="line">listeners = PLAINTEXT://your.host.name:9094</span><br><span class="line"></span><br><span class="line">log.dir=/data/kafka/logs-3</span><br></pre></td></tr></tbody></table></figure>
<p>启动Kafka服务：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-server-start.sh config/server-2.properties &amp;</span><br><span class="line"></span><br><span class="line">bin/kafka-server-start.sh config/server-3.properties &amp;</span><br></pre></td></tr></tbody></table></figure>
<p>至此，单机多broker实例的集群配置完毕。</p>
<h4 id="多机多-broker-集群配置"><a href="#%E5%A4%9A%E6%9C%BA%E5%A4%9A-broker-%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE" rel="nofollow" class="headerlink" title="多机多 broker 集群配置"></a>多机多 broker 集群配置</h4><p>分别在多个节点按上述方式安装 Kafka，配置启动多个 Zookeeper 实例。</p>
<p>假设三台机器 IP 地址是 ： 192.168.153.135， 192.168.153.136， 192.168.153.137</p>
<p>分别配置多个机器上的 Kafka 服务，设置不同的 broker id，zookeeper.connect 设置如下:</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim config/server.properties</span><br></pre></td></tr></tbody></table></figure>
<p>里面的 <code>zookeeper.connect</code></p>
<p>修改为：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zookeeper.connect=192.168.153.135:2181,192.168.153.136:2181,192.168.153.137:2181</span><br></pre></td></tr></tbody></table></figure>
<h3 id="使用-Kafka-Connect-来导入-导出数据"><a href="#%E4%BD%BF%E7%94%A8-Kafka-Connect-%E6%9D%A5%E5%AF%BC%E5%85%A5-%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE" rel="nofollow" class="headerlink" title="使用 Kafka Connect 来导入/导出数据"></a>使用 Kafka Connect 来导入/导出数据</h3><p>从控制台写入数据并将其写回控制台是一个方便的起点，但您可能想要使用其他来源的数据或将数据从 Kafka 导出到其他系统。对于许多系统，您可以使用 Kafka Connect 来导入或导出数据，而不必编写自定义集成代码。</p>
<p>Kafka Connect 是 Kafka 包含的一个工具，可以将数据导入和导出到 Kafka。它是一个可扩展的工具，运行 连接器，实现与外部系统交互的自定义逻辑。在这个快速入门中，我们将看到如何使用简单的连接器运行 Kafka Connect，这些连接器将数据从文件导入到 Kafka topic，并将数据从 Kafka topic 导出到文件。</p>
<p>首先，我们将通过创建一些种子数据开始测试：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e "zhisheng\ntian" &gt; test.txt</span><br></pre></td></tr></tbody></table></figure>
<p><img src="http://ohfk1r827.bkt.clouddn.com/blog/180104/79EG4ilBAH.png-1" alt="mark"></p>
<p>接下来，我们将启动两个以独立模式运行的连接器，这意味着它们将在单个本地专用进程中运行。我们提供三个配置文件作为参数。首先是 Kafka Connect 过程的配置，包含常见的配置，例如要连接的 Kafka 代理以及数据的序列化格式。其余的配置文件都指定一个要创建的连接器。这些文件包括唯一的连接器名称，要实例化的连接器类以及连接器所需的任何其他配置。</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/connect-standalone.sh  config/connect-standalone.properties config/connect-file-source.properties config/connect-file-sink.properties</span><br></pre></td></tr></tbody></table></figure>
<p>Kafka 附带的这些示例配置文件使用您之前启动的默认本地群集配置，并创建两个连接器：第一个是源连接器，用于读取输入文件中的行，并将每个连接生成为 Kafka topic，第二个为连接器它从 Kafka topic 读取消息，并在输出文件中产生每行消息。</p>
<p>在启动过程中，您会看到一些日志消息，其中一些指示连接器正在实例化。Kafka Connect 进程启动后，源连接器应该开始读取 test.txt topic connect-test，并将其生成 topic ，并且接收器连接器应该开始读取 topic 中的消息 connect-test 并将其写入文件 test.sink.txt。我们可以通过检查输出文件的内容来验证通过整个管道传输的数据：</p>
<p><img src="http://ohfk1r827.bkt.clouddn.com/blog/180104/Jh18BCJcb6.png-1" alt="mark"></p>
<p>数据存储在 Kafka topic 中 connect-test，因此我们也可以运行控制台使用者来查看 topic 中的数据</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic connect-test --from-beginning</span><br></pre></td></tr></tbody></table></figure>
<p><img src="http://ohfk1r827.bkt.clouddn.com/blog/180104/LBC5fF1LK6.png-1" alt="mark"></p>
<p>连接器继续处理数据，所以我们可以将数据添加到文件中，并看到它在管道中移动：</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo zhishengtian&gt;&gt; test.txt</span><br><span class="line">echo zhishengtian2&gt;&gt; test.txt</span><br><span class="line">echo zhishengtian3&gt;&gt; test.txt</span><br><span class="line">echo zhishengtian4&gt;&gt; test.txt</span><br></pre></td></tr></tbody></table></figure>
<p><img src="http://ohfk1r827.bkt.clouddn.com/blog/180104/0DH6K1dkBA.png-1" alt="mark"></p>
<p><img src="http://ohfk1r827.bkt.clouddn.com/blog/180104/6JLE96B87K.png-1" alt="mark"></p>
<h3 id="使用-Kafka-流来处理数据"><a href="#%E4%BD%BF%E7%94%A8-Kafka-%E6%B5%81%E6%9D%A5%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE" rel="nofollow" class="headerlink" title="使用 Kafka 流来处理数据"></a>使用 Kafka 流来处理数据</h3><p>Kafka Streams 是用于构建关键任务实时应用程序和微服务的客户端库，输入和/或输出数据存储在 Kafka 集群中。Kafka Streams 结合了在客户端编写和部署标准 Java 和 Scala 应用程序的简单性以及 Kafka 服务器端集群技术的优势，使这些应用程序具有高度可伸缩性，弹性，容错性，分布式等特性。</p>
<p>可参考官网入门案例：<a href="http://kafka.apache.org/10/documentation/streams/quickstart" rel="nofollow" target="_blank">http://kafka.apache.org/10/documentation/streams/quickstart</a></p>
<h3 id="参考"><a href="#%E5%8F%82%E8%80%83" rel="nofollow" class="headerlink" title="参考"></a>参考</h3><p>1、<a href="https://www.mtyun.com/library/how-to-install-kafka-on-centos7" rel="nofollow" target="_blank">在CentOS 7上安装Kafka</a></p>
<p>2、<a href="http://kafka.apache.org/10/documentation/streams/quickstart" rel="nofollow" target="_blank">http://kafka.apache.org/10/documentation/streams/quickstart</a></p>
<h3 id="关注我"><a href="#%E5%85%B3%E6%B3%A8%E6%88%91" rel="nofollow" class="headerlink" title="关注我"></a>关注我</h3><p><img src="http://ohfk1r827.bkt.clouddn.com/blog/180103/C6LG3mGa12.jpg" alt="mark"></p>
<h3 id="最后"><a href="#%E6%9C%80%E5%90%8E" rel="nofollow" class="headerlink" title="最后"></a>最后</h3><p>转载请注明原创地址为：<a href="http://www.54tianzhisheng.cn/2018/01/04/Kafka/" rel="nofollow" target="_blank">http://www.54tianzhisheng.cn/2018/01/04/Kafka/</a></p>
<p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fp3jkmizmpj30o00didgn.jpg" alt=""></p>



      </div></div>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>