---
layout:     post
title:      Hive学习笔记(2)
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p></p><div class="toc"><div class="toc">
<ul>
<li><a href="#hive%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0" rel="nofollow">Hive学习笔记</a><ul>
<li><a href="#hiveql%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89" rel="nofollow">HiveQL:数据定义</a><ul>
<li><a href="#hive%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93" rel="nofollow">Hive中的数据库</a></li>
<li><a href="#%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E5%BA%93" rel="nofollow">修改数据库</a></li>
<li><a href="#%E5%88%9B%E5%BB%BA%E8%A1%A8" rel="nofollow">创建表</a></li>
<li><a href="#%E5%88%A0%E9%99%A4%E8%A1%A8" rel="nofollow">删除表</a></li>
<li><a href="#%E4%BF%AE%E6%94%B9%E8%A1%A8" rel="nofollow">修改表</a></li>
</ul>
</li>
<li><a href="#hiveql%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C" rel="nofollow">HiveQL:数据操作</a><ul>
<li><a href="#%E5%90%91%E7%AE%A1%E7%90%86%E8%A1%A8%E4%B8%AD%E8%A3%85%E8%BD%BD%E6%95%B0%E6%8D%AE" rel="nofollow">向管理表中装载数据</a></li>
<li><a href="#%E9%80%9A%E8%BF%87%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E5%90%91%E8%A1%A8%E4%B8%AD%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE" rel="nofollow">通过查询语句向表中插入数据</a></li>
<li><a href="#%E5%8D%95%E4%B8%AA%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E4%B8%AD%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%B9%B6%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE" rel="nofollow">单个查询语句中创建表并加载数据</a></li>
<li><a href="#%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE" rel="nofollow">导出数据</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>




<h1 id="hive学习笔记">Hive学习笔记</h1>

<p>笔记内容主要来自<a href="https://download.csdn.net/download/bbirdsky/8300267" rel="nofollow">Hive编程指南</a></p>



<h2 id="hiveql数据定义">HiveQL:数据定义</h2>



<h3 id="hive中的数据库">Hive中的数据库</h3>

<blockquote>
  <p><strong>Hive中数据库的概念本质上仅仅是表的一个目录或者命名空间。</strong></p>
</blockquote>

<p>如果用户没有显示指定数据库，那么将会使用<strong>默认的数据库default</strong>。</p>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">DATABASE</span> financials;</span> <span class="hljs-comment">--创建数据库</span>
<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">DATABASE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> financials;</span> <span class="hljs-comment">--判断是否存在同名库</span>
<span class="hljs-operator"><span class="hljs-keyword">SHOW</span> DATABASES;</span><span class="hljs-comment">--显示所有数据库</span>
<span class="hljs-operator"><span class="hljs-keyword">SHOW</span> <span class="hljs-keyword">DATABASE</span> <span class="hljs-keyword">LIKE</span> <span class="hljs-string">'h.*'</span>;</span><span class="hljs-comment">--模糊查询所有匹配数据库</span>
<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">DATABASE</span> financials LOCATION <span class="hljs-string">'my/mypath'</span>;</span><span class="hljs-comment">--用户可以通过命令来修改数据库默认位置</span>
<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> DATEBASE financials COMMENT <span class="hljs-string">'jinesse create'</span>;</span><span class="hljs-comment">--添加描述信息</span>
DESCRIBE DATABASE financials;<span class="hljs-comment">--显示详细描述信息</span>
DESCRIBE DATABASE EXTENDED financials;<span class="hljs-comment">--显示扩展详细描述信息</span>
USE financials;<span class="hljs-comment">--选择数据库</span>
<span class="hljs-operator"><span class="hljs-keyword">set</span> hive.cli.print.<span class="hljs-keyword">current</span>.db=<span class="hljs-keyword">true</span>;</span><span class="hljs-comment">--在cli当中显示当前数据库属性</span>
<span class="hljs-operator"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">DATABASE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">EXISTS</span> financials;</span><span class="hljs-comment">--删除数据库</span>
<span class="hljs-operator"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">DATABASE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">EXISTS</span> financials <span class="hljs-keyword">CASCADE</span>;</span><span class="hljs-comment">--默认情况下(RESTRICT)是不允许用户删除一个包含有表的数据库，删除命令最后面加上关键字CASCADE，这样可以使Hive自行先删除数据库中的表</span>

</code></pre>



<h3 id="修改数据库">修改数据库</h3>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">DATABASE</span> financials <span class="hljs-keyword">SET</span> DBPROPERTIES(<span class="hljs-string">'EDITED-BY'</span>=<span class="hljs-string">'Joe Dba'</span>)--修改数据库描述属性信息。数据库的其他元数据信息都是不可以更改的，包括数据库名和数据库所在的目录位置。</span></code></pre>



<h3 id="创建表">创建表</h3>

<p>基本操作</p>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> mydb.employees(
    name          STRING COMMENT <span class="hljs-string">'Employee name'</span>,
    salary        <span class="hljs-keyword">FLOAT</span> COMMENT <span class="hljs-string">'Employee salary'</span>,
    subordinates  ARRAY&lt;STRING&gt; COMMENT <span class="hljs-string">'Names of subordinates'</span>,
    deductions    MAP&lt;STRING,<span class="hljs-keyword">FLOAT</span>&gt; COMMENT <span class="hljs-string">'Keys are deductions name,values are percentages'</span>,
    address       STRUCT&lt;street:STRING, city:STRING, zip:<span class="hljs-keyword">INT</span>&gt; COMMENT <span class="hljs-string">'Home address'</span>)
COMMENT <span class="hljs-string">'Description of the table'</span>
TBLPROPERTIES (<span class="hljs-string">'creator'</span>=<span class="hljs-string">'me'</span>, <span class="hljs-string">'created_at'</span>=<span class="hljs-string">'2012-01-02 10:00:00'</span>, ...)
LOCATION <span class="hljs-string">'/user/hive/...'</span>;</span>
<span class="hljs-comment">--可以为表指定目录</span></code></pre>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-comment">--用户可以拷贝一张已经存在的表的表模式(而无需拷贝数据)</span>
<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> mydb.employees2
<span class="hljs-keyword">LIKE</span> mydb.employees;</span></code></pre>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-operator"><span class="hljs-keyword">SHOW</span> TABLES;</span><span class="hljs-comment">--查看当前库的所有表</span>
<span class="hljs-operator"><span class="hljs-keyword">SHOW</span> TABLES <span class="hljs-keyword">IN</span> mydb;</span><span class="hljs-comment">--查看目标库的所有表</span>
<span class="hljs-operator"><span class="hljs-keyword">SHOW</span> TABLES <span class="hljs-string">'empl.*'</span>;</span><span class="hljs-comment">--查看满足规则的所有表</span>
DESCRIBE EXTENDED mydb.employees;<span class="hljs-comment">--显示表的扩展属性</span>
DESCRIBE FORMATTED mydb.employees;<span class="hljs-comment">--格式化显示表的扩展属性</span>
DESCRIBE mydb.employees.salary;<span class="hljs-comment">--显示指定属性</span>
</code></pre>

<p>管理表(内部表)</p>

<blockquote>
  <p>Hive 默认情况下会将这些表的数据存储在由配置项 hive.metastore.warehouse.dir (例如，/user/hive/warehouse) 所定义的目录的子目录下。<strong>当我们删除一个管理表时，Hive也会删除这个表中数据。</strong></p>
</blockquote>

<p>外部表</p>

<blockquote>
  <p>关键字 <strong>EXTENAL</strong> 创建 Hive外部表，<strong>LOCATION</strong>…子句则告诉Hive 数据位于哪个路径下。因为表是外部的，所以Hive并非认为其完全拥有这份数据。因此，<strong>删除该表并不会删除掉这份数据，不过描述表的元数据信息会被删除掉。</strong></p>
</blockquote>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">EXTERNAL</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> stocks(
    exchange         STRING,
    symbol           STRING,
    ymd              STRING,
    price_open       <span class="hljs-keyword">FLOAT</span>,
    price_high       <span class="hljs-keyword">FLOAT</span>,
    price_low        <span class="hljs-keyword">FLOAT</span>,
    volume           <span class="hljs-keyword">INT</span>,
    price_adj_close  <span class="hljs-keyword">FLOAT</span>)
<span class="hljs-keyword">ROW</span> FORMAT DELIMITED FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">','</span>
LOCATION <span class="hljs-string">'/data/stocks'</span>;</span>
</code></pre>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-comment">--表结构复制(而不会复制数据)</span>
<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">EXTERNAL</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> mydb.employees3
<span class="hljs-keyword">LIKE</span> mydb.employees
LOCATION <span class="hljs-string">'/path/to/data'</span>;</span>
<span class="hljs-comment">--如果语句中省略 EXTERNAL 关键字而且源表是外部表的话，那么生成的新表也将是外部表，如果语句中省略掉 EXTERNAL 关键字而且源表是管理表的话，那么生成的新表也将是管理表。但是如果语句中包含有 EXTERNAL 关键字而且原表是管理表的话，那么生成的新表是外部表，即使在这种场景下，LOCATION 子句同样是可选的。</span>
</code></pre>

<p>分区管理表</p>

<blockquote>
  <p>分区关键字 PARTITIONED BY</p>
</blockquote>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> employees(
    name          STRING,
    salary        <span class="hljs-keyword">FLOAT</span>,
    subordinates  ARRAY&lt;STRING&gt;,
    deductions    MAP&lt;STRING,<span class="hljs-keyword">FLOAT</span>&gt;,
    address       STRUCT&lt;street:STRING, state:STRING, zip:<span class="hljs-keyword">INT</span>&gt;
)
PARTITIONED <span class="hljs-keyword">BY</span> (country STRING, state STRING);</span>
</code></pre>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-operator"><span class="hljs-keyword">SHOW</span> PARTITIONS employees;</span><span class="hljs-comment">--查看分区信息</span>
<span class="hljs-operator"><span class="hljs-keyword">SHOW</span> PARTITIONS employees PARTITION(country=<span class="hljs-string">'US'</span>);</span><span class="hljs-comment">--过滤查看分区</span>
</code></pre>

<p>外部分区表</p>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-comment">--创建外部分区表</span>
<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">EXTERNAL</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> log_messages(
    hms            <span class="hljs-keyword">INT</span>,
    severity       STRING,
    server         STRING,
    process_id     <span class="hljs-keyword">INT</span>,
    message        STRING
)
PARTITIONED <span class="hljs-keyword">BY</span> (<span class="hljs-keyword">year</span> <span class="hljs-keyword">INT</span>, <span class="hljs-keyword">month</span> <span class="hljs-keyword">INT</span>, <span class="hljs-keyword">day</span> <span class="hljs-keyword">INT</span>)
<span class="hljs-keyword">ROW</span> FORMAT DELIMITED FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">'\t'</span>;</span>

<span class="hljs-comment">--添加分区</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_messages <span class="hljs-keyword">ADD</span> PARTITION(<span class="hljs-keyword">year</span>=<span class="hljs-number">2012</span>, <span class="hljs-keyword">month</span>=<span class="hljs-number">1</span>, <span class="hljs-keyword">day</span>=<span class="hljs-number">2</span>)
LOCATION <span class="hljs-string">'hdfs://...'</span>;</span>

</code></pre>



<h3 id="删除表">删除表</h3>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-operator"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">EXISTS</span> employees;</span>
<span class="hljs-comment">--对于外部表，表的元数据信息会被删除，但是表中的数据不会被删除。</span></code></pre>



<h3 id="修改表">修改表</h3>

<blockquote>
  <p>ALTER TABLE 仅仅会修改表元数据，表数据本身不会有任何修改，需要用户自己确认所有的修改都和真实的数据是一致的。</p>
</blockquote>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-comment">--表重命名</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_messages RENAME <span class="hljs-keyword">TO</span> logmsgs;</span>

<span class="hljs-comment">--增加、修改和删除表分区</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_messages <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span>
PARTITION (<span class="hljs-keyword">year</span>=<span class="hljs-number">2011</span>, <span class="hljs-keyword">month</span>=<span class="hljs-number">1</span>, <span class="hljs-keyword">day</span>=<span class="hljs-number">1</span>) LOCATION <span class="hljs-string">'/logs/2011/01/01'</span>
PARTITION (<span class="hljs-keyword">year</span>=<span class="hljs-number">2011</span>, <span class="hljs-keyword">month</span>=<span class="hljs-number">1</span>, <span class="hljs-keyword">day</span>=<span class="hljs-number">2</span>) LOCATION <span class="hljs-string">'/logs/2011/01/02'</span>
PARTITION (<span class="hljs-keyword">year</span>=<span class="hljs-number">2011</span>, <span class="hljs-keyword">month</span>=<span class="hljs-number">1</span>, <span class="hljs-keyword">day</span>=<span class="hljs-number">3</span>) LOCATION <span class="hljs-string">'/logs/2011/01/03'</span>;</span>

<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_messages PARTITION(<span class="hljs-keyword">year</span>=<span class="hljs-number">2011</span>, <span class="hljs-keyword">month</span>=<span class="hljs-number">12</span>, <span class="hljs-keyword">day</span>=<span class="hljs-number">2</span>) <span class="hljs-keyword">SET</span> LOCATION <span class="hljs-string">'s3n://...'</span>;</span><span class="hljs-comment">--这个命令不会将数据从旧的路径转移走，也不会删除旧的数据。</span>

<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_messages <span class="hljs-keyword">DROP</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">EXISTS</span> PARTITION(<span class="hljs-keyword">year</span>=<span class="hljs-number">2011</span>, <span class="hljs-keyword">month</span>=<span class="hljs-number">12</span>, <span class="hljs-keyword">day</span>=<span class="hljs-number">2</span>);</span><span class="hljs-comment">--管理表的话 会删除数据，外部表，分区内数据不会被删除。</span>


<span class="hljs-comment">--修改列信息</span>
<span class="hljs-comment">--即使字段名或者字段类型没有改变，用户也需要完全指定旧的字段名，并给出新的字段名及新的字段类型。</span>
<span class="hljs-comment">--将字段移动到第一个位置，那么只需要使用FIRST 替代 AFTER other_column子句即可</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_messages
CHANGE <span class="hljs-keyword">COLUMN</span> hms hours_minutes_seconds <span class="hljs-keyword">INT</span>
COMMENT <span class="hljs-string">'The hours, minutes, and seconds part of the timestamp'</span>
<span class="hljs-keyword">AFTER</span> severity;</span>

<span class="hljs-comment">--增加列</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_messages <span class="hljs-keyword">ADD</span> COLUMNS (
    app_name   STRING COMMENT <span class="hljs-string">'Application name'</span>,
    session_id LONG COMMENT <span class="hljs-string">'THE current session id'</span>
);</span> 

<span class="hljs-comment">--删除或者替换列</span>
<span class="hljs-comment">--REPLACE 只能用于使用了2中内置SerDe模块的表：DynamicSerDe 或者 MetadataTypeColumnsetSerDe</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_messages <span class="hljs-keyword">REPLACE</span> COLUMNS (
    hours_mins_secs   <span class="hljs-keyword">int</span> COMMENT <span class="hljs-string">'hour, minute, seconds from timestamp'</span>,
    severity          STRING COMMENT <span class="hljs-string">'The message severity'</span>,
    message           STRING COMMENT <span class="hljs-string">'The rest of the message'</span>
);</span>

<span class="hljs-comment">--修改表属性</span>
<span class="hljs-comment">--用户可以增加附加的表属性或者修改已经存在的属性，但是无法删除属性。</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_messages <span class="hljs-keyword">SET</span> TBLPROPERTIES (
    <span class="hljs-string">'notes'</span> = <span class="hljs-string">'The process id is no longer captured; this column is always NULL'</span>);</span>


<span class="hljs-comment">--修改存储属性</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_messages
PARTITION(<span class="hljs-keyword">year</span>=<span class="hljs-number">2012</span>, <span class="hljs-keyword">month</span>=<span class="hljs-number">1</span>, <span class="hljs-keyword">day</span>=<span class="hljs-number">1</span>)
<span class="hljs-keyword">SET</span> FILEFORMAT SEQUENCEFILE;</span>

<span class="hljs-comment">--修改SerDe</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> table_using_JSON_storage
<span class="hljs-keyword">SET</span> SERDE <span class="hljs-string">'com.example.JSONSerDe'</span>
<span class="hljs-keyword">WITH</span> SERDEPROPERTIES(
    <span class="hljs-string">'prop1'</span>=<span class="hljs-string">'value1'</span>,
    <span class="hljs-string">'prop2'</span>=<span class="hljs-string">'value2'</span>
);</span>

<span class="hljs-comment">--向一个已经存在着的 SerDe 增加新的 SERDEPROPERTIES 属性</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> table_using_JSON_storage
<span class="hljs-keyword">SET</span> SERDEPROPERTIES(
    <span class="hljs-string">'prop3'</span>=<span class="hljs-string">'value3'</span>,
    <span class="hljs-string">'prop4'</span>=<span class="hljs-string">'value4'</span>
);</span>

<span class="hljs-comment">--修改表语句 ALTER TABLE···TOUCH</span>
<span class="hljs-comment">--执行"钩子"的技巧，典型应用场景是Hive之外存储的文件被修改了，就会触发钩子的执行。例如，某个脚本往分区2012/01/01中写入了新的日志信息文件</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_message TOUCH
PARTITION(<span class="hljs-keyword">year</span>=<span class="hljs-number">2012</span>, <span class="hljs-keyword">month</span>=<span class="hljs-number">1</span>, <span class="hljs-keyword">day</span>=<span class="hljs-number">1</span>);</span>

<span class="hljs-comment">--修改表语句 ALTER TABLE···ARCHIVE PARTITION</span>
<span class="hljs-comment">--语句会将这个分区内的文件打成一个Hadoop压缩包(HAR)文件。但是这样仅仅可以降低文件系统中的文件数以及减轻NameNode的压力，而不会减少任何存储空间</span>
<span class="hljs-comment">--使用UNARCHIVE就可以进行反向操作。只能用于分区表中独立的分区</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_messages ARCHIVE
PARTITION(<span class="hljs-keyword">year</span>=<span class="hljs-number">2012</span>, <span class="hljs-keyword">month</span>=<span class="hljs-number">1</span>, <span class="hljs-keyword">day</span>=<span class="hljs-number">1</span>);</span>


<span class="hljs-comment">--修改表语句 ENABLE NO_DROP/OFFLINE</span>
<span class="hljs-comment">--ENABLE &lt;-&gt; DISABLE</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_messages
PARTITION(<span class="hljs-keyword">year</span>=<span class="hljs-number">2012</span>, <span class="hljs-keyword">month</span>=<span class="hljs-number">1</span>, <span class="hljs-keyword">day</span>=<span class="hljs-number">1</span>) ENABLE NO_DROP;</span><span class="hljs-comment">--防止分区被删除</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> log_messages
PARTITION(<span class="hljs-keyword">year</span>=<span class="hljs-number">2012</span>, <span class="hljs-keyword">month</span>=<span class="hljs-number">1</span>, <span class="hljs-keyword">day</span>=<span class="hljs-number">1</span>) ENABLE OFFLINE;</span><span class="hljs-comment">--防止分区被查询</span>

</code></pre>



<h2 id="hiveql数据操作">HiveQL:数据操作</h2>



<h3 id="向管理表中装载数据">向管理表中装载数据</h3>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-comment">-- LOAD DATA LOCAL... 拷贝本地数据到位于分布式文件系统上的目标位置，而 LOAD DATA 转移数据到目标位置</span>
<span class="hljs-comment">-- OVERWRITE 关键词，使用OVERWRITE关键字，那么会先输出数据，在增加这条记录，如果没有这个关键字，会新增数据</span>
<span class="hljs-operator"><span class="hljs-keyword">LOAD</span> DATA <span class="hljs-keyword">LOCAL</span> INPATH <span class="hljs-string">'${ENV:HOME}/california-employees'</span>
OVERWRITE <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">TABLE</span> employees
PARTITION (COUNTRY=<span class="hljs-string">'US'</span>, state=<span class="hljs-string">'CA'</span>);</span>
</code></pre>

<blockquote>
  <p>对于INPATH 子句中使用的文件路径还有一个限制，那就是这个路径下不可以包含任何文件夹。 <br>
  Hive并不会验证用户装载的数据和表的模式是否匹配，然而，Hive会验证文件格式是否和表结构定义的一致</p>
</blockquote>



<h3 id="通过查询语句向表中插入数据">通过查询语句向表中插入数据</h3>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-comment">-- 从已经存在的表中导入数据</span>
<span class="hljs-operator"><span class="hljs-keyword">INSERT</span> OVERWRITE <span class="hljs-keyword">TABLE</span> employees
PARTITION (country = <span class="hljs-string">'US'</span>, state = <span class="hljs-string">'OR'</span>)
<span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> staged_employees se
<span class="hljs-keyword">WHERE</span> se.cnty = <span class="hljs-string">'US'</span> <span class="hljs-keyword">AND</span> se.st = <span class="hljs-string">'OR'</span>;</span>
</code></pre>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-comment">--从已经存在的表中导入数据到分区表中</span>
<span class="hljs-comment">--INSERT OVERWRITE/INSERT INTO 可以混合使用</span>
FROM staged_employees se
<span class="hljs-operator"><span class="hljs-keyword">INSERT</span> OVERWRITE <span class="hljs-keyword">TABLE</span> employees
    PARTITION (country=<span class="hljs-string">'US'</span>, state=<span class="hljs-string">'OR'</span>)
    <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">WHERE</span> se.cnty=<span class="hljs-string">'US'</span> <span class="hljs-keyword">AND</span> se.st = <span class="hljs-string">'OR'</span>
<span class="hljs-keyword">INSERT</span> OVERWRITE <span class="hljs-keyword">TABLE</span> employees
    PARTITION (country=<span class="hljs-string">'US'</span>, state=<span class="hljs-string">'CA'</span>)
    <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">WHERE</span> se.cnty=<span class="hljs-string">'US'</span> <span class="hljs-keyword">AND</span> se.st = <span class="hljs-string">'CA'</span>
<span class="hljs-keyword">INSERT</span> OVERWRITE <span class="hljs-keyword">TABLE</span> employees
    PARTITION (country=<span class="hljs-string">'US'</span>, state=<span class="hljs-string">'IL'</span>)
    <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">WHERE</span> se.cnty=<span class="hljs-string">'US'</span> <span class="hljs-keyword">AND</span> se.st = <span class="hljs-string">'IL'</span>;</span>

</code></pre>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-comment">-- 动态分区插入</span>
<span class="hljs-comment">-- Hive根据SELECT语句中最后2列来确定分区字段country和state的值。源表字段值和输出分区值之间的关系是根据位置而不是根据命名来匹配的。</span>
<span class="hljs-operator"><span class="hljs-keyword">INSERT</span> OVERWRITE <span class="hljs-keyword">TABLE</span> employees
PARTITION (country, state)
<span class="hljs-keyword">SELECT</span> ..., se.cnty, se.st
<span class="hljs-keyword">FROM</span> staged_employees se;</span>

</code></pre>

<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-comment">-- 动态分区、静态分区混合使用</span>
<span class="hljs-comment">-- 静态分区键必须出现在动态分区键之前</span>
<span class="hljs-operator"><span class="hljs-keyword">INSERT</span> OVERWRITE <span class="hljs-keyword">TABLE</span> employees
PARTITION (country = <span class="hljs-string">'US'</span>, state)
<span class="hljs-keyword">SELECT</span> ..., se.cnty, se.st
<span class="hljs-keyword">FROM</span> staged_employees se <span class="hljs-keyword">WHERE</span> se.cnty = <span class="hljs-string">'US'</span>;</span>
</code></pre>

<p><img src="https://img-blog.csdn.net/20180605075717667?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ppbmVzc2U=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="动态分区属性" title=""></p>

<h3 id="单个查询语句中创建表并加载数据">单个查询语句中创建表并加载数据</h3>



<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-comment">--这里本身没有进行数据"装载"，而是将元数据中指定一个指向数据的路径</span>
<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> ca_employees
<span class="hljs-keyword">AS</span> <span class="hljs-keyword">SELECT</span> name, salary, address
<span class="hljs-keyword">FROM</span> employees
<span class="hljs-keyword">WHERE</span> se.state = <span class="hljs-string">'CA'</span>;</span>

</code></pre>



<h3 id="导出数据">导出数据</h3>

<pre class="prettyprint"><code class="language-sql hljs "><span class="hljs-comment">-- INSERT...DIRECTORY...</span>
<span class="hljs-comment">-- 一个或多个文件将会被写入到路径中，具体个数取决于调用的 reducer个数</span>
<span class="hljs-operator"><span class="hljs-keyword">INSERT</span> OVERWRITE <span class="hljs-keyword">LOCAL</span> DIRECTORY <span class="hljs-string">'/tmp/ca_employees'</span>
<span class="hljs-keyword">SELECT</span> name, salary, address
<span class="hljs-keyword">FROM</span> employees
<span class="hljs-keyword">WHERE</span> se.state = <span class="hljs-string">'CA'</span>;</span>


<span class="hljs-comment">--指定输出文件夹目录</span>
FROM staged_employees se
<span class="hljs-operator"><span class="hljs-keyword">INSERT</span> OVERWRITE DIRECTORY <span class="hljs-string">'tmp/or_employees'</span>
    <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">WHERE</span> se.cty = <span class="hljs-string">'US'</span> <span class="hljs-keyword">and</span> se.st = <span class="hljs-string">'OR'</span>
<span class="hljs-keyword">INSERT</span> OVERWRITE DIRECTORY <span class="hljs-string">'tmp/ca_employees'</span>
    <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">WHERE</span> se.cty = <span class="hljs-string">'US'</span> <span class="hljs-keyword">and</span> se.st = <span class="hljs-string">'CA'</span>
<span class="hljs-keyword">INSERT</span> OVERWRITE DIRECTORY <span class="hljs-string">'tmp/IL_employees'</span>
    <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">WHERE</span> se.cty = <span class="hljs-string">'US'</span> <span class="hljs-keyword">and</span> se.st = <span class="hljs-string">'IL'</span></span></code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>