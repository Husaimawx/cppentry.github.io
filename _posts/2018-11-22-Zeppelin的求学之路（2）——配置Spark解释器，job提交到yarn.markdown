---
layout:     post
title:      Zeppelin的求学之路（2）——配置Spark解释器，job提交到yarn
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <h3><span style="color:#ff0000;">1: Spark解释器：</span></h3><p>Zeppelin  的日常使用中，使用最频繁的或者说目前最重要的解释器非Spark了,下面就说一下Spark解释器的配置。</p><p><img src="https://img-blog.csdn.net/20180323190645698" alt=""><br></p><p><a href="http://spark.apache.org/" rel="nofollow" class="external-link" style="color:rgb(53,114,176);font-family:Arial, sans-serif;background-color:rgb(255,255,255);">Apache Spark</a><span style="font-family:Arial, sans-serif;background-color:rgb(255,255,255);">是一种快速和通用的集群计算系统。它提供Java，Scala，Python和R中的高级API，以及支持一般执行图的优化引擎。Zeppelin支持Apache Spark，Spark解释器组由5个解释器组成。上图表格便是五个解释器的简单描述了。</span></p><p><span style="font-family:Arial, sans-serif;background-color:rgb(255,255,255);">（1）%spark：注意%spark在初始化时和spark-shell一样，已经在内部创建了SparkContex对象sc了，在使用的时候不必重新创建！</span><br></p><p><span style="font-family:Arial, sans-serif;background-color:rgb(255,255,255);">（2） %spark.pyspark 和%spark.r看名字就可以知道，主要是为了支持python和R语言。</span></p><p><span style="font-family:Arial, sans-serif;background-color:rgb(255,255,255);">（3）%spark.sql：在我们用到spark的sql的时候要用到这个解释器，添加使用是会自动创建sqlcontext对象</span></p><p><span style="font-family:Arial, sans-serif;background-color:rgb(255,255,255);">（4：%spark .dep :可以动态的添加下载依赖。使用必须在其他解释器之前使用；</span><span style="background-color:rgb(255,255,255);font-family:Arial, sans-serif;">z是zeppelin初始化时内部创建的</span><span style="color:rgb(86,116,130);font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12.6px;letter-spacing:.2px;background-color:rgb(243,246,250);">ZeppelinContext对象，用来调用zeppelin内部自己的函数和一些工具类，它可以联系scala和python两种环境，如果中间需要两个环境的</span></p><p><span style="font-family:Arial, sans-serif;background-color:rgb(255,255,255);"><span style="color:rgb(86,116,130);font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12.6px;letter-spacing:.2px;background-color:rgb(243,246,250);">对象，可以通过<span style="color:rgb(86,116,130);font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12.6px;letter-spacing:.2px;background-color:rgb(243,246,250);">ZeppelinContext进行转换等功能</span></span></span></p><p><span style="font-family:Arial, sans-serif;background-color:rgb(255,255,255);">下面是官网上几个dep的列子，可以了解一下。</span></p><p><span style="font-family:Arial, sans-serif;background-color:rgb(255,255,255);"></span></p><pre style="font-family:Monaco, Menlo, Consolas, 'Courier New', monospace;font-size:12.6px;line-height:1.45;color:rgb(86,116,130);background-color:rgb(243,246,250);border:1px solid rgb(220,230,240);letter-spacing:.2px;"><code class="scala language-scala" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12px;color:rgb(86,116,130);background:transparent;border:0px;line-height:inherit;"><span class="o" style="font-weight:bold;">%</span><span class="n">spark</span><span class="o" style="font-weight:bold;">.</span><span class="n">dep</span>
<span class="n">z</span><span class="o" style="font-weight:bold;">.</span><span class="n">reset</span><span class="o" style="font-weight:bold;">()</span> <span class="c1" style="color:rgb(153,153,136);font-style:italic;">// 清除以前添加的 artifact 和 repository</span>

<span class="c1" style="color:rgb(153,153,136);font-style:italic;">// 添加 maven repository</span>
<span class="n">z</span><span class="o" style="font-weight:bold;">.</span><span class="n">addRepo</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"RepoName"</span><span class="o" style="font-weight:bold;">).</span><span class="n">url</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"RepoURL"</span><span class="o" style="font-weight:bold;">)</span>

<span class="c1" style="color:rgb(153,153,136);font-style:italic;">// 添加 maven snapshot repository</span>
<span class="n">z</span><span class="o" style="font-weight:bold;">.</span><span class="n">addRepo</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"RepoName"</span><span class="o" style="font-weight:bold;">).</span><span class="n">url</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"RepoURL"</span><span class="o" style="font-weight:bold;">).</span><span class="n">snapshot</span><span class="o" style="font-weight:bold;">()</span>

<span class="c1" style="color:rgb(153,153,136);font-style:italic;">// 添加 private maven repository身份验证</span>
<span class="n">z</span><span class="o" style="font-weight:bold;">.</span><span class="n">addRepo</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"RepoName"</span><span class="o" style="font-weight:bold;">).</span><span class="n">url</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"RepoURL"</span><span class="o" style="font-weight:bold;">).</span><span class="n">username</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"username"</span><span class="o" style="font-weight:bold;">).</span><span class="n">password</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"password"</span><span class="o" style="font-weight:bold;">)</span>

<span class="c1" style="color:rgb(153,153,136);font-style:italic;">// 从文件系统中添加 artifact</span>
<span class="n">z</span><span class="o" style="font-weight:bold;">.</span><span class="n">load</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"/path/to.jar"</span><span class="o" style="font-weight:bold;">)</span>

<span class="c1" style="color:rgb(153,153,136);font-style:italic;">// 从maven repository添加没有依赖的artifact  
</span><span class="n">z</span><span class="o" style="font-weight:bold;">.</span><span class="n">load</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"groupId:artifactId:version"</span><span class="o" style="font-weight:bold;">).</span><span class="n">excludeAll</span><span class="o" style="font-weight:bold;">()</span>

<span class="c1" style="color:rgb(153,153,136);font-style:italic;">// add artifact recursively</span>
<span class="n">z</span><span class="o" style="font-weight:bold;">.</span><span class="n">load</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"groupId:artifactId:version"</span><span class="o" style="font-weight:bold;">)</span>

<span class="c1" style="color:rgb(153,153,136);font-style:italic;">// add artifact recursively except comma separated GroupID:ArtifactId list</span>
<span class="n">z</span><span class="o" style="font-weight:bold;">.</span><span class="n">load</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"groupId:artifactId:version"</span><span class="o" style="font-weight:bold;">).</span><span class="n">exclude</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"groupId:artifactId,groupId:artifactId, ..."</span><span class="o" style="font-weight:bold;">)</span>

<span class="c1" style="color:rgb(153,153,136);font-style:italic;">// exclude with pattern</span>
<span class="n">z</span><span class="o" style="font-weight:bold;">.</span><span class="n">load</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"groupId:artifactId:version"</span><span class="o" style="font-weight:bold;">).</span><span class="n">exclude</span><span class="o" style="font-weight:bold;">(*)</span>
<span class="n">z</span><span class="o" style="font-weight:bold;">.</span><span class="n">load</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"groupId:artifactId:version"</span><span class="o" style="font-weight:bold;">).</span><span class="n">exclude</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"groupId:artifactId:*"</span><span class="o" style="font-weight:bold;">)</span>
<span class="n">z</span><span class="o" style="font-weight:bold;">.</span><span class="n">load</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"groupId:artifactId:version"</span><span class="o" style="font-weight:bold;">).</span><span class="n">exclude</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"groupId:*"</span><span class="o" style="font-weight:bold;">)</span>

<span class="c1" style="color:rgb(153,153,136);font-style:italic;">// local() skips adding artifact to spark clusters (skipping sc.addJar())</span>
<span class="n">z</span><span class="o" style="font-weight:bold;">.</span><span class="n">load</span><span class="o" style="font-weight:bold;">(</span><span class="s" style="color:rgb(221,17,68);">"groupId:artifactId:version"</span><span class="o" style="font-weight:bold;">).</span><span class="n">local</span><span class="o" style="font-weight:bold;">()</span></code></pre><br><h3><span style="color:#ff0000;">2: Spark 解释器的配置：</span></h3><p>     在我们下载的spark目录下，有个conf目录主要是对zeppelin进行各种配置的，在启动一个zeppelin执行任务时，也是从这个目录下读取其配置属性。下面我们主要说一下spark的配置属性，在 你的zeppelin目录下的conf/下，你首先需要将zeppelin-env.sh.template  这个示例文件cp成zeppelin-env.sh正式文件，然后在这里面进行我们随心所欲的修改配置参数，包括spark的属性也都可以在这里面进行配置。下面是spark的一些常用属性</p><p></p><table class="table-configuration" style="border-spacing:0px;background-color:rgb(255,255,255);font-size:12.18px;color:rgb(76,85,90);font-family:'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;letter-spacing:.2px;"><tbody><tr><th style="text-align:center;background-color:rgba(91,138,179,.1);border-color:rgb(233,235,236);">Property</th><th style="text-align:center;background-color:rgba(91,138,179,.1);border-color:rgb(233,235,236);">Default</th><th style="text-align:center;background-color:rgba(91,138,179,.1);border-color:rgb(233,235,236);">Description</th></tr><tr><td style="border-color:rgb(233,235,236);">args</td><td style="border-color:rgb(233,235,236);"> </td><td style="border-color:rgb(233,235,236);">Spark commandline args</td></tr><tr><td style="border-color:rgb(233,235,236);">master</td><td style="border-color:rgb(233,235,236);">local[*]</td><td style="border-color:rgb(233,235,236);"><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(247,247,247);color:rgb(76,85,90);">Spark master uri.</span><br style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(247,247,247);"><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(247,247,247);">例如：</span><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(247,247,247);color:rgb(76,85,90);">spark://masterhost:7077</span></td></tr><tr><td style="border-color:rgb(233,235,236);">spark.app.name</td><td style="border-color:rgb(233,235,236);">Zeppelin</td><td style="border-color:rgb(233,235,236);"><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">Spark应用的名称。</span></td></tr><tr><td style="border-color:rgb(233,235,236);">spark.cores.max</td><td style="border-color:rgb(233,235,236);"> </td><td style="border-color:rgb(233,235,236);"><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(247,247,247);">要使用的核心总数。</span><br style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(247,247,247);"><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(247,247,247);">空值时使用所有可用的核心</span></td></tr><tr><td style="border-color:rgb(233,235,236);">spark.executor.memory</td><td style="border-color:rgb(233,235,236);">1g</td><td style="border-color:rgb(233,235,236);"><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">每个worker实例的执行程序内存。</span><br style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">ex）512m，32g</span></td></tr><tr><td style="border-color:rgb(233,235,236);">zeppelin.dep.additionalRemoteRepository</td><td style="border-color:rgb(233,235,236);">spark-packages, <br>http://dl.bintray.com/spark-packages/maven, <br>false;</td><td style="border-color:rgb(233,235,236);">A list of <code style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;color:rgb(86,116,130);background-color:rgb(243,246,250);">id,remote-repository-URL,is-snapshot;</code><br><p>for each remote repository.</p><p><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">每个远程库的list表</span><br></p></td></tr><tr><td style="border-color:rgb(233,235,236);">zeppelin.dep.localrepo</td><td style="border-color:rgb(233,235,236);">local-repo</td><td style="border-color:rgb(233,235,236);"><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">依赖加载器的本地存储库</span></td></tr><tr><td style="border-color:rgb(233,235,236);">zeppelin.pyspark.python</td><td style="border-color:rgb(233,235,236);">python</td><td style="border-color:rgb(233,235,236);"><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(247,247,247);">Python命令来运行pyspark</span></td></tr><tr><td style="border-color:rgb(233,235,236);">zeppelin.spark.concurrentSQL</td><td style="border-color:rgb(233,235,236);">false</td><td style="border-color:rgb(233,235,236);"><p>Execute multiple SQL concurrently if set true</p><p><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">如果设置为true，则同时执行多个SQL。</span>.</p></td></tr><tr><td style="border-color:rgb(233,235,236);">zeppelin.spark.maxResult</td><td style="border-color:rgb(233,235,236);">1000</td><td style="border-color:rgb(233,235,236);"><p>Max number of Spark SQL result to display</p><p><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(247,247,247);">要显示的Spark SQL结果的最大数量。</span>.</p></td></tr><tr><td style="border-color:rgb(233,235,236);">zeppelin.spark.printREPLOutput</td><td style="border-color:rgb(233,235,236);">true</td><td style="border-color:rgb(233,235,236);">Print REPL output</td></tr><tr><td style="border-color:rgb(233,235,236);">zeppelin.spark.useHiveContext</td><td style="border-color:rgb(233,235,236);">true</td><td style="border-color:rgb(233,235,236);"><p>Use HiveContext instead of SQLContext if it is true</p><p><span style="font-family:Arial, sans-serif;font-size:14px;text-align:left;background-color:rgb(247,247,247);">如果设置为true，使用HiveContext而不是SQLContext。</span>.</p></td></tr><tr><td style="border-color:rgb(233,235,236);">zeppelin.spark.importImplicit</td><td style="border-color:rgb(233,235,236);">true</td><td style="border-color:rgb(233,235,236);"><p>Import implicits, UDF collection, and sql if set true</p></td></tr></tbody></table><h4 style="color:rgb(76,85,90);font-family:'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:14px;letter-spacing:.2px;background-color:rgb(255,255,255);">下面就是正经的用到spark解释器的关键设置项了。</h4><h1 style="font-family:'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:14px;letter-spacing:.2px;"><span style="background-color:rgb(255,255,255);"><span style="color:#4c555a;"><br></span></span></h1><h1 style="font-family:'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:14px;letter-spacing:.2px;"><span style="background-color:rgb(255,255,255);"><span style="color:#4c555a;">    </span><span style="color:#3366ff;">Step1:</span><span style="color:#4c555a;"> 设置SPARK_HOME(必设)</span></span></h1><p>   </p><pre style="font-family:Monaco, Menlo, Consolas, 'Courier New', monospace;font-size:12.6px;line-height:1.45;color:rgb(86,116,130);background-color:rgb(243,246,250);border:1px solid rgb(220,230,240);letter-spacing:.2px;"><code class="bash language-bash" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12px;color:rgb(86,116,130);background:transparent;border:0px;line-height:inherit;"><span class="nb" style="color:rgb(0,134,179);"> export </span><span class="nv" style="color:rgb(0,128,128);">SPARK_HOME</span><span class="o" style="font-weight:bold;">=</span>/usr/lib/spark</code></pre><p>   </p><h4 style="font-size:14px;font-family:'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;letter-spacing:.2px;background-color:rgb(255,255,255);"><span style="color:rgb(76,85,90);">  </span></h4><h4 style="font-size:14px;font-family:'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;letter-spacing:.2px;background-color:rgb(255,255,255);"><span style="color:rgb(76,85,90);">    </span><span style="color:#3366ff;">Step2:</span><span style="color:#4c555a;">有选择的设置，但是推荐还是都设置吧</span></h4><p></p><pre style="font-family:Monaco, Menlo, Consolas, 'Courier New', monospace;font-size:12.6px;line-height:1.45;color:rgb(86,116,130);background-color:rgb(243,246,250);border:1px solid rgb(220,230,240);letter-spacing:.2px;"><code class="bash language-bash" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12px;color:rgb(86,116,130);background:transparent;border:0px;line-height:inherit;"><span class="c" style="color:rgb(153,153,136);font-style:italic;"># set hadoop conf dir</span>
<span class="nb" style="color:rgb(0,134,179);">export </span><span class="nv" style="color:rgb(0,128,128);">HADOOP_CONF_DIR</span><span class="o" style="font-weight:bold;">=</span>/usr/lib/hadoop

</code></pre><pre style="font-family:Monaco, Menlo, Consolas, 'Courier New', monospace;font-size:12.6px;line-height:1.45;color:rgb(86,116,130);background-color:rgb(243,246,250);border:1px solid rgb(220,230,240);letter-spacing:.2px;"><code class="bash language-bash" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12px;color:rgb(86,116,130);background:transparent;border:0px;line-height:inherit;">
<span class="c" style="color:rgb(153,153,136);font-style:italic;"># set options to pass spark-submit command</span></code></pre><pre style="font-family:Monaco, Menlo, Consolas, 'Courier New', monospace;font-size:12.6px;line-height:1.45;background-color:rgb(243,246,250);border:1px solid rgb(220,230,240);letter-spacing:.2px;"><code class="bash language-bash" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12px;background:transparent;border:0px;line-height:inherit;">
<span class="nb" style="color:rgb(0,134,179);">export </span><span class="nv" style="color:rgb(0,128,128);">SPARK_SUBMIT_OPTIONS</span><span class="o" style="color:rgb(86,116,130);font-weight:bold;">=</span><span class="s2" style="color:rgb(221,17,68);">"</span></code></pre><pre style="font-family:Monaco, Menlo, Consolas, 'Courier New', monospace;font-size:12.6px;line-height:1.45;color:rgb(86,116,130);background-color:rgb(243,246,250);border:1px solid rgb(220,230,240);letter-spacing:.2px;text-align:left;"><code class="bash language-bash" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12px;color:rgb(86,116,130);background:transparent;border:0px;line-height:inherit;"><span class="s2" style="color:rgb(221,17,68);">--packages com.databricks:spark-csv_2.10:1.2.0 --jars /path/mylib1.jar,/path/mylib2.jar --files /path/mylib1.py,/path/mylib2.zip,/path/mylib3.egg</span></code></pre>"  <pre style="background-color:rgb(243,246,250);font-family:Monaco, Menlo, Consolas, 'Courier New', monospace;font-size:12.6px;line-height:1.45;border:1px solid rgb(220,230,240);letter-spacing:.2px;"><code class="bash language-bash" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12px;line-height:inherit;background:transparent;border:0px;">//你可可以在里面设置你spark submit启动时的参数，比如“--master yarn-client --num executors 10”</code></pre><pre style="font-family:Monaco, Menlo, Consolas, 'Courier New', monospace;font-size:12.6px;line-height:1.45;background-color:rgb(243,246,250);border:1px solid rgb(220,230,240);letter-spacing:.2px;"><code class="bash language-bash" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12px;background:transparent;border:0px;line-height:inherit;">
<span class="c" style="color:rgb(153,153,136);font-style:italic;"># extra classpath. e.g. set classpath for hive-site.xml</span><span style="color:#567482;">
</span><span class="nb" style="color:rgb(0,134,179);">export </span><span class="nv" style="color:rgb(0,128,128);">ZEPPELIN_INTP_CLASSPATH_OVERRIDES</span><span class="o" style="color:rgb(86,116,130);font-weight:bold;">=</span><span style="color:#567482;">/etc/hive/conf</span></code></pre><p>  </p><h4 style="font-size:14px;font-family:'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;letter-spacing:.2px;background-color:rgb(255,255,255);"><span style="color:#3366ff;">     Step3</span><span style="color:rgb(76,85,90);">:  设置master，这个决定你的任务是提交到哪里去具体执行，和spark submit --master local【4】 一个道理         </span></h4><pre style="background-color:rgb(243,246,250);font-family:Monaco, Menlo, Consolas, 'Courier New', monospace;font-size:12.6px;line-height:1.45;border:1px solid rgb(220,230,240);letter-spacing:.2px;"><code class="bash language-bash" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12px;line-height:inherit;background:transparent;border:0px;"><span class="nb" style="color:rgb(0,134,179);">export </span><span class="nb"><span style="color:#008080;">MASTER=yarn-client    //将任务提交到yarn上</span></span></code></pre><pre style="background-color:rgb(243,246,250);font-family:Monaco, Menlo, Consolas, 'Courier New', monospace;font-size:12.6px;line-height:1.45;border:1px solid rgb(220,230,240);letter-spacing:.2px;"><code class="bash language-bash" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12px;line-height:inherit;background:transparent;border:0px;"><span class="nb"><span style="color:#008080;">下面都是可选择的，设置具体根据你自己的需要和你集群实际情况选择</span></span></code></pre><pre style="background-color:rgb(243,246,250);font-family:Monaco, Menlo, Consolas, 'Courier New', monospace;font-size:12.6px;line-height:1.45;border:1px solid rgb(220,230,240);letter-spacing:.2px;"><code class="bash language-bash" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:12px;line-height:inherit;background:transparent;border:0px;"><span class="nb"></span></code></pre><ul style="font-family:'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:14px;letter-spacing:.2px;background-color:rgb(255,255,255);"><li style="margin-left:0px;"><span style="color:#33ff33;"><span>local[*]</span>                         //本地模式</span></li><li style="margin-left:0px;"><span style="color:#33ff33;"><span>spark://master:7077</span>   //spark standalone模式</span></li><li style="margin-left:0px;"><span style="color:#33ff33;"><span>yarn-client</span>                   //yarn模式</span></li><li style="margin-left:0px;"><span style="color:#33ff33;"><span>mesos://host:5050   </span> //mesos cluster模式</span></li></ul><span style="color:#008080;">
</span><p><span style="font-family:Arial, sans-serif;background-color:rgb(255,255,255);">    </span></p><h4 style="font-size:14px;font-family:'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;letter-spacing:.2px;background-color:rgb(255,255,255);"><span style="color:#4c555a;">   </span></h4><h4 style="color:rgb(76,85,90);font-size:14px;font-family:'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;letter-spacing:.2px;background-color:rgb(255,255,255);"><span style="color:#3366ff;">       Step4:   到zeppelin/bin目录下，启动我们的zeppelin吧！zeppelin-daemon.sh restart </span></h4><div><span style="color:#3366ff;"><br></span></div><h3>在zeppelin的web上也有关于<span style="background-color:rgb(255,255,255);color:rgba(21,21,21,.8);font-family:'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:22px;font-weight:bold;letter-spacing:.2px;">Interpreter的设置，在使用的时候要留意，下一篇再讲。</span></h3><div><span style="background-color:rgb(255,255,255);color:rgba(21,21,21,.8);font-family:'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:22px;font-weight:bold;letter-spacing:.2px;">下面附上我的配置截图，仅供参考！</span></div><p><img src="https://img-blog.csdn.net/2018032320374229" alt=""></p><p><img src="https://img-blog.csdn.net/20180323203853811" alt=""></p>            </div>
                </div>