---
layout:     post
title:      spark-基础框架
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/javasunson/article/details/75084717				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
spark<br><span></span>特点<br><span></span><span></span>1、计算引擎<br><span></span>生态<br><span></span><span></span>Spark Streaming<br><span></span><span></span>1、微批量方式的计算和处理，可以用于处理实时的流数据<br><span></span><span></span>Spark SQL<br><span></span><span></span>1、Spark SQL可以通过JDBC API将Spark数据集暴露出去<br><span></span><span></span>Spark MLlib<br><span></span><span></span>可扩展的Spark机器学习库，由通用的学习算法和工具组成<br><span></span><span></span>Spark GraphX:<br><span></span><span></span>图计算和并行图计算的新的（alpha）Spark API<br><span></span><span></span>Shark（已放弃）<br><span></span><span></span>1、Hive的API来实现query Parsing和 Logic Plan generation<br><span></span><span></span>2、PhysicalPlan execution阶段用Spark代替HadoopMapReduce<br><span></span><span></span>3、UDF用户自定义函数实现特定的数据分析学习算法，SQL数据查询和运算分析能结合在一起，最大化RDD<br><span></span><span></span>SparkR<br><span></span><span></span>1、SparkR提供了一个分布式的data frame数据结构<br><span></span><span></span>2、R中的data frame只能在单机中使用的瓶颈<br><span></span><span></span>3、支持分布式的机器学习算法 Mlib<br><span></span><span></span>BlinkDB<br><span></span><span></span>近似查询引擎，用于在海量数据上执行交互式SQL查询<br><span></span><span></span>Tachyon<br><span></span><span></span>以内存为中心的分布式文件系统，能够提供内存级别速度的跨集群框架<br><span></span>框架<br><span></span><span></span>数据存储<br><span></span><span></span>HDFS文件系统存储数据。它可用于存储任何兼容于Hadoop的数据源，包括HDFS，HBase，Cassandra<br><span></span><span></span>API<br><span></span><span></span>应用开发者可以用标准的API接口创建基于Spark的应用<br><span></span><span></span>管理框架<br><span></span><span></span>RDD<br><span></span><span></span>Transformation：map，filter，flatMap，groupByKey，reduceByKey，aggregateByKey，pipe和coalesce<br><span></span><span></span>Action：reduce，collect，count，first，take，countByKey以及foreach<br><span></span><span></span>优化<br><span></span><span></span>依赖<br><span></span><span></span>懒惰计算<br><span></span><span></span>DAG<br><span></span>开发<br><span></span><span></span>1、Java、Scala或Python编写程序、Clojure、R<br><span></span><span></span>2、SQL、DataFrames、MLlib、GraphX、Spark Streaming<br><span></span><span></span>3、高级API<br><span></span><span></span>4、超过80个高阶操作符集合<br><span></span>管理<br><span></span><span></span>交互方式<br><span></span><span></span>Spark shell：python、scala、not support java<br><span></span><span></span>Spark网页控制台<br><span></span>优化<br><span></span><span></span>变量<br><span></span><span></span>广播变量<br><span></span><span></span>累加器<br><span></span>VS<br><span></span><span></span>VS- Hadoop<br><span></span><span></span>1、内存计算下，Spark 比 Hadoop 快100倍<br><span></span><span></span>2、拥有Hadoop MapReduce所具有的优点<br><span></span><span></span>3、可以在 Hadoop 文件系统中并行运行<br><span></span><span></span>4、Job中间输出结果可以保存在内存<br><span></span><span></span>VS- R<br><span></span><span></span>VS- Storm<br><span></span>应用<br><span></span><span></span>1、交互式计算和复杂算法<br><span></span><span></span>2、通用引擎，SQL 查询、文本处理、机器学习<br><span></span>集群<br><span></span><span></span>1、开源集群计算环境<br><span></span><span></span>2、Spark 启用了内存分布数据集<br><p><span></span><span></span>3、Hadoop YARN，Apache Mesos</p>
<p><img src="https://img-blog.csdn.net/20170713170338200?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamF2YXN1bnNvbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></p>
<p><br></p>
            </div>
                </div>