---
layout:     post
title:      Flume分布式日志系统（三）
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
flume提供了flume shell方式来管理，非常强大。
<p>1. 连接</p>
<p>可以使用 “flume shell”进入flume命令行环境，“connect”命令可以用来连接任何的flume的master服务器。</p>
<p>[root@test01] ~<br>
0 $ flume shell<br>
[flume (disconnected)] connect test01.linuxjcq.com:35873<br>
Using default report port: 45678<br>
Connecting to Flume master test01.linuxjcq.com:35873:45678...<br>
2012-01-12 15:00:43,037 [main] INFO util.AdminRPCThrift: Connected to master at<br>
test01.linuxjcq.com:35873<br>
[flume test01.linuxjcq.com:35873:45678]</p>
<p>连接master使用的端口号为flume.config.admin.port，默认值为35873</p>
<p>Flume shell的命令行参数如下：</p>
<p>usage: FlumeShell [-?] [-c &lt;arg&gt;] [-e &lt;arg&gt;] [-q] [-s &lt;arg&gt;]<br>
 -?         Command line usage<br>
 -c &lt;arg&gt;   Connect to master:adminport:reportport<br>
 -e &lt;arg&gt;   Run a single command<br>
 -q         Run in quiet mode - only print command results<br>
 -s &lt;arg&gt;   Run a FlumeShell script</p>
<p>-c：使用命令行直接连接master:adminport:report</p>
<p>-e：执行后面跟的单个命令</p>
<p>-q：以静默方式运行，仅打印命令的结果</p>
<p>-s：执行flume shell脚本</p>
<p>2. Flume 命令</p>
<p>flume命令支持tab自动扩展。</p>
<p>help：获取帮助</p>
<p>connect master:port：连接master</p>
<p>config logicalnode source sink：为逻辑节点配置一个source到sink的映射</p>
<p>getnodestatus：获得节点的状态，有HELLO，CONFIGURING，ACTIVE，IDLE，ERROR，DECOMMISIONED或LOST状态。node启动时，HELLO；node被配置后，CONFIGURING；一个event从source送到sink，ACTIVE；source中所有的event发送完毕后，IDLE；node故障退出，数据没有flush，ERROR；node被master移除，DECOMMISSIONED；master长时间未收到node心跳，LOST；</p>
<p>getconfigs：获得配置信息</p>
<p>getmappings [physical node]：显示所有的logical node到physical node的映射关系，如果指定physical node，则显示指定节点的信息</p>
<p>exec：同步执行命令</p>
<p>source file：执行脚本</p>
<p>submit：异步执行命令</p>
<p>wait ms [cmdid]：设置一个时间，周期性检查命令进行的状态（success or failur）</p>
<p>waitForNodesActive ms node1 [node2 [...]]：设置一个时间，检查node是否处于使用（CONFIGURING，ACTIVE）状态</p>
<p>waitForNodesDone ms node [node2 [...]]：设置一个时间，检查node是否处于未用（IDLE，ERROR，LOST）状态</p>
<p>quit：退出</p>
<p>3. 执行和提交命令</p>
<p>格式为：</p>
<p>exec command [arg1 [_arg2 [ ... ] ] ]</p>
<p>submit command [arg1 [_arg2 [...] ] ]</p>
<p>复杂的参数形式，像多个空格，非字符字母可以使用单引号和双引号。</p>
<p>双引号：包含转义字符的java string</p>
<p>单引号：能包含除单引号之外的所有字符</p>
<p>noop：连接master，执行空操作</p>
<p>config logicalnode source sink：为logical node配置source到sink的映射</p>
<p>multiconfig flumespec：按指定的格式对多个node进行配置</p>
<p>unconfig logicalnode：取消logical node的配置</p>
<p>refresh logicalnode：刷新逻辑节点的配置，强制逻辑节点重启。影响master调整故障转移列表（failover list）</p>
<p>refreshAll logicalnode：刷新</p>
<p>save filename：保存当前配置到文件</p>
<p>load filename：从master中载入filename文件的配置</p>
<p>map physicalnode logicalnode：创建physical node到logical node的映射，master配置将会被同步到逻辑节点</p>
<p>spawn physicalnode logicalnode：这个接口已经淘汰</p>
<p>decommission logicalnode：从配置文件中移除这个逻辑节点，并取消到对应物理节点的映射</p>
<p>unmap physicalnode logicalnode：取消logical node和physical node的映射</p>
<p>unmapALL：取消全部物理节点和逻辑节点间的映射</p>
<p>purge logicalnode：清除状态，类似于重启一个logical node。对于移除DECOMMISSIONED或者LOST node非常有用</p>
<p>purgeAll：清除所有logical node的状态</p>
            </div>
                </div>