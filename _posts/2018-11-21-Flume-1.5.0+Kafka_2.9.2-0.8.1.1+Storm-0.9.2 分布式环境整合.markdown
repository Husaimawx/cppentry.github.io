---
layout:     post
title:      Flume-1.5.0+Kafka_2.9.2-0.8.1.1+Storm-0.9.2 分布式环境整合
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<div style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<strong># 学习前言 </strong></div>
<div style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<br>
</div>
<div style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="font-size:12px; background-color:rgb(51,255,255)">本博文整合Flume+Kafka+Storm中的Eclipse工程代码下载地址<a target="_blank" href="http://download.csdn.net/detail/u012185296/7633405" rel="nofollow" style="color:blue; text-decoration:none">http://download.csdn.net/detail/u012185296/7633405</a></span></div>
<div style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<br>
</div>
<h2 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t1" style="color:rgb(51,102,153)"></a># Flume的学习请参考<span style="font-size:20px; color:red"></span><a target="_blank" href="http://blog.csdn.net/u012185296/article/details/34424139" rel="nofollow" style="color:blue; text-decoration:none; font-size:20px">_00016
 Flume的体系结构介绍以及Flume入门案例(往HDFS上传数据)</a>这篇博文</h2>
<h2 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t2" style="color:rgb(51,102,153)"></a># Kafka的学习请参考<span style="font-size:20px; color:red"></span><a target="_blank" href="http://blog.csdn.net/u012185296/article/details/36418827" rel="nofollow" style="color:blue; text-decoration:none; font-size:20px">_00017
 Kafka的体系结构介绍以及Kafka入门案例(初级案例+Java API的使用)</a>这篇博文</h2>
<h2 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t3" style="color:rgb(51,102,153)"></a># Storm的学习请参考<span style="font-size:20px; color:red"></span><a target="_blank" href="http://blog.csdn.net/u012185296/article/details/37527015" rel="nofollow" style="color:blue; text-decoration:none; font-size:20px">_00019
 Storm的体系结构介绍以及Storm入门案例(官网上的简单Java案例)</a>这篇博文</h2>
<div style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
请学习了以上直来再来进行环境整合，你懂的，不解释 ...（纳尼？路都不会走你就想跑了，饿特么就是一巴掌 、、、）</div>
<h2 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t4" style="color:rgb(51,102,153)"></a># 整合场景</h2>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">使用</span><span style="color:red; background:rgb(217,217,217)">Flume</span><span style="background:rgb(217,217,217)">监控指定目录，出现新的日志文件后将文件数据传到</span><span style="color:red; background:rgb(217,217,217)">Kafka</span><span style="background:rgb(217,217,217)">，最后由</span><span style="color:red; background:rgb(217,217,217)">Storm</span><span style="background:rgb(217,217,217)">从</span><span style="color:red; background:rgb(217,217,217)">Kafka</span><span style="background:rgb(217,217,217)">中取出数据并显示</span><span style="background:rgb(217,217,217)">、、、</span></p>
<h2 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t5" style="color:rgb(51,102,153)"></a># Flume+Kafka的整合</h2>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t6" style="color:rgb(51,102,153)"></a># Flume的fks001.conf的配置文件</h3>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
监控指定目录<span style="color:red">/usr/local/yting/flume/tdata/tdir1</span>，然后使用自定义的Sink（<span style="color:red">com.yting.cloud.flume.sink.KafkaSink</span>），将数据传入Kafka</p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">root@rs229 fks]# pwd</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">/usr/local/adsit/yting/apache/flume/apache-flume-1.5.0-bin/conf/ytconf/fks</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 fks]# vi fks001.conf</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"># fks : yting yousmile flume kafka storm integration</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">fks.sources=source1</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">fks.sinks=sink1</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">fks.channels=channel1</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"># configure source1</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">fks.sources.source1.type=spooldir</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">fks.sources.source1.spoolDir=<span style="color:red">/usr/local/yting/flume/tdata/tdir1</span></span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">fks.sources.source1.fileHeader = false</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"># configure sink1</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">fks.sinks.sink1.type=<span style="color:red">com.yting.cloud.flume.sink.KafkaSink    #</span></span><span style="color:red; background:rgb(217,217,217)">（自定义</span><span style="color:red; background:rgb(217,217,217)">Sink</span><span style="color:red; background:rgb(217,217,217)">，</span><span style="color:red; background:rgb(217,217,217)">Flume</span><span style="color:red; background:rgb(217,217,217)">监控数据传入</span><span style="color:red; background:rgb(217,217,217)">Kafka</span><span style="color:red; background:rgb(217,217,217)">）</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"># configure channel1</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">fks.channels.channel1.type=file</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">fks.channels.channel1.checkpointDir=<span style="color:red">/usr/local/yting/flume/checkpointdir/tcpdir/example_fks_001</span></span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">fks.channels.channel1.dataDirs=<span style="color:red">/usr/local/yting/flume/datadirs/tddirs/example_fks_001</span></span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"># bind source and sink</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">fks.sources.source1.channels=channel1</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">fks.sinks.sink1.channel=channel1</span></p>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t7" style="color:rgb(51,102,153)"></a># Kafka 的server.properties配置文件</h3>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 ytconf]# pwd</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/config/ytconf</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 ytconf]# vi server.properties</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"># A comma seperated list of directories under whichto store log files</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"># log.dirs=/tmp/kafka-logs</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="color:red; background:rgb(217,217,217)">log.dirs=/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/kafka-logs</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"># root directory for all kafka znodes.</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="color:red; background:rgb(217,217,217)">zookeeper.connect=rs229:2181,rs227:2181,rs226:2181,rs198:2181,rs197:2181/kafka</span></p>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t8" style="color:rgb(51,102,153)"></a># jar包的复制，Kafka中的jar包复制到Flume中去，因为自定义的Sink（<span style="color:red; background:rgb(217,217,217)">com.yting.cloud.flume.sink.KafkaSink</span>）会用到，如果不做这一步，会抱异常的！</h3>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 lib]# pwd</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">/usr/local/adsit/yting/apache/flume/apache-flume-1.5.0-bin/lib</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 lib]# cp/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/libs/* .</span></p>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t9" style="color:rgb(51,102,153)"></a># 使用Eclipse将自定义的Sink（<span style="color:red; background:rgb(217,217,217)">com.yting.cloud.flume.sink.KafkaSink</span>）打成jar包放入$FLUME_HOME/libs目录下去</h3>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
纳尼？这里不会，那你还是跟饿学养猪吧 、、、</p>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t10" style="color:rgb(51,102,153)"></a># Kafka的启动</h3>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 kafka_2.9.2-0.8.1.1]# pwd</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 kafka_2.9.2-0.8.1.1]# <span style="color:red">bin/kafka-server-start.sh config/ytconf/server.properties&amp;</span></span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[1] 24672</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 kafka_2.9.2-0.8.1.1]# [2014-07-1411:48:24,533] INFO Verifying properties (kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,572] INFO Property broker.id isoverridden to 0 (kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,572] INFO Propertylog.cleaner.enable is overridden to false (kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,572] INFO Property log.dirs isoverridden to/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/kafka-logs(kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,572] INFO Propertylog.retention.check.interval.ms is overridden to 60000(kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,572] INFO Propertylog.retention.hours is overridden to 168 (kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,573] INFO Propertylog.segment.bytes is overridden to 536870912 (kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,573] INFO Propertynum.io.threads is overridden to 8 (kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,573] INFO Propertynum.network.threads is overridden to 2 (kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,573] INFO Property num.partitionsis overridden to 2 (kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,573] INFO Property port isoverridden to 9092 (kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,573] INFO Propertysocket.receive.buffer.bytes is overridden to 1048576(kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,574] INFO Propertysocket.request.max.bytes is overridden to 104857600(kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,574] INFO Propertysocket.send.buffer.bytes is overridden to 1048576 (kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,574] INFO Propertyzookeeper.connect is overridden tors229:2181,rs227:2181,rs226:2181,rs198:2181,rs197:2181/kafka(kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,574] INFO Property zookeeper.connection.timeout.msis overridden to 1000000 (kafka.utils.VerifiableProperties)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,590] INFO [Kafka Server 0],starting (kafka.server.KafkaServer)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,592] INFO [Kafka Server 0],Connecting to zookeeper on rs229:2181,rs227:2181,rs226:2181,rs198:2181,rs197:2181/kafka(kafka.server.KafkaServer)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,603] INFO Starting ZkClientevent thread. (org.I0Itec.zkclient.ZkEventThread)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:zookeeper.version=3.3.3-1203054, built on 11/17/2011 05:47 GMT(org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:host.name=rs229 (org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:java.version=1.7.0_60 (org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:java.home=/usr/local/adsit/yting/jdk/jdk1.7.0_60/jre(org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:java.class.path=:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../core/build/dependant-libs-2.8.0/*.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../perf/build/libs//kafka-perf_2.8.0*.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../clients/build/libs//kafka-clients*.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../examples/build/libs//kafka-examples*.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../contrib/hadoop-consumer/build/libs//kafka-hadoop-consumer*.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../contrib/hadoop-producer/build/libs//kafka-hadoop-producer*.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../libs/jopt-simple-3.2.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../libs/kafka_2.9.2-0.8.1.1.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../libs/kafka_2.9.2-0.8.1.1-javadoc.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../libs/kafka_2.9.2-0.8.1.1-scaladoc.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../libs/kafka_2.9.2-0.8.1.1-sources.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../libs/log4j-1.2.15.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../libs/metrics-core-2.2.0.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../libs/scala-library-2.9.2.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../libs/slf4j-api-1.7.2.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../libs/snappy-java-1.0.5.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../libs/zkclient-0.3.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../libs/zookeeper-3.3.4.jar:/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/bin/../core/build/libs/kafka_2.8.0*.jar(org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib(org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:java.compiler=&lt;NA&gt; (org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:os.name=Linux (org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:os.version=2.6.32-279.el6.x86_64 (org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:user.name=root (org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Client environment:user.home=/root(org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,610] INFO Clientenvironment:user.dir=/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1(org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,611] INFO Initiating client connection,connectString=rs229:2181,rs227:2181,rs226:2181,rs198:2181,rs197:2181/kafkasessionTimeout=6000 watcher=org.I0Itec.zkclient.ZkClient@7c8b7ac9(org.apache.zookeeper.ZooKeeper)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,625] INFO Opening socketconnection to server rs198/116.255.234.198:2181(org.apache.zookeeper.ClientCnxn)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,631] INFO Socket connectionestablished to rs198/116.255.234.198:2181, initiating session(org.apache.zookeeper.ClientCnxn)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,642] INFO Session establishmentcomplete on server rs198/116.255.234.198:2181, sessionid = 0xc6472c07f50b0000,negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,645] INFO zookeeper statechanged (SyncConnected) (org.I0Itec.zkclient.ZkClient)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,892] INFO Found clean shutdownfile. Skipping recovery for all logs in data directory'/usr/local/adsit/yting/apache/kafka/kafka_2.9.2-0.8.1.1/kafka-logs'(kafka.log.LogManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,894] INFO Loading log'flume-kafka-storm-001-0' (kafka.log.LogManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,945] INFO Completed load of logflume-kafka-storm-001-0 with log end offset 18 (kafka.log.Log)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">SLF4J: Failed to load class"org.slf4j.impl.StaticLoggerBinder".</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">SLF4J: Defaulting to no-operation (NOP) loggerimplementation</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">SLF4J: Seehttp://www.slf4j.org/codes.html#StaticLoggerBinder for further details.</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,966] INFO Loading log'flume-kafka-storm-001-1' (kafka.log.LogManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,969] INFO Completed load of logflume-kafka-storm-001-1 with log end offset 7 (kafka.log.Log)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,970] INFO Loading log'test001-1' (kafka.log.LogManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,973] INFO Completed load of logtest001-1 with log end offset 0 (kafka.log.Log)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,974] INFO Loading log'test003-1' (kafka.log.LogManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,976] INFO Completed load of logtest003-1 with log end offset 47 (kafka.log.Log)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,977] INFO Loading log'test004-0' (kafka.log.LogManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,980] INFO Completed load of logtest004-0 with log end offset 51 (kafka.log.Log)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,981] INFO Loading log'test004-1' (kafka.log.LogManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,984] INFO Completed load of logtest004-1 with log end offset 49 (kafka.log.Log)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,985] INFO Loading log'test002-0' (kafka.log.LogManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,987] INFO Completed load of logtest002-0 with log end offset 0 (kafka.log.Log)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,987] INFO Loading log'test001-0' (kafka.log.LogManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,991] INFO Completed load of logtest001-0 with log end offset 0 (kafka.log.Log)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,991] INFO Loading log'test002-1' (kafka.log.LogManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,993] INFO Completed load of logtest002-1 with log end offset 0 (kafka.log.Log)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,994] INFO Loading log'test003-0' (kafka.log.LogManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,997] INFO Completed load of logtest003-0 with log end offset 53 (kafka.log.Log)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:24,999] INFO Starting log cleanup witha period of 60000 ms. (kafka.log.LogManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:25,003] INFO Starting log flusherwith a default period of 9223372036854775807 ms. (kafka.log.LogManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:25,031] INFO Awaiting socketconnections on 0.0.0.0:9092. (kafka.network.Acceptor)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:25,032] INFO [Socket Server onBroker 0], Started (kafka.network.SocketServer)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:25,143] INFO Will not load MX4J,mx4j-tools.jar is not in the classpath (kafka.utils.Mx4jLoader$)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:25,163] INFO 0 successfully electedas leader (kafka.server.ZookeeperLeaderElector)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:25,639] INFO New leader is 0(kafka.server.ZookeeperLeaderElector$LeaderChangeListener)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:25,645] INFO Registered broker 0 atpath /brokers/ids/0 with address rs229:9092. (kafka.utils.ZkUtils$)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:25,660] INFO [Kafka Server 0],started (kafka.server.KafkaServer)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:25,942] INFO [ReplicaFetcherManageron broker 0] Removed fetcher for partitions [test001,0],[test003,1],[test003,0],[flume-kafka-storm-001,1],[flume-kafka-storm-001,0],[test004,1],[test004,0],[test001,1],[test002,0],[test002,1](kafka.server.ReplicaFetcherManager)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2014-07-14 11:48:26,045] INFO [ReplicaFetcherManageron broker 0] Removed fetcher for partitions[test001,0],[test003,1],[test003,0],[flume-kafka-storm-001,1],[flume-kafka-storm-001,0],[test004,1],[test004,0],[test001,1],[test002,0],[test002,1](kafka.server.ReplicaFetcherManager)</span></p>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t11" style="color:rgb(51,102,153)"></a># Flume的启动</h3>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 apache-flume-1.5.0-bin]# <span style="color:red">bin/flume-ng agent -n fks -c conf/ -fconf/ytconf/fks/fks001.conf -Dflume.root.logger=INFO,console &amp;</span></span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">2014-07-14 11:50:13,882 (lifecycleSupervisor-1-0)[INFO - org.apache.flume.source.SpoolDirectorySource.start(SpoolDirectorySource.java:77)]<span style="color:red">SpoolDirectorySource source starting with directory:/usr/local/yting/flume/tdata/tdir1</span></span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">2014-07-14 11:50:13,912 (lifecycleSupervisor-1-0)[INFO -org.apache.flume.instrumentation.MonitoredCounterGroup.register(MonitoredCounterGroup.java:119)]<span style="color:red">Monitored counter group for type: SOURCE,
 name:source1: Successfully registered new MBean.</span></span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">2014-07-14 11:50:13,916 (lifecycleSupervisor-1-0)[INFO -org.apache.flume.instrumentation.MonitoredCounterGroup.start(MonitoredCounterGroup.java:95)]<span style="color:red">Component type: SOURCE, name: source1 started</span></span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">2014-07-14 11:50:13,916 (pool-4-thread-1) [INFO -org.apache.flume.source.SpoolDirectorySource$SpoolDirectoryRunnable.run(SpoolDirectorySource.java:254)]Spooling Directory Source runner has shutdown.</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">2014-07-14 11:50:14,417 (pool-4-thread-1) [INFO -org.apache.flume.source.SpoolDirectorySource$SpoolDirectoryRunnable.run(SpoolDirectorySource.java:254)]Spooling Directory Source runner has shutdown.</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
这样Flume就算启动成功了，并且如果你的监控目录下出现新的日志文件的话，日志文件中的信息会传到Kafka中去，你懂的！</p>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t12" style="color:rgb(51,102,153)"></a># 在Flume的监控目录下新建一个文件试试</h3>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 ytconf]# cd/usr/local/yting/flume/tdata/tdir1/</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 tdir1]# ll</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">total 0</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 tdir1]# vi yousmile.log</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">The you smile until forever .....................</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 tdir1]# ll</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">total 1</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">-<span style="color:red">rw-r--r-- 1 root root   50 Jul 14 13:57 yousmile.log.COMPLETED</span></span><span style="background:rgb(217,217,217)">（说明已经被</span><span style="background:rgb(217,217,217)">Flume</span><span style="background:rgb(217,217,217)">处理过了）</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 tdir1]#</span></p>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t13" style="color:rgb(51,102,153)"></a># Eclipse下链接服务器查看Flume的自定义Sink是否将数据传到Kafka中去了</h3>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t14" style="color:rgb(51,102,153)"></a># MySimpleConsumer.java（Eclipse下运行即可得到结果）</h3>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">package com.yting.cloud.kafa.consumer;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import kafka.api.FetchRequest;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import kafka.api.FetchRequestBuilder;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import kafka.api.PartitionOffsetRequestInfo;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import kafka.common.ErrorMapping;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import kafka.common.TopicAndPartition;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import kafka.javaapi.*;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import kafka.javaapi.consumer.SimpleConsumer;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import kafka.message.MessageAndOffset;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.nio.ByteBuffer;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.ArrayList;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.Collections;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.HashMap;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.List;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.Map;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">/**</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> * Kafka</span><span style="background:rgb(217,217,217)">官网给的案例</span><span style="background:rgb(217,217,217)">SimpleConsumer</span><span style="background:rgb(217,217,217)">，饿在</span><span style="background:rgb(217,217,217)">Eclipse</span><span style="background:rgb(217,217,217)">本地连接服务器测试，所以修改了一些代码</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> *</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> * @Author </span><span style="background:rgb(217,217,217)">王扬庭</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> * @Time2014-07-14</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> *</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> */</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">public class MySimpleConsumer {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicstatic void main(String args[]) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              MySimpleConsumerexample = new MySimpleConsumer();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              //long maxReads = Long.parseLong(args[0]);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              //String topic = args[1];</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              //int partition = Integer.parseInt(args[2]);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              //seeds.add(args[3]);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              //int port = Integer.parseInt(args[4]);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              longmaxReads = 100;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//            Stringtopic = "yting_page_visits";</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//            Stringtopic = "test003";</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              Stringtopic = "flume-kafka-storm-001";</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//            intpartition = 0;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              intpartition = 1; // The you smile until forever .....................</span><span style="background:rgb(217,217,217)">日志文件中的这条信息被送到分区</span><span style="background:rgb(217,217,217)">1</span><span style="background:rgb(217,217,217)">中去了，默认</span><span style="background:rgb(217,217,217)">2</span><span style="background:rgb(217,217,217)">分区</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              List&lt;String&gt;seeds = new ArrayList&lt;String&gt;();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//            seeds.add("rs229");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              seeds.add("rs229");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              seeds.add("rs227");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              seeds.add("rs226");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              seeds.add("rs198");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              seeds.add("rs197");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              intport = Integer.parseInt("9092");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              try{</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     example.run(maxReads,topic, partition, seeds, port);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              }catch (Exception e) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     System.out.println("Oops:"+ e);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     e.printStackTrace();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       privateList&lt;String&gt; m_replicaBrokers = new ArrayList&lt;String&gt;();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicMySimpleConsumer() {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              m_replicaBrokers= new ArrayList&lt;String&gt;();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicvoid run(long a_maxReads, String a_topic, int a_partition, List&lt;String&gt;a_seedBrokers, int a_port) throws Exception {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              //find the meta data about the topic and partition we are interested in</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              //</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              PartitionMetadatametadata = findLeader(a_seedBrokers, a_port, a_topic,</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            a_partition);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              if(metadata == null) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     System.out.println("Can'tfind metadata for Topic and Partition. Exiting");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     return;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              if(metadata.leader() == null) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     System.out.println("Can'tfind Leader for Topic and Partition. Exiting");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     return;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              StringleadBroker = metadata.leader().host();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              StringclientName = "Client_" + a_topic + "_" + a_partition;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              SimpleConsumerconsumer = new SimpleConsumer(leadBroker, a_port, 100000, 64 * 1024,clientName);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              longreadOffset = getLastOffset(consumer, a_topic, a_partition,kafka.api.OffsetRequest.EarliestTime(), clientName);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              intnumErrors = 0;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              while(a_maxReads &gt; 0) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     if(consumer == null) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            consumer= new SimpleConsumer(leadBroker, a_port, 100000, 64 * 1024, clientName);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     FetchRequestreq = new FetchRequestBuilder().clientId(clientName)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   .addFetch(a_topic,a_partition, readOffset, 100000) // Note: this fetchSize of 100000 might needto be increased if large batches are written to Kafka</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   .build();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     FetchResponsefetchResponse = consumer.fetch(req);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     if(fetchResponse.hasError()) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            numErrors++;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            //Something went wrong!</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            shortcode = fetchResponse.errorCode(a_topic, a_partition);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            System.out.println("Errorfetching data from the Broker:" + leadBroker + " Reason: " +code);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            if(numErrors &gt; 5)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   break;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            if(code == ErrorMapping.OffsetOutOfRangeCode()) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   //We asked for an invalid offset. For simple case ask for</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   //the last element to reset</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   readOffset= getLastOffset(consumer, a_topic, a_partition,kafka.api.OffsetRequest.LatestTime(), clientName);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   continue;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            consumer.close();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            consumer= null;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            leadBroker= findNewLeader(leadBroker, a_topic, a_partition, a_port);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            continue;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     numErrors= 0;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     longnumRead = 0;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     for(MessageAndOffset messageAndOffset : fetchResponse.messageSet(a_topic,a_partition)) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            longcurrentOffset = messageAndOffset.offset();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            if(currentOffset &lt; readOffset) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   System.out.println("Foundan old offset: " + currentOffset + " Expecting: " + readOffset);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   continue;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            readOffset =messageAndOffset.nextOffset();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            ByteBufferpayload = messageAndOffset.message().payload();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            byte[]bytes = new byte[payload.limit()];</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            payload.get(bytes);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            System.out.println(String.valueOf(messageAndOffset.offset())+ ": " + new String(bytes, "UTF-8"));</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            numRead++;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            a_maxReads--;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     if(numRead == 0) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            try{</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   Thread.sleep(1000);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            }catch (InterruptedException ie) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              if(consumer != null)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     consumer.close();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicstatic long getLastOffset(SimpleConsumer consumer, String topic,</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     intpartition, long whichTime, String clientName) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              TopicAndPartitiontopicAndPartition = new TopicAndPartition(topic, partition);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              Map&lt;TopicAndPartition,PartitionOffsetRequestInfo&gt; requestInfo = new HashMap&lt;TopicAndPartition,PartitionOffsetRequestInfo&gt;();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              requestInfo.put(topicAndPartition,new PartitionOffsetRequestInfo(whichTime, 1));</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              kafka.javaapi.OffsetRequestrequest = new kafka.javaapi.OffsetRequest(requestInfo, kafka.api.OffsetRequest.CurrentVersion(),clientName);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              OffsetResponseresponse = consumer.getOffsetsBefore(request);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              if(response.hasError()) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     System.out.println("Errorfetching data Offset Data the Broker. Reason: "+ response.errorCode(topic,partition));</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     return0;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              long[]offsets = response.offsets(topic, partition);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              returnoffsets[0];</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       privateString findNewLeader(String a_oldLeader, String a_topic,</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     inta_partition, int a_port) throws Exception {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              for(int i = 0; i &lt; 3; i++) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     booleangoToSleep = false;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     PartitionMetadatametadata = findLeader(m_replicaBrokers, a_port, a_topic, a_partition);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     if(metadata == null) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            goToSleep= true;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     }else if (metadata.leader() == null) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            goToSleep= true;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     }else if (a_oldLeader.equalsIgnoreCase(metadata.leader().host())</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   &amp;&amp;i == 0) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            //first time through if the leader hasn't changed give</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            //ZooKeeper a second to recover</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            //second time, assume the broker did recover before failover,</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            //or it was a non-Broker issue</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            //</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            goToSleep= true;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     }else {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            returnmetadata.leader().host();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     if(goToSleep) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            try{</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   Thread.sleep(1000);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            }catch (InterruptedException ie) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              System.out.println("Unableto find new leader after Broker failure. Exiting");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              thrownew Exception("Unable to find new leader after Broker failure.Exiting");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       privatePartitionMetadata findLeader(List&lt;String&gt; a_seedBrokers, int a_port,String a_topic, int a_partition) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              PartitionMetadatareturnMetaData = null;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              loop:for (String seed : a_seedBrokers) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     SimpleConsumerconsumer = null;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     try{</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            consumer= new SimpleConsumer(seed, a_port, 100000, 64 * 1024,"leaderLookup");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            List&lt;String&gt;topics = Collections.singletonList(a_topic);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            TopicMetadataRequestreq = new TopicMetadataRequest(topics);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            kafka.javaapi.TopicMetadataResponseresp = consumer.send(req);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            List&lt;TopicMetadata&gt;metaData = resp.topicsMetadata();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            for(TopicMetadata item : metaData) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   for (PartitionMetadata part: item.partitionsMetadata()) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                          if(part.partitionId() == a_partition) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                                 returnMetaData= part;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                                 breakloop;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                          }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     }catch (Exception e) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            System.out.println("Errorcommunicating with Broker [" + seed + "] to find Leader for [" +a_topic + ", " + a_partition + "] Reason: " + e);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     }finally {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            if(consumer != null)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                                   consumer.close();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              if(returnMetaData != null) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     m_replicaBrokers.clear();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     for(kafka.cluster.Broker replica : returnMetaData.replicas()) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                            m_replicaBrokers.add(replica.host());</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">                     }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              returnreturnMetaData;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">}</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"><img src="https://img-blog.csdn.net/20140714153135476?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjE4NTI5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:none; max-width:100%"><br>
</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
这张图是Eclipse下运行结果 、、、</p>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t15" style="color:rgb(51,102,153)"></a># Flume+Kafka整合成功，下面开始Kafka+Storm整合</h3>
<h2 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t16" style="color:rgb(51,102,153)"></a># Kafka+Storm的整合</h2>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t17" style="color:rgb(51,102,153)"></a># Kafka的启动（这个在Flume+Kafka的整合中Kafka已经启动了，所以不需要再启动了）</h3>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t18" style="color:rgb(51,102,153)"></a># Storm的启动</h3>
<h4 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<a target="_blank" name="t19" style="color:rgb(51,102,153)"></a># Storm nimbus的启动</h4>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
[root@rs229 apache-storm-0.9.2-incubating]#bin/storm nimbus &amp;</p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="color:red">[1] 26815</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
[root@rs229 apache-storm-0.9.2-incubating]#Running: /usr/local/adsit/yting/jdk/jdk1.7.0_60/bin/java -server-Dstorm.options= -Dstorm.home=/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating-Djava.library.path=/usr/local/lib:/opt/local/lib:/usr/lib
 -Dstorm.conf.file=-cp / /usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/lib/zkclient-0.3.jar:/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/conf-Xmx1024m -Dlogfile.name=nimbus.log-Dlogback.configurationFile=/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/logback/cluster.xmlbacktype.<span style="color:red">storm.daemon.nimbus</span></p>
<h4 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<a target="_blank" name="t20" style="color:rgb(51,102,153)"></a># Storm ui的启动</h4>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 apache-storm-0.9.2-incubating]#<span style="color:red"> bin/storm ui &amp;</span></span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[2] 26912</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 apache-storm-0.9.2-incubating]# Running:/usr/local/adsit/yting/jdk/jdk1.7.0_60/bin/java -server -Dstorm.options=-Dstorm.home=/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating-Djava.library.path=/usr/local/lib:/opt/local/lib:/usr/lib
 -Dstorm.conf.file=-cp /</span><span style="background:rgb(217,217,217)">、</span><span style="background:rgb(217,217,217)">/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/conf-Xmx768m -Dlogfile.name=ui.log -Dlogback.configurationFile=/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/logback/cluster.xmlbacktype.<span style="color:red">storm.ui.core</span></span></p>
<h4 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<a target="_blank" name="t21" style="color:rgb(51,102,153)"></a># Storm supervisor的启动</h4>
<h5 style="color:rgb(51,51,51); font-family:Arial; line-height:26px"><a target="_blank" name="t22" style="color:rgb(51,102,153)"></a># rs226上启动Supervisor</h5>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs226 apache-storm-0.9.2-incubating]# <span style="color:red">bin/storm supervisor &amp;</span></span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[1] 15273</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs226 apache-storm-0.9.2-incubating]# Running:/usr/local/adsit/yting/jdk/jdk1.7.0_60/bin/java -server -Dstorm.options=-Dstorm.home=/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating-Djava.library.path=/usr/local/lib:/opt/local/lib:/usr/lib
 -Dstorm.conf.file=-cp /…:/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/conf-Xmx256m -Dlogfile.name=supervisor.log -Dlogback.configurationFile=/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/logback/cluster.xmlbacktype.storm.daemon.supervisor</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
 </p>
<h5 style="color:rgb(51,51,51); font-family:Arial; line-height:26px"><a target="_blank" name="t23" style="color:rgb(51,102,153)"></a># rs198上启动Supervisor</h5>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs198 apache-storm-0.9.2-incubating]# <span style="color:red">bin/storm supervisor &amp;</span></span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[1] 15274</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@RS198 apache-storm-0.9.2-incubating]# Running:/usr/local/adsit/yting/jdk/jdk1.7.0_60/bin/java -server -Dstorm.options=-Dstorm.home=/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating-Djava.library.path=/usr/local/lib:/opt/local/lib:/usr/lib
 -Dstorm.conf.file=-cp /…:/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/conf-Xmx256m -Dlogfile.name=supervisor.log -Dlogback.configurationFile=/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/logback/cluster.xmlbacktype.storm.daemon.supervisor</span></p>
<h5 style="color:rgb(51,51,51); font-family:Arial; line-height:26px"><a target="_blank" name="t24" style="color:rgb(51,102,153)"></a># rs197上启动Supervisor</h5>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@RS197 apache-storm-0.9.2-incubating]# bin/stormsupervisor &amp;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[1] 25262</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@RS197 apache-storm-0.9.2-incubating]# Running:/root/jdk1.6.0_26/bin/java -server -Dstorm.options=-Dstorm.home=/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating-Djava.library.path=/usr/local/lib:/opt/local/lib:/usr/lib
 -Dstorm.conf.file=-cp /<strong>…</strong>:/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/conf-Xmx256m -Dlogfile.name=supervisor.log -Dlogback.configurationFile=/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/logback/cluster.xmlbacktype.storm.daemon.supervisor</span></p>
<h5 style="color:rgb(51,51,51); font-family:Arial; line-height:26px"><a target="_blank" name="t25" style="color:rgb(51,102,153)"></a># rs167上启动Supervisor</h5>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@RS196 apache-storm-0.9.2-incubating]# bin/stormsupervisor &amp;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[1] 17330</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@RS196 apache-storm-0.9.2-incubating]# Running:/root/jdk1.6.0_26/bin/java -server -Dstorm.options=-Dstorm.home=/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating-Djava.library.path=/usr/local/lib:/opt/local/lib:/usr/lib
 -Dstorm.conf.file=-cp /…:/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/conf-Xmx256m -Dlogfile.name=supervisor.log-Dlogback.configurationFile=/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/logback/cluster.xmlbacktype.storm.daemon.supervisor</span></p>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t26" style="color:rgb(51,102,153)"></a># 需要打成jar包的3个Class，放到$STORM_HOME/lib目录下去</h3>
<h4 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<a target="_blank" name="t27" style="color:rgb(51,102,153)"></a># MyHighLevelConsumer.java</h4>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">package com.yting.cloud.kafa.consumer;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import kafka.consumer.ConsumerConfig;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import kafka.consumer.KafkaStream;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import kafka.javaapi.consumer.ConsumerConnector;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.HashMap;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.List;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.Map;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.Properties;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.concurrent.ExecutorService;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.concurrent.Executors;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import kafka.consumer.ConsumerIterator;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//import kafka.consumer.KafkaStream;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">/**</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> * KafkaSink(custom)</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> *</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> * @Author</span><span style="background:rgb(217,217,217)">王扬庭（妳那伊抹微笑）</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> * @Time2014-07-14</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> * @Problem youshould run this consumer class before producer</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> *</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> */</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//@SuppressWarnings("all")</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">public class MyHighLevelConsumer {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    privatefinal ConsumerConnector consumer;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    privatefinal String topic;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    privateExecutorService executor;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    publicMyHighLevelConsumer(String a_zookeeper, String a_groupId, String a_topic) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       consumer = kafka.consumer.Consumer.createJavaConsumerConnector(createConsumerConfig(a_zookeeper,a_groupId));</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       this.topic = a_topic;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    public voidshutdown() {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        if(consumer != null) consumer.shutdown();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        if(executor != null) executor.shutdown();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    public voidrun(int a_numThreads) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       Map&lt;String, Integer&gt; topicCountMap = new HashMap&lt;String,Integer&gt;();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       topicCountMap.put(topic, new Integer(a_numThreads));</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       Map&lt;String, List&lt;KafkaStream&lt;byte[], byte[]&gt;&gt;&gt;consumerMap = consumer.createMessageStreams(topicCountMap);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       List&lt;KafkaStream&lt;byte[], byte[]&gt;&gt; streams =consumerMap.get(topic);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        // nowlaunch all the threads</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        //</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       executor = Executors.newFixedThreadPool(a_numThreads);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        // nowcreate an object to consume the messages</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        //</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        intthreadNumber = 0;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        for(final KafkaStream stream : streams) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">           executor.submit(new ConsumerTest(stream, threadNumber));</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">           threadNumber++;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    privatestatic ConsumerConfig createConsumerConfig(String a_zookeeper, Stringa_groupId) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       Properties props = new Properties();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       props.put("zookeeper.connect", a_zookeeper);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       props.put("group.id", a_groupId);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        props.put("zookeeper.session.timeout.ms","4000");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       props.put("zookeeper.sync.time.ms", "200");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       props.put("auto.commit.interval.ms", "1000");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//       props.put("auto.offset.reset", "smallest");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        returnnew ConsumerConfig(props);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">   </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    classConsumerTest implements Runnable {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        privateKafkaStream&lt;byte[], byte[]&gt; m_stream;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        privateint m_threadNumber;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        publicConsumerTest(KafkaStream&lt;byte[], byte[]&gt; a_stream, int a_threadNumber) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">           m_threadNumber = a_threadNumber;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">           m_stream = a_stream;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        publicvoid run() {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">           ConsumerIterator&lt;byte[], byte[]&gt; it = m_stream.iterator();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">           while (it.hasNext())</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">               System.out.println("Thread " + m_threadNumber + ": "+ new String(it.next().message()));</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">           System.out.println("Shutting down Thread: " + m_threadNumber);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">        }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">   </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">    publicstatic void main(String[] args) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//      StringzooKeeper = args[0];</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//      String groupId = args[1];</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//      Stringtopic = args[2];</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//      intthreads = Integer.parseInt(args[3]);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//      StringzooKeeper = "116.255.224.229:2182";</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">      StringzooKeeper ="rs229:2181,rs227:2181,rs226:2181,rs198:2181,rs197:2181/kafka";</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">      String groupId = "1";</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">      Stringtopic = "flume-kafka-storm-001";</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">      intthreads = 1;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">     MyHighLevelConsumer example = new MyHighLevelConsumer(zooKeeper,groupId, topic);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">     example.run(threads);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//      try {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//         Thread.sleep(1000);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//      } catch(InterruptedException ie) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//      }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">//     example.shutdown();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">  }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">}</span></p>
<h4 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<a target="_blank" name="t28" style="color:rgb(51,102,153)"></a># HighLevelKafkaSpout.java</h4>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">package com.yting.cloud.storm.spout;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.Map;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import org.apache.commons.logging.Log;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import org.apache.commons.logging.LogFactory;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">importcom.yting.cloud.kafa.consumer.MyHighLevelConsumer;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import kafka.javaapi.consumer.ConsumerConnector;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import backtype.storm.spout.SpoutOutputCollector;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import backtype.storm.task.TopologyContext;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import backtype.storm.topology.IRichSpout;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import backtype.storm.topology.OutputFieldsDeclarer;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import backtype.storm.tuple.Fields;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">/**</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> * Storm spout</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> *</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> * @Author</span><span style="background:rgb(217,217,217)">王扬庭（妳那伊抹微笑）</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> * @Time2014-07-14</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> *</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> */</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">public class HighLevelKafkaSpout implementsIRichSpout {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       privatestatic final Log log = LogFactory.getLog(HighLevelKafkaSpout.class);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       privateSpoutOutputCollector collector;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       privateConsumerConnector consumer;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       privateString topic;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       privateint a_numThreads = 1;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicHighLevelKafkaSpout() {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">      </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       public HighLevelKafkaSpout(Stringtopic) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              this.topic= topic;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       @Override</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicvoid nextTuple() {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       @Override</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicvoid open(Map conf, TopologyContext context, SpoutOutputCollector collector) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              this.collector= collector;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       @Override</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       public voidack(Object msgId) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              log.info("---------&gt;ack");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       @Override</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicvoid activate() {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              log.info("---------&gt;activatestart---------&gt;");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              MyHighLevelConsumer.main(null);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              //</span><span style="background:rgb(217,217,217)">这里的具体代码可以重构出来，还有</span><span style="background:rgb(217,217,217)">collector.emit(newValues("need to emit"));</span><span style="background:rgb(217,217,217)">这样的代码也还没写的，先意思一下了</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              log.info("---------&gt;activateend---------&gt;");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       @Override</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicvoid close() {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              log.info("---------&gt;close");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       @Override</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicvoid deactivate() {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              log.info("---------&gt;deactivate");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       @Override</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicvoid fail(Object msgId) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              log.info("---------&gt;fail");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       @Override</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicvoid declareOutputFields(OutputFieldsDeclarer declarer) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              declarer.declare(newFields("highLevelKafkaSpout"));</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       @Override</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicMap&lt;String, Object&gt; getComponentConfiguration() {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              log.info("---------&gt;getComponentConfiguration");</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              returnnull;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">}</span></p>
<h4 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<a target="_blank" name="t29" style="color:rgb(51,102,153)"></a># KafkaTopology.java</h4>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">package com.yting.cloud.storm.topology;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.HashMap;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import java.util.Map;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import com.yting.cloud.storm.spout.HighLevelKafkaSpout;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import backtype.storm.Config;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import backtype.storm.LocalCluster;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import backtype.storm.topology.TopologyBuilder;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">import backtype.storm.utils.Utils;</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">/**</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> * Stormtopology</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> *</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> * @Author </span><span style="background:rgb(217,217,217)">王扬庭（妳那伊抹微笑）</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> * @Time2014-07-14</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> *</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> */</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">public class KafkaTopology {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       publicstatic void main(String[] args) {</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              TopologyBuilderbuilder = new TopologyBuilder();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              builder.setSpout("1",new HighLevelKafkaSpout(""), 1);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              Mapconf = new HashMap();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              conf.put(Config.TOPOLOGY_WORKERS,1);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              conf.put(Config.TOPOLOGY_DEBUG,true);</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)"> </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              LocalClustercluster = new LocalCluster();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              cluster.submitTopology("my-flume-kafka-storm-topology-integration",conf, builder.createTopology());</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">             </span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              Utils.sleep(1000*60*5);// local cluster test ...</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">              cluster.shutdown();</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">       }</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">}</span></p>
<h4 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<a target="_blank" name="t30" style="color:rgb(51,102,153)"></a># Storm jar 命令运行storm程序</h4>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 yjar]# ll</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">total 72</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">-rw-r--r-- 1 root root 19826 Jul 14 10:27fks-storm-0013.jar</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">-rw-r--r-- 1 root root 19833 Jul 14 10:31fks-storm-high-001.jar</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">-rw-r--r-- 1 root root 15149 Jul  7 17:43 storm-wordcount-official-cluster.jar</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">-rw-r--r-- 1 root root 15192 Jul  7 17:47 storm-wordcount-official-local.jar</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 yjar]# pwd</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">/usr/local/adsit/yting/apache/storm/apache-storm-0.9.2-incubating/yjar</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background:rgb(217,217,217)">[root@rs229 yjar]# <span style="color:red">storm jarfks-storm-high-001.jar com.yting.cloud.storm.topology.KafkaTopology</span></span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
日志信息太多了，随便弄一点吧！</p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14650 [main]INFO com.yting.cloud.storm.spout.HighLevelKafkaSpout - ---------&gt;close</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14650 [main]INFO  backtype.storm.daemon.executor -Shut down executor 1:[1 1]</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14650 [main]INFO  backtype.storm.daemon.worker - Shutdown executors</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14650 [main]INFO  backtype.storm.daemon.worker -Shutting down transfer thread</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14651[Thread-14-disruptor-worker-transfer-queue] INFO  backtype.storm.util - Async loop interrupted!</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14651 [main]INFO  backtype.storm.daemon.worker - Shutdown transfer thread</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14652 [main]INFO  backtype.storm.daemon.worker -Shutting down default resources</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14653 [main]INFO  backtype.storm.daemon.worker - Shutdown default resources</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14661 [main]INFO  backtype.storm.daemon.worker -Disconnecting from storm cluster state context</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14664 [main]INFO  backtype.storm.daemon.worker - Shutdown worker my-flume-kafka-storm-topology-integration-1-1405320692e0d44e3c-5b2a-4263-8dab-4aacf4215d2d 1024</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14667 [main]INFO  backtype.storm.daemon.supervisor -Shut downe0d44e3c-5b2a-4263-8dab-4aacf4215d2d:14d31572-9e60-4a16-9638-56c22530826d</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14667 [main]INFO  backtype.storm.daemon.supervisor -Shutting down supervisor e0d44e3c-5b2a-4263-8dab-4aacf4215d2d</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14668 [Thread-3]INFO  backtype.storm.event - Eventmanager interrupted</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14668 [Thread-4]INFO  backtype.storm.event - Eventmanager interrupted</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14671 [main]INFO  backtype.storm.daemon.supervisor - Shuttingdown supervisor cd464efd-fa69-4566-8cba-7e10d51dae6c</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14671 [Thread-5]INFO  backtype.storm.event - Eventmanager interrupted</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14672 [Thread-6]INFO  backtype.storm.event - Eventmanager interrupted</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14674 [main]INFO  backtype.storm.testing - Shuttingdown in process zookeeper</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14675 [main]INFO  backtype.storm.testing - Doneshutting down in process zookeeper</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14675 [main]INFO  backtype.storm.testing - Deletingtemporary path /tmp/c88e689e-c97e-4822-886d-ddcc1e7b9e9d</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14677 [main]INFO  backtype.storm.testing - Deletingtemporary path /tmp/88f3f052-cfaf-4d53-91ad-489965612e94</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14678 [main]INFO  backtype.storm.testing - Deletingtemporary path /tmp/17f2f7cf-7844-4077-8ad9-b3503fa21fb6</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14681 [main]INFO  backtype.storm.testing - Deletingtemporary path /tmp/548e5d3e-b05d-42a7-bd71-ac4ece8e93c4</span></p>
<h3 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t31" style="color:rgb(51,102,153)"></a>#在Flume的监控目录下新建一个测试文件，看看Storm程序能否打印出文件内容的数据</h3>
<h4 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<a target="_blank" name="t32" style="color:rgb(51,102,153)"></a># 新建fks-yousmile-20140714.log文件</h4>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">[root@rs229tdir1]# vi fks-yousmile-20140714.log</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="color:red; background-color:rgb(204,204,204)">So i miss the change to see youagain .</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">[root@rs229tdir1]# ll</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">-rw-r--r-- 1root root   40 Jul 14 14:59fks-yousmile-20140714.log.COMPLETED</span></p>
<h4 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<a target="_blank" name="t33" style="color:rgb(51,102,153)"></a># Storm控制台信息</h4>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14675 [main]INFO  backtype.storm.testing - Deletingtemporary path /tmp/c88e689e-c97e-4822-886d-ddcc1e7b9e9d</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14677 [main]INFO  backtype.storm.testing - Deletingtemporary path /tmp/88f3f052-cfaf-4d53-91ad-489965612e94</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14678 [main]INFO  backtype.storm.testing - Deletingtemporary path /tmp/17f2f7cf-7844-4077-8ad9-b3503fa21fb6</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">14681 [main]INFO  backtype.storm.testing - Deletingtemporary path /tmp/548e5d3e-b05d-42a7-bd71-ac4ece8e93c4</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="color:red; background:rgb(217,217,217)">Thread 0: So i miss the change tosee you again .</span><span style="color:red; background:rgb(217,217,217)">（</span><span style="color:red; background:rgb(217,217,217)">Storm</span><span style="color:red; background:rgb(217,217,217)">程序已经打印出来刚刚新建文件的内容信息了）</span></p>
<h2 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t34" style="color:rgb(51,102,153)"></a># Flume+Kafka+Storm整合完毕</h2>
<h2 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t35" style="color:rgb(51,102,153)"></a># Storm那里写的太简单了，可以把Kafka的HighConsumer提取到Storm里面去，便于控制，比如下面的代码：</h2>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>package</strong> com.yting.cloud.storm.spout;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> java.util.HashMap;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> java.util.List;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> java.util.Map;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> java.util.Properties;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> org.apache.commons.logging.Log;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> org.apache.commons.logging.LogFactory;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> kafka.consumer.Consumer;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> kafka.consumer.ConsumerConfig;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> kafka.consumer.ConsumerIterator;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> kafka.consumer.KafkaStream;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> kafka.javaapi.consumer.ConsumerConnector;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> backtype.storm.spout.SpoutOutputCollector;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> backtype.storm.task.TopologyContext;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> backtype.storm.topology.IRichSpout;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> backtype.storm.topology.OutputFieldsDeclarer;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> backtype.storm.tuple.Fields;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>import</strong> backtype.storm.tuple.Values;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">/**</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> * Storm spout</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> *</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> * <strong>@Author</strong> 王扬庭（妳那伊抹微笑）</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> * <strong>@Time</strong> 2014-07-14</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> *</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> */</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"><strong>public class</strong><u>KafkaSpout</u><strong>implements</strong>IRichSpout {</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>private static final</strong> Log<em>log</em> =LogFactory.<em>getLog</em>(KafkaSpout.<strong>class</strong>);</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>private</strong> SpoutOutputCollector collector;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>private</strong> ConsumerConnector consumer;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>private</strong> String topic;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>private int</strong> a_numThreads = 1;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>public</strong> KafkaSpout(String topic) {</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       <strong>this</strong>.topic = topic;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    }</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    @Override</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>public void</strong> nextTuple() {</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    }</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    @Override</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>public void</strong> open(<u>Map</u> conf, TopologyContextcontext, SpoutOutputCollector collector) {</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       <strong>this</strong>.collector = collector;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    }</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    @Override</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>public void</strong> ack(Object msgId) {</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       <em>log</em>.info("---------&gt;ack");</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    }</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    @Override</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>public void</strong> activate() {</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       <em>log</em>.info("---------&gt;activate");</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       <strong>this</strong>.consumer = Consumer.<em>createJavaConsumerConnector</em>(<em>createConsumerConfig</em>());</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       Map&lt;String, Integer&gt; topicCountMap =<strong>new</strong>HashMap&lt;String, Integer&gt;();</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       topicCountMap.put(topic,<strong>new</strong> Integer(a_numThreads));</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       Map&lt;String, List&lt;KafkaStream&lt;<strong>byte</strong>[],<strong>byte</strong>[]&gt;&gt;&gt;consumerMap = consumer.createMessageStreams(topicCountMap);</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       KafkaStream&lt;<strong>byte</strong>[],<strong>byte</strong>[]&gt; streams =consumerMap.get(topic).get(0);</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       ConsumerIterator&lt;<strong>byte</strong>[],<strong>byte</strong>[]&gt; it =streams.iterator();</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       <strong>while</strong> (it.hasNext()) {</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">           String value =<strong>new</strong> String(it.next().message());</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">           <em>log</em>.info("(---------&gt;Storm kafkaconsumer)-------&gt;" + value);</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">           <span style="color:red">collector.emit(<strong>new</strong>Values(value), value);</span></span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       }</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    }</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>private static</strong> ConsumerConfigcreateConsumerConfig() {</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       Properties props =<strong>new</strong> Properties();</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       props.put("zookeeper.connect", "rs229:2181,rs227:2181,rs226:2181,rs198:2181,rs197:2181/kafka");</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">//     props.put("zookeeper.connect","rs229:2181,rs227:2181,rs226:2181,rs198:2181,rs197:2181");</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">//     props.put("zookeeper.connect","rs229");</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       props.put("group.id", "2");</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">        props.put("zookeeper.session.timeout.ms","4000");</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">        props.put("zookeeper.sync.time.ms","200");</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">        props.put("auto.commit.interval.ms","1000");</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       <strong>return new</strong> ConsumerConfig(props);</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    }</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    @Override</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>public void</strong> close() {</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       <em>log</em>.info("---------&gt;close");</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    }</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    @Override</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>public void</strong> deactivate() {</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       <em>log</em>.info("---------&gt;deactivate");</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    }</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    @Override</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>public void</strong> fail(Object msgId) {</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       <em>log</em>.info("---------&gt;fail");</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    }</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    @Override</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>public void</strong>declareOutputFields(OutputFieldsDeclarer declarer) {</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       declarer.declare(<strong>new</strong> Fields("kafkaSpout"));</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    }</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    @Override</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    <strong>public</strong> Map&lt;String, Object&gt;getComponentConfiguration() {</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       <em>log</em>.info("---------&gt;getComponentConfiguration");</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">       <strong>return null</strong>;</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">    }</span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)"> </span></p>
<p align="left" style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(204,204,204)">}</span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
本人有点小懒，就不弄的更精细了 ，等到搞数据架构的时候再弄好点吧！</p>
<h2 style="margin:0px; padding:0px; color:rgb(51,51,51); font-family:Arial; line-height:26px">
<a target="_blank" name="t36" style="color:rgb(51,102,153)"></a># 结束感言</h2>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="color:rgb(255,0,0)"><strong>框架整合中用到的所有工程代码，jar包什么的都已经上传到群</strong></span><strong><span style="color:rgb(51,51,255)">214293307</span></strong><span style="color:rgb(255,0,0)"><strong>共享中，需要的话自己下载研究了。</strong></span></p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
<span style="background-color:rgb(51,255,255)"><span style="font-size:12px">本博文整合Flume+Kafka+Storm中的Eclipse工程代码下载地址</span><a target="_blank" href="http://download.csdn.net/detail/u012185296/7633405" rel="nofollow" style="color:blue; text-decoration:none; font-size:12px">http://download.csdn.net/detail/u012185296/7633405</a></span><br>
</p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
好好学习，天天向上，本来这个早该搞好了，由于种种原因延迟了许久，真心计划往往赶不上变化啊！</p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
Good good study , day day up high</p>
<p style="color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px">
The you smile until forever .....................</p>
            </div>
                </div>