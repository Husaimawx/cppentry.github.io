---
layout:     post
title:      KAFKA知识（基本组成）
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/yl3395017/article/details/76474711				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h3>基本概念</h3>
<div>Kafka对消息保存时根据Topic进行归类，发送消息者成为Producer,消息接受者成为Consumer,此外kafka集群多个kafka实例组成，每个实例(server)成为broker。无论是kafka集群，还是producer和consumer都依赖于zookeeper来保证系统可用性集群保存一些meta信息。</div>
<h4>Broker</h4>
Kafka集群包含一个或多个服务器，这种服务器被称为broker
<h4>Topic</h4>
<p>每条发布到Kafka集群的消息都有一个类别，这个类别被称为topic。（物理上不同topic的消息分开存储，逻辑上一个topic的消息虽然保存于一个或多个broker上但用户只需指定消息的topic即可生产或消费数据而不必关心数据存于何处）,一个Topic可以认为是一类消息，每个topic将被分成多个partition(区),每个partition在存储层面是append log文件。任何发布到此partition的消息都会被直接追加到log文件的尾部，每条消息在文件中的位置称为offset（偏移量），offset为一个long型数字，它是唯一标记一条消息。它唯一的标记一条消息。kafka并没有提供其他额外的索引机制来存储offset，因为在kafka中几乎不允许对消息进行“随机读写”。</p>
<h4>Partition</h4>
parition是物理上的概念，每个topic包含一个或多个partition，创建topic时可指定parition数量。每个partition对应于一个文件夹，该文件夹下存储该partition的数据和索引文件<br><h4>Producer</h4>
负责发布消息到Kafka broker<br><h4>Consumer</h4>
<p>消费消息。每个consumer属于一个特定的consumer group（可为每个consumer指定group name，若不指定group name则属于默认的group）。使用consumer high level API时，同一topic的一条消息只能被同一个consumer group内的一个consumer消费，但多个consumer group可同时消费这一消息。</p>
<p><br></p>
<p>—————————————————————————————————————————————————————————————————————————————</p>
<h3>详细介绍</h3>
<pre style="list-style-type:none;border:1px dotted rgb(119,136,85);background:rgb(245,245,245);font-family:'Courier New' !important;"><span style="font-family:verdana, geneva;line-height:1.5 !important;"><strong>1.producer：</strong>
　　消息生产者，发布消息到 kafka 集群的终端或服务。
<strong>2.broker：</strong>
　　kafka 集群中包含的服务器。
<strong>3.topic：</strong>
　　每条发布到 kafka 集群的消息属于的类别，即 kafka 是面向 topic 的。
<strong>4.partition：</strong>
　　partition 是物理上的概念，每个 topic 包含一个或多个 partition。kafka 分配的单位是 partition。
<strong>5.consumer：</strong>
　　从 kafka 集群中消费消息的终端或服务。
<strong>6.Consumer group：</strong>
　　high-level consumer API 中，每个 consumer 都属于一个 consumer group，每条消息只能被 consumer group 中的一个 Consumer 消费，但可以被多个 consumer group 消费。
<strong>7.replica：</strong>
　　partition 的副本，保障 partition 的高可用。
<strong>8.leader：</strong>
　　replica 中的一个角色， producer 和 consumer 只跟 leader 交互。
<strong>9.follower：</strong>
　　replica 中的一个角色，从 leader 中复制数据。
<strong>10.controller：</strong>
　　kafka 集群中的其中一个服务器，用来进行 leader election 以及 各种 failover。
<strong>12.zookeeper：</strong>
　　kafka 通过 zookeeper 来存储集群的 meta 信息。</span></pre>
<h4>（1）TOPO</h4>
<p><img src="https://img-blog.csdn.net/20170801084413880?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveWwzMzk1MDE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br></p>
<h4>（2）TOPO</h4>
<div><img src="https://img-blog.csdn.net/20170830101719754?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveWwzMzk1MDE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br></div>
<p><br></p>
            </div>
                </div>