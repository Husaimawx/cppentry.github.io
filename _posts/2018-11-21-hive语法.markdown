---
layout:     post
title:      hive语法
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<ul>
<li>创建数据库</li>
</ul>

<pre class="prettyprint"><code class="language-SQL hljs sql"><span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">DATABASE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> hive;</span>
<span class="hljs-operator"><span class="hljs-keyword">SHOW</span> DATABASES;</span>
<span class="hljs-operator"><span class="hljs-keyword">SHOW</span> <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">DATABASE</span> hive;</span>
DESCRIBE DATABASE hive;</code></pre>

<ul>
<li>删除数据库</li>
</ul>

<pre class="prettyprint"><code class="language-SQL hljs sql"><span class="hljs-operator"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">DATABASE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">EXISTS</span> hive <span class="hljs-keyword">CASCADE</span>;</span></code></pre>

<ul>
<li><p>创建表</p>

<ul><li><p>创建普通表</p>

<pre class="prettyprint"><code class="language-SQL hljs sql"><span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> hive_table(
    id <span class="hljs-keyword">INT</span> COMMENT <span class="hljs-string">'This is id of hive_table'</span>,
    age <span class="hljs-keyword">INT</span> COMMENT<span class="hljs-string">'This is age of hive_table'</span>,
    name STRING COMMENT <span class="hljs-string">'This is name of hive_table'</span>
)
COMMENT <span class="hljs-string">'This is hive_table'</span>
<span class="hljs-keyword">ROW</span> FORMAT DELIMITED FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">'\t'</span>
STORED <span class="hljs-keyword">AS</span> TEXTFILE;</span>

<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> hive_table <span class="hljs-keyword">AS</span> <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> hive;</span>

<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> hive_table <span class="hljs-keyword">LIKE</span> hive;</span>

<span class="hljs-operator"><span class="hljs-keyword">SHOW</span> TABLES <span class="hljs-string">'*table'</span>;</span>
<span class="hljs-operator"><span class="hljs-keyword">SHOW</span> <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> hive_table;</span>
DESCRIBE hive_table;
DESCRIBE FORMATTED hive_table</code></pre></li>
<li><p>创建外部表</p>

<pre class="prettyprint"><code class="language-SQL hljs sql"><span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">EXTERNAL</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> hive_table(
    id <span class="hljs-keyword">INT</span>,
    age <span class="hljs-keyword">INT</span>,
    name STRING
)
<span class="hljs-keyword">ROW</span> FORMAT DELIMITED FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">'\t'</span>
STORED <span class="hljs-keyword">AS</span> TEXTFILE;</span></code></pre></li>
<li><p>创建分区表（PARTITIONED）</p>

<pre class="prettyprint"><code class="language-SQL hljs sql"><span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> hive_table(
    id <span class="hljs-keyword">INT</span>,
    age <span class="hljs-keyword">INT</span>,
    name STRING
)
PARTITIONED <span class="hljs-keyword">BY</span>(<span class="hljs-keyword">date</span> STRING)
<span class="hljs-keyword">ROW</span> FORMAT DELIMITED FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">'\t'</span>
STORE <span class="hljs-keyword">AS</span> TEXTFILE;</span></code></pre></li>
<li><p>创建分筒表（BUCKETS）</p>

<pre class="prettyprint"><code class="language-SQL hljs sql"><span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> hive_table(
    id <span class="hljs-keyword">INT</span>,
    age <span class="hljs-keyword">INT</span>,
    name STRING
)
CLUSTERED <span class="hljs-keyword">BY</span> (age) SORTED <span class="hljs-keyword">BY</span> (name) <span class="hljs-keyword">INTO</span> <span class="hljs-number">16</span> BUCKETS
<span class="hljs-keyword">ROW</span> FORMAT DELIMITED FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">'\t'</span>
STORE <span class="hljs-keyword">AS</span> TEXTFILE;</span> </code></pre></li></ul></li>
<li>修改表</li>
</ul>

<pre class="prettyprint"><code class="language-SQL hljs sql"><span class="hljs-comment">-- 修改表名</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> hive_table RENAME <span class="hljs-keyword">TO</span> hive_table_new;</span>

<span class="hljs-comment">--添加字段</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> hive_table <span class="hljs-keyword">ADD</span> COLUMNS(tall <span class="hljs-keyword">INT</span>);</span>

<span class="hljs-comment">--修改字段</span>
<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> hive_table <span class="hljs-keyword">REPLACE</span> COLUMNS(tall <span class="hljs-keyword">int</span>);</span>

<span class="hljs-comment">--删除表</span>
<span class="hljs-operator"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">EXISTS</span> hive_table;</span></code></pre>

<ul>
<li>插入数据</li>
</ul>



<pre class="prettyprint"><code class="language-SQL hljs sql"><span class="hljs-operator"><span class="hljs-keyword">INSERT</span> OVERWRITE <span class="hljs-keyword">TABLE</span> hive_table <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> hive_table_ins;</span>

<span class="hljs-operator"><span class="hljs-keyword">INSERT</span> VOERWRITE <span class="hljs-keyword">TABLE</span> hive_table PARTITION(<span class="hljs-keyword">date</span>=<span class="hljs-string">'20161020'</span>)
<span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> hive_table_inc;</span>

FROM hive_table_ins
<span class="hljs-operator"><span class="hljs-keyword">INSERT</span> OVERWRITE <span class="hljs-keyword">TABLE</span> hive_table_1 <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">WHERE</span> id = <span class="hljs-number">1</span>
<span class="hljs-keyword">INSERT</span> OVERWRITE <span class="hljs-keyword">TABLE</span> hive_table_2 <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">WHERE</span> id = <span class="hljs-number">2</span>;</span></code></pre>

<ul>
<li>表操作</li>
</ul>



<pre class="prettyprint"><code class="language-SQL hljs sql"><span class="hljs-comment">-- 复制表</span>
<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> hive_table_bak
ROE FORMAT DELIMITED FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">'\t'</span>
STORE <span class="hljs-keyword">AS</span> TEXTFILE
<span class="hljs-keyword">AS</span> <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> hive_table;</span>

<span class="hljs-comment">-- 克隆表</span>
<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> hive_table_temp <span class="hljs-keyword">like</span> hive_table;</span>

<span class="hljs-comment">-- 备份表（备份到hdfs上）</span>
EXPORT TABLE hive_table PARTITION(date='2016-10-10')
to '/home/user/data_bak.txt';

<span class="hljs-comment">-- 还原表</span>
IMPORT TABLE hive_table_new FROM '/home/user/data_bak.txt';</code></pre>

<ul>
<li>导入数据</li>
</ul>

<pre class="prettyprint"><code class="language-SQL hljs sql"><span class="hljs-comment">-- 普通表导入本地数据</span>
<span class="hljs-operator"><span class="hljs-keyword">load</span> data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'/home/user/data.txt'</span>
overwrite <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> hive_table;</span>

<span class="hljs-comment">-- 普通表导入HDFS数据</span>
<span class="hljs-operator"><span class="hljs-keyword">load</span> data inpath <span class="hljs-string">'hdfs://namenode:9000/user/hive/'</span>
overwrite <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> hive_table;</span>

<span class="hljs-comment">-- 分区表</span>
<span class="hljs-operator"><span class="hljs-keyword">load</span> data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'/home/user/data.txt'</span>
overwrite <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> hive_table
partition(<span class="hljs-keyword">date</span>=<span class="hljs-string">'2016-10-20'</span>);</span>

<span class="hljs-comment">-- 分桶表</span>
<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> hive_table_buckets(
    id <span class="hljs-keyword">INT</span>,
    age <span class="hljs-keyword">INT</span>,
    name STRING
)
<span class="hljs-keyword">ROW</span> FORMAT DELIMITED FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">'\t'</span>
STORE <span class="hljs-keyword">AS</span> TEXTFILE;</span>

<span class="hljs-operator"><span class="hljs-keyword">LOAD</span> DATA <span class="hljs-keyword">LOCAL</span> INPATH <span class="hljs-string">'/home/user/data.txt'</span>
<span class="hljs-keyword">INTO</span> <span class="hljs-keyword">TABLE</span> hive_table_buckets;</span>

<span class="hljs-operator"><span class="hljs-keyword">set</span> hive.enforce.bucketing = ture;</span>
<span class="hljs-operator"><span class="hljs-keyword">INSERT</span> OVERWRITE <span class="hljs-keyword">TABLE</span> hive_table <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> hive_table_buckets;</span></code></pre>

<ul>
<li>导出数据</li>
</ul>



<pre class="prettyprint"><code class="language-SQL hljs sql"><span class="hljs-operator"><span class="hljs-keyword">INSERT</span> OVERWRITE <span class="hljs-keyword">LOCAL</span> DIRECTORY <span class="hljs-string">'/home/user/data.txt'</span>
<span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> hive_table;</span></code></pre>

<ul>
<li>Hive的数据类型</li>
</ul>

<table>
<thead>
<tr>
  <th align="center">数据类型</th>
  <th align="center">长度</th>
  <th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
  <td align="center">TINYINT</td>
  <td align="center">1字节的有符号整数</td>
  <td align="center">-128~127</td>
</tr>
<tr>
  <td align="center">SMALLINT</td>
  <td align="center">2字节的有符号整数</td>
  <td align="center">–32768~32767</td>
</tr>
<tr>
  <td align="center">INT</td>
  <td align="center">4字节的有符号整数</td>
  <td align="center">-2147483648~2147483647</td>
</tr>
<tr>
  <td align="center">BIGINT</td>
  <td align="center">8字节的有符号整数</td>
  <td align="center">9223372016854775808~9223372036854775807</td>
</tr>
<tr>
  <td align="center">BOOLEAN</td>
  <td align="center">布尔类型，true或false</td>
  <td align="center">true、false</td>
</tr>
<tr>
  <td align="center">FLOAT</td>
  <td align="center">单精度浮点数</td>
  <td align="center"></td>
</tr>
<tr>
  <td align="center">DOUBLE</td>
  <td align="center">双精度浮点数</td>
  <td align="center"></td>
</tr>
<tr>
  <td align="center">STRING</td>
  <td align="center">字符串</td>
  <td align="center"></td>
</tr>
<tr>
  <td align="center">TIMESTAMP</td>
  <td align="center">整数</td>
  <td align="center"></td>
</tr>
<tr>
  <td align="center">BINARY</td>
  <td align="center">字节数组</td>
  <td align="center"></td>
</tr>
<tr>
  <td align="center">DATE</td>
  <td align="center">日期</td>
  <td align="center">0000-01-01~9999-12-31，常用STRING代替</td>
</tr>
</tbody></table>


<hr>

<ul>
<li><p>JOIN</p>

<ul><li>只支持等值连接</li>
<li>连接谓词中不支持or</li></ul></li>
<li><p>LEFT SEMI-JOIN（左半开连接）</p></li>
<li><p>WHERE条件 <br>
A &lt;=&gt; B     当A和B都为NULL的时候返回true，其他和=一样 <br>
A LINK B        %一个或多个字符 _一个字符 <br>
A RLIKE B       正则匹配</p></li>
</ul>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>