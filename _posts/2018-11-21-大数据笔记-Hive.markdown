---
layout:     post
title:      大数据笔记-Hive
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本BLOG上原创文章未经本人许可，不得用于商业用途及传统媒体。网络媒体转载请注明出处，否则属于侵权行为。					https://blog.csdn.net/haobindayi/article/details/82948046				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p>操作Hive需要启动的应用：<br>
       前提：启动zookeeper集群<br>
        i)Hadoop集群要启动<br>
        ii)mysql数据库服务器启动 <br>
        iii)启动Hive服务器<br>
下面介绍Hive的安装<br>
    ～～＞Hive的安装：<br>
    1°、解压Hive文件：<br>
           重命名，配置环境变量/etc/profile.d/bigdata.sh</p>

<pre class="has">
<code>    export HIVE_HOME=/opt/hive
    export PATH=$PATH:$HIVE_HOME/bin

    source /etc/profile.d/bigdata.sh</code></pre>

<p>        进入$HIVE_HOME/conf/修改文件</p>

<pre class="has">
<code>        cp  hive-env.sh.template  hive-env.sh
        cp  hive-default.xml.template  hive-site.xml</code></pre>

<p>    2°、修改$HIVE_HOME/conf的hive-env.sh，增加以下三行 <br>
    （只要在bigdata.sh脚本文件中配置了如下环境变量：JAVA_HOME、HADOOP_HOME、HIVE_HOME，那么，hive-env.sh不用修改）</p>

<pre class="has">
<code>       export JAVA_HOME=/opt/jdk
       export HADOOP_HOME=/opt/hadoop
       export HIVE_HOME=/opt/hive</code></pre>

<p>    3°、修改$HIVE_HOME/conf/hive-site.xml<br>
        </p>

<pre class="has">
<code>&lt;property&gt;
            &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;
            &lt;value&gt;jdbc:mysql://LENOVO01:3306/hive?createDatabaseIfNotExist=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=UTF-8&lt;/value&gt;
        &lt;/property&gt;
        &lt;property&gt;
            &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;
            &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;
        &lt;/property&gt;
        &lt;property&gt;
            &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;
            &lt;value&gt;root&lt;/value&gt;
        &lt;/property&gt;
        &lt;property&gt;
            &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;
            &lt;value&gt;88888888&lt;/value&gt;
        &lt;/property&gt;
        &lt;property&gt;
            &lt;name&gt;hive.querylog.location&lt;/name&gt;
            &lt;value&gt;/opt/hive/tmp&lt;/value&gt;
        &lt;/property&gt;
        &lt;property&gt;
            &lt;name&gt;hive.exec.local.scratchdir&lt;/name&gt;
            &lt;value&gt;/opt/hive/tmp&lt;/value&gt;
        &lt;/property&gt;
        &lt;property&gt;
            &lt;name&gt;hive.downloaded.resources.dir&lt;/name&gt;
            &lt;value&gt;/opt/hive/tmp&lt;/value&gt;
        &lt;/property&gt;</code></pre>

<p>    4°、初始化hive元数据仓库<br>
        前提：将Mysql驱动包拷贝到lib目录下 (hive客户端会同时连接mysql数据库和HDFS)    <br>
        xx]# schematool -initSchema -dbType mysql -userName root -passWord root<br>
        可以简写为：schematool -initSchema -dbType mysql<br>
    5°、启动hive<br>
           hive</p>

<p>     如何验证安装成功？<br>
           <br>
          </p>

<pre class="has">
<code> [root@LENOVO01 hive]# schematool -initSchema -dbType mysql
            which: no hbase in (/root/soft/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/opt/jdk/bin:/opt/hadoop/bin:/opt/hadoop/sbin:/opt/zookeeper/bin:/usr/local/software/jdk/bin:/root/bin:/opt/jdk/bin:/opt/hadoop/bin:/opt/hadoop/sbin:/opt/zookeeper/bin:/opt/hive/bin)
            SLF4J: Class path contains multiple SLF4J bindings.
            SLF4J: Found binding in [jar:file:/opt/hive/lib/log4j-slf4j-impl-2.4.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
            SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
            SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
            SLF4J: Actual binding is of type [org.apache.logging.slf4j.Log4jLoggerFactory]
            Metastore connection URL:     jdbc:mysql://LENOVO01:3306/hive?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=UTF-8
            Metastore Connection Driver :     com.mysql.jdbc.Driver
            Metastore connection User:     root
            Starting metastore schema initialization to 2.1.0
            Initialization script hive-schema-2.1.0.mysql.sql
            Initialization script completed
            schemaTool completed
            
            hive&gt; </code></pre>

<p><br>
主题：Ｈｉｖｅ的操作：<br>
        Hive的表的操作：<br>
            hive中没有主键，没有外键的定义，但是我们可以参照mysql表的定义来进行说明<br>
            create table t (<br>
                line string<br>
            );<br>
            加载数据（linux本地相应目录中的数据）：<br>
                //load data local inpath '' into table mydb1.t;<br>
                load data local inpath '/opt/data/hive/hive-t.txt' into table mydb1.t;</p>

<p>                set hive.cli.print.header=true;显示表头信息            注意：<br>
            关于中文乱码的解决：<br>
                <br>
                给linux安装中文语言包，相关配置如下：<br>
              </p>

<pre class="has">
<code>  yum install fonts-chinese.noarch
                 yum install m17n-db-common-cjk
                 yum install m17n-db-chinese
                 
                ( 或者：yum groupinstall chinese-support)

                 vi /etc/sysconfig/i18n将内容改为
                 LANG="zh_CN.utf8"LANGUAGE="zh_CN.utf8:zh_CN.GB2312:zh_CN"SUPPORTED="zh_CN.utf8:zh_CN:zh:en_US.UTF-8:en_US:en"SYSFONT="lat0-sun16"</code></pre>

<p>            安装上面的几个语言包重启就正常<br>
                <br>
                1、确保Linux客户端软件没有乱码<br>
                  如：Xshell<br>
                  设定方式：文件～＞属性～＞终端</p>

<p>                2、hive-site.xml中的配置：<br>
                </p>

<pre class="has">
<code>&lt;property&gt;
     &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;
     &lt;value&gt;jdbc:mysql://LENOVO01:3306/hive?createDatabaseIfNotExist=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=UTF-8&lt;/value&gt;
&lt;/property&gt;</code></pre>

<p>                3、进入数据库 Metastore 中执行以下 5 条 SQL 语句<br>
                -- ①修改表字段注解和表注解<br>
                alter table COLUMNS_V2 modify column COMMENT varchar(256) character set utf8;<br>
                alter table TABLE_PARAMS modify column PARAM_VALUE varchar(4000) character set utf8;</p>

<p>                -- ② 修改分区字段注解：<br>
                alter table PARTITION_PARAMS modify column PARAM_VALUE varchar(4000) character set utf8 ;<br>
                alter table PARTITION_KEYS modify column PKEY_COMMENT varchar(4000) character set utf8;</p>

<p>                -- ③修改索引注解：<br>
                alter table INDEX_PARAMS modify column PARAM_VALUE varchar(4000) character set utf8;</p>            </div>
                </div>