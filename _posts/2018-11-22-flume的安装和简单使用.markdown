---
layout:     post
title:      flume的安装和简单使用
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：原创博客,微信:18518215883					https://blog.csdn.net/G290095142/article/details/78605019				</div>
								            <div id="content_views" class="markdown_views prism-tomorrow-night">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h2 id="参考博客">参考博客</h2>

<p><a href="http://blog.csdn.net/carl810224/article/details/52472831" rel="nofollow" target="_blank">Flume安装及简单部署</a> <br>
<a href="http://blog.csdn.net/lnho2015/article/details/52035145" rel="nofollow" target="_blank">Flume学习笔记（一）安装与简单使用</a></p>



<h2 id="目录">目录</h2>

<ul>
<li>Flume简介</li>
<li>Flume工作原理</li>
<li>Flume的安装</li>
</ul>



<h2 id="工作原理">工作原理</h2>

<p>Flume的数据流由事件（Event）贯穿始终。事件是Flume的基本数据单位，它携带日志数据（字节数组形式）并且携带有头信息，这些Event由Agent外部的Source生成，当Source捕获事件后会进行特定的格式化，然后Source会把事件推入（单个或多个）Channel中。可以把Channel看作是一个缓冲区，它将保存事件直到Sink处理完该事件。Sink负责持久化日志或者把事件推向另一个Source。以下是Flume的一些核心概念： <br>
（1）Events：一个数据单元，带有一个可选的消息头,可以是日志记录、avro 对象等。 <br>
（2）Agent：JVM中一个独立的Flume进程，包含组件Source、Channel、Sink。 <br>
（3）Client：运行于一个独立线程，用于生产数据并将其发送给Agent。 <br>
（4）Source：用来消费传递到该组件的Event,从Client收集数据，传递给Channel。 <br>
（5）Channel：中转Event的一个临时存储，保存Source组件传递过来的Event，其实就是连接 Source 和 Sink ，有点像一个消息队列。 <br>
（6）Sink：从Channel收集数据，运行在一个独立线程。 <br>
Flume以Agent为最小的独立运行单位，一个Agent就是一个JVM。单Agent由Source、Sink和Channel三大组件构成，如下图所示： <br>
<img src="https://img-blog.csdn.net/20160908163126720" alt="这里写图片描述" title=""> <br>
值得注意的是，Flume提供了大量内置的Source、Channel和Sink类型。不同类型的Source、Channel和Sink可以自由组合。组合方式基于用户设置的配置文件，非常灵活。比如：Channel可以把事件暂存在内存里，也可以持久化到本地硬盘上；Sink可以把日志写入HDFS、HBase、ES甚至是另外一个Source等等。Flume支持用户建立多级流，也就是说多个Agent可以协同工作,如下图所示: <br>
<img src="https://img-blog.csdn.net/20160908163150212" alt="这里写图片描述" title=""></p>



<h2 id="安装过程">安装过程</h2>

<ul>
<li>使用brew安装 <br>
brew install flume</li>
<li>修改配置文件</li>
<li>启动flume</li>
<li>测试数据</li>
</ul>

<p>修改配置文件</p>

<p>vi /usr/local/Cellar/flume/1.6.0/libexec/conf/flume.conf <br>
输入以下内容</p>

<blockquote>
  <p><code># 指定Agent的组件名称 <br>
  a1.sources = r1 <br>
  a1.sinks = k1 <br>
  a1.channels = c1 <br>
  、# 指定Flume source(要监听的路径) <br>
  a1.sources.r1.type = spooldir <br>
  a1.sources.r1.spoolDir = /root/path <br>
  、# 指定Flume sink <br>
  a1.sinks.k1.type = logger <br>
  、# 指定Flume channel <br>
  a1.channels.c1.type = memory <br>
  a1.channels.c1.capacity = 1000 <br>
  a1.channels.c1.transactionCapacity = 100 <br>
  、# 绑定source和sink到channel上 <br>
  a1.sources.r1.channels = c1 <br>
  a1.sinks.k1.channel = c1</code></p>
</blockquote>

<p>启动 <br>
cd /usr/local/Cellar/flume/1.6.0/libexec/bin/ <br>
flume-ng agent –conf conf –conf-file flume.conf –name a1 -Dflume.root.logger=INFO,console</p>

<p>测试 <br>
写入Hello Flume ，拷贝到flume监听路径 <br>
在终端看到采集的内容 <br>
2016-06-27 10:02:58,322 (SinkRunner-PollingRunner-DefaultSinkProcessor) [INFO - org.apache.flume.sink.LoggerSink.process(LoggerSink.java:94)] Event: { headers:{} body: 48 65 6C 6C 6F 20 77 6F 72 6C 64 0D             Hello Flume. } <br>
<img src="https://img-blog.csdn.net/20171122173051488?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRzI5MDA5NTE0Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""> <br>
测试成功</p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>