---
layout:     post
title:      kafka原理和实践（一）原理：10分钟入门
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <div class="blogpost-body"><a></a><div><p style="font-size:18px;"><b>目录</b></p><ul><li><a href="#_label0" rel="nofollow">一、kafka拓扑图</a></li><li><a href="#_label1" rel="nofollow">二、名词解释</a></li><li><a href="#_label2" rel="nofollow">三、生产模型</a></li><li><a href="#_label3" rel="nofollow">四、消费模型</a></li></ul></div><p> </p><p style="font-size:18px;"><b>正文</b></p><p>系列目录</p>
<p><a class="singleposttitle" href="http://www.cnblogs.com/dennyzhangdd/p/7759869.html" rel="nofollow">kafka原理和实践（一）原理：10分钟入门</a></p>
<p><a href="http://www.cnblogs.com/dennyzhangdd/p/7759875.html" rel="nofollow">kafka原理和实践（二）spring-kafka简单实践</a></p>
<p><a class="singleposttitle" href="http://www.cnblogs.com/dennyzhangdd/p/7827564.html" rel="nofollow">kafka原理和实践（三）spring-kafka生产者源码</a></p>
<p><a href="http://www.cnblogs.com/dennyzhangdd/p/7759876.html" rel="nofollow">kafka原理和实践（四）spring-kafka消费者源码</a></p>
<p><a class="singleposttitle" href="http://www.cnblogs.com/dennyzhangdd/p/7834143.html" rel="nofollow">kafka原理和实践（五）spring-kafka配置详解</a></p>
<p><a href="http://www.cnblogs.com/dennyzhangdd/p/7759878.html" rel="nofollow">kafka原理和实践（六）总结升华</a></p>
<p> </p>
<p> </p>
<p>=========正文分割线===============</p>
<p>关于kafka原理网上文章很多，但能真正快速入门的几乎没有（要不就是原文翻译官网...实在枯燥无味之极），本章尽量采用图文的方式，提纲挈领的阐述原理。</p>
<div style="text-align:right;"><a href="#_labelTop" rel="nofollow">回到顶部</a><a></a></div><h2>一、kafka拓扑图</h2>
<p>大家都知道kafka是依赖zookeeper集群的，一般最少也要三台服务器来实现HA。拓扑图如下，分三层：</p>
<p>1.Producers:消息生产者，push消息给Brokers.发送时根据不同topic选择不同分区（在Broker上）。</p>
<p>2.Brokers：注册在zookeeper节点上。</p>
<p>3.Consumers：消息消费者，从brokers上根据订阅的topic选择不同分区，poll数据，执行消费。</p>
<p><img src="https://images2017.cnblogs.com/blog/584866/201711/584866-20171117093650374-1834235910.png" alt=""></p>
<div style="text-align:right;"><a href="#_labelTop" rel="nofollow">回到顶部</a><a></a></div><h2>二、名词解释</h2>
<p>1.producer：消息生产者，发布消息到 kafka 集群的终端或服务。</p>
<p>2.broker：kafka 集群中包含的服务器。</p>
<p>3.topic：每条发布到 kafka 集群的消息属于的类别，即 kafka 是面向 topic 的。</p>
<p>4.partition：partition 是物理上的概念，每个 topic 包含一个或多个 partition。kafka 分配的单位是 partition。</p>
<p>5.consumer：从 kafka 集群中消费消息的终端或服务。</p>
<p>6.Consumer group：high-level consumer API 中，每个 consumer 都属于一个 consumer group，每条消息只能被 consumer group 中的一个 Consumer 消费，但可以被多个 consumer group 消费。</p>
<p>7.replica：partition 的副本，保障 partition 的高可用。</p>
<p>8.leader：replica 中的一个角色， producer 和 consumer 只跟 leader 交互。</p>
<p>9.follower：replica 中的一个角色，从 leader 中复制数据。</p>
<p>10.controller：kafka 集群中的其中一个服务器，用来进行 leader election 以及 各种 failover。</p>
<p>11.zookeeper：kafka 通过 zookeeper 来存储集群的 meta 信息。</p>
<div style="text-align:right;"><a href="#_labelTop" rel="nofollow">回到顶部</a><a></a></div><h2>三、生产模型</h2>
<p>kafka生产者多线程异步发送模型如下图，主要包含2个流程：1）数据批量存储,批量发送2）Netty NIO 发送数据</p>
<p>大概看一下流程，理解个大概即可，具体见后续源码分析章节。</p>
<p> <img src="https://images2017.cnblogs.com/blog/584866/201711/584866-20171122161814993-837212513.png" alt=""></p>
<div style="text-align:right;"><a href="#_labelTop" rel="nofollow">回到顶部</a><a></a></div><h2>四、消费模型</h2>
<p>根据xml配置的不同启动不同的容器（ConcurrentMessageListenerContainer/MessageListenerContainer）,下图为并发消息监听器容器启动流程，主要包含2个主流程：</p>
<p>1.从cluster拉取消息</p>
<p>2.消费消息</p>
<p> <img src="https://images2017.cnblogs.com/blog/584866/201711/584866-20171123123259383-2005482311.png" alt=""></p></div>            </div>
                </div>