---
layout:     post
title:      Hive操作.md
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h1><a id="Hive_0"></a>Hive操作</h1>
<h3><a id="Hive_2"></a>Hive命令客户端启动</h3>
<p>1.<span class="katex--inline"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>I</mi><mi>V</mi><msub><mi>E</mi><mi>H</mi></msub><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi mathvariant="normal">启</mi><mi mathvariant="normal">动</mi><mi>h</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi mathvariant="normal">客</mi><mi mathvariant="normal">户</mi><mi mathvariant="normal">端</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">可</mi><mi mathvariant="normal">能</mi><mi mathvariant="normal">会</mi><mi mathvariant="normal">出</mi><mi mathvariant="normal">现</mi><mi>j</mi><mi>a</mi><mi>r</mi><mi mathvariant="normal">包</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">冲</mi><mi mathvariant="normal">突</mi><mi mathvariant="normal">问</mi><mi mathvariant="normal">题</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">将</mi><mi>h</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">高</mi><mi mathvariant="normal">版</mi><mi mathvariant="normal">本</mi><mi mathvariant="normal">的</mi><mi>J</mi><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi mathvariant="normal">替</mi><mi mathvariant="normal">换</mi><mi mathvariant="normal">掉</mi></mrow><annotation encoding="application/x-tex">HIVE_HOME/bin/hive 启动hive客户端，可能会出现jar包的冲突问题，将hive中高版本的Jline替换掉</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord mathit" style="margin-right: 0.08125em;">H</span><span class="mord mathit" style="margin-right: 0.07847em;">I</span><span class="mord mathit" style="margin-right: 0.22222em;">V</span><span class="mord"><span class="mord mathit" style="margin-right: 0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.328331em;"><span class="" style="top: -2.55em; margin-left: -0.05764em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right: 0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mord mathit" style="margin-right: 0.10903em;">M</span><span class="mord mathit" style="margin-right: 0.05764em;">E</span><span class="mord">/</span><span class="mord mathit">b</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord">/</span><span class="mord mathit">h</span><span class="mord mathit">i</span><span class="mord mathit" style="margin-right: 0.03588em;">v</span><span class="mord mathit">e</span><span class="mord cjk_fallback">启</span><span class="mord cjk_fallback">动</span><span class="mord mathit">h</span><span class="mord mathit">i</span><span class="mord mathit" style="margin-right: 0.03588em;">v</span><span class="mord mathit">e</span><span class="mord cjk_fallback">客</span><span class="mord cjk_fallback">户</span><span class="mord cjk_fallback">端</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">能</span><span class="mord cjk_fallback">会</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">现</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">冲</span><span class="mord cjk_fallback">突</span><span class="mord cjk_fallback">问</span><span class="mord cjk_fallback">题</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">将</span><span class="mord mathit">h</span><span class="mord mathit">i</span><span class="mord mathit" style="margin-right: 0.03588em;">v</span><span class="mord mathit">e</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">高</span><span class="mord cjk_fallback">版</span><span class="mord cjk_fallback">本</span><span class="mord cjk_fallback">的</span><span class="mord mathit" style="margin-right: 0.09618em;">J</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit">e</span><span class="mord cjk_fallback">替</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">掉</span></span></span></span></span>HADOOP_HOME/share/hadoop/yarn/lib中的jline.jar包。</p>
<p>2.hive默认的情况下会将自己的元数据存放到默认的数据库中，而默认的数据库是derby。默认情况会将数据存放在当前目录。所以会导致在不同的位置打开hive看到的元数据不一致。因此我们要将元数据保存到我外部的mysql数据库中，这样能够解决数据不一致的问题。修改hive-site.xml文件</p>
<pre class=" language-xml"><code class="prism  language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</span>
<span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>javax.jdo.option.ConnectionURL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>jdbc:mysql://hdp-nn-01:3306/hive?createDatabaseIfNotExist=true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>JDBC connect string for a JDBC metastore<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>javax.jdo.option.ConnectionDriverName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>com.mysql.jdbc.Driver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Driver class name for a JDBC metastore<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>javax.jdo.option.ConnectionUserName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>root<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Username to use against metastore database<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>javax.jdo.option.ConnectionPassword<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>root<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>password to use against metastore database<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre>
<h3><a id="Hive_35"></a>Hive服务端命令启动</h3>
<p>1.$HIVE_HOME/bin/hiveserver2会启动一个hive服务程序，会启动一个监听端口10000的hive服务。</p>
<p>2.使用客户端连接服务端连接服务端。$HIVE_HOME/bin/beeline启动客户端程序。</p>
<p>前台启动：$HIVE_HOME/bin/hiveserver2；</p>
<p>后台启动：nohup $HIVE_HOME/bin/hiveserver2 1&gt;/var/log/hiveserver.log 2&gt;/var/log/hiveserver.err</p>
<pre class=" language-hive"><code class="prism  language-hive">!connect jdbc:hive2://hdp-nn-01:10000
</code></pre>
<p>注：会提示username和password。username为服务端启动程序的用户名；password设置为空</p>
<h3><a id="Beeline_51"></a>Beeline中常用的命令</h3>
<pre class=" language-beeline"><code class="prism  language-beeline">!connect jdbc:hive2://hdp-nn-01:10000	//创建连接
!help                 //查看帮助
!close                //关闭当前连接  如我们连接jdbc连接
!table ;              //显示表
!sh clear ;           //执行shell脚本命令
!quit ;               //退出beeline终端    
</code></pre>
<h3><a id="Hive_62"></a>Hive中的语法</h3>
<h5><a id="Hive_64"></a>Hive创建数据库</h5>
<p>规则</p>
<pre class=" language-hive"><code class="prism  language-hive">CREATE DATABASE|SCHEMA [IF NOT EXISTS] &lt;database name&gt;
</code></pre>
<p>示例</p>
<pre><code>CREATE DATABASE [IF NOT EXISTS] userdb;
CREATE SCHEMA userdb;
SHOW DATABASES;
</code></pre>
<h5><a id="Hive_80"></a>Hive删除数据库</h5>
<p>规则</p>
<pre class=" language-hive"><code class="prism  language-hive">DROP (DATABASE|SCHEMA) [IF EXISTS] database_name [RESTRICT|CASCADE];
</code></pre>
<p>示例</p>
<pre><code>DROP DATABASE IF EXISTS userdb;
DROP DATABASE IF EXISTS userdb CASCADE;	//使用CASCADE查询删除数据库。这意味着要全部删除相应的表在删除数据库之前。
DROP SCHEMA userdb;
</code></pre>
<h5><a id="Hive_96"></a>Hive创建表</h5>
<p>规则</p>
<pre class=" language-hive"><code class="prism  language-hive">CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS] [db_name.] table_name
[(col_name data_type [COMMENT col_comment], ...)]
[COMMENT table_comment]
[ROW FORMAT row_format]
[STORED AS file_format]
</code></pre>
<p>示例</p>
<pre class=" language-hive"><code class="prism  language-hive">CREATE TABLE IF NOT EXISTS employee ( eid int, name String, salary String, destination String)
 COMMENT ‘Employee details’
 ROW FORMAT DELIMITED
 FIELDS TERMINATED BY ‘\t’
 LINES TERMINATED BY ‘\n’
 STORED AS TEXTFILE;
</code></pre>
<h5><a id="Hive_119"></a>Hive修改表</h5>
<p>规则</p>
<pre><code>ALTER TABLE name RENAME TO new_name
ALTER TABLE name ADD COLUMNS (col_spec[, col_spec ...])
ALTER TABLE name DROP [COLUMN] column_name
ALTER TABLE name CHANGE column_name new_name new_type
ALTER TABLE name REPLACE COLUMNS (col_spec[, col_spec ...])
</code></pre>
<p>示例</p>
<pre><code>//下面是查询重命名表，把 employee 修改为 emp。
ALTER TABLE employee RENAME TO emp;
//修改表的列名和类型
ALTER TABLE employee CHANGE name ename String;
ALTER TABLE employee CHANGE salary salary Double;
//增加了一个列名dept在employee表。
ALTER TABLE employee ADD COLUMNS (dept STRING COMMENT 'Department name');
//查询删除的所有列，并使用emp替换列：
ALTER TABLE employee REPLACE COLUMNS (eid INT empid Int, ename STRING name String);
</code></pre>
<h5><a id="_147"></a>建表规则</h5>
<pre class=" language-hive"><code class="prism  language-hive">CREATE [EXTERNAL] TABLE [IF NOT EXISTS] table_name 
  [(col_name data_type [COMMENT col_comment], ...)] 
  [COMMENT table_comment] 
  [PARTITIONED BY (col_name data_type [COMMENT col_comment], ...)] 
  [CLUSTERED BY (col_name, col_name, ...) 
  [SORTED BY (col_name [ASC|DESC], ...)] INTO num_buckets BUCKETS] 
  [ROW FORMAT row_format] 
  [STORED AS file_format] 
  [LOCATION hdfs_path]
</code></pre>
<p>•CREATE TABLE 创建一个指定名字的表。如果相同名字的表已经存在，则抛出异常；用户可以用 IF NOT EXIST 选项来忽略这个异常</p>
<p>•EXTERNAL 关键字可以让用户创建一个外部表，在建表的同时指定一个指向实际数据的路径（LOCATION）</p>
<p>•LIKE 允许用户复制现有的表结构，但是不复制数据</p>
<p>•COMMENT可以为表与字段增加描述</p>
<h5><a id="Hive_169"></a>Hive表的分区</h5>
<p>Partition By 关键字</p>
<pre class=" language-hive"><code class="prism  language-hive">create table t_4(ip string,url string,staylong int)
partitioned by (day string)
row format delimited
fields terminated by ",";
</code></pre>
<h3><a id="_180"></a>导入数据</h3>
<p>将hive运行所在的机器的本地磁盘上的文件导入表中</p>
<pre><code>load data local input '/root/weblog.1' into table t_4 partition(day='2017-04-08');
load data local input '/root/weblog.2' into table t_4 partition(day='2017-04-09');
//overwrite表示会删除表中之前的数据重新导入新数据
load data local input '/root/weblog.2' into [overwrite] table t_4 partition(day='2017-04-09');
</code></pre>
<p>将hdfs中的文件导入表中</p>
<pre class=" language-hive"><code class="prism  language-hive">//如果不加local表示hdfs的路径
load data input '/weblog.2' into [overwrite] table t_4 partition(day='2017-04-09');
</code></pre>
<p>从别的表查询数据后插入到一张指定的表中</p>
<pre><code>//指定表不存在
create table t_1_jz 
as
select * from t_1;

//指定表已存在
create table t_1_hd like t_1;
insert into table t_1_hd 
select * from t_1;
</code></pre>
<h3><a id="_212"></a>导出数据</h3>
<pre><code>insert overwrite directory '/aa/bb'
select * from t_1;
</code></pre>
<h3><a id="Hivesql_221"></a>Hive中的sql</h3>
<p>显示库和表语句</p>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span>
</code></code></pre>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span>
</code></code></pre>
<p>使用默认库</p>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token keyword">use</span> <span class="token keyword">default</span><span class="token punctuation">;</span>
</code></code></pre>
<p>创建库和表</p>
<pre><code>create database db_1；
</code></pre>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> t_1<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span>name string<span class="token punctuation">,</span><span class="token keyword">add</span> string<span class="token punctuation">)</span> 
<span class="token keyword">row</span> format delimited
<span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">','</span><span class="token punctuation">;</span>
</code></code></pre>

            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>