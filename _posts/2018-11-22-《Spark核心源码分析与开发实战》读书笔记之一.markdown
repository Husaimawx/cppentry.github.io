---
layout:     post
title:      《Spark核心源码分析与开发实战》读书笔记之一
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p style="margin-left:0pt;"><strong><strong>第1章 Spark系统概述</strong></strong></p>

<p style="margin-left:0pt;"><strong><strong>1.1 Spark是什么</strong></strong></p>

<p style="margin-left:0pt;">1. Spark比Hadoop快在哪里</p>

<p style="margin-left:0pt;">（1）Spark使用内存计算，而Hadoop使用IO</p>

<p style="margin-left:0pt;">（2）Hadoop的计算是按部就班一步一步进行的，而Spark则是提前生成了DAG，优化了运算路径</p>

<p style="margin-left:0pt;"> </p>

<p style="margin-left:0pt;"><strong><strong>1.2 Spark生态系统BDAS</strong></strong></p>

<p style="margin-left:0pt;">1. BDAS：伯克利数据分析栈</p>

<p style="margin-left:0pt;">2. Spark Core</p>

<p style="margin-left:0pt;">Spark将数据在分布式环境下分区，然后将作业转化为有向无环图（DAG），减少了多次计算之间中间结果I/O开销，并分阶段进行DAG的调度和任务的分布式并行处理。Spark采用容错的，高伸缩性的AKKA作为通信框架，减少了多线程并发运行所带来的不确定性。还采用多线程池模型来减少task的启动开销</p>

<p style="margin-left:0pt;">RDD可以想象为一个个partition，RDD之间相互具有依赖关系</p>

<p style="margin-left:0pt;"><strong><strong>计算跟着数据走</strong></strong></p>

<p style="margin-left:0pt;">3. Spark SQL</p>

<p style="margin-left:0pt;">4. Spark Streaming：核心思想是微批处理</p>

<p style="margin-left:0pt;">相对于Storm的优势：吞吐量更大，更高效的容错处理</p>

<p style="margin-left:0pt;">5. Spark GraphX</p>

<p style="margin-left:0pt;">核心抽象是：一种点和边都带有属性的有向多重图</p>

<p style="margin-left:0pt;">6. MLlib</p>

<p style="margin-left:0pt;">支持四种常见的机器学习问题：分类，回归，聚类和协同过滤</p>

<p style="margin-left:0pt;">7. Tachyon</p>

<p style="margin-left:0pt;">高容错，高性能的开源的分布式内存文件系统（内存中的HDFS）</p>

<p style="margin-left:0pt;">8. BlinkDB</p>

<p style="margin-left:0pt;">在海量数据上进行交互式SQL查询的大规模并行查询引擎</p>

<p style="margin-left:0pt;">核心思想：通过一个自适应优化框架，随着时间的推移，从原始数据建立并维护一组多维样本，通过一个动态样本选择策略，选择一个适度大小的示例。</p>            </div>
                </div>