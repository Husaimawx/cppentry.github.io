---
layout:     post
title:      关于HBase的几个问答。
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/CCCCalculator/article/details/71909861				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h3><span style="font-size:14px;">1.HBase的工作方式：</span></h3>
<span style="font-size:14px;"><span></span>hbase中的表在行的方向上分隔为多个HRegion，分散在不同的RegionServer中<br><span></span>这样做的目的是在查询时可以将工作量分布到多个RegionServer中以提高速度<br><span></span>region由[startkey,endkey)表示<br><span></span>HRegion是hbase分布式存储和负载均衡的最小单元<br><span></span>要注意HRegion不在hdfs中，而是在RegionServer的内存中，在内存（其实也有数据在本地文件系统中，因为内存空间毕竟是有限的）中存储数据以提高查询性能，对于修改会将数据最终同步到hdfs中，以持久化数据。<br><span></span>hbase中的数据按照rowkey的字典顺序（字典顺序！！！先比较第一位 如果相同再比较第二位。。。）按序存储，所以当以rowkey查询数据时，可以提高速度。<br><span></span>hregion的分裂，当hregion变的很大时会分裂成两个，存放到不同的RegionServer中，防止一个Region过大，导致查询其中数据时速度很慢<br></span>
<p><span style="font-size:14px;"><span></span>hbase的系统结构：主要有client hmaster regionServer zookeeper</span></p>
<p><span style="font-size:14px;"><br></span></p>
<p></p>
<h3><span style="font-size:14px;">2.为什么hbase可以很快：</span></h3>
<span style="font-size:14px;"><span></span>从逻辑结构上来说：<br><span></span>表按照行键进行了排序，所以查询时可以很快定位<br><span></span>数据按照行键切分为多个HRegion，分布在多个RegionServer中，查询大量数据时，多个RegionServer可以一起工作，从而<span>
</span>提高速度<br><span></span>从物理结构上来说：<br><span></span>HRegion是存活在RegionServer的内存中的，读写会非常的高效<br><span></span>还有HFile的支持保证大量的数据可以持久化的保存<br><span></span>数据最终落地到HDFS中，分布式的存储，保证数据段可靠性和可扩展性<br></span>
<p></p>
<p><span style="font-size:14px;"><br></span></p>
<p></p>
<h3><span style="font-size:14px;">3.为什么hbase可以存储很多数据：</span></h3>
<span style="font-size:14px;"><span></span>基于hdfs，所以支持可扩展性，可以通过增加大量的廉价的硬件提高存储容量<br><span></span>按列存储，空的数据不占用空间，当存储稀疏数据时，不会浪费空间<br><span></span>按例存储，同一列的数据存放在一起，而同一列的数据一般都是同样的类型的内容相似的数据，可以实现非常高效的压缩，节省空间<br></span>
<p></p>
<p><span style="font-size:14px;"><br></span></p>
<p></p>
<h3><span style="font-size:14px;">4.为什么hbase的数据是可靠的：</span></h3>
<span style="font-size:14px;"><span></span>基于hdfs，由hdfs的可靠性保证了hbase的可靠性--即数据可以有多个备份<br><span></span>利用zookeeper实现了HA(高可靠)，即使某一台机器挂掉另外的机器也可以很快的替换它<br><br><br></span>
<h3><span style="font-size:14px;">5.hbase和hive和传统的关系型数据库的比较：</span></h3>
<span style="font-size:14px;"><span></span>比起传统的关系型数据库，可以存储半结构化非结构化的数据，可以存储和处理更大级别的数据，提供高效的查询，对于稀疏数据的处理更好，具有更好的横向扩展性，免费开源性价比很高。但是不能支持非常好的事务特性，只支持行级的事务。只能通过行键来查询，表设计时难度更高。而mysql用来存储结构化的数据提供更好的事务控制。<br><span></span><br><span></span>比起hive，hive只是在mapreduce上包了一层壳，本质上还是离线数据的处理的工具，实时查询性能有限，本质上是一个基于hadoop的数据仓库工具，不能支持行级别的新增修改和删除。hbase可以提供实时的数据的处理能力，适用于在线数据查询处理，本质上是一种数据库工具。</span><br><p></p>
            </div>
                </div>