---
layout:     post
title:      Hive常用SQL命令操作
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/test_soy/article/details/49335777				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h1 title="Hive常用的SQL命令操作" style="font-size:30px;color:rgb(51,51,51);font-weight:400;font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;">
<span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">创建表 </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">hive&gt;
 CREATE TABLE pokes (foo INT, bar STRING); </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">创建表并创建索引字段ds </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">hive&gt;
 CREATE TABLE invites (foo INT, bar STRING) PARTITIONED BY (ds STRING); </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">显示所有表 </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">hive&gt;
 SHOW TABLES; </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">按正条件（正则表达式）显示表， </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">hive&gt;
 SHOW TABLES '.*s'; </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">表添加一列 </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">hive&gt;
 ALTER TABLE pokes ADD COLUMNS (new_col INT); </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">添加一列并增加列字段注释 </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">hive&gt;
 ALTER TABLE invites ADD COLUMNS (new_col2 INT COMMENT 'a comment'); </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">更改表名 </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">hive&gt;
 ALTER TABLE events RENAME TO 3koobecaf; </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">删除列 </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">hive&gt;
 DROP TABLE pokes;</span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">元数据存储 </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">将文件中的数据加载到表中
 hive&gt; LOAD DATA LOCAL INPATH './examples/files/kv1.txt' OVERWRITE INTO TABLE pokes; 加载本地数据，同时给定分区信息 hive&gt; LOAD DATA LOCAL INPATH './examples/files/kv2.txt' OVERWRITE INTO TABLE invites PARTITION (ds='2008-08-15'); 加载DFS数据 ，同时给定分区信息 hive&gt; LOAD DATA INPATH '/user/myname/kv2.txt'
 OVERWRITE INTO TABLE invites PARTITION (ds='2008-08-15'); The above command will load data from an HDFS file/directory to the table. Note that loading data from HDFS will result in moving the file/directory. As a result, the operation is almost instantaneous. </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">SQL
 操作 </span><span style="color:rgb(51,51,51);font-family:'Microsoft Yahei', '微软雅黑', arial, '宋体', sans-serif;font-size:16px;line-height:28px;text-align:justify;">按先件查询 hive&gt; SELECT a.foo FROM invites a WHERE a.ds='&lt;DATE&gt;'; 将查询数据输出至目录 hive&gt; INSERT OVERWRITE DIRECTORY
 '/tmp/hdfs_out' SELECT a.* FROM invites a WHERE a.ds='&lt;DATE&gt;'; 将查询结果输出至本地目录 hive&gt; INSERT OVERWRITE LOCAL DIRECTORY '/tmp/local_out' SELECT a.* FROM pokes a; 选择所有列到本地目录 hive&gt; INSERT OVERWRITE TABLE events SELECT a.* FROM profiles a; hive&gt; INSERT OVERWRITE TABLE
 events SELECT a.* FROM profiles a WHERE a.key &lt; 100; hive&gt; INSERT OVERWRITE LOCAL DIRECTORY '/tmp/reg_3' SELECT a.* FROM events a; hive&gt; INSERT OVERWRITE DIRECTORY '/tmp/reg_4' select a.invites, a.pokes FROM profiles a; hive&gt; INSERT OVERWRITE DIRECTORY '/tmp/reg_5'
 SELECT COUNT(1) FROM invites a WHERE a.ds='&lt;DATE&gt;'; hive&gt; INSERT OVERWRITE DIRECTORY '/tmp/reg_5' SELECT a.foo, a.bar FROM invites a; hive&gt; INSERT OVERWRITE LOCAL DIRECTORY '/tmp/sum' SELECT SUM(a.pc) FROM pc1 a; 将一个表的统计结果插入另一个表中 hive&gt; FROM invites a INSERT
 OVERWRITE TABLE events SELECT a.bar, count(1) WHERE a.foo &gt; 0 GROUP BY a.bar; hive&gt; INSERT OVERWRITE TABLE events SELECT a.bar, count(1) FROM invites a WHERE a.foo &gt; 0 GROUP BY a.bar; JOIN hive&gt; FROM pokes t1 JOIN invites t2 ON (t1.bar = t2.bar) INSERT OVERWRITE
 TABLE events SELECT t1.bar, t1.foo, t2.foo; 将多表数据插入到同一表中 FROM src INSERT OVERWRITE TABLE dest1 SELECT src.* WHERE src.key &lt; 100 INSERT OVERWRITE TABLE dest2 SELECT src.key, src.value WHERE src.key &gt;= 100 and src.key &lt; 200 INSERT OVERWRITE TABLE dest3 PARTITION(ds='2008-04-08',
 hr='12') SELECT src.key WHERE src.key &gt;= 200 and src.key &lt; 300 INSERT OVERWRITE LOCAL DIRECTORY '/tmp/dest4.out' SELECT src.value WHERE src.key &gt;= 300; 将文件流直接插入文件 hive&gt; FROM invites a INSERT OVERWRITE TABLE events SELECT TRANSFORM(a.foo, a.bar) AS (oof, rab)
 USING '/bin/cat' WHERE a.ds &gt; '2008-08-09'; This streams the data in the map phase through the script /bin/cat (like hadoop streaming). Similarly - streaming can be used on the reduce side (please see the Hive Tutorial or examples)</span><br></h1>
            </div>
                </div>