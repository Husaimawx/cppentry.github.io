---
layout:     post
title:      Hive客户端调用的几种方式
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/wonderful_life_mrchi/article/details/77606580				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p>hive命令指的是hive_home/bin/hive.sh，hive表示用来执行交互式查询和批量处理的脚本。hive可以直接敲hive命令进入interactive模式，也可以hive -e 执行简单命令或者hive -f 执行一个sql脚本文件。具体官方给出的用法如下：</p>
<p></p>
<h2 id="LanguageManualCli-HiveCommandLineOptions" style="color:rgb(51,51,51);font-size:20px;font-weight:normal;line-height:1.5;border-bottom-color:rgb(204,204,204);font-family:Arial, sans-serif;">
Hive Command Line Options</h2>
<p></p>
<p style="color:rgb(51,51,51);font-family:Arial, sans-serif;font-size:14px;">
To get help, run "<code>hive -H</code>" or "<code>hive --help</code>".<br>
Usage (as it is in Hive 0.9.0):</p>
<div class="preformatted panel" style="color:rgb(51,51,51);border:1px solid rgb(204,204,204);overflow:auto;font-family:Arial, sans-serif;font-size:14px;">
<div class="preformattedContent panelContent">
<pre style="font-family:'Courier New', Courier, monospace;line-height:1.3;">usage: hive
 -d,--define &lt;key=value&gt;          Variable substitution to apply to Hive
                                  commands. e.g. -d A=B or --define A=B
 -e &lt;quoted-query-string&gt;         SQL from command line
 -f &lt;filename&gt;                    SQL from files
 -H,--help                        Print help information
 -h &lt;hostname&gt;                    Connecting to Hive Server on remote host
    --hiveconf &lt;property=value&gt;   Use value for given property
    --hivevar &lt;key=value&gt;         Variable substitution to apply to hive
                                  commands. e.g. --hivevar A=B
 -i &lt;filename&gt;                    Initialization SQL file
 -p &lt;port&gt;                        Connecting to Hive Server on port number
 -S,--silent                      Silent mode in interactive shell
 -v,--verbose                     Verbose mode (echo executed SQL to the
                                  console)
</pre>
</div>
</div>
<div class="confluence-information-macro confluence-information-macro-information" style="background:rgb(252,252,252);border:1px solid rgb(170,184,198);color:rgb(51,51,51);min-height:20px;font-family:Arial, sans-serif;font-size:14px;">
<p class="title" style="font-weight:bold;">
Version information</p>
<span class="aui-icon aui-icon-small aui-iconfont-info confluence-information-macro-icon" style="border:none;display:block;text-indent:-999em;vertical-align:text-bottom;width:16px;line-height:20px;color:rgb(74,103,133);"></span>
<div class="confluence-information-macro-body">
<p>
As of Hive 0.10.0 there is one additional command line option:</p>
<div class="preformatted panel" style="border:1px solid rgb(204,204,204);overflow:auto;background-color:rgb(255,255,255);">
<div class="preformattedContent panelContent">
<pre style="font-family:'Courier New', Courier, monospace;line-height:1.3;">--database &lt;dbname&gt;      Specify the database to use
</pre>
</div>
</div>
</div>
</div>
<p style="color:rgb(51,51,51);font-family:Arial, sans-serif;font-size:14px;">
Note: The variant "<code>-hiveconf</code>" is supported as well as "<code>--hiveconf</code>".</p>
<h3 id="LanguageManualCli-Examples" style="color:rgb(51,51,51);font-size:16px;line-height:1.5;font-family:Arial, sans-serif;">
Examples</h3>
<p style="color:rgb(51,51,51);font-family:Arial, sans-serif;font-size:14px;">
See <a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual+VariableSubstitution" rel="nofollow" style="color:rgb(53,114,176);">Variable Substitution</a> for examples of using the <code>hiveconf</code> option.</p>
<ul style="color:rgb(51,51,51);font-family:Arial, sans-serif;font-size:14px;"><li>
<p>
Example of running a query from the command line</p>
<div class="preformatted panel" style="border:1px solid rgb(204,204,204);overflow:auto;">
<div class="preformattedContent panelContent">
<pre style="font-family:'Courier New', Courier, monospace;line-height:1.3;">$HIVE_HOME/bin/hive -e 'select a.col from tab1 a'</pre>
</div>
</div>
</li><li>
<p>
Example of setting Hive configuration variables</p>
<div class="preformatted panel" style="border:1px solid rgb(204,204,204);overflow:auto;">
<div class="preformattedContent panelContent">
<pre style="font-family:'Courier New', Courier, monospace;line-height:1.3;">$HIVE_HOME/bin/hive -e 'select a.col from tab1 a' --hiveconf hive.exec.scratchdir=/home/my/hive_scratch  --hiveconf mapred.reduce.tasks=32</pre>
</div>
</div>
</li><li>
<p>
Example of dumping data out from a query into a file using silent mode</p>
<div class="preformatted panel" style="border:1px solid rgb(204,204,204);overflow:auto;">
<div class="preformattedContent panelContent">
<pre style="font-family:'Courier New', Courier, monospace;line-height:1.3;">$HIVE_HOME/bin/hive -S -e 'select a.col from tab1 a' &gt; a.txt</pre>
</div>
</div>
</li><li>
<p>
Example of running a script non-interactively from local disk</p>
<div class="preformatted panel" style="border:1px solid rgb(204,204,204);overflow:auto;">
<div class="preformattedContent panelContent">
<pre style="font-family:'Courier New', Courier, monospace;line-height:1.3;">$HIVE_HOME/bin/hive -f /home/my/hive-script.sql</pre>
</div>
</div>
</li><li>
<p>
Example of running a script non-interactively from a Hadoop supported filesystem (starting in <a class="external-link" href="https://issues.apache.org/jira/browse/HIVE-7136" rel="nofollow" style="color:rgb(53,114,176);">Hive 0.14</a>)</p>
<div class="preformatted panel" style="border:1px solid rgb(204,204,204);overflow:auto;">
<div class="preformattedContent panelContent">
<pre style="font-family:'Courier New', Courier, monospace;line-height:1.3;">$HIVE_HOME/bin/hive -f hdfs://&lt;namenode&gt;:&lt;port&gt;/hive-script.sql
$HIVE_HOME/bin/hive -f s3://mys3bucket/s3-script.sql </pre>
</div>
</div>
</li><li>
<p>
Example of running an initialization script before entering interactive mode</p>
<div class="preformatted panel" style="border:1px solid rgb(204,204,204);overflow:auto;">
<div class="preformattedContent panelContent">
<pre style="font-family:'Courier New', Courier, monospace;line-height:1.3;">$HIVE_HOME/bin/hive -i /home/my/hive-init.sql</pre>
</div>
</div>
</li></ul><br><p>下面我们具体看一下三种用法的详细介绍：</p>
<p>官网地址：https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Cli </p>
<p>方式1：hive –f  /root/shell/hive-script.sql（适合多条sql组成的文件）</p>
<p> </p>
<p>hive-script.sql类似于script一样，直接写查询命令就行</p>
<p> </p>
<p>例如：</p>
<p>[root@cloud4 shell]# vi hive_script3.sql</p>
<p>select * from t1;</p>
<p>select count(*) from t1;</p>
<p><span>不进入交互模式，执行一个</span><span>hive script</span> </p>
<p><span>这里可以和静音模式</span>-S<span>联合使用</span>,<span>通过第三方程序调用，第三方程序通过</span>hive<span>的标准输出获取结果集。</span></p>
<p><span> </span><span>$HIVE_HOME/bin/hive -S -f /home/my/hive-script.sql</span> （不会显示mapreduct的操作过程）</p>
<p><span>那么问题来了：如何传递参数呢？</span></p>
<p>demo如下：</p>
<p>start_hql.sh  内容：</p>
<p>#!/bin/bash<br>
# -S 打印输出mapreduce日志<br>
hive \<br>
  -hivevar id=1  \<br>
  -hivevar col2=2  \<br>
  -S -f test.sql</p>
<p>test.sql 内容：<br>
-- 数据库<br>
use tmp; <br>
-- 表名<br>
select * <br>
from tmp_jzl_20140725_test11<br>
where <br>
id='${hivevar:id}' and col2='${hivevar:col2}';<br>
 </p>
<p>方式2：hive -e  'sql语句'（适合短语句）</p>
<p><span>直接执行sql语句 </span></p>
<p><span>例如：</span><br>
[root@cloud4 shell]# <span>hive -e 'select * from t1'<br>
静音模式：</span></p>
<p>[root@cloud4 shell]# <span>hive -S -e 'select * from t1'  (用法与第一种方式的静音模式一样，不会显示mapreduce的操作过程)<br>
此处还有一亮点，用于导出数据到linux本地目录下</span><br><span>例如：</span></p>
<p>[root@cloud4 shell]# <span>hive -e 'select * from t1'  &gt; test.txt<br>
有点类似pig导出分析结果一样，都挺方便的</span></p>
<p>方式3：hive （直接使用hive交互式模式）</p>
<p><span>都挺方便的<br>
介绍一种有意思的用法：<br>
1.sql的语法</span></p>
<p> </p>
<p>#hive     启动</p>
<p> </p>
<p>hive&gt;quit;     退出hive</p>
<p>hive&gt; show databases;   查看数据库</p>
<p>hive&gt; create database test;  创建数据库</p>
<p>hive&gt; use default;    使用哪个数据库</p>
<p>hive&gt;create table t1 (key string); 创建表<br>
对于创建表我们可以选择读取文件字段按照什么字符进行分割<br>
例如：<br>
hive&gt;create table t1(id ) '/wlan' <br>
partitioned by (log_date string)  表示通过log_date进行分区<br>
row format delimited fields terminated by '\t'   表示代表用‘\t’进行分割来读取字段<br>
stored as textfile/sequencefile/rcfile/;  表示文件的存储的格式<br><br>
存储格式的参考地址：<a href="http://blog.csdn.net/yfkiss/article/details/7787742" rel="nofollow">http://blog.csdn.net/yfkiss/article/details/7787742</a><br><span>textfile </span><span>默认格式，数据不做压缩，磁盘开销大，数据解析开销大。</span><br><span>可结合Gzip、Bzip2使用（系统自动检查，执行查询时自动解压），但使用这种方式，hive不会对数据进行切分，从而无法对数据进行并行操作。</span><br><span>实例：</span></p>
<p><span>[plain]</span> <a href="http://blog.csdn.net/yfkiss/article/details/7787742#" rel="nofollow">view plain</a><a href="http://blog.csdn.net/yfkiss/article/details/7787742#" rel="nofollow">copy</a></p>
<ol><li>
<p><span>&gt; create table test1(str STRING)  </span></p>
</li><li>
<p><span>&gt; STORED AS TEXTFILE;   </span></p>
</li><li>
<p><span>OK  </span></p>
</li><li>
<p><span>Time taken: 0.786 seconds  </span></p>
</li><li>
<p><span>#写脚本生成一个随机字符串文件，导入文件：  </span></p>
</li><li>
<p><span>&gt; LOAD DATA LOCAL INPATH '/home/work/data/test.txt' INTO TABLE test1;  </span></p>
</li><li>
<p><span>Copying data from file:/home/work/data/test.txt  </span></p>
</li><li>
<p><span>Copying file: file:/home/work/data/test.txt  </span></p>
</li><li>
<p><span>Loading data to table default.test1  </span></p>
</li><li>
<p><span>OK  </span></p>
</li><li>
<p><span>Time taken: 0.243 seconds  </span></p>
</li></ol><p><span>SequenceFile是Hadoop API提供的一种二进制文件支持，其具有使用方便、可分割、可压缩的特点。</span><br><span>SequenceFile支持三种压缩选择：NONE, RECORD, BLOCK。 Record压缩率低，一般建议使用BLOCK压缩。</span><br><span>示例：</span></p>
<p><span>[plain]</span> <a href="http://blog.csdn.net/yfkiss/article/details/7787742#" rel="nofollow">view plain</a><a href="http://blog.csdn.net/yfkiss/article/details/7787742#" rel="nofollow">copy</a></p>
<ol><li>
<p><span>&gt; create table test2(str STRING)  </span></p>
</li><li>
<p><span>&gt; STORED AS SEQUENCEFILE;  </span></p>
</li><li>
<p><span>OK  </span></p>
</li><li>
<p><span>Time taken: 5.526 seconds  </span></p>
</li><li>
<p><span>hive&gt; SET hive.exec.compress.output=true;  </span></p>
</li><li>
<p><span>hive&gt; SET io.seqfile.compression.type=BLOCK;  </span></p>
</li><li>
<p><span>hive&gt; INSERT OVERWRITE TABLE test2 SELECT * FROM test1;  </span> </p>
</li></ol><p><span>rcfile是一种行列存储相结合的存储方式。首先，其将数据按行分块，保证同一个record在一个块上，避免读一个记录需要读取多个block。其次，块数据列式存储，有利于数据压缩和快速的列存取。RCFILE文件示例：</span></p>
<p> </p>
<p><img src="http://static.oschina.net/uploads/img/201401/13191855_x5eG.jpg" alt=""></p>
<p> </p>
<p>实例：</p>
<p><span>[plain]</span> <a href="http://blog.csdn.net/yfkiss/article/details/7787742#" rel="nofollow">view plain</a><a href="http://blog.csdn.net/yfkiss/article/details/7787742#" rel="nofollow">copy</a></p>
<ol><li>
<p><span>&gt; create table test3(str STRING)  </span></p>
</li><li>
<p><span>&gt; STORED AS RCFILE;  </span></p>
</li><li>
<p><span>OK  </span></p>
</li><li>
<p><span>Time taken: 0.184 seconds  </span></p>
</li><li>
<p><span>&gt;  INSERT OVERWRITE TABLE test3 SELECT * FROM test1;  </span></p>
</li></ol><p> </p>
<p><span>总结：</span><br><span>相比textfile和</span><span>SequenceFile</span><span>，rcfile由于列式存储方式，数据加载时性能消耗较大，但是具有较好的压缩比和查询响应。数据仓库的特点是一次写入、多次读取，因此，整体来看，rcfile相比其余两种格式具有较明显的优势。<br>
 </span></p>
<p> </p>
<p>hive&gt;show tables;  查看该数据库中的所有表</p>
<p>hive&gt;show tables  ‘*t*’;    //支持模糊查询</p>
<p> </p>
<p>hive&gt;show partitions t1;  //查看表有哪些分区 </p>
<p>hive&gt;drop table t1 ; 删除表<br><br>
hive不支持修改表中数据，但是可以修改表结构，而不影响数据</p>
<p> </p>
<p>有local的速度明显比没有local慢：</p>
<p> </p>
<p>hive&gt;load data inpath '/root/inner_table.dat' into table t1;   移动hdfs中数据到t1表中</p>
<p>hive&gt;load  data local inpath '/root/inner_table.dat' into table t1;  上传本地数据到hdfs中</p>
<p>hive<span>&gt; !</span><span>ls</span>;  查询当前linux文件夹下的文件<br>
hive<span>&gt; dfs -</span><span>ls /</span><span>;</span> 查询当前hdfs文件系统下  '/'目录下的文件</p>
            </div>
                </div>