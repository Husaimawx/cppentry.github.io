---
layout:     post
title:      kafka基础
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<div id="article_content" class="article_content">

<p>http://kafka.apache.org/quickstart</p>
<p>kafka笔记 <br>
1/kafka是一个分布式的消息缓存系统<br>
2/kafka集群中的服务器都叫做broker<br>
3/kafka有两类客户端，一类叫producer（消息生产者），一类叫做consumer（消息消费者），客户端和broker服务器之间采用tcp协议连接<br>
4/kafka中不同业务系统的消息可以通过topic进行区分，而且每一个消息topic都会被分区，以分担消息读写的负载<br>
5/每一个分区都可以有多个副本，以防止数据的丢失<br>
6/某一个分区中的数据如果需要更新，都必须通过该分区所有副本中的leader来更新<br>
7/消费者可以分组，比如有两个消费者组A和B，共同消费一个topic：order_info,A和B所消费的消息不会重复<br>
比如 order_info 中有100个消息，每个消息有一个id,编号从0-99，那么，如果A组消费0-49号，B组就消费50-99号<br>
8/消费者在具体消费某个topic中的消息时，可以指定起始偏移量<br>
<br>
<br>
集群安装<br>
1、解压<br>
2、修改server.properties(分别在3台机器上修改此文件)<br>
broker.id=1<br>
zookeeper.connect=wuke01:2181,wuke01:2181,wuke01:2181</p>
<p><br>
</p>
<p>broker.id=2<br>
zookeeper.connect=wuke01:2181,wuke01:2181,wuke01:2181</p>
<p><br>
</p>
<p>broker.id=2<br>
zookeeper.connect=wuke01:2181,wuke01:2181,wuke01:2181<br>
<br>
<br>
3、将zookeeper集群启动<br>
<br>
<br>
4、在每一台节点上启动broker(kafka的服务器)<br>
bin/kafka-server-start.sh config/server.properties<br>
<br>
<br>
5、在kafka集群中创建一个topic<br>
bin/kafka-topics.sh –create –zookeeper weekend05:2181 –replication-factor 3 –partitions 1 –topic order<br>
<br>
<br>
6、用一个producer向某一个topic中写入消息<br>
bin/kafka-console-producer.sh –broker-list weekend:9092 –topic order<br>
<br>
<br>
7、用一个comsumer从某一个topic中读取信息<br>
bin/kafka-console-consumer.sh –zookeeper weekend05:2181 –from-beginning –topic order<br>
<br>
<br>
8、查看一个topic的分区及副本状态信息<br>
bin/kafka-topics.sh –describe –zookeeper weekend05:2181 –topic order<br>
</p>
<p></p>
<div><img src="file:///C:%5CUsers%5Cke%5CAppData%5CRoaming%5CTencent%5CUsers%5C1097520725%5CQQ%5CWinTemp%5CRichOle%5CJW%7DB0R%5D3L(54%7BOO%7DO%5DRW%249Y.png" alt=""></div>
<br>
<p></p>
<p>查看topic myson的结果</p>
<p>myson有两个partition(逻辑概念)paritition0和partition1,partition0的leader是broker0,partition1的leader是broker1,每个partition都有3个副本，Isr表示当前处于同步状态的副本</p>
<p><img src="https://img-blog.csdn.net/20161214221751931?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ290dG9uRHVrZQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br>
</p>
<p><br>
</p>
<p><br>
</p>
<p>kafka命令</p>
<p>查看所有topic</p>
<p>bin/kafka-topics.sh –list –zookeeper  weekend05:2181</p>
<p><br>
</p>
<p>删除kafka数据</p>
<p></p>
<p>
1、删除kafka存储目录（server.properties文件log.dirs配置，默认为”/tmp/kafka-logs”）相关topic目录<br>
</p>
<p>
2、Kafka 删除topic的命令是：</p>
<p>
     <span>./bin/kafka-topics  –delete –zookeeper 【zookeeper server】  –topic 【topic name】</span></p>
<p>
     如果kafaka启动时加载的配置文件中server.properties没有配置delete.topic.enable=true，那么此时的删除并不是真正的删除，而是把topic标记为：marked for deletion</p>
<p>
     你可以通过命令：<strong>./bin/kafka-topics –zookeeper 【zookeeper server】 –list </strong>来查看所有topic</p>
<p>
<br>
</p>
<p>
     此时你若想真正删除它，可以如下操作：</p>
<p>
     （1）登录zookeeper客户端：命令：<strong>./bin/zookeeper-client</strong></p>
<p>
<strong>     </strong>（2）找到topic所在的目录：<strong>ls /brokers/topics</strong></p>
<p>
     （3）找到要删除的topic，执行命令：<strong>rmr /brokers/topics/【topic name】即可，此时topic被彻底删除。</strong></p>
<p>
<strong><br>
</strong></p>
<p>
    另外被标记为marked for deletion的topic你可以在zookeeper客户端中通过命令获得：<strong>ls /admin/delete_topics/【topic name】，</strong></p>
<p>
    如果你删除了此处的topic，那么marked for deletion 标记消失</p>
<p>
    zookeeper 的config中也有有关topic的信息： <strong>ls /config/topics/【topic name】</strong>暂时不知道有什么用</p>
<p>
<br>
</p>
<p>
总结：</p>
<p>
彻底删除topic：</p>
<p>
 1、删除kafka存储目录（server.properties文件log.dirs配置，默认为”/tmp/kafka-logs”）相关topic目录<br>
</p>
<p>
 2、如果配置了delete.topic.enable=true直接通过命令删除，如果命令删除不掉，直接通过zookeeper-client 删除掉broker下的topic即可。</p>
<br>

</div>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>