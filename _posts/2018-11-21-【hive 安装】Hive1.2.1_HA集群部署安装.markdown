---
layout:     post
title:      【hive 安装】Hive1.2.1_HA集群部署安装
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/u013421629/article/details/79012132				</div>
								            <div id="content_views" class="markdown_views prism-github-gist">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>1、<strong>准备工作</strong></p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor"># 基础准备工作</span>
<span class="hljs-preprocessor"># hive</span>
wget http://mirrors<span class="hljs-preprocessor">.cnnic</span><span class="hljs-preprocessor">.cn</span>/apache/hive/hive-<span class="hljs-number">1.2</span><span class="hljs-number">.1</span>/apache-hive-<span class="hljs-number">1.2</span><span class="hljs-number">.1</span>-bin<span class="hljs-preprocessor">.tar</span><span class="hljs-preprocessor">.gz</span>
tar -zxvf apache-hive-<span class="hljs-number">1.2</span><span class="hljs-number">.1</span>-bin<span class="hljs-preprocessor">.tar</span><span class="hljs-preprocessor">.gz</span>
mv apache-hive-<span class="hljs-number">1.2</span><span class="hljs-number">.1</span>-bin /www/hive
<span class="hljs-preprocessor"># 创建/www/hive的软连接/opt/hive</span>
ln -s /www/hive /opt/hive</code></pre>

<p>2、<strong>hive文件配置</strong></p>



<pre class="prettyprint"><code class=" hljs avrasm">mkdir -p /data/hive/iotmp
<span class="hljs-keyword">cp</span> /opt/hive/lib/jline-<span class="hljs-number">2.12</span><span class="hljs-preprocessor">.jar</span> /opt/hadoop/share/hadoop/yarn/lib
<span class="hljs-preprocessor"># mysql-connector-java-5.1.39-bin.jar 需要手动下载一下</span>
<span class="hljs-preprocessor"># 下载地址：http://dev.mysql.com/downloads/connector/j/</span>
<span class="hljs-preprocessor"># 然后解压，找到 mysql-connector-java-5.1.39-bin.jar</span>
mv mysql-connector-java-<span class="hljs-number">5.1</span><span class="hljs-number">.39</span>-bin<span class="hljs-preprocessor">.jar</span> $HIVE_HOME/lib
<span class="hljs-keyword">cp</span> conf/hive-env<span class="hljs-preprocessor">.sh</span><span class="hljs-preprocessor">.template</span> conf/hive-env<span class="hljs-preprocessor">.sh</span>
<span class="hljs-keyword">cp</span> conf/hive-default<span class="hljs-preprocessor">.xml</span><span class="hljs-preprocessor">.template</span> conf/hive-site<span class="hljs-preprocessor">.xml</span></code></pre>

<p>2.1、<strong>vim conf/hive-env.sh</strong></p>



<pre class="prettyprint"><code class=" hljs ruby">export <span class="hljs-constant">HADOOP_HOME</span>=<span class="hljs-regexp">/opt/hadoop</span>
export <span class="hljs-constant">HADOOP_CONF_DIR</span>=<span class="hljs-regexp">/opt/hadoop</span><span class="hljs-regexp">/etc/hadoop</span>
export <span class="hljs-constant">HIVE_CONF_DIR</span>=<span class="hljs-regexp">/opt/hive</span><span class="hljs-regexp">/conf</span></code></pre>

<p>2.2、<strong>vim conf/hive-site.xml(请对着修改value值)</strong></p>



<pre class="prettyprint"><code class=" hljs xml"><span class="hljs-pi">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</span>
<span class="hljs-pi">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">configuration</span>&gt;</span>
  <span class="hljs-comment">&lt;!-- hive JDBC mysql--&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>jdbc:mysql://apachecn.org-18:3306/adhive?createDatabaseIfNotExist=true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>
      JDBC connect string for a JDBC metastore.
      To use SSL to encrypt/authenticate the connection, provide database-specific SSL flag in the connection URL.
      For example, jdbc:postgresql://myhost/db?ssl=true for postgres database.
    <span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>Driver class name for a JDBC metastore<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>datasys<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>Username to use against metastore database<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>datasys<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>password to use against metastore database<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
  <span class="hljs-comment">&lt;!-- hivemetastore HA--&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hive.metastore.uris<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>thrift://apachecn.org-16:9083,thrift://apachecn.org-17:9083<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>Thrift URI for the remote metastore. Used by metastore client to connect to remote metastore.<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
  <span class="hljs-comment">&lt;!-- io.tmpdir --&gt;</span> 
  <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>system:java.io.tmpdir<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>/data/hive/iotmp<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>system:user.name<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>hadoopuser<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hive.insert.into.multilevel.dirs<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>
      Where to insert into multilevel directories like
      "insert directory '/HIVEFT25686/chinna/' from table"
    <span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
  <span class="hljs-comment">&lt;!-- python 连接hiveserver2--&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hive.server2.authentication<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>NOSASL<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>
      Expects one of [nosasl, none, ldap, kerberos, pam, custom].
      Client authentication types.
        NONE: no authentication check
        LDAP: LDAP/AD based authentication
        KERBEROS: Kerberos/GSSAPI authentication
        CUSTOM: Custom authentication provider
                (Use with property hive.server2.custom.authentication.class)
        PAM: Pluggable authentication module
        NOSASL:  Raw transport
    <span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
  <span class="hljs-comment">&lt;!-- hiveserver2 HA--&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hive.server2.support.dynamic.service.discovery<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hive.server2.zookeeper.namespace<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>hiveserver2<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hive.zookeeper.quorum<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>apachecn.org-19:2181,apachecn.org-20:2181,apachecn.org-21:2181<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">configuration</span>&gt;</span></code></pre>

<p>2.3 、<strong>初始化数据库</strong></p>



<pre class="prettyprint"><code class=" hljs lasso"><span class="hljs-built_in">.</span>/bin/schematool <span class="hljs-attribute">-initSchema</span> <span class="hljs-attribute">-dbType</span> mysql</code></pre>



<pre class="prettyprint"><code class=" hljs ruby">[datasys<span class="hljs-variable">@mtcloud</span>-distributeddev-<span class="hljs-number">01</span> bin]<span class="hljs-variable">$ </span>schematool -initSchema -dbType mysql
<span class="hljs-symbol">which:</span> no hbase <span class="hljs-keyword">in</span> (.<span class="hljs-symbol">:</span>.<span class="hljs-symbol">:/opt/jdk/bin</span><span class="hljs-symbol">:/opt/storm/bin</span><span class="hljs-symbol">:/opt/zookeeper/bin</span><span class="hljs-symbol">:/opt/kafka/bin</span><span class="hljs-symbol">:/usr/local/bin</span><span class="hljs-symbol">:/bin</span><span class="hljs-symbol">:/usr/bin</span><span class="hljs-symbol">:/usr/local/sbin</span><span class="hljs-symbol">:/usr/sbin</span><span class="hljs-symbol">:/sbin</span><span class="hljs-symbol">:/opt/hadoop/bin</span><span class="hljs-symbol">:/opt/hadoop/sbin</span><span class="hljs-symbol">:/home/datasys/bin</span>)
<span class="hljs-constant">SLF4J</span><span class="hljs-symbol">:</span> <span class="hljs-constant">Class</span> path contains multiple <span class="hljs-constant">SLF4J</span> bindings.
<span class="hljs-constant">SLF4J</span><span class="hljs-symbol">:</span> <span class="hljs-constant">Found</span> binding <span class="hljs-keyword">in</span> [<span class="hljs-symbol">jar:</span><span class="hljs-symbol">file:</span>/opt/hive/lib/log4j-slf4j-impl-<span class="hljs-number">2.4</span>.<span class="hljs-number">1</span>.jar!<span class="hljs-regexp">/org/slf</span>4j/impl/<span class="hljs-constant">StaticLoggerBinder</span>.<span class="hljs-keyword">class</span>]
<span class="hljs-constant">SLF4J</span><span class="hljs-symbol">:</span> <span class="hljs-constant">Found</span> binding <span class="hljs-keyword">in</span> [<span class="hljs-symbol">jar:</span><span class="hljs-symbol">file:</span>/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-<span class="hljs-number">1.7</span>.<span class="hljs-number">5</span>.jar!<span class="hljs-regexp">/org/slf</span>4j/impl/<span class="hljs-constant">StaticLoggerBinder</span>.<span class="hljs-keyword">class</span>]
<span class="hljs-constant">SLF4J</span><span class="hljs-symbol">:</span> <span class="hljs-constant">See</span> <span class="hljs-symbol">http:</span>/<span class="hljs-regexp">/www.slf4j.org/codes</span>.html<span class="hljs-comment">#multiple_bindings for an explanation.</span>
<span class="hljs-constant">SLF4J</span><span class="hljs-symbol">:</span> <span class="hljs-constant">Actual</span> binding is of type [org.apache.logging.slf4j.<span class="hljs-constant">Log4jLoggerFactory</span>]
<span class="hljs-constant">Metastore</span> connection <span class="hljs-constant">URL</span><span class="hljs-symbol">:</span>    <span class="hljs-symbol">jdbc:</span><span class="hljs-symbol">mysql:</span>/<span class="hljs-regexp">/mtcloud-distributeddev-01:3306/hive</span>?createDatabaseIfNotExist=<span class="hljs-keyword">true</span>
<span class="hljs-constant">Metastore</span> <span class="hljs-constant">Connection</span> <span class="hljs-constant">Driver</span> <span class="hljs-symbol">:</span>    com.mysql.jdbc.<span class="hljs-constant">Driver</span>
<span class="hljs-constant">Metastore</span> connection <span class="hljs-constant">User</span><span class="hljs-symbol">:</span>   datasys
<span class="hljs-constant">Starting</span> metastore schema initialization to <span class="hljs-number">2.1</span>.<span class="hljs-number">0</span>
<span class="hljs-constant">Initialization</span> script hive-schema-<span class="hljs-number">2.1</span>.<span class="hljs-number">0</span>.mysql.sql
<span class="hljs-constant">Initialization</span> script completed
schemaTool completed</code></pre>

<p>3、 <strong>权限分配</strong></p>



<pre class="prettyprint"><code class=" hljs bash"><span class="hljs-comment"># 同步软件</span>
pscp -A -h ~/jzl/ip_slave.txt -t <span class="hljs-number">0</span> <span class="hljs-operator">-e</span> ./error/ <span class="hljs-operator">-l</span> root -r /www/hive /www
<span class="hljs-comment"># 同步日志</span>
pscp -A -h ~/jzl/ip_slave.txt -t <span class="hljs-number">0</span> <span class="hljs-operator">-e</span> ./error/ <span class="hljs-operator">-l</span> root -r /data/hive /data
<span class="hljs-comment"># 分配权限</span>
pssh -A -h ~/jzl/ip_list.txt <span class="hljs-operator">-e</span> ./error/ <span class="hljs-operator">-l</span> root <span class="hljs-string">"chown -R hadoopuser.hadoopuser /www/hive;chown -R hadoopuser.hadoopuser /data/hive"</span>
</code></pre>

<p>4、<strong>批启动脚本</strong></p>



<pre class="prettyprint"><code class=" hljs avrasm">sh start_hive_master<span class="hljs-preprocessor">.sh</span></code></pre>



<pre class="prettyprint"><code class=" hljs bash"><span class="hljs-comment"># 启动 metastore（可任意Hadoop集群部署：HiveServer，其他的就是HiveClient）</span>
pssh -h ~/jzl/ip_master.txt <span class="hljs-operator">-e</span> ~/jzl/error/ <span class="hljs-string">"/opt/hive/bin/hive --service metastore -p 9083 &amp;"</span>
<span class="hljs-comment"># 启动 hiveserver2（HiveWeb用于Web远程访问）</span>
pssh -h ~/jzl/ip_master.txt <span class="hljs-operator">-e</span> ~/jzl/error/ <span class="hljs-string">"/opt/hive/bin/hive --service hiveserver2 --hiveconf hive.server2.thrift.port=10000 &amp;"</span>
</code></pre>

<p>5、<strong>测试入库</strong></p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor"># 通过zk连接hiveserver2</span>
&gt; bin/beeline
beeline&gt; !connect jdbc:hive2://apachecn<span class="hljs-preprocessor">.org</span>-<span class="hljs-number">19</span>:<span class="hljs-number">2181</span>,apachecn<span class="hljs-preprocessor">.org</span>-<span class="hljs-number">20</span>:<span class="hljs-number">2181</span>,apachecn<span class="hljs-preprocessor">.org</span>-<span class="hljs-number">21</span>:<span class="hljs-number">2181</span>/<span class="hljs-comment">;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2;auth=noSasl hadoopuser</span>
</code></pre>

<p>vi /home/hadoopuser/jzl/hive-test.txt</p>



<pre class="prettyprint"><code class=" hljs ">1 hadoop
2 hive
3 hbase
4 hello</code></pre>

<p>hive   (直接回车就可以启动)</p>



<pre class="prettyprint"><code class=" hljs lasso">create table <span class="hljs-keyword">if</span> <span class="hljs-literal">not</span> exists tmp_words
(
id int,
word <span class="hljs-built_in">string</span>
)
row format delimited fields
terminated <span class="hljs-keyword">by</span> <span class="hljs-string">" "</span>
lines terminated <span class="hljs-keyword">by</span> <span class="hljs-string">"\n"</span>;
hive<span class="hljs-subst">&gt;</span> truncate table tmp_words;
hive<span class="hljs-subst">&gt;</span> load <span class="hljs-built_in">data</span> <span class="hljs-built_in">local</span> inpath <span class="hljs-string">'/home/hadoopuser/jzl/hive-test.txt'</span> overwrite <span class="hljs-keyword">into</span> table tmp_words;
Loading <span class="hljs-built_in">data</span> <span class="hljs-keyword">to</span> table default<span class="hljs-built_in">.</span>tmp_words
OK
Time taken: <span class="hljs-number">0.998</span> seconds
hive<span class="hljs-subst">&gt;</span> <span class="hljs-keyword">select</span> <span class="hljs-subst">*</span> from tmp_words;
OK
<span class="hljs-number">1</span>   hadoop
<span class="hljs-number">2</span>   hive
<span class="hljs-number">3</span>   hbase
<span class="hljs-number">4</span>   hello</code></pre>

<p>插入数据 (这个时候我们可以看到程序运行了一个mr作业)</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> tmp_words <span class="hljs-keyword">values</span>(<span class="hljs-number">5</span>,<span class="hljs-string">'nihao'</span>), (<span class="hljs-number">6</span>,<span class="hljs-string">'nihao'</span>), (<span class="hljs-number">7</span>,<span class="hljs-string">'nihao'</span>), (<span class="hljs-number">8</span>,<span class="hljs-string">'nihao'</span>);</span></code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>