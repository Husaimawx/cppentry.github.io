---
layout:     post
title:      对于flume架构的简述
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p>flume的概念：</p>
<p>flume是cloudera提供的一个高可用、高可靠、分布式的海量日志采集、聚合和传输的系统。</p>
<p>flume的功能：</p>
<p>1、日志收集</p>
<p>2、数据处理</p>
<p>flume的数据流由事件（event）贯穿始终。</p>
<p>--事件是flume的基本数据单位。这些事件由agent外部的source生成，当source捕获时间后进行特定的格式化，然后source会把事件推入（单个或多个）</p>
<p>channel（通道）中。</p>
<p>--可以把channel看成一个缓冲区，他将保存事件直到sink（水槽）处理完该事件。</p>
<p>--sink负责持久化日志或者把事件推向另一个source（源）。</p>
<p>flume提供了三种级别的可靠性保障，从强到弱分别为：</p>
<p>--end-to-end  收到数据agent首先将event写到磁盘上，当数据传送成功后，再删除；如果数据发送失败，可以重新发送。</p>
<p>--store on failure  这也是scribe（抄写员）采用的策略，当数据接收方crash（碰撞）时，将数据写到本地，待恢复后，继续发送</p>
<p>--besteffort  数据发送到接收方后，不会进行确认</p>
<p>可恢复性：</p>
<p>可恢复性依赖channel</p>
<p>推荐使用filechannel，事件持久化在本地文件系统里（性能较差）</p>
<p><br></p>
<p><br></p>
<p><br></p>
<p><br></p>
            </div>
                </div>