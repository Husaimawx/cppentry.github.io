---
layout:     post
title:      Kafka 使用 Zookeeper 做什么？
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p style="background-color:rgb(255,255,255);"></p><p style="background-color:rgb(255,255,255);">kafka<span style="background:rgb(255,255,0);">使用ZooKeeper</span>用于管理、协调代理。每个Kafka代理通过Zookeeper协调其他Kafka代理。</p><p style="background-color:rgb(255,255,255);">当Kafka系统中新增了代理或某个代理失效时，Zookeeper服务将通知生产者和消费者。生产者与消费者据此开始与其他代理协调工作。</p><p align="left" style="background-color:rgb(255,255,255);"><span style="color:rgb(68,68,68);">Zookeeper</span><span style="color:rgb(68,68,68);">在Kakfa</span>中扮演的角色：<span style="color:rgb(68,68,68);">Kafka</span><span style="color:rgb(68,68,68);">将元数据信息保存在Zookeeper</span>中，但是发送给Topic本身的数据是不会发到Zk上的<span style="color:rgb(68,68,68);"><br><br></span></p><div style="padding:0px;margin:0px;color:rgb(51,51,51);font-size:14px;background:rgb(229,229,229);"><p align="left"><span style="color:rgb(68,68,68);">·        </span><span style="color:rgb(68,68,68);">kafka</span><span style="color:rgb(68,68,68);">使用</span><span style="color:rgb(68,68,68);">zookeeper</span><span style="color:rgb(68,68,68);">来实现动态的集群扩展，不需要更改客户端（</span><span style="color:rgb(68,68,68);">producer</span><span style="color:rgb(68,68,68);">和</span><span style="color:rgb(68,68,68);">consumer</span><span style="color:rgb(68,68,68);">）的配置。</span><span style="color:rgb(68,68,68);">broker</span><span style="color:rgb(68,68,68);">会在</span><span style="color:rgb(68,68,68);">zookeeper</span><span style="color:rgb(68,68,68);">注册并保持相关的元数据（</span><span style="color:rgb(68,68,68);">topic</span><span style="color:rgb(68,68,68);">，</span><span style="color:rgb(68,68,68);">partition</span><span style="color:rgb(68,68,68);">信息等）更新。</span></p><p align="left"><span style="color:rgb(68,68,68);">·        </span><span style="color:rgb(68,68,68);">而客户端会在</span><span style="color:rgb(68,68,68);">zookeeper</span><span style="color:rgb(68,68,68);">上注册相关的</span><span style="color:rgb(68,68,68);">watcher</span><span style="color:rgb(68,68,68);">。一旦</span><span style="color:rgb(68,68,68);">zookeeper</span><span style="color:rgb(68,68,68);">发生变化，客户端能及时感知并作出相应调整。这样就保证了添加或去除</span><span style="color:rgb(68,68,68);">broker</span><span style="color:rgb(68,68,68);">时，各</span><span style="color:rgb(68,68,68);">broker</span><span style="color:rgb(68,68,68);">间仍能自动实现负载均衡。这里的客户端指的是</span><span style="color:rgb(68,68,68);">Kafka</span><span style="color:rgb(68,68,68);">的消息生产端</span><span style="color:rgb(68,68,68);">(Producer)</span><span style="color:rgb(68,68,68);">和消息消费端</span><span style="color:rgb(68,68,68);">(Consumer)</span></p><p align="left"><span style="color:rgb(68,68,68);">·        </span><span style="color:rgb(68,68,68);">Broker</span><span style="color:rgb(68,68,68);">端使用</span><span style="color:rgb(68,68,68);">zookeeper</span><span style="color:rgb(68,68,68);">来注册</span><span style="color:rgb(68,68,68);">broker</span><span style="color:rgb(68,68,68);">信息</span><span style="color:rgb(68,68,68);">,</span><span style="color:rgb(68,68,68);">以及监测</span><span style="color:rgb(68,68,68);">partitionleader</span><span style="color:rgb(68,68,68);">存活性</span><span style="color:rgb(68,68,68);">.</span></p><p align="left"><span style="color:rgb(68,68,68);">·        </span><span style="color:rgb(68,68,68);">Consumer</span><span style="color:rgb(68,68,68);">端使用</span><span style="color:rgb(68,68,68);">zookeeper</span><span style="color:rgb(68,68,68);">用来注册</span><span style="color:rgb(68,68,68);">consumer</span><span style="color:rgb(68,68,68);">信息</span><span style="color:rgb(68,68,68);">,</span><span style="color:rgb(68,68,68);">其中包括</span><span style="color:rgb(68,68,68);">consumer</span><span style="color:rgb(68,68,68);">消费的</span><span style="color:rgb(68,68,68);">partition</span><span style="color:rgb(68,68,68);">列表等</span><span style="color:rgb(68,68,68);">,</span><span style="color:rgb(68,68,68);">同时也用来发现</span><span style="color:rgb(68,68,68);">broker</span><span style="color:rgb(68,68,68);">列表</span><span style="color:rgb(68,68,68);">,</span><span style="color:rgb(68,68,68);">并和</span><span style="color:rgb(68,68,68);">partitionleader</span><span style="color:rgb(68,68,68);">建立</span><span style="color:rgb(68,68,68);">socket</span><span style="color:rgb(68,68,68);">连接</span><span style="color:rgb(68,68,68);">,</span><span style="color:rgb(68,68,68);">并获取消息</span><span style="color:rgb(68,68,68);">.</span></p><p align="left"><span style="color:rgb(68,68,68);">·        </span><span style="color:rgb(68,68,68);">Zookeer</span><span style="color:rgb(68,68,68);">和</span><span style="color:rgb(68,68,68);">Producer</span><span style="color:rgb(68,68,68);">没有建立关系，只和</span><span style="color:rgb(68,68,68);">Brokers</span><span style="color:rgb(68,68,68);">、</span><span style="color:rgb(68,68,68);">Consumers</span><span style="color:rgb(68,68,68);">建立关系以实现负载均衡，即同一个</span><span style="color:rgb(68,68,68);">ConsumerGroup</span><span style="color:rgb(68,68,68);">中的</span><span style="color:rgb(68,68,68);">Consumers</span><span style="color:rgb(68,68,68);">可以实现负载均衡（</span><span style="color:rgb(68,68,68);background:rgb(255,255,0);">因为</span><span style="color:rgb(68,68,68);background:rgb(255,255,0);">Producer</span><span style="color:rgb(68,68,68);background:rgb(255,255,0);">是瞬态的，可以发送后关闭，无需直接等待</span><span style="color:rgb(68,68,68);">）</span></p></div><br><p style="background-color:rgb(255,255,255);">源自：<a href="https://blog.csdn.net/tanggao1314/article/details/51932329" rel="nofollow">https://blog.csdn.net/tanggao1314/article/details/51932329</a></p>            </div>
                </div>