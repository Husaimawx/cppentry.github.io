---
layout:     post
title:      Kafka 集群搭建
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/zz657114506/article/details/54698092				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h2 id="kafka-集群搭建"><strong>Kafka 集群搭建</strong></h2>

<p>zookepper集群搭建（详细）</p>

<blockquote>
  <p><a href="http://blog.csdn.net/zz657114506/article/details/53966944" rel="nofollow">http://blog.csdn.net/zz657114506/article/details/53966944</a></p>
</blockquote>

<p>kafka 集群规划</p>

<blockquote>
  <p>mini05 mini06 mini07 （3台服务器都运行zookeeper、kafka）</p>
</blockquote>

<p>1、下载kafka安装</p>

<blockquote>
  <p><a href="http://archive.apache.org/dist/kafka/" rel="nofollow">http://archive.apache.org/dist/kafka/</a></p>
</blockquote>

<p>2、 解压并重命名</p>

<blockquote>
  <p>tar -zxf  kafka_2.11-0.10.1.0.tgz  <br> <br>
  mv kafka_2.11-0.10.1.0</p>
</blockquote>

<p>3、添加环境变量</p>

<blockquote>
  <p>export KAFKA_HOME=/home/apps/kafka<br> <br>
  export PATH=<span>$</span>PATH:<span>$</span>KAFKA_HOME/bin</p>
</blockquote>

<p>4、修改配置文件</p>

<pre class="prettyprint"><code class="language-linux hljs avrasm"><span class="hljs-keyword">cp</span> server<span class="hljs-preprocessor">.properties</span> server<span class="hljs-preprocessor">.properties</span><span class="hljs-preprocessor">.bak</span>
vi server<span class="hljs-preprocessor">.properties</span>(可将内容完全删掉，在添加一下内容)
<span class="hljs-preprocessor"># borker的全局唯一编号，不能重复</span>
broker<span class="hljs-preprocessor">.id</span>=<span class="hljs-number">0</span>
<span class="hljs-preprocessor"># 用来监听链接的端口，produce或consumer将在此端口建立连接</span>
port=<span class="hljs-number">9092</span>
<span class="hljs-preprocessor">#delete.topic.enable=true</span>
<span class="hljs-preprocessor"># 处理网络请求的线程数</span>
num<span class="hljs-preprocessor">.network</span><span class="hljs-preprocessor">.threads</span>=<span class="hljs-number">3</span>
<span class="hljs-preprocessor"># 用来处理磁盘IO的线程数</span>
num<span class="hljs-preprocessor">.io</span><span class="hljs-preprocessor">.threads</span>=<span class="hljs-number">8</span>
<span class="hljs-preprocessor"># 发送套接字的缓冲区大小</span>
socket<span class="hljs-preprocessor">.send</span><span class="hljs-preprocessor">.buffer</span><span class="hljs-preprocessor">.bytes</span>=<span class="hljs-number">102400</span>
<span class="hljs-preprocessor"># 接受套接字的缓冲区大小</span>
socket<span class="hljs-preprocessor">.receive</span><span class="hljs-preprocessor">.buffer</span><span class="hljs-preprocessor">.bytes</span>=<span class="hljs-number">102400</span>
<span class="hljs-preprocessor"># 请求套接字的缓冲区大小 </span>
socket<span class="hljs-preprocessor">.request</span><span class="hljs-preprocessor">.max</span><span class="hljs-preprocessor">.bytes</span>=<span class="hljs-number">104857600</span>
<span class="hljs-preprocessor"># kafka运行日志存放路径 </span>
log<span class="hljs-preprocessor">.dirs</span>=/home/apps/kafka/kafka-logs
<span class="hljs-preprocessor"># topic 在当前borker上的分片个数</span>
num<span class="hljs-preprocessor">.partitions</span>=<span class="hljs-number">2</span>
<span class="hljs-preprocessor"># 用来恢复和清理data下数据的线程数 </span>
num<span class="hljs-preprocessor">.recovery</span><span class="hljs-preprocessor">.threads</span><span class="hljs-preprocessor">.per</span><span class="hljs-preprocessor">.data</span><span class="hljs-preprocessor">.dir</span>=<span class="hljs-number">1</span>
<span class="hljs-preprocessor"># segment文件保留的最长时间，超时将被删除</span>
log<span class="hljs-preprocessor">.retention</span><span class="hljs-preprocessor">.hours</span>=<span class="hljs-number">168</span>
<span class="hljs-preprocessor"># 滚动生成新的segment文件的最大时间</span>
log<span class="hljs-preprocessor">.roll</span><span class="hljs-preprocessor">.hours</span>=<span class="hljs-number">168</span>
<span class="hljs-preprocessor"># 日志文件中每个segment的大小，默认1G</span>
log<span class="hljs-preprocessor">.segment</span><span class="hljs-preprocessor">.bytes</span>=<span class="hljs-number">1073741824</span>
<span class="hljs-preprocessor"># 周期性检查文件大小的时间</span>
log<span class="hljs-preprocessor">.retention</span><span class="hljs-preprocessor">.check</span><span class="hljs-preprocessor">.interval</span><span class="hljs-preprocessor">.ms</span>=<span class="hljs-number">300000</span>
<span class="hljs-preprocessor"># 日志清理是否打开</span>
log<span class="hljs-preprocessor">.cleaner</span><span class="hljs-preprocessor">.enable</span>=true
<span class="hljs-preprocessor"># partion buffer 中，消息的条数达到阀值，将触发flush到磁盘</span>
log<span class="hljs-preprocessor">.flush</span><span class="hljs-preprocessor">.interval</span><span class="hljs-preprocessor">.messages</span>=<span class="hljs-number">10000</span>
<span class="hljs-preprocessor"># 消息buffer的时间，达到阀值，将触发flush到磁盘</span>
log<span class="hljs-preprocessor">.flush</span><span class="hljs-preprocessor">.interval</span><span class="hljs-preprocessor">.ms</span>=<span class="hljs-number">1000</span>

<span class="hljs-preprocessor">############################# Zookeeper #############################</span>
<span class="hljs-preprocessor"># root directory for all kafka znodes.</span>
zookeeper<span class="hljs-preprocessor">.connect</span>=mini05:<span class="hljs-number">2181</span>,mini06:<span class="hljs-number">2181</span>,mini07:<span class="hljs-number">2181</span>
<span class="hljs-preprocessor"># Timeout in ms for connecting to zookeeper</span>
zookeeper<span class="hljs-preprocessor">.connection</span><span class="hljs-preprocessor">.timeout</span><span class="hljs-preprocessor">.ms</span>=<span class="hljs-number">6000</span>

host<span class="hljs-preprocessor">.name</span>=mini05
advertised<span class="hljs-preprocessor">.host</span><span class="hljs-preprocessor">.name</span>=<span class="hljs-number">192.168</span><span class="hljs-number">.175</span><span class="hljs-number">.145</span></code></pre>

<p>5、分发安装包并修改配置</p>



<pre class="prettyprint"><code class=" hljs ruby">ssh -r /home/apps/kafka <span class="hljs-variable">@mini06</span><span class="hljs-symbol">:/home/apps/</span>
ssh -r /home/apps/kafka <span class="hljs-variable">@mini07</span><span class="hljs-symbol">:/home/apps/</span>

<span class="hljs-comment"># 依次修改节点上的server.properties的broker.id(不能重复)</span>
vi <span class="hljs-variable">$KAFKA_HOME</span>/config/server.properties</code></pre>

<p>6、启动</p>

<blockquote>
  <p>依次在各个节点上启动kafka进行<br> <br>
   kafka-server-start.sh -daemon /home/apps/kafka/config/server.properties <br> <br>
   再使用jps查看kafka进程</p>
</blockquote>

<hr>

<hr>

<hr>



<h2 id="kafka-kafkaoffsetmonitor-监控"><strong>Kafka KafkaOffsetMonitor 监控</strong></h2>

<p><strong>jar 下载地址</strong></p>

<blockquote>
  <p><a href="https://github.com/quantifind/KafkaOffsetMonitor/releases/" rel="nofollow">https://github.com/quantifind/KafkaOffsetMonitor/releases/</a><br> <br>
  将 jar 上传至/home/apps/kafka-monitor，然后在该文件下创建touch kafka-monitor.sh并chomd a+x kafka-monitor.sh</p>
</blockquote>

<p><strong>启动脚本（vi kafka-monitor.sh）</strong></p>



<pre class="prettyprint"><code class=" hljs haml">#! /bin/bash
java -Xms512M -Xmx512M -Xss1024K -XX:PermSize=256m -XX:MaxPermSize=512m -cp KafkaOffsetMonitor-assembly-0.2.0.jar \
com.quantifind.kafka.offsetapp.OffsetGetterWeb \
-<span class="ruby">-zk <span class="hljs-number">192.168</span>.<span class="hljs-number">175.145</span><span class="hljs-symbol">:</span><span class="hljs-number">2181</span>,<span class="hljs-number">192.168</span>.<span class="hljs-number">175.146</span><span class="hljs-symbol">:</span><span class="hljs-number">2181</span>,<span class="hljs-number">192.168</span>.<span class="hljs-number">175.147</span><span class="hljs-symbol">:</span><span class="hljs-number">2181</span> \
</span>-<span class="ruby">-port <span class="hljs-number">8888</span> \
</span>-<span class="ruby">-refresh <span class="hljs-number">10</span>.seconds \
</span>-<span class="ruby">-retain <span class="hljs-number">7</span>.days <span class="hljs-number">1</span>&gt;<span class="hljs-regexp">/home/apps</span><span class="hljs-regexp">/kafka-monitor/logs</span><span class="hljs-regexp">/stdout.log 2&gt;/home</span><span class="hljs-regexp">/apps/kafka</span>-monitor/logs/stderr.log &amp;</span></code></pre>

<p><strong>效果图</strong> <br>
<img src="https://img-blog.csdn.net/20170123235256790?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveno2NTcxMTQ1MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>