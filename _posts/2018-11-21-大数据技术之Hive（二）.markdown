---
layout:     post
title:      大数据技术之Hive（二）
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/a376712116/article/details/81044527				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>二 Hive 安装环境准备</p>

<p>2.1 Hive 安装地址</p>

<p>1）Hive 官网地址：</p>

<p><a href="http://hive.apache.org/" rel="nofollow">http://hive.apache.org/</a></p>

<p>2）文档查看地址：</p>

<p><a href="https://cwiki.apache.org/confluence/display/Hive/GettingStarted" rel="nofollow">https://cwiki.apache.org/confluence/display/Hive/GettingStarted</a></p>

<p>3）下载地址：</p>

<p><a href="http://archive.apache.org/dist/hive/" rel="nofollow">http://archive.apache.org/dist/hive/</a></p>

<p>4）github 地址：</p>

<p><a href="https://github.com/apache/hive" rel="nofollow">https://github.com/apache/hive</a></p>

<p>2.2 Hive 安装部署</p>

<p>1）Hive 安装及配置</p>

<p>（1）把 apache-hive-1.2.1-bin.tar.gz 上传到 linux 的/opt/software 目录下</p>

<p>（2）解压 apache-hive-1.2.1-bin.tar.gz 到/opt/module/目录下面</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> software]<span class="hljs-variable">$ </span>tar -zxvf apache-hive-<span class="hljs-number">1.2</span>.<span class="hljs-number">1</span>-bin.tar.gz -<span class="hljs-constant">C</span> /opt/<span class="hljs-class"><span class="hljs-keyword">module</span>/ </span></code></pre>

<p>（3）修改 apache-hive-1.2.1-bin.tar.gz 的名称为 hive</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> <span class="hljs-class"><span class="hljs-keyword">module</span>]$ <span class="hljs-title">mv</span> <span class="hljs-title">apache</span>-<span class="hljs-title">hive</span>-1.2.1-<span class="hljs-title">bin</span>/ <span class="hljs-title">hive</span></span></code></pre>

<p>（4）修改/opt/module/hive/conf 目录下的 hive-env.sh.template 名称为 hive-env.sh </p>



<pre class="prettyprint"><code class=" hljs avrasm">[atguigu@hadoop102 conf]$ mv hive-env<span class="hljs-preprocessor">.sh</span><span class="hljs-preprocessor">.template</span> hive-env<span class="hljs-preprocessor">.sh</span></code></pre>

<p>（5）配置 hive-env.sh 文件</p>

<p>　　（a）配置 HADOOP_HOME 路径</p>

<pre class="prettyprint"><code class=" hljs d"><span class="hljs-keyword">export</span> HADOOP_HOME=/opt/<span class="hljs-keyword">module</span>/hadoop-<span class="hljs-number">2.7</span>.2 </code></pre>

<p>　　（b）配置 HIVE_CONF_DIR 路径</p>

<p>2）Hadoop 集群配置</p>

<p>（1）必须启动 hdfs 和 yarn</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">2</span>]<span class="hljs-variable">$ </span>sbin/start-dfs.sh

[atguigu<span class="hljs-variable">@hadoop103</span> hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">2</span>]<span class="hljs-variable">$ </span>sbin/start-yarn.sh</code></pre>

<p>（2）在 HDFS 上创建/tmp 和/user/hive/warehouse 两个目录并修改他们的同组权限可写 </p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">2</span>]<span class="hljs-variable">$ </span>bin/hadoop fs -mkdir /tmp
[atguigu<span class="hljs-variable">@hadoop102</span> hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">2</span>]<span class="hljs-variable">$ </span>bin/hadoop fs -mkdir -p /user/hive/warehouse

[atguigu<span class="hljs-variable">@hadoop102</span> hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">2</span>]<span class="hljs-variable">$ </span>bin/hadoop fs -chmod g+w /tmp
[atguigu<span class="hljs-variable">@hadoop102</span> hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">2</span>]<span class="hljs-variable">$ </span>bin/hadoop fs -chmod g+w /user/hive/warehouse</code></pre>

<p>3）Hive 基本操作</p>

<p>（1）启动 hive</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> hive]<span class="hljs-variable">$ </span>bin/hive</code></pre>

<p>（2）查看数据库</p>



<pre class="prettyprint"><code class=" hljs ">hive&gt;show databases;</code></pre>

<p>（3）打开默认数据库</p>



<pre class="prettyprint"><code class=" hljs fsharp">hive&gt;<span class="hljs-keyword">use</span> <span class="hljs-keyword">default</span>;</code></pre>

<p>（4）显示 default 数据库中的表</p>



<pre class="prettyprint"><code class=" hljs ">hive&gt;show tables;</code></pre>

<p>（5）创建一张表</p>



<pre class="prettyprint"><code class=" hljs applescript">hive&gt; create table student(<span class="hljs-property">id</span> int, <span class="hljs-property">name</span> <span class="hljs-type">string</span>) ;</code></pre>

<p>（6）显示数据库中有几张表</p>



<pre class="prettyprint"><code class=" hljs ">hive&gt;show tables;</code></pre>

<p>（7）查看表的结构</p>



<pre class="prettyprint"><code class=" hljs axapta">hive&gt;<span class="hljs-keyword">desc</span> student;</code></pre>

<p>（8）向表中插入数据</p>



<pre class="prettyprint"><code class=" hljs cs">hive&gt; insert <span class="hljs-keyword">into</span> student values(<span class="hljs-number">1000</span>,<span class="hljs-string">"ss"</span>);</code></pre>

<p>（9）查询表中数据</p>



<pre class="prettyprint"><code class=" hljs cs">hive&gt; <span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> student;</code></pre>

<p>（10）退出 hive</p>



<pre class="prettyprint"><code class=" hljs mel">hive&gt; <span class="hljs-keyword">quit</span>;</code></pre>

<p>2.3 将本地文件导入 Hive 案例</p>

<p>需求：将本地/opt/module/datas/student.txt 这个目录下的数据导入到 hive 的 student(id int, name</p>

<p>string)表中。</p>

<p>1）数据准备：在/opt/module/datas/student.txt 这个目录下准备数据</p>

<p>（1）在/opt/module/目录下创建 datas</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> <span class="hljs-class"><span class="hljs-keyword">module</span>]$ <span class="hljs-title">mkdir</span> <span class="hljs-title">datas</span></span></code></pre>

<p>（2）在/opt/module/datas/目录下创建 student.txt 文件并添加数据 </p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> <span class="hljs-class"><span class="hljs-keyword">module</span>]$ <span class="hljs-title">touch</span> <span class="hljs-title">student</span>.<span class="hljs-title">txt</span></span>
[atguigu<span class="hljs-variable">@hadoop102</span> <span class="hljs-class"><span class="hljs-keyword">module</span>]$ <span class="hljs-title">vi</span> <span class="hljs-title">student</span>.<span class="hljs-title">txt</span></span></code></pre>

<p>1001    zhangshan <br>
1002    lishi <br>
1003    zhaoliu</p>

<p>注意以 tab 键间隔。</p>

<p>2）Hive 实际操作</p>

<p>（1）启动 hive</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> hive]<span class="hljs-variable">$ </span>bin/hive</code></pre>

<p>（2）显示数据库</p>



<pre class="prettyprint"><code class=" hljs ">hive&gt;show databases;
</code></pre>

<p>（3）使用 default 数据库</p>



<pre class="prettyprint"><code class=" hljs fsharp">hive&gt;<span class="hljs-keyword">use</span> <span class="hljs-keyword">default</span>;</code></pre>

<p>（4）显示 default 数据库中的表</p>



<pre class="prettyprint"><code class=" hljs ">hive&gt;show tables;</code></pre>

<p>（5）删除已创建的 student 表</p>



<pre class="prettyprint"><code class=" hljs rust">hive&gt; <span class="hljs-keyword">drop</span> table student;</code></pre>

<p>（6）创建 student 表, 并声明文件分隔符’\t’</p>



<pre class="prettyprint"><code class=" hljs cs">hive&gt; create table student(id <span class="hljs-keyword">int</span>, name <span class="hljs-keyword">string</span>) ROW FORMAT DELIMITED FIELDS TERMINATED BY <span class="hljs-string">'\t'</span>;</code></pre>

<p>（7）加载/opt/module/datas/student.txt  文件到 student 数据库表中。</p>



<pre class="prettyprint"><code class=" hljs lua">hive&gt; <span class="hljs-built_in">load</span> data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'/opt/module/datas/student.txt'</span> into <span class="hljs-built_in">table</span> student;</code></pre>

<p><font color="red">local表示从加载本地的数据路径，不加local则表示从hdfs上加载文件的路径</font> <br>
（8）Hive 查询结果</p>



<pre class="prettyprint"><code class=" hljs cs">hive&gt; <span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> student;
OK
<span class="hljs-number">1001</span>    zhangshan
<span class="hljs-number">1002</span>    lishi
<span class="hljs-number">1003</span>    zhaoliu
Time taken: <span class="hljs-number">0.266</span> seconds, Fetched: <span class="hljs-number">3</span> row(s)</code></pre>

<p>3）遇到的问题</p>

<p>再打开一个客户端窗口启动 hive，会产生 java.sql.SQLException 异常。</p>

<p>Exception in thread “main” java.lang.RuntimeException: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient <br>
at org.apache.hadoop.hive.ql.session.SessionState.start(SessionState.java:522) <br>
at org.apache.hadoop.hive.cli.CliDriver.run(CliDriver.java:677) at org.apache.hadoop.hive.cli.CliDriver.main(CliDriver.java:621) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at <br>
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) <br>
at <br>
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) <br>
at java.lang.reflect.Method.invoke(Method.java:606) <br>
at org.apache.hadoop.util.RunJar.run(RunJar.java:221) <br>
at org.apache.hadoop.util.RunJar.main(RunJar.java:136) <br>
Caused by: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient <br>
at <br>
org.apache.hadoop.hive.metastore.MetaStoreUtils.newInstance(MetaStoreUtils.java:1523) <br>
at <br>
org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.(RetryingMetaStoreClient.ja <br>
va:86) <br>
at <br>
org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.getProxy(RetryingMetaStoreClien <br>
t.java:132) <br>
at <br>
org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.getProxy(RetryingMetaStoreClien <br>
t.java:104) <br>
at org.apache.hadoop.hive.ql.metadata.Hive.createMetaStoreClient(Hive.java:3005) <br>
at org.apache.hadoop.hive.ql.metadata.Hive.getMSC(Hive.java:3024) <br>
at org.apache.hadoop.hive.ql.session.SessionState.start(SessionState.java:503) <br>
… 8 more</p>

<p>原因是，<font color="red">Metastore 默认存储在自带的 derby 数据库中，推荐使用 MySQL 存储 Metastore;</font></p>

<p>2.4 MySql 安装</p>

<p>2.4.1 安装包准备</p>

<p>1）查看 mysql 是否安装，如果安装了，卸载 mysql</p>

<p>（1）查看</p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop102</span> 桌面]<span class="hljs-comment"># rpm -qa|grep mysql</span>
mysql-libs-<span class="hljs-number">5.1</span>.<span class="hljs-number">73</span>-<span class="hljs-number">7</span>.el6.x86_64</code></pre>

<p>（2）卸载</p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop102</span>  桌面]<span class="hljs-comment"># rpm -e --nodeps mysql-libs-5.1.73-7.el6.x86_64</span></code></pre>

<p>2）解压 mysql-libs.zip 文件到当前目录</p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop102</span> software]<span class="hljs-comment"># unzip mysql-libs.zip</span>
[root<span class="hljs-variable">@hadoop102</span> software]<span class="hljs-comment"># ls</span>
mysql-libs.zip
mysql-libs</code></pre>

<p>3）进入到 mysql-libs 文件夹下，并设置当前用户执行权限</p>



<pre class="prettyprint"><code class=" hljs avrasm">
[root@hadoop102 mysql-libs]<span class="hljs-preprocessor"># ll</span>
总用量 <span class="hljs-number">76048</span>
-rw-r--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">18509960</span> <span class="hljs-number">3</span> 月    <span class="hljs-number">26</span> <span class="hljs-number">2015</span> MySQL-client-<span class="hljs-number">5.6</span><span class="hljs-number">.24</span>-<span class="hljs-number">1.</span>el6<span class="hljs-preprocessor">.x</span>86_64<span class="hljs-preprocessor">.rpm</span>
-rw-r--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">3575135</span> <span class="hljs-number">12</span> 月    <span class="hljs-number">1</span> <span class="hljs-number">2013</span> mysql-connector-java-<span class="hljs-number">5.1</span><span class="hljs-number">.27</span><span class="hljs-preprocessor">.tar</span><span class="hljs-preprocessor">.gz</span>
-rw-r--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">55782196</span> <span class="hljs-number">3</span> 月    <span class="hljs-number">26</span> <span class="hljs-number">2015</span> MySQL-server-<span class="hljs-number">5.6</span><span class="hljs-number">.24</span>-<span class="hljs-number">1.</span>el6<span class="hljs-preprocessor">.x</span>86_64<span class="hljs-preprocessor">.rpm</span></code></pre>



<pre class="prettyprint"><code class=" hljs avrasm">[root@hadoop102 mysql-libs]<span class="hljs-preprocessor"># chmod u+x ./*</span>
[root@hadoop102 mysql-libs]<span class="hljs-preprocessor"># ll</span>
总用量 <span class="hljs-number">76048</span>
-rwxr--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">18509960</span> <span class="hljs-number">3</span> 月    <span class="hljs-number">26</span> <span class="hljs-number">2015</span> MySQL-client-<span class="hljs-number">5.6</span><span class="hljs-number">.24</span>-<span class="hljs-number">1.</span>el6<span class="hljs-preprocessor">.x</span>86_64<span class="hljs-preprocessor">.rpm</span>
-rwxr--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">3575135</span> <span class="hljs-number">12</span> 月    <span class="hljs-number">1</span> <span class="hljs-number">2013</span> mysql-connector-java-<span class="hljs-number">5.1</span><span class="hljs-number">.27</span><span class="hljs-preprocessor">.tar</span><span class="hljs-preprocessor">.gz</span>
-rwxr--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">55782196</span> <span class="hljs-number">3</span> 月    <span class="hljs-number">26</span> <span class="hljs-number">2015</span> MySQL-server-<span class="hljs-number">5.6</span><span class="hljs-number">.24</span>-<span class="hljs-number">1.</span>el6<span class="hljs-preprocessor">.x</span>86_64<span class="hljs-preprocessor">.rpm</span></code></pre>

<p>2.4.2 安装 MySql 服务器</p>

<p>1）安装 mysql 服务端</p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop102</span> mysql-libs]<span class="hljs-comment"># rpm -ivh MySQL-server-5.6.24-1.el6.x86_64.rpm</span></code></pre>

<p>2）查看产生的随机密码</p>

<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop102</span> mysql-libs]<span class="hljs-comment"># cat /root/.mysql_secret</span>
<span class="hljs-constant">OEXaQuS8IWkG19Xs</span></code></pre>

<p>3）查看 mysql 状态</p>

<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop102</span> mysql-libs]<span class="hljs-comment"># service mysql status</span></code></pre>

<p>4）启动 mysql</p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop102</span> mysql-libs]<span class="hljs-comment"># service mysql start</span></code></pre>

<p>2.4.3 安装 MySql 客户端</p>

<p>1）安装 mysql 客户端</p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop102</span> mysql-libs]<span class="hljs-comment"># rpm -ivh MySQL-client-5.6.24-1.el6.x86_64.rpm</span></code></pre>

<p>2）链接 mysql</p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop102</span> mysql-libs]<span class="hljs-comment"># mysql -uroot -pOEXaQuS8IWkG19Xs</span></code></pre>

<p>3）修改密码</p>



<pre class="prettyprint"><code class=" hljs ruleslanguage">mysql&gt;<span class="hljs-keyword">SET</span> PASSWORD=PASSWORD(<span class="hljs-string">'000000'</span>);</code></pre>

<p>4）退出 mysql</p>



<pre class="prettyprint"><code class=" hljs bash">mysql&gt;<span class="hljs-keyword">exit</span>
</code></pre>

<p>2.4.4 MySql 中 user 表中主机配置</p>

<p>配置只要是 root 用户+密码，在任何主机上都能登录 MySQL 数据库。</p>

<p>1）进入 mysql</p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop102</span> mysql-libs]<span class="hljs-comment"># mysql -uroot -p000000</span></code></pre>

<p>2）显示数据库</p>



<pre class="prettyprint"><code class=" hljs ">mysql&gt;show databases;</code></pre>

<p>3）使用 mysql 数据库</p>



<pre class="prettyprint"><code class=" hljs php">mysql&gt;<span class="hljs-keyword">use</span> <span class="hljs-title">mysql</span>;</code></pre>

<p>4）展示 mysql 数据库中的所有表</p>



<pre class="prettyprint"><code class=" hljs ">mysql&gt;show tables;</code></pre>

<p>5）展示 user 表的结构</p>



<pre class="prettyprint"><code class=" hljs axapta">mysql&gt;<span class="hljs-keyword">desc</span> user;</code></pre>

<p>6）查询 user 表</p>



<pre class="prettyprint"><code class=" hljs cs">mysql&gt;<span class="hljs-keyword">select</span> User, Host, Password <span class="hljs-keyword">from</span> user;</code></pre>

<p>7）修改 user 表，把 Host 表内容修改为%</p>



<pre class="prettyprint"><code class=" hljs cs">mysql&gt;update user <span class="hljs-keyword">set</span> host=<span class="hljs-string">'%'</span> <span class="hljs-keyword">where</span> host=<span class="hljs-string">'localhost'</span>; </code></pre>

<p>8）删除 root 用户的其他 host</p>



<pre class="prettyprint"><code class=" hljs cs">mysql&gt;delete <span class="hljs-keyword">from</span> user <span class="hljs-keyword">where</span> Host=<span class="hljs-string">'hadoop102 '</span>;

mysql&gt;delete <span class="hljs-keyword">from</span> user <span class="hljs-keyword">where</span> Host=<span class="hljs-string">'127.0.0.1'</span>;

mysql&gt;delete <span class="hljs-keyword">from</span> user <span class="hljs-keyword">where</span> Host=<span class="hljs-string">'::1'</span>;</code></pre>

<p>9）刷新</p>



<pre class="prettyprint"><code class=" hljs ">mysql&gt;flush privileges;</code></pre>

<p>10）退出</p>



<pre class="prettyprint"><code class=" hljs mel">mysql&gt; <span class="hljs-keyword">quit</span>;</code></pre>

<p>2.5 Hive 元数据配置到 MySql</p>

<p>2.5.1 驱动拷贝</p>

<p>1）在/opt/software/mysql-libs 目录下解压 mysql-connector-java-5.1.27.tar.gz 驱动包 </p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop102</span> mysql-libs]<span class="hljs-comment"># tar -zxvf mysql-connector-java-5.1.27.tar.gz</span></code></pre>

<p>2）拷贝/opt/software/mysql-libs/mysql-connector-java-5.1.27 目录下的 mysql-connector-java-5.1.27-bin.jar 到/opt/module/hive/lib/</p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop102</span> mysql-connector-java-<span class="hljs-number">5.1</span>.<span class="hljs-number">27</span>]<span class="hljs-comment"># cp mysql-connector-java-5.1.27-bin.jar /opt/module/hive/lib/</span></code></pre>

<p>2.5.2 配置 Metastore 到 MySql</p>

<p>1）在/opt/module/hive/conf 目录下创建一个 hive-site.xml </p>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop102</span> conf]<span class="hljs-comment"># touch hive-site.xml </span>
[root<span class="hljs-variable">@hadoop102</span> conf]<span class="hljs-comment"># vi hive-site.xml</span></code></pre>

<p>2）根据官方文档配置参数，拷贝数据到 hive-site.xml 文件中。</p>

<p><a href="https://cwiki.apache.org/confluence/display/Hive/AdminManual+MetastoreAdmin" rel="nofollow">https://cwiki.apache.org/confluence/display/Hive/AdminManual+MetastoreAdmin</a> </p>



<pre class="prettyprint"><code class=" hljs xml"><span class="hljs-pi">&lt;?xml version="1.0"?&gt;</span>

<span class="hljs-pi">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-title">configuration</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>jdbc:mysql://hadoop102:3306/metastore?createDatabaseIfNotExist=true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>JDBC connect string for a JDBC metastore<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>

<span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>Driver class name for a JDBC metastore<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>root<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>username to use against metastore database<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>000000<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>password to use against metastore database<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hive.cli.print.current.db<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>Whether to include the current database in the Hive prompt.<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>

<span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hive.cli.print.header<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>Whether to print the names of the columns in query output.<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;/<span class="hljs-title">configuration</span>&gt;</span></code></pre>

<p>3）配置完毕后，如果启动 hive 异常，可以重新启动虚拟机。（重启后，别忘了启动 hadoop</p>

<p>集群）</p>

<p>2.5.3 多窗口启动 Hive 测试</p>

<p>1）先启动 MySQL</p>

<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> mysql-libs]<span class="hljs-variable">$ </span>mysql -uroot -p00000<span class="hljs-number">0</span></code></pre>

<p>查看有几个数据库 <br>
mysql&gt; show databases;</p>

<p>2）再次打开多个窗口，分别启动 hive</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> hive]<span class="hljs-variable">$ </span>bin/hive</code></pre>

<p>3）启动 hive 后，回到 MySQL 窗口查看数据库，显示增加了 metastore 数据库  <br>
mysql&gt; show databases; <br>
+——————–+ <br>
| Database  | <br>
+——————–+ <br>
| information_schema | <br>
| <font color="red">metastore</font>    | <br>
| mysql | <br>
| performance_schema | <br>
| test  | <br>
+——————–+  </p>

<p>2.6 Hive 常用交互命令</p>



<pre class="prettyprint"><code class=" hljs haml">[atguigu@hadoop102 hive]$ bin/hive -help
usage: hive
-<span class="ruby">d,--define &lt;key=value&gt; <span class="hljs-constant">Variable</span> subsitution to apply to hive
</span>commands. e.g. -d A=B or --define A=B
-<span class="ruby">-database &lt;databasename&gt;   <span class="hljs-constant">Specify</span> the database to use
</span>-<span class="ruby">e &lt;quoted-query-string&gt;    <span class="hljs-constant">SQL</span> from command line
</span>-<span class="ruby">f &lt;filename&gt;   <span class="hljs-constant">SQL</span> from files
</span>-<span class="ruby"><span class="hljs-constant">H</span>,--help   <span class="hljs-constant">Print</span> help information
</span>-<span class="ruby">-hiveconf &lt;property=value&gt; <span class="hljs-constant">Use</span> value <span class="hljs-keyword">for</span> given property
</span>-<span class="ruby">-hivevar &lt;key=value&gt;   <span class="hljs-constant">Variable</span> subsitution to apply to hive
</span>commands. e.g. --hivevar A=B
-<span class="ruby">i &lt;filename&gt;   <span class="hljs-constant">Initialization</span> <span class="hljs-constant">SQL</span> file
</span>-<span class="ruby"><span class="hljs-constant">S</span>,--silent <span class="hljs-constant">Silent</span> mode <span class="hljs-keyword">in</span> interactive shell
</span>-<span class="ruby">v,--verbose    <span class="hljs-constant">Verbose</span> mode (echo executed <span class="hljs-constant">SQL</span> to the console)</span></code></pre>

<p>1）“-e”不进入 hive 的交互窗口执行 sql 语句</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> hive]<span class="hljs-variable">$ </span>bin/hive -e <span class="hljs-string">"select id from student;"</span></code></pre>

<p>2）“-f”执行脚本中 sql 语句</p>

<p>（1）在/opt/module/datas 目录下创建 hivef.sql 文件</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> datas]<span class="hljs-variable">$ </span>touch hivef.sql</code></pre>

<p>文件中写入正确的 sql 语句 <br>
select *from student;</p>

<p>（2）执行文件中的 sql 语句</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> hive]<span class="hljs-variable">$ </span>bin/hive -f /opt/<span class="hljs-class"><span class="hljs-keyword">module</span>/<span class="hljs-title">datas</span>/<span class="hljs-title">hivef</span>.<span class="hljs-title">sql</span></span></code></pre>

<p>（3）执行文件中的 sql 语句并将结果写入文件中</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span>  hive]<span class="hljs-variable">$ </span>bin/hive    -f  /opt/<span class="hljs-class"><span class="hljs-keyword">module</span>/<span class="hljs-title">datas</span>/<span class="hljs-title">hivef</span>.<span class="hljs-title">sql</span> &gt;</span>
/opt/<span class="hljs-class"><span class="hljs-keyword">module</span>/<span class="hljs-title">datas</span>/<span class="hljs-title">hive_result</span>.<span class="hljs-title">txt</span></span></code></pre>

<p>2.7 Hive 其他命令操作</p>

<p>1）退出 hive 窗口：</p>



<pre class="prettyprint"><code class=" hljs haskell"><span class="hljs-title">hive</span>(<span class="hljs-default"><span class="hljs-keyword">default</span>)&gt;exit;</span>
<span class="hljs-title">hive</span>(<span class="hljs-default"><span class="hljs-keyword">default</span>)&gt;quit;</span></code></pre>

<p>2）在 hive cli 命令窗口中如何查看 hdfs 文件系统</p>



<pre class="prettyprint"><code class=" hljs haskell"><span class="hljs-title">hive</span>(<span class="hljs-default"><span class="hljs-keyword">default</span>)&gt;dfs -ls /;</span></code></pre>

<p>3）在 hive cli 命令窗口中如何查看 hdfs 本地系统</p>



<pre class="prettyprint"><code class=" hljs ruby">hive(default)&gt;! ls /opt/<span class="hljs-class"><span class="hljs-keyword">module</span>/<span class="hljs-title">datas</span>;</span></code></pre>

<p>4）查看在 hive 中输入的所有历史命令</p>

<p>（1）进入到当前用户的根目录/root 或/home/atguigu</p>

<p>（2）查看. hivehistory 文件</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> ~]<span class="hljs-variable">$ </span>cat .hivehistory</code></pre>

<p>2.8 Hive 常见属性配置</p>

<p>2.8.1 Hive 数据仓库位置配置</p>

<p>1）Default 数据仓库的最原始位置是在 hdfs 上的：/user/hive/warehouse 路径下</p>

<p>2）<font color="red">在仓库目录下，没有对默认的数据库 default 创建文件夹。如果某张表属于 default数据库，直接在数据仓库目录下创建一个文件夹。</font></p>

<p>3）修改 default 数据仓库原始位置（将 hive-default.xml.template 如下配置信息拷贝到</p>

<p>hive-site.xml 文件中）</p>



<pre class="prettyprint"><code class=" hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hive.metastore.warehouse.dir<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>/user/hive/warehouse<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">description</span>&gt;</span>location of default database for the warehouse<span class="hljs-tag">&lt;/<span class="hljs-title">description</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span></code></pre>

<p>配置同组用户有执行权限</p>



<pre class="prettyprint"><code class=" hljs perl">bin/hdfs dfs -<span class="hljs-keyword">chmod</span> g+w /user/hive/warehouse</code></pre>

<p>2.8.2 查询后信息显示配置</p>

<p>1）在 hive-site.xml 文件中添加如下配置信息，就可以实现显示当前数据库，以及查询</p>

<p>表的头信息配置。</p>



<pre class="prettyprint"><code class=" hljs xml">
<span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hive.cli.print.header<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-title">property</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>hive.cli.print.current.db<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-title">value</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">property</span>&gt;</span></code></pre>

<p>2）重新启动 hive，对比配置前后差异</p>

<p>（1）配置前 <br>
<img src="https://img-blog.csdn.net/20180714155636130?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzNzY3MTIxMTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述" title=""> <br>
（2）配置后 <br>
<img src="https://img-blog.csdn.net/20180714155642861?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzNzY3MTIxMTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述" title=""> <br>
2.8.3 Hive 运行日志信息配置</p>

<p>1）Hive 的 log 默认存放在/tmp/atguigu/hive.log 目录下（当前用户名下）。</p>

<p>2）修改 hive 的 log 存放日志到/opt/module/hive/logs</p>

<p>（1）修改/opt/module/hive/conf/hive-log4j.properties.template 文件名称为hive-log4j.properties</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop102</span> conf]<span class="hljs-variable">$ </span>pwd
/opt/<span class="hljs-class"><span class="hljs-keyword">module</span>/<span class="hljs-title">hive</span>/<span class="hljs-title">conf</span></span>

[atguigu<span class="hljs-variable">@hadoop102</span> conf]<span class="hljs-variable">$ </span>mv hive-log4j.properties.template hive-log4j.properties</code></pre>

<p>（2）在 hive-log4j.properties 文件中修改 log 存放位置</p>



<pre class="prettyprint"><code class=" hljs ruby">hive.log.dir=<span class="hljs-regexp">/opt/module</span><span class="hljs-regexp">/hive/logs</span></code></pre>

<p>2.8.4 参数配置方式</p>

<p>1）查看当前所有的配置信息</p>



<pre class="prettyprint"><code class=" hljs bash">hive&gt;<span class="hljs-keyword">set</span>;</code></pre>

<p>2）参数的配置三种方式</p>

<p>（1）配置文件方式</p>

<p>默认配置文件：hive-default.xml</p>

<p>用户自定义配置文件：hive-site.xml</p>

<p>注意：用户自定义配置会覆盖默认配置。另外，Hive 也会读入 Hadoop 的配置，因为    Hive 是作为 Hadoop 的客户端启动的，Hive 的配置会覆盖 Hadoop 的配置。配置文件的设定对本机启动的所有 Hive 进程都有效。</p>

<p>（2）命令行参数方式</p>

<p>启动 Hive 时，可以在命令行添加-hiveconf param=value 来设定参数。</p>

<p>例如：</p>



<pre class="prettyprint"><code class=" hljs ruby">[atguigu<span class="hljs-variable">@hadoop103</span> hive]<span class="hljs-variable">$ </span>bin/hive -hiveconf mapred.reduce.tasks=<span class="hljs-number">10</span>; </code></pre>

<p><font color="red">注意：仅对本次 hive 启动有效</font></p>

<p>查看参数设置：</p>



<pre class="prettyprint"><code class=" hljs avrasm">hive (default)&gt; <span class="hljs-keyword">set</span> mapred<span class="hljs-preprocessor">.reduce</span><span class="hljs-preprocessor">.tasks</span><span class="hljs-comment">;</span></code></pre>

<p>（3）参数声明方式</p>

<p>可以在 HQL 中使用 SET 关键字设定参数</p>

<p>例如：</p>



<pre class="prettyprint"><code class=" hljs avrasm">hive (default)&gt; <span class="hljs-keyword">set</span> mapred<span class="hljs-preprocessor">.reduce</span><span class="hljs-preprocessor">.tasks</span>=<span class="hljs-number">100</span><span class="hljs-comment">;</span></code></pre>

<p><font color="red">注意：仅对本次 hive 启动有效</font></p>

<p>查看参数设置</p>



<pre class="prettyprint"><code class=" hljs avrasm">hive (default)&gt; <span class="hljs-keyword">set</span> mapred<span class="hljs-preprocessor">.reduce</span><span class="hljs-preprocessor">.tasks</span><span class="hljs-comment">;</span></code></pre>

<p>上述三种设定方式的优先级依次递增。即配置文件&lt;命令行参数&lt;参数声明。注意某些</p>

<p>系统级的参数，例如 log4j 相关的设定，必须用前两种方式设定，因为那些参数的读取在会</p>

<p>话建立以前已经完成了。</p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>