---
layout:     post
title:      Spark Streaming学习
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/m0_37499059/article/details/79732459				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p style="color:rgb(51,51,51);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(254,254,254);"></p><h2 style="font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;line-height:1.1;color:rgb(51,51,51);font-size:30px;border-left:10px solid rgb(52,152,219);background-color:rgb(247,247,247);">Spark Streaming</h2>流计算除了使用 <a href="http://dblab.xmu.edu.cn/blog/install-storm/" rel="nofollow" style="background:0px 0px;color:rgb(32,128,223);">Storm</a> 框架，使用 Spark Streaming 也是一个很好的选择。基于 Spark Streaming，可以方便地构建可拓展、高容错的流计算应用程序。Spark Streaming 使用 Spark API 进行流计算，这意味着在 Spark 上进行流处理与批处理的方式一样。因此，你可以复用批处理的代码，使用 Spark Streaming 构建强大的交互式应用程序，而不仅仅是用于分析数据。<p style="color:rgb(51,51,51);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(254,254,254);">下面以一个简单的 Spark Streaming 示例（基于流的单词统计）来演示一下 Spark Streaming：本地服务器通过 TCP 接收文本数据，实时输出单词统计结果</p><p style="color:rgb(51,51,51);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(254,254,254);"><span style="color:rgb(51,51,51);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(254,254,254);">运行该示例需要 Netcat（在网络上通过 TCP 或 UDP 读写数据），CentOS 6.x 系统中默认没有安装，经过测试，如果通过 yum 直接安装，运行时会有 “nc: Protocol not available” 的错误，需要下载</span><a href="http://sourceforge.net/projects/netcat/files/netcat/0.6.1/" rel="nofollow" style="background:rgb(254,254,254) 0px 0px;color:rgb(32,128,223);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;">较低版本的 nc</a><span style="color:rgb(51,51,51);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(254,254,254);"> 才能正常使用。我们选择 Netcat 0.6.1 版本，在终端中运行如下命令进行安装：</span><br></p><p style="color:rgb(51,51,51);"><span style="font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(254,254,254);color:rgb(51,51,51);"><span style="font-family:Arial;text-indent:32px;background-color:rgb(255,255,255);">wget http://sourceforge.net/projects/netcat/files/netcat/0.7.1/netcat-0.7.1-1.i386.rpm</span><br style="font-family:Arial;text-indent:32px;background-color:rgb(255,255,255);"></span></p><p style="font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(254,254,254);"><span style="color:rgb(51,51,51);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(254,254,254);"><span style="font-family:Arial;text-indent:32px;background-color:rgb(255,255,255);">执行安装rpm -ihv netcat-0.7.1-1.i386.rpm</span></span></p><pre><code class="language-html">rpm -ihv netcat-0.7.1-1.i386.rpm  
warning: netcat-0.7.1-1.i386.rpm: Header V3 DSA/SHA1 Signature, key ID b2d79fc1: NOKEY  
error: Failed dependencies:  
        libc.so.6 is needed by netcat-0.7.1-1.i386  
        libc.so.6(GLIBC_2.0) is needed by netcat-0.7.1-1.i386  
        libc.so.6(GLIBC_2.1) is needed by netcat-0.7.1-1.i386  
        libc.so.6(GLIBC_2.3) is needed by netcat-0.7.1-1.i386  </code></pre><p></p><h5 style="font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(192,192,192);margin-left:8px;font-size:16px;line-height:1.4;">解决依赖包问题     yum list glibc*</h5><p style="font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(254,254,254);"><span style="font-family:Arial;text-indent:32px;background-color:rgb(255,255,255);">安装命令：</span></p><pre><code class="language-html">yum install glibc.i686</code></pre><p style="font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(254,254,254);"><span style="background-color:rgb(255,255,255);font-family:Arial;text-indent:32px;"><strong>到这就可以继续安装netcat了：</strong></span></p><pre><code class="language-html">rpm -ihv netcat-0.7.1-1.i386.rpm</code></pre><p><span style="color:rgb(51,51,51);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(254,254,254);">安装好 NetCat 之后，使用如下命令建立本地数据服务，监听 TCP 端口 9999：</span></p><pre><code class="language-java"># 记为终端 1
nc -l -p 9999</code></pre><p><span style="color:rgb(51,51,51);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(254,254,254);">启动后，该端口就被占用了，需要开启另一个终端运行示例程序，执行如下命令：</span></p><pre><code class="language-java"># 需要另外开启一个终端，记为终端 2，然后运行如下命令
/usr/local/spark/bin/run-example streaming.NetworkWordCount localhost 9999</code></pre><span style="color:rgb(51,51,51);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(254,254,254);">接着在终端 1 中输入文本，在终端 2 中就可以实时看到单词统计结果了。</span><br>            </div>
                </div>