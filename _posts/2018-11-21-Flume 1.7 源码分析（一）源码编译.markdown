---
layout:     post
title:      Flume 1.7 源码分析（一）源码编译
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/Lnho2015/article/details/57416739				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<blockquote>
  <p><a href="http://blog.csdn.net/lnho2015/article/details/57416739" rel="nofollow">Flume 1.7 源码分析（一）源码编译</a> <br>
  <a href="http://blog.csdn.net/Lnho2015/article/details/58055919" rel="nofollow">Flume 1.7 源码分析（二）整体架构</a> <br>
  <a href="http://blog.csdn.net/Lnho2015/article/details/58057814" rel="nofollow">Flume 1.7 源码分析（三）程序入口</a>   </p>
</blockquote>

<h1 id="1-说明">1 说明</h1>

<p>Flume是Cloudera提供的一个高可用的，高可靠的，分布式的海量日志采集、聚合和传输的系统，目前已经是Apache的一个子项目。Flume是一个专用工具被设计为旨在往HDFS、HBase发送数据。它对HDFS有特殊的优化，并且集成了Hadoop的安全特性。本文将详细分析Flume核心模块的源码实现。</p>



<h1 id="2-下载编译">2 下载、编译</h1>



<h2 id="21-源码检出">2.1  源码检出</h2>

<p>Flume源码的git地址是：<a href="https://git-wip-us.apache.org/repos/asf/flume.git" rel="nofollow">https://git-wip-us.apache.org/repos/asf/flume.git</a>。本文采用的分支是flume-1.7。</p>



<h2 id="22-源码编译">2.2  源码编译</h2>

<p>Flume采用Maven进行构建。本文采用IDEA作为编译、调试工具。</p>



<h3 id="221-maven依赖下载">2.2.1   Maven依赖下载</h3>

<p>配置阿里云的Maven服务器，速度较快，并可完成绝大多数包的下载。</p>



<pre class="prettyprint"><code class=" hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">mirror</span>&gt;</span>  
    <span class="hljs-tag">&lt;<span class="hljs-title">id</span>&gt;</span>nexus-aliyun<span class="hljs-tag">&lt;/<span class="hljs-title">id</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">mirrorOf</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-title">mirrorOf</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">name</span>&gt;</span>Nexus aliyun<span class="hljs-tag">&lt;/<span class="hljs-title">name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="hljs-tag">&lt;/<span class="hljs-title">url</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">mirror</span>&gt;</span></code></pre>

<p>使用阿里云Maven服务器，仍然有一些包无法解决，例如FlumeAuth模块的hadoop-minikdc和SolrSink的kite-morphlines-all等。由于这部分缺失的包，基本都是属于flume的插件模块之中，可直接关闭这些插件模块，不会影响主程序的执行和源码阅读。同时，还可移除其他的你不需要使用的source和sink和channel插件模块，可加快编译速度。</p>

<p>导入好的项目如下图所示： <br>
 <img src="https://img-blog.csdn.net/20170226160507592?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTG5obzIwMTU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="flume源码工程导入" title=""></p>

<p>其中比较重要的就是上图圈起来的模块了，其中flume-ng-core存放了最核心部分的代码，包含基础的Source、Channel、Sink等；flume-ng-node则是存放了程序启动的代码（入口函数）。</p>

<p>其他可能会用到的模块就是flume-ng-sources、flume-ng-channels、flume-ng-sinks，这3个模块存放了非必须的flume组件（flume-ng-core中未包含的），里面有些组件也是很常用的。</p>



<h3 id="222-编译打包">2.2.2   编译打包</h3>

<p>使用mvn clean install -Dmaven.test.skip=true进行打包，看到BUILD SUCCESS则代表编译成功，可进行下一步。</p>

<p>本步骤一定要有，不然debug的时候会报某些类找不到，这些类大多数是由avro定义的文件编译后才会生成的class文件。</p>



<h3 id="223-简单测试">2.2.3   简单测试</h3>

<p>在TestMemoryChannel类右键选择Run ‘TestMemoryChannel’运行JUnit单元测试。检查是否有报错。</p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>