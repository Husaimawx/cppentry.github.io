---
layout:     post
title:      kafka集群搭建
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <h2>简要说明</h2>

<p>新版本的kafka自带有zookeeper，其实自带的zookeeper完全够用，本篇文章以记录使用自带zookeeper搭建kafka集群。</p>

<h2><a name="t1"></a>1、关于kafka</h2>

<p>kafka官网：http://kafka.apache.org/</p>

<p>kafka下载页面：http://kafka.apache.org/downloads</p>

<p>kafka配置快速入门：http://kafka.apache.org/quickstart</p>

<h2><a name="t2"></a>2、修改kafka配置文件</h2>

<p>kafka安装目录下的config文件夹为其配置文件，我们需要修改的有 server.properties和zookeeper.properties。</p>

<h3><a name="t3"></a>2.1、修改日志目录</h3>

<p>首先修改kafka的日志目录和zookeeper数据目录，因为这两项默认放在tmp目录，而tmp目录中内容会随重启而丢失：</p>

<p>server.properties：<br>
    log.dirs=/tmp/kafka-logs<br>
    修改为<br>
    log.dirs=/usr/local/kafka/logs<br><br>
zookeeper.properties<br>
    dataDir=/tmp/zookeeper<br>
    修改为<br>
    dataDir=/usr/local/zookeeper/data</p>

<h3><a name="t4"></a>2.2、配置kafka</h3>

<p>kafka集群为便于推选leader，一般由奇数台服务组件集群，这里以三台为例，分别已xxx.xxx.xxx.xxA、xxx.xxx.xxx.xxB和xxx.xxx.xxx.xxC代表服务的ip。</p>

<p>（服务器IP可使用ifconfig命令查看）</p>

<p> </p>

<p>修改server.properties:</p>

<p>1、设置broker.id，保证每个broker唯一，第一台可以不修改默认为0，后面两台需要修改，如改为1和2</p>

<p>2、设置num.partitions，分区数量一般与broker保持一致</p>

<p>3、设置advertised.listeners和listeners，如listeners=PLAINTEXT://xxx.xxx.xxx.xx:9092</p>

<p>4、设置zookeeper.connect，配置三台服务zookeeper连接地址，如zookeeper.connect=xxx.xxx.xxx.xxA:2181,xxx.xxx.xxx.xxB:2181,xxx.xxx.xxx.xxC:2181</p>

<p> </p>

<p>修改zookeeper.properties：</p>

<p>1、设置连接参数，添加如下配置</p>

<p>        tickTime=2000<br>
        initLimit=10<br>
        syncLimit=5</p>

<p> </p>

<p>2、设置broker Id的服务地址</p>

<p>        server.0=xxx.xxx.xxx.xxA:2888:3888<br>
        server.1=xxx.xxx.xxx.xxB:2888:3888<br>
        server.2=xxx.xxx.xxx.xxC:2888:3888</p>

<p> </p>

<p>zookeeper数据目录添加id配置</p>

<p>在各台服务的zookeeper数据目录添加myid文件，写入服务broker.id属性值，如这里的目录是/usr/local/zookeeper/data</p>

<p>第一台broker.id为0的服务到该目录下执行：echo 0 &gt; myid</p>

<p> </p>

<h2><a name="t5"></a>3、启动kafka</h2>

<p>kafka启动时先启动zookeeper，再启动kafka；关闭时相反，先关闭kafka，再关闭zookeeper</p>

<p>启动zookeeper：<br>
        bin/zookeeper-server-start.sh config/zookeeper.properties &amp;<br>
启动kafka：<br>
        bin/kafka-server-start.sh config/server.properties &amp;</p>

<p> </p>

<h2><a name="t6"></a>4、测试kafka集群</h2>

<p>4.1、在第一台服务上创建test主题</p>

<p>bin/kafka-topics.sh --create --topic test --zookeeper xxx.xxx.xxx.xxA:2181 --replication-factor 3 --partition 3</p>

<p>4.2、展示主题，确认主题创建成功</p>

<p>bin/kafka-topics.sh --list --zookeeperxxx.xxx.xxx.xxA:2181</p>

<p>4.3、创建生产者</p>

<p>bin/kafka-console-producer.sh --broker-listxxx.xxx.xxx.xxA:9092 --topic test</p>

<p>4.4、创建消费者，再另外两台服务上分别创建消费者</p>

<p>bin/kafka-console-consumer.sh --zookeeper xxx.xxx.xxx.xxB:2181 --topic test --from-beginning<br>
bin/kafka-console-consumer.sh --zookeeper xxx.xxx.xxx.xxC:2181 --topic test --from-beginning</p>

<p>4.5、测试消息发布与消费</p>

<p>在IP为xxx.xxx.xxx.xxA的服务生产中输入消息回车发送，确认在服务B和C中的消费者是否接收到</p>

<h2><a name="t7"></a>5、其他</h2>

<p>如配置完成后需要修改端口或其他配置，但是没有生效，启动报错，可以尝试清楚kafka（/usr/local/kafka/logs）和zookeeper（/usr/local/zookeeper/data）缓存目录的内容然后重新启动。</p>            </div>
                </div>