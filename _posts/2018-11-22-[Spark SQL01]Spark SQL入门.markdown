---
layout:     post
title:      [Spark SQL01]Spark SQL入门
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p>1、SQL结合spark有两条线：</p><p>Spark SQL和Hive on Spark（还在开发状态，不稳定，暂时不建议使用）。</p><p>#Hive on Spark是在Hive中的，使用Spark作为hive的执行引擎，只需要在hive中修改一个参数即可：</p><p># set hive.execution.engine=spark</p><p><br></p><p>2、Spark SQL</p><p>a.概述：</p><p>        Spark SQL是Spark处理数据的一个模块，跟基本的Spark RDD的API不同，Spark SQL中提供的接口将会提供给Spark更多关于结构化数据和计算的信息。其本质是，<strong>Spark SQL使用这些额外的信息去执行额外的优化</strong>，这儿有几种和Spark SQL进行交互的方法，包括<strong>SQL和Dataset API</strong>，当使用相同的执行引擎时，API或其它语言对于计算的表达都是相互独立的，这种统一意味着开发人员可以轻松地在不同的API之间进行切换。</p><p>b.SQL:</p><p>        Spark SQL的一大用处就是执行SQL查询语句，Spark SQL也可以用来从Hive中读取数据，当我们使用其它编程语言来运行一个SQL语句，结果返回的是一个Dataset或者DataFrame.你可以使用<strong>命令行，JDBC或者ODBC</strong>的方式来与SQL进行交互。<br></p><p>c.Dataset和DataFrame</p><p>        Dataset是一个分布式数据集合。Dataset是一个在<strong>Spark 1.6版本</strong>之后才引入的新接口，它既拥有了RDD的优点（强类型、能够使用强大的lambda函数），又拥有Spark SQL的优点（用来一个经过优化的执行引擎）。你可以<strong>将一个JVM对象构造成一个Dataset</strong>,之后就可以使用一些transformations操作啦。我们<strong>可以使用scala,java来访问Dataset API</strong>,不支持python哦，当然，由于python的动态特性，很多的Dataset API是可以使用的，R语言也是一样哦。<br></p><p>        DataFrame是Dataset中一个有名字的列。从概念上，它等价于关系型数据库中的一张表，或者等价于R/Python中的Data Frame，但它在底层做了更好的优化。构造DataFrame的数据源很多：<strong>结构化的数据文件、hive表、外部数据库、已经存在的RDD</strong>。DataFrame 的API支持<strong>java,scal.python,R</strong>。<br></p><p><br></p><p>3、面试题</p><p><strong>RDD </strong> <em>VS </em> <strong>DataFrame</strong></p><p>esgd </p><p><img src="https://img-blog.csdn.net/20180331201720640" alt=""><br></p><p>a.基于RDD的编程，不同语言性能是不一样的，而DataFrame是一样的，因为底层会有一个优化器先将代码进行优化。</p><p>b.对于RDD，暴露给执行引擎的信息只有数据的类型，如RDD[Student]装的是Student,而对于DataFrame,对于外部可见的信息有字段类型，字段key,字段value等。</p><p>c.RDD是一个数组，DataFrame是一个列式表。</p><p><br></p><p>4、Spark SQL愿景</p><p>a.写更少的代码 </p><p>b.读更少的数据（压缩，存储格式，列裁剪）</p><p>c.对于不同语言的应用程序让优化器自动进行优化</p><p><br></p><p>5、Spark SQL架构</p><p><img src="https://img-blog.csdn.net/20180331203025882" alt=""><br></p><p>客户端-&gt;未解析的逻辑执行计划（Schema Catalog 将schema作用在数据上）-&gt;逻辑执行计划-&gt;优化过后的逻辑执行计划-&gt;物理执行计划-&gt;Spark引擎。</p><p>#Spark SQL 要使用hive中的表，需要将hive-site.xml加入spark的配置文件目录。</p><p><br></p><p><strong>6、执行计划（Hive 或Spark SQL）</strong></p><p><span style="color:#ff0000;">explain extended +查询语句</span></p><p><br></p><p>7、SparkSession</p><p>添加依赖：</p><p>&lt;dependency&gt;</p><p>    &lt;groupId&gt;org.spark.apache&lt;/groupId&gt;<br></p><p>    &lt;artifactId&gt;spark-sql_2.11&lt;/artifactId&gt;    ##2.11位scala版本<br></p><p>    &lt;version&gt;${spark.version}&lt;/version&gt;<br></p><p>&lt;/dependency&gt;</p><p>        <span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:18px;background-color:rgb(255,255,255);"><span style="font-size:16px;">Spark中所有功能的入口点是SparkSession类,我们可以使用SparkSession.builder()来创建一个<span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;font-size:18px;background-color:rgb(255,255,255);">SparkSession，具体如下（scala）:</span></span></span><br></p><p><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:18px;background-color:rgb(255,255,255);"><span style="font-size:16px;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;background-color:rgb(255,255,255);"></span></span></span></p><pre style="font-size:18px;font-family:Menlo, 'Lucida Console', monospace;color:rgb(51,51,51);background-color:rgb(245,245,245);border:1px solid rgba(0,0,0,.14902);"><span class="k" style="color:rgb(0,112,32);font-weight:bold;">import</span> <span class="nn" style="color:rgb(14,132,181);font-weight:bold;">org.apache.spark.sql.SparkSession</span>

<span class="k" style="color:rgb(0,112,32);font-weight:bold;">val</span> <span class="n">spark</span> <span class="k" style="color:rgb(0,112,32);font-weight:bold;">=</span> <span class="nc" style="color:rgb(14,132,181);font-weight:bold;">SparkSession</span>
  <span class="o" style="color:rgb(102,102,102);">.</span><span class="n">builder</span><span class="o" style="color:rgb(102,102,102);">()</span>
  <span class="o" style="color:rgb(102,102,102);">.</span><span class="n">appName</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="s" style="color:rgb(64,112,160);">"Spark SQL basic example"</span><span class="o" style="color:rgb(102,102,102);">)</span>
  <span class="o" style="color:rgb(102,102,102);">.</span><span class="n">config</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="s" style="color:rgb(64,112,160);">"spark.some.config.option"</span><span class="o" style="color:rgb(102,102,102);">,</span> <span class="s" style="color:rgb(64,112,160);">"some-value"</span><span class="o" style="color:rgb(102,102,102);">)</span>
  <span class="o" style="color:rgb(102,102,102);">.</span><span class="n">getOrCreate</span><span class="o" style="color:rgb(102,102,102);">()</span>

<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// For implicit conversions like converting RDDs to DataFrames</span>
<span class="k" style="color:rgb(0,112,32);font-weight:bold;">import</span> <span class="nn" style="color:rgb(14,132,181);font-weight:bold;">spark.implicits._</span></pre><p><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:18px;background-color:rgb(255,255,255);"><span style="font-size:16px;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;background-color:rgb(255,255,255);">           可以在spark repo下的<span style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(255,255,255);">"examples/src/main/scala/org/apache/spark/examples/sql/SparkSQLExample.scala" 路径下找到所有例子的代码。</span></span></span></span></p><p><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:18px;background-color:rgb(255,255,255);"><span style="font-size:16px;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;background-color:rgb(255,255,255);"><span style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(255,255,255);">        在Spark 2.0之后，SparkSession内置了对于hive特性的支持，允许使用HiveQL来书写查询语句访问UDF，以及从Hive表中读取数据。使用这些特性，你不需要进行任何Hive的设置。<br></span></span></span></span></p><p><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:18px;background-color:rgb(255,255,255);"><span style="font-size:16px;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;background-color:rgb(255,255,255);"><span style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(255,255,255);"><br></span></span></span></span></p><p><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:18px;background-color:rgb(255,255,255);"><span style="font-size:16px;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;background-color:rgb(255,255,255);"><span style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(255,255,255);">8、创建DataFrame</span></span></span></span></p><p><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:18px;background-color:rgb(255,255,255);"><span style="font-size:16px;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;background-color:rgb(255,255,255);"><span style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(255,255,255);">        通过SparkSession,应用程序可以从一个现有的RDD、Hive表、Spark数据源来创建一个<span style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:18px;background-color:rgb(255,255,255);">DataFrame。</span><br></span></span></span></span></p><p><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:18px;background-color:rgb(255,255,255);"><span style="font-size:16px;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;background-color:rgb(255,255,255);"><span style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(255,255,255);"><span style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:18px;background-color:rgb(255,255,255);">        以下创建<span style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:18px;background-color:rgb(255,255,255);">DataFrame是基于JSON格式的文件：</span><br></span></span></span></span></span></p><p><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:18px;background-color:rgb(255,255,255);"><span style="font-size:16px;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;background-color:rgb(255,255,255);"><span style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(255,255,255);"><span style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:18px;background-color:rgb(255,255,255);"><span style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:18px;background-color:rgb(255,255,255);"></span></span></span></span></span></span></p><pre style="font-family:Menlo, 'Lucida Console', monospace;color:rgb(51,51,51);background-color:rgb(245,245,245);border:1px solid rgba(0,0,0,.14902);"><span class="k" style="color:rgb(0,112,32);font-weight:bold;">val</span> <span class="n">df</span> <span class="k" style="color:rgb(0,112,32);font-weight:bold;">=</span> <span class="n">spark</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">read</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">json</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="s" style="color:rgb(64,112,160);">"examples/src/main/resources/people.json"</span><span class="o" style="color:rgb(102,102,102);">)</span>

<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// Displays the content of the DataFrame to stdout</span>
<span class="n">df</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">show</span><span class="o" style="color:rgb(102,102,102);">()</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// | age|   name|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |null|Michael|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |  30|   Andy|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |  19| Justin|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span></pre><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;font-size:18px;background-color:rgb(255,255,255);">         </span><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;font-size:18px;background-color:rgb(255,255,255);">可以在spark repo下的</span><span style="font-size:18px;background-color:rgb(255,255,255);color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;">"examples/src/main/scala/org/apache/spark/examples/sql/SparkSQLExample.scala" 路径下找到所有例子的代码。</span><br><p><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:18px;background-color:rgb(255,255,255);"><span style="font-size:16px;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;font-size:18px;background-color:rgb(255,255,255);"><br></span></span></span></p><p><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:18px;background-color:rgb(255,255,255);"><span style="font-size:16px;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;font-size:18px;background-color:rgb(255,255,255);">9、无类型的Dataset操作（又称DataFrame 操作）</span></span></span></p><p><span style="line-height:18px;background-color:rgb(255,255,255);"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;font-size:18px;">      上面提到的，在Spark 2.0时，在java或者scala </span><span style="font-size:16px;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;">API中，</span><span style="font-family:Menlo, 'Lucida Console', monospace;color:#444444;">DataFrame是Dataset的行，<span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;">这些操作也被称为“非类型转换”，与“类型化转换”相比，具有强类型的Scala/Java Dataset。</span></span></span><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;"></span></span></p><p><span style="line-height:18px;"><span style="font-size:16px;"><span style="font-family:Menlo, 'Lucida Console', monospace;color:#444444;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;"><span style="background-color:rgb(255,255,255);">        这儿包括一些使用Dataset处理结构化数据的例子：</span><br></span></span></span></span></p><p><span style="line-height:18px;"><span style="font-size:16px;"><span style="font-family:Menlo, 'Lucida Console', monospace;color:#444444;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;"><span style="background-color:rgb(255,255,255);"></span></span></span></span></span></p><pre style="font-family:Menlo, 'Lucida Console', monospace;color:rgb(51,51,51);background-color:rgb(245,245,245);border:1px solid rgba(0,0,0,.14902);"><span class="c1" style="color:rgb(96,160,176);font-style:italic;">// This import is needed to use the $-notation</span>
<span class="k" style="color:rgb(0,112,32);font-weight:bold;">import</span> <span class="nn" style="color:rgb(14,132,181);font-weight:bold;">spark.implicits._</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// Print the schema in a tree format</span>
<span class="n">df</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">printSchema</span><span class="o" style="color:rgb(102,102,102);">()</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// root</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |-- age: long (nullable = true)</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |-- name: string (nullable = true)</span>

<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// Select only the "name" column</span>
<span class="n">df</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">select</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="s" style="color:rgb(64,112,160);">"name"</span><span class="o" style="color:rgb(102,102,102);">).</span><span class="n">show</span><span class="o" style="color:rgb(102,102,102);">()</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +-------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |   name|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +-------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |Michael|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |   Andy|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// | Justin|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +-------+</span>

<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// Select everybody, but increment the age by 1</span>
<span class="n">df</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">select</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="n">$</span><span class="s" style="color:rgb(64,112,160);">"name"</span><span class="o" style="color:rgb(102,102,102);">,</span> <span class="n">$</span><span class="s" style="color:rgb(64,112,160);">"age"</span> <span class="o" style="color:rgb(102,102,102);">+</span> <span class="mi" style="color:rgb(64,160,112);">1</span><span class="o" style="color:rgb(102,102,102);">).</span><span class="n">show</span><span class="o" style="color:rgb(102,102,102);">()</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +-------+---------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |   name|(age + 1)|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +-------+---------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |Michael|     null|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |   Andy|       31|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// | Justin|       20|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +-------+---------+</span>

<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// Select people older than 21</span>
<span class="n">df</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">filter</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="n">$</span><span class="s" style="color:rgb(64,112,160);">"age"</span> <span class="o" style="color:rgb(102,102,102);">&gt;</span> <span class="mi" style="color:rgb(64,160,112);">21</span><span class="o" style="color:rgb(102,102,102);">).</span><span class="n">show</span><span class="o" style="color:rgb(102,102,102);">()</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +---+----+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |age|name|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +---+----+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// | 30|Andy|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +---+----+</span>

<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// Count people by age</span>
<span class="n">df</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">groupBy</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="s" style="color:rgb(64,112,160);">"age"</span><span class="o" style="color:rgb(102,102,102);">).</span><span class="n">count</span><span class="o" style="color:rgb(102,102,102);">().</span><span class="n">show</span><span class="o" style="color:rgb(102,102,102);">()   //groupBy返回一个Dataset,count返回一个DataFrame.</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-----+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// | age|count|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-----+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |  19|    1|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |null|    1|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |  30|    1|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-----+</span></pre><p><span style="line-height:18px;"><span style="font-size:16px;"><span style="font-family:Menlo, 'Lucida Console', monospace;color:#000000;"><span style="font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;"><span style="font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;background-color:rgb(255,255,255);"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;font-size:18px;background-color:rgb(255,255,255);">可以在spark repo下的</span><span style="font-size:18px;background-color:rgb(255,255,255);color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;">"examples/src/main/scala/org/apache/spark/examples/sql/SparkSQLExample.scala" 路径下找到所有例子的代码。</span><br></span></span></span></span></span></p><p><span style="line-height:18px;"><span style="font-size:16px;"><span style="font-family:Menlo, 'Lucida Console', monospace;color:#000000;"><span style="font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;"><span style="font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;background-color:rgb(255,255,255);">对于可以在数据集上执行的操作类型的完整列表，请参阅<a href="http://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.Dataset" rel="nofollow" style="color:rgb(0,85,128);text-decoration:underline;font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(255,255,255);">API Documentation</a>。</span></span></span></span></span></p><p><span style="line-height:18px;"><span style="font-size:16px;"><span style="font-family:Menlo, 'Lucida Console', monospace;"><span style="font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;"><span style="font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;"><span style="font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;"><span style="color:#000000;background-color:rgb(255,255,255);">除了简单的列引用和表达式之外，数据集还拥有丰富的函数库，包括字符串操作、日期算术、常见的数学运算等等。完整列表查看<a href="http://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.functions%24" rel="nofollow"><span style="font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;"> </span><span style="font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;"><span><u>DataFrame Function Reference</u></span></span><span style="font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;">.</span></a></span></span><br></span></span></span></span></span></p><p><span style="line-height:18px;"><span style="font-size:16px;"><span style="background-color:rgb(255,255,255);"><span style="font-family:Menlo, 'Lucida Console', monospace;color:#444444;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;background-color:rgb(238,240,242);"><br></span></span></span></span></span></p><p><span style="line-height:18px;"><span style="font-size:16px;"><span style="font-family:Menlo, 'Lucida Console', monospace;color:#444444;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;background-color:rgb(255,255,255);">10、以编程方式运行SQL查询语句</span></span></span></span></p><p><span style="line-height:18px;"><span style="font-size:16px;"><span style="font-family:Menlo, 'Lucida Console', monospace;color:#444444;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;background-color:rgb(255,255,255);">        SparkSession中的SQL函数可以让应用程序以编程的方式运行SQL查询语句，让结果返回一个DataFrame。<br></span></span></span></span></p><p><span style="line-height:18px;"><span style="font-size:16px;"><span style="font-family:Menlo, 'Lucida Console', monospace;color:#444444;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;background-color:rgb(255,255,255);"></span></span></span></span></p><pre style="font-family:Menlo, 'Lucida Console', monospace;color:rgb(51,51,51);background-color:rgb(245,245,245);border:1px solid rgba(0,0,0,.14902);"><span class="c1" style="color:rgb(96,160,176);font-style:italic;">// Register the DataFrame as a SQL temporary view</span>
<span class="n">df</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">createOrReplaceTempView</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="s" style="color:rgb(64,112,160);">"people"</span><span class="o" style="color:rgb(102,102,102);">)</span>

<span class="k" style="color:rgb(0,112,32);font-weight:bold;">val</span> <span class="n">sqlDF</span> <span class="k" style="color:rgb(0,112,32);font-weight:bold;">=</span> <span class="n">spark</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">sql</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="s" style="color:rgb(64,112,160);">"SELECT * FROM people"</span><span class="o" style="color:rgb(102,102,102);">)</span>
<span class="n">sqlDF</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">show</span><span class="o" style="color:rgb(102,102,102);">()</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// | age|   name|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |null|Michael|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |  30|   Andy|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |  19| Justin|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span></pre><p><span style="line-height:18px;"><span style="font-size:16px;"><span style="font-family:Menlo, 'Lucida Console', monospace;color:#444444;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;background-color:rgb(255,255,255);"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;font-size:18px;background-color:rgb(255,255,255);">可以在spark repo下的</span><span style="font-size:18px;background-color:rgb(255,255,255);color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;">"examples/src/main/scala/org/apache/spark/examples/sql/SparkSQLExample.scala" 路径下找到所有例子的代码。</span><br></span></span></span></span></p><p><span style="line-height:18px;"><span style="font-size:16px;"><span style="font-family:Menlo, 'Lucida Console', monospace;color:#444444;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;background-color:rgb(255,255,255);"><span style="font-size:18px;background-color:rgb(255,255,255);color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;"><br></span></span></span></span></span></p><p><span style="line-height:18px;"><span style="font-family:Menlo, 'Lucida Console', monospace;color:rgb(68,68,68);"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;background-color:rgb(255,255,255);"><span style="font-size:16px;">11、全局临时视图</span></span></span></span></p><p><span style="line-height:18px;"><span style="font-family:Menlo, 'Lucida Console', monospace;color:rgb(68,68,68);"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;background-color:rgb(255,255,255);"><span style="font-size:16px;">        Spark SQL中的临时视图作用域仅仅在于创建该视图的会话窗口，如果窗口关闭，该视图也终止。如果你想要一个在所有会话中都生效的临时视图，并且即使应用程序终止该视图仍然存活，你可以创建一个全局临时视图。 全局临时视图与系统保存数据库global_temp相关联，我们必须使用规范的名字来定义它，比如：<span style="font-size:16px;"><code style="font-family:Menlo, 'Lucida Console', monospace;color:rgb(68,68,68);background:#FFFFFF;border:none;">SELECT * FROM global_temp.view1</code><span style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;background-color:rgb(255,255,255);">.</span><br></span></span></span></span></span></p><p><span style="line-height:18px;"><span style="font-size:16px;"><span style="font-family:Menlo, 'Lucida Console', monospace;color:#444444;"><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;line-height:20px;background-color:rgb(255,255,255);"></span></span></span></span></p><div class="codetabs tab-content" style="color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:14px;"><div class="tab-pane active"><div class="highlight"><pre style="font-family:Menlo, 'Lucida Console', monospace;color:rgb(51,51,51);background-color:rgb(245,245,245);border:1px solid rgba(0,0,0,.14902);"><span class="c1" style="color:rgb(96,160,176);font-style:italic;">// Register the DataFrame as a global temporary view</span>
<span class="n">df</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">createGlobalTempView</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="s" style="color:rgb(64,112,160);">"people"</span><span class="o" style="color:rgb(102,102,102);">)</span>

<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// Global temporary view is tied to a system preserved database `global_temp`</span>
<span class="n">spark</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">sql</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="s" style="color:rgb(64,112,160);">"SELECT * FROM global_temp.people"</span><span class="o" style="color:rgb(102,102,102);">).</span><span class="n">show</span><span class="o" style="color:rgb(102,102,102);">()</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// | age|   name|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |null|Michael|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |  30|   Andy|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |  19| Justin|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span>

<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// Global temporary view is cross-session</span>
<span class="n">spark</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">newSession</span><span class="o" style="color:rgb(102,102,102);">().</span><span class="n">sql</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="s" style="color:rgb(64,112,160);">"SELECT * FROM global_temp.people"</span><span class="o" style="color:rgb(102,102,102);">).</span><span class="n">show</span><span class="o" style="color:rgb(102,102,102);">()</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// | age|   name|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |null|Michael|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |  30|   Andy|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |  19| Justin|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span>
</pre></div><div><span style="color:rgb(46,48,51);font-family:Arial, 'Microsoft YaHei', '微软雅黑', '宋体', 'Malgun Gothic', Meiryo, sans-serif;background-color:rgb(255,255,255);font-size:18px;">可以在spark repo下的</span><span style="background-color:rgb(255,255,255);font-size:18px;color:rgb(29,31,34);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;">"examples/src/main/scala/org/apache/spark/examples/sql/SparkSQLExample.scala" 路径下找到所有例子的代码。</span><br></div></div></div><h2 style="font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;line-height:40px;color:rgb(29,31,34);"><br></h2><p>12、创建Dataset</p><p>        Dataset有点像RDD,但它并不是使用java或Kryo这样的序列化方式，而是使用专用的编码器将对象进行序列化，以便于在网络上进行处理和传输。虽然编码器和标准的序列化都可以将对象转成字节，但编码器产生动态的代码，它使用的格式允许Spark在不执行反序列化的情况下去执行像过滤、排序、哈希等许许多多的操作。</p><p>    </p><pre style="font-family:Menlo, 'Lucida Console', monospace;color:rgb(51,51,51);background-color:rgb(245,245,245);border:1px solid rgba(0,0,0,.14902);"><span class="k" style="color:rgb(0,112,32);font-weight:bold;">case</span> <span class="k" style="color:rgb(0,112,32);font-weight:bold;">class</span> <span class="nc" style="color:rgb(14,132,181);font-weight:bold;">Person</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="n">name</span><span class="k" style="color:rgb(0,112,32);font-weight:bold;">:</span> <span class="kt" style="color:rgb(144,32,0);">String</span><span class="o" style="color:rgb(102,102,102);">,</span> <span class="n">age</span><span class="k" style="color:rgb(0,112,32);font-weight:bold;">:</span> <span class="kt" style="color:rgb(144,32,0);">Long</span><span class="o" style="color:rgb(102,102,102);">)</span>

<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// Encoders are created for case classes</span>
<span class="k" style="color:rgb(0,112,32);font-weight:bold;">val</span> <span class="n">caseClassDS</span> <span class="k" style="color:rgb(0,112,32);font-weight:bold;">=</span> <span class="nc" style="color:rgb(14,132,181);font-weight:bold;">Seq</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="nc" style="color:rgb(14,132,181);font-weight:bold;">Person</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="s" style="color:rgb(64,112,160);">"Andy"</span><span class="o" style="color:rgb(102,102,102);">,</span> <span class="mi" style="color:rgb(64,160,112);">32</span><span class="o" style="color:rgb(102,102,102);">)).</span><span class="n">toDS</span><span class="o" style="color:rgb(102,102,102);">()</span>
<span class="n">caseClassDS</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">show</span><span class="o" style="color:rgb(102,102,102);">()</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+---+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |name|age|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+---+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |Andy| 32|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+---+</span>

<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// Encoders for most common types are automatically provided by importing spark.implicits._</span>
<span class="k" style="color:rgb(0,112,32);font-weight:bold;">val</span> <span class="n">primitiveDS</span> <span class="k" style="color:rgb(0,112,32);font-weight:bold;">=</span> <span class="nc" style="color:rgb(14,132,181);font-weight:bold;">Seq</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="mi" style="color:rgb(64,160,112);">1</span><span class="o" style="color:rgb(102,102,102);">,</span> <span class="mi" style="color:rgb(64,160,112);">2</span><span class="o" style="color:rgb(102,102,102);">,</span> <span class="mi" style="color:rgb(64,160,112);">3</span><span class="o" style="color:rgb(102,102,102);">).</span><span class="n">toDS</span><span class="o" style="color:rgb(102,102,102);">()</span>
<span class="n">primitiveDS</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">map</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="k" style="color:rgb(0,112,32);font-weight:bold;">_</span> <span class="o" style="color:rgb(102,102,102);">+</span> <span class="mi" style="color:rgb(64,160,112);">1</span><span class="o" style="color:rgb(102,102,102);">).</span><span class="n">collect</span><span class="o" style="color:rgb(102,102,102);">()</span> <span class="c1" style="color:rgb(96,160,176);font-style:italic;">// Returns: Array(2, 3, 4)</span>

<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// DataFrames can be converted to a Dataset by providing a class. Mapping will be done by name</span>
<span class="k" style="color:rgb(0,112,32);font-weight:bold;">val</span> <span class="n">path</span> <span class="k" style="color:rgb(0,112,32);font-weight:bold;">=</span> <span class="s" style="color:rgb(64,112,160);">"examples/src/main/resources/people.json"</span>
<span class="k" style="color:rgb(0,112,32);font-weight:bold;">val</span> <span class="n">peopleDS</span> <span class="k" style="color:rgb(0,112,32);font-weight:bold;">=</span> <span class="n">spark</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">read</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">json</span><span class="o" style="color:rgb(102,102,102);">(</span><span class="n">path</span><span class="o" style="color:rgb(102,102,102);">).</span><span class="n">as</span><span class="o" style="color:rgb(102,102,102);">[</span><span class="kt" style="color:rgb(144,32,0);">Person</span><span class="o" style="color:rgb(102,102,102);">]</span>
<span class="n">peopleDS</span><span class="o" style="color:rgb(102,102,102);">.</span><span class="n">show</span><span class="o" style="color:rgb(102,102,102);">()</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// | age|   name|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |null|Michael|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |  30|   Andy|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// |  19| Justin|</span>
<span class="c1" style="color:rgb(96,160,176);font-style:italic;">// +----+-------+</span></pre><br><br>            </div>
                </div>