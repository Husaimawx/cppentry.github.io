---
layout:     post
title:      Hive 内建操作符与函数开发——深入浅出学Hive
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><a href="http://sishuok.com/forum/blogPost/list/6220.html" rel="nofollow">初始Hive</a></p>
<p><a href="http://sishuok.com/forum/blogPost/list/6221.html" rel="nofollow">Hive安装与配置</a></p>
<p><a href="http://sishuok.com/forum/blogPost/list/6222.html" rel="nofollow">Hive 内建操作符与函数开发</a></p>
<p><a href="http://sishuok.com/forum/blogPost/list/6223.html" rel="nofollow">Hive JDBC</a></p>
<p><a href="http://sishuok.com/forum/blogPost/list/6225.html" rel="nofollow">hive参数</a></p>
<p><a href="http://sishuok.com/forum/blogPost/list/6226.html" rel="nofollow">Hive 高级编程</a></p>
<p><a href="http://sishuok.com/forum/blogPost/list/0/6227.html" rel="nofollow">Hive QL</a></p>
<p><a href="http://sishuok.com/forum/blogPost/list/6228.html" rel="nofollow">Hive Shell 基本操作</a></p>
<p><a href="http://sishuok.com/forum/blogPost/list/0/6229.html" rel="nofollow">hive 优化</a></p>
<p><a href="http://sishuok.com/forum/blogPost/list/0/6231.html" rel="nofollow">Hive体系结构</a></p>
<p><a href="http://sishuok.com/forum/blogPost/list/0/6232.html" rel="nofollow">Hive的原理</a></p>
<p><br></p>
<p><a href="http://sishuok.com/forum/blogPost/list/0/6232.html" rel="nofollow"><br></a></p>
<p> </p>
<div class="O">
<div><span style="font-size:16px;">第一部分：关系运算</span> </div>
<div>
<div class="O"><span>Hive支持的关系运算符</span> </div>
</div>
<div>
<div class="O">•常见的关系运算符 </div>
<div class="O1">•等值比较: = </div>
<div class="O1">•不等值比较: &lt;&gt; </div>
<div class="O1">•小于比较: &lt; </div>
<div class="O1">•小于等于比较: &lt;= </div>
<div class="O1">•大于比较: &gt; </div>
<div class="O1">•大于等于比较: &gt;= </div>
<div class="O1">•空值判断: IS NULL </div>
<div class="O1">•非空判断: IS NOT NULL </div>
<div class="O1">•LIKE比较: LIKE </div>
<div class="O1">•JAVA的LIKE操作: RLIKE </div>
<div class="O1">•REGEXP操作: REGEXP </div>
<div class="O1">
<div class="O">•等值比较: = </div>
<div class="O">   语法：A=B </div>
<div class="O">操作类型：所有基本类型 </div>
<div class="O">描述: 如果表达式A与表达式B相等，则为TRUE；否则为FALSE </div>
<div class="O">举例： </div>
<div class="O">hive&gt; select 1 from dual where 1=1; </div>
<div class="O">
<div class="O1">•不等值比较: &lt;&gt; </div>
<div class="O1">语法: A &lt;&gt; B </div>
<div class="O1">操作类型: 所有基本类型 </div>
<div class="O1">描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A与表达式B不相等，则为TRUE；否则为FALSE
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 from dual where 1 &lt;&gt; 2; </div>
<div class="O1">
<div class="O1">•小于比较: &lt; </div>
<div class="O1">语法: A &lt; B </div>
<div class="O1">操作类型: 所有基本类型 </div>
<div class="O1">描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A小于表达式B，则为TRUE；否则为FALSE </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 from dual where 1 &lt; 2; </div>
<div class="O1">
<div class="O1">•小于等于比较: &lt;= </div>
<div class="O1">语法: A &lt;= B </div>
<div class="O1">操作类型: 所有基本类型 </div>
<div class="O1">描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A小于或者等于表达式B，则为TRUE；否则为FALSE
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 from dual where 1 &lt;= 1; </div>
<div class="O1">
<div class="O1">•大于等于比较: &gt;= </div>
<div class="O1">语法: A &gt;= B </div>
<div class="O1">操作类型: 所有基本类型 </div>
<div class="O1">描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A大于或者等于表达式B，则为TRUE；否则为FALSE
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 from dual where 1 &gt;= 1; </div>
<div class="O1">
<div class="O1">•空值判断: IS NULL </div>
<div class="O1">语法: A IS NULL </div>
<div class="O1">操作类型: 所有类型 </div>
<div class="O1">描述: 如果表达式A的值为NULL，则为TRUE；否则为FALSE </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 from dual where null is null; </div>
<div class="O1"> 
<div>
<div class="O">•非空判断: IS NOT NULL </div>
<div class="O1">语法: A IS NOT NULL </div>
<div class="O1">操作类型: 所有类型 </div>
<div class="O1">描述: 如果表达式A的值为NULL，则为FALSE；否则为TRUE </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 from dual where 1 is not null; </div>
<div class="O"> 
<div>
<div class="O">•LIKE比较: LIKE </div>
<div class="O1">语法: A LIKE B </div>
<div class="O1">操作类型: strings </div>
<div class="O1">描述: 如果字符串A或者字符串B为NULL，则返回NULL；如果字符串A符合表达式B   的正则语法，则为TRUE；否则为FALSE。B中字符”_”表示任意单个字符，而字符”%”表示任意数量的字符。
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 from dual where ‘key' like 'foot%'; </div>
<div class="O1">1 </div>
<div class="O1">hive&gt; select 1 from dual where ‘key ' like 'foot____'; </div>
<div class="O1">1 </div>
<div class="O1"><strong>注意：否定比较时候用 NOT A LIKE B</strong> </div>
<div class="O1">hive&gt; select 1 from dual where NOT ‘key ' like 'fff%'; </div>
<div class="O1">
<div class="O">•JAVA的LIKE操作: RLIKE </div>
<div class="O1">语法: A RLIKE B </div>
<div class="O1">操作类型: strings </div>
<div class="O1">描述: 如果字符串A或者字符串B为NULL，则返回NULL；如果字符串A符合JAVA正则表达式B的正则语法，则为TRUE；否则为FALSE。
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 from dual where 'footbar’ rlike '^f.*r$’; </div>
<div class="O1">1 </div>
<div class="O1"><strong>注意：判断一个字符串是否全为数字：</strong> </div>
<div class="O1">hive&gt;select 1 from dual where '123456' rlike '^\\d+$'; </div>
<div class="O1">1 </div>
<div class="O1">hive&gt; select 1 from dual where '123456aa' rlike '^\\d+$'; </div>
<div class="O1">1 </div>
<div class="O1">
<div class="O">•REGEXP操作: REGEXP </div>
<div class="O1">语法: A REGEXP B </div>
<div class="O1">操作类型: strings </div>
<div class="O1">描述: 功能与RLIKE相同 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 from dual where ‘key' REGEXP '^f.*r$'; </div>
<div class="O1">1 </div>
<div class="O2"> 
<div class="O">
<div><span style="font-size:16px;">第二部分：逻辑运算与数学运算</span> </div>
<div>
<div class="O"><span>Hive数学运算</span> </div>
<div class="O">
<div>•加法操作: + </div>
<div>•减法操作: - </div>
<div>•乘法操作: * </div>
<div>•除法操作: / </div>
<div>•取余操作: % </div>
<div>•位与操作: &amp; </div>
<div>•位或操作: | </div>
<div>•位异或操作: ^ </div>
<div>•位取反操作: ~ </div>
<div>
<div class="O">•加法操作: + </div>
<div class="O1">语法: A + B </div>
<div class="O1">操作类型：所有数值类型 </div>
<div class="O1">说明：返回A与B相加的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。比如，int + int 一般结果为int类型，而int + double 一般结果为double类型
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 + 9 from dual; </div>
<div class="O1">10 </div>
<div class="O1">
<div class="O">•减法操作: - </div>
<div class="O1">语法: A – B </div>
<div class="O1">操作类型：所有数值类型 </div>
<div class="O1">说明：返回A与B相减的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。比如，int – int 一般结果为int类型，而int – double 一般结果为double类型
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 10 – 5 from dual; </div>
<div class="O1">5 </div>
<div class="O1"> 
<div>
<div class="O">• <strong>乘法操作 : * </strong></div>
<div class="O1">语法: A * B </div>
<div class="O1">操作类型：所有数值类型 </div>
<div class="O1">说明：返回A与B相乘的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。注意，如果A乘以B的结果超过默认结果类型的数值范围，则需要通过cast将结果转换成范围更大的数值类型
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 40 * 5 from dual; </div>
<div class="O1">200 </div>
<div class="O1">
<div class="O">• <strong>除法操作 : / </strong></div>
<div class="O1">语法: A / B </div>
<div class="O1">操作类型：所有数值类型 </div>
<div class="O1">说明：返回A除以B的结果。结果的数值类型为double </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 40 / 5 from dual; </div>
<div class="O1">8.0 </div>
<div class="O1">  </div>
<div class="O1"><strong>注意： hive 中最高精度的数据类型是 double, 只精确到小数点后 16 位，在做除法运算的时候要 特别注意</strong>
</div>
<div class="O1">hive&gt;select ceil(28.0/6.999999999999999999999) from dual limit 1;   
</div>
<div class="O1">结果为4 </div>
<div class="O1">hive&gt;select ceil(28.0/6.99999999999999) from dual limit 1;          
</div>
<div class="O1">结果为5 </div>
<div class="O1">  </div>
<div class="O">
<div>
<div class="O">• <strong>取余操作 : % </strong></div>
<div class="O1">语法: A % B </div>
<div class="O1">操作类型：所有数值类型 </div>
<div class="O1">说明：返回A除以B的余数。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 41 % 5 from dual; </div>
<div class="O1">1 </div>
<div class="O1">hive&gt; select 8.4 % 4 from dual; </div>
<div class="O1">0.40000000000000036 </div>
<div class="O1"><strong>注意：精度在 hive 中是个很大的问题，类似这样的操作最好通过 round 指定精度</strong> </div>
<div class="O1">hive&gt; select round(8.4 % 4 , 2) from dual; </div>
<div class="O1">0.4 </div>
<div class="O">  </div>
</div>
<div>
<div class="O">• <strong>位与操作 : &amp; </strong></div>
<div class="O1">语法: A &amp; B </div>
<div class="O1">操作类型：所有数值类型 </div>
<div class="O1">说明：返回A和B按位进行与操作的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 4 &amp; 8 from dual; </div>
<div class="O1">0 </div>
<div class="O1">hive&gt; select 6 &amp; 4 from dual; </div>
<div class="O1">4 </div>
<div class="O">
<div class="O">• <strong>位或操作 : | </strong></div>
<div class="O1">语法: A | B </div>
<div class="O1">操作类型：所有数值类型 </div>
<div class="O1">说明：返回A和B按位进行或操作的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 4 | 8 from dual; </div>
<div class="O1">12 </div>
<div class="O1">hive&gt; select 6 | 8 from dual; </div>
<div class="O1">14 </div>
<div class="O">
<div>
<div class="O">• <strong>位异或操作 : ^ </strong></div>
<div class="O1">语法: A ^ B </div>
<div class="O1">操作类型：所有数值类型 </div>
<div class="O1">说明：返回A和B按位进行异或操作的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 4 ^ 8 from dual; </div>
<div class="O1">12 </div>
<div class="O1">hive&gt; select 6 ^ 4 from dual; </div>
<div class="O1">2 </div>
</div>
<div class="O">
<div class="O">• <strong>位取反操作 : ~ </strong></div>
<div class="O1">语法: ~A </div>
<div class="O1">操作类型：所有数值类型 </div>
<div class="O1">说明：返回A按位取反操作的结果。结果的数值类型等于A的类型。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select ~6 from dual; </div>
<div class="O1">-7 </div>
<div class="O1">hive&gt; select ~4 from dual; </div>
<div class="O1">-5 </div>
<div class="O1">
<div class="O"><span>Hive逻辑运算</span> </div>
</div>
<div class="O1">
<div class="O">
<div>•逻辑与操作: AND </div>
<div>•逻辑或操作: OR </div>
<div>•逻辑非操作: NOT </div>
<div>  </div>
<div>
<div class="O">• <strong>逻辑与操作 : AND </strong></div>
<div class="O1">语法: A AND B </div>
<div class="O1">操作类型：boolean </div>
<div class="O1">说明：如果A和B均为TRUE，则为TRUE；否则为FALSE。如果A为NULL或B为NULL，则为NULL </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 from dual where 1=1 and 2=2; </div>
<div class="O1">1 </div>
<div class="O">
<div class="O">• <strong>逻辑或操作 : OR </strong></div>
<div class="O1">语法: A OR B </div>
<div class="O1">操作类型：boolean </div>
<div class="O1">说明：如果A为TRUE，或者B为TRUE，或者A和B均为TRUE，则为TRUE；否则为FALSE </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 from dual where 1=2 or 2=2; </div>
<div class="O1">1 </div>
<div class="O">
<div class="O">• <strong>逻辑非操作 : NOT </strong></div>
<div class="O1">语法: NOT A </div>
<div class="O1">操作类型：boolean </div>
<div class="O1">说明：如果A为FALSE，或者A为NULL，则为TRUE；否则为FALSE </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 from dual where not 1=2; </div>
<div class="O">
<div class="O">• <strong>逻辑非操作 : NOT </strong></div>
<div class="O1">语法: NOT A </div>
<div class="O1">操作类型：boolean </div>
<div class="O1">说明：如果A为FALSE，或者A为NULL，则为TRUE；否则为FALSE </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select 1 from dual where  not 1=2 ; </div>
<div class="O">
<div class="O">
<div>  </div>
<div><span style="font-size:16px;">第三部分：数值运算</span> </div>
<div>
<div class="O">
<div>•取整函数: round </div>
<div>•指定精度取整函数: round </div>
<div>•向下取整函数: floor </div>
<div>•向上取整函数: ceil </div>
<div>•向上取整函数: ceiling </div>
<div>•取随机数函数: rand </div>
<div>•自然指数函数: exp </div>
<div>•以10为底对数函数: log10 </div>
<div>•以2为底对数函数: log2 </div>
<div>• 对数函数: log </div>
<div>•幂运算函数: pow </div>
<div>•幂运算函数: power </div>
<div>
<div class="O">
<div>•开平方函数: sqrt </div>
<div>•二进制函数: bin </div>
<div>•十六进制函数: hex </div>
<div>•反转十六进制函数: unhex </div>
<div>•进制转换函数: conv </div>
<div>•绝对值函数: abs </div>
<div>•正取余函数: pmod </div>
<div>•正弦函数: sin </div>
<div>•反正弦函数: asin </div>
<div>•余弦函数: cos </div>
<div>•反余弦函数: acos </div>
<div>•positive函数: positive </div>
<div>•negative函数: negative </div>
<div>
<div class="O">• <strong>取整函数 : round </strong></div>
<div class="O1">语法: round(double a) </div>
<div class="O1">返回值: BIGINT </div>
<div class="O1">说明: 返回double类型的整数值部分 （遵循四舍五入） </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select round(3.1415926) from dual; </div>
<div class="O1">3 </div>
<div class="O1">hive&gt; select round(3.5) from dual; </div>
<div class="O1">4 </div>
<div class="O1">hive&gt; create table dual as select round(9542.158) from dual; </div>
<div class="O1">hive&gt; describe dual; </div>
<div class="O1">_c0     bigint </div>
<div class="O1">  </div>
<div class="O1">
<div class="O">• <strong>指定精度取整函数 : round </strong></div>
<div class="O1">语法: round(double a, int d) </div>
<div class="O1">返回值: DOUBLE </div>
<div class="O1">说明: 返回指定精度d的double类型 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select round(3.1415926,4) from dual; </div>
<div class="O1">3.1416 </div>
<div class="O1">  </div>
<div class="O">
<div class="O">• <strong>向下取整函数 : floor </strong></div>
<div class="O1">语法: floor(double a) </div>
<div class="O1">返回值: BIGINT </div>
<div class="O1">说明: 返回等于或者小于该double变量的最大的整数 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select floor(3.1415926) from dual; </div>
<div class="O1">3 </div>
<div class="O1">hive&gt; select floor(25) from dual; </div>
<div class="O1">25 </div>
<div class="O">  </div>
<div class="O1">
<div class="O">• <strong>向上取整函数 : ceil </strong></div>
<div class="O1">语法: ceil(double a) </div>
<div class="O1">返回值: BIGINT </div>
<div class="O1">说明: 返回等于或者大于该double变量的最小的整数 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select ceil(3.1415926) from dual; </div>
<div class="O1">4 </div>
<div class="O1">hive&gt; select ceil(46) from dual; </div>
<div class="O1">46 </div>
</div>
<div class="O">
<div class="O">• <strong>向上取整函数 : ceiling </strong></div>
<div class="O1">语法: ceiling(double a) </div>
<div class="O1">返回值: BIGINT </div>
<div class="O1">说明: 与ceil功能相同 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select ceiling(3.1415926) from dual; </div>
<div class="O1">4 </div>
<div class="O1">hive&gt; select ceiling(46) from dual; </div>
<div class="O1">46 </div>
<div class="O">  </div>
<div class="O1">
<div class="O">• <strong>取随机数函数 : rand </strong></div>
<div class="O1">语法: rand(),rand(int seed) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 返回一个0到1范围内的随机数。如果指定种子seed，则会等到一个稳定的随机数序列 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select rand() from dual; </div>
<div class="O1">0.5577432776034763 </div>
<div class="O1">  </div>
<div class="O">
<div class="O">• <strong>自然指数函数 : exp </strong></div>
<div class="O1">语法: exp(double a) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 返回自然对数e的a次方 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select exp(2) from dual; </div>
<div class="O1">7.38905609893065 </div>
<div class="O1">自然对数函数: ln </div>
<div class="O1">语法: ln(double a) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 返回a的自然对数 </div>
<div class="O">
<div class="O">• <strong>以 10 为底对数函数 : log10 </strong></div>
<div class="O1">语法: log10(double a) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 返回以10为底的a的对数 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select log10(100) from dual; </div>
<div class="O1">2.0 </div>
<div class="O">
<div class="O">• <strong>以 2 为底对数函数 : log2 </strong></div>
<div class="O1">语法: log2(double a) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 返回以2为底的a的对数 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select log2(8) from dual; </div>
<div class="O1">3.0 </div>
<div class="O">
<div class="O">• <strong>对数函数 : log </strong></div>
<div class="O1">语法: log(double base, double a) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 返回以base为底的a的对数 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select log(4,256) from dual; </div>
<div class="O1">4.0 </div>
<div class="O1">
<div class="O">• <strong>幂运算函数 : pow </strong></div>
<div class="O1">语法: pow(double a, double p) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 返回a的p次幂 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select pow(2,4) from dual; </div>
<div class="O1">16.0 </div>
<div class="O1">
<div class="O">• <strong>幂运算函数 : power </strong></div>
<div class="O1">语法: power(double a, double p) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 返回a的p次幂,与pow功能相同 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select power(2,4) from dual; </div>
<div class="O1">16.0 </div>
<div class="O1">
<div class="O">• <strong>开平方函数 : sqrt </strong></div>
<div class="O1">语法: sqrt(double a) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 返回a的平方根 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select sqrt(16) from dual; </div>
<div class="O1">4.0 </div>
<div class="O1">
<div class="O">• <strong>二进制函数 : bin </strong></div>
<div class="O1">语法: bin(BIGINT a) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明: 返回a的二进制代码表示 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select bin(7) from dual; </div>
<div class="O1">111 </div>
<div class="O1">
<div class="O">• <strong>十六进制函数 : hex </strong></div>
<div class="O1">语法: hex(BIGINT a) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明: 如果变量是int类型，那么返回a的十六进制表示；如果变量是string类型，则返回该字符串的十六进制表示 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select hex(17) from dual; </div>
<div class="O1">11 </div>
<div class="O1">hive&gt; select hex(‘abc’) from dual; </div>
<div class="O1">616263 </div>
<div class="O1">
<div class="O">• <strong>反转十六进制函数 : unhex </strong></div>
<div class="O1">语法: unhex(string a) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明: 返回该十六进制字符串所代码的字符串 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select unhex(‘616263’) from dual; </div>
<div class="O1">abc </div>
<div class="O1">hive&gt; select unhex(‘11’) from dual; </div>
<div class="O1">- </div>
<div class="O1">hive&gt; select unhex(616263) from dual; </div>
<div class="O1">abc </div>
<div class="O1">
<div class="O">• <strong>进制转换函数 : conv </strong></div>
<div class="O1">语法: conv(BIGINT num, int from_base, int to_base) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明: 将数值num从from_base进制转化到to_base进制 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select conv(17,10,16) from dual; </div>
<div class="O1">11 </div>
<div class="O1">hive&gt; select conv(17,10,2) from dual; </div>
<div class="O1">10001 </div>
<div class="O1">
<div class="O">• <strong>绝对值函数 : abs </strong></div>
<div class="O1">语法: abs(double a)   abs(int a) </div>
<div class="O1">返回值: double        int </div>
<div class="O1">说明: 返回数值a的绝对值 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select abs(-3.9) from dual; </div>
<div class="O1">3.9 </div>
<div class="O1">hive&gt; select abs(10.9) from dual; </div>
<div class="O1">10.9 </div>
<div class="O1">
<div class="O">• <strong>正取余函数 : pmod </strong></div>
<div class="O1">语法: pmod(int a, int b),pmod(double a, double b) </div>
<div class="O1">返回值: int double </div>
<div class="O1">说明: 返回正的a除以b的余数 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select pmod(9,4) from dual; </div>
<div class="O1">1 </div>
<div class="O1">hive&gt; select pmod(-9,4) from dual; </div>
<div class="O1">3 </div>
<div class="O1">
<div class="O">• <strong>正弦函数 : sin </strong></div>
<div class="O1">语法: sin(double a) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 返回a的正弦值 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select sin(0.8) from dual; </div>
<div class="O1">0.7173560908995228 </div>
<div class="O1">
<div class="O">• <strong>反正弦函数 : asin </strong></div>
<div class="O1">语法: asin(double a) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 返回a的反正弦值 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select asin(0.7173560908995228) from dual; </div>
<div class="O1">0.8 </div>
<div class="O1">
<div class="O">• <strong>余弦函数 : cos </strong></div>
<div class="O1">语法: cos(double a) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 返回a的余弦值 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select cos(0.9) from dual; </div>
<div class="O1">0.6216099682706644 </div>
<div class="O1">
<div class="O">• <strong>反余弦函数 : acos </strong></div>
<div class="O1">语法: acos(double a) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 返回a的反余弦值 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select acos(0.6216099682706644) from dual; </div>
<div class="O1">0.9 </div>
<div class="O1">
<div class="O">• <strong>positive 函数 : positive </strong></div>
<div class="O1">语法: positive(int a), positive(double a) </div>
<div class="O1">返回值: int double </div>
<div class="O1">说明: 返回a </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select positive(-10) from dual; </div>
<div class="O1">-10 </div>
<div class="O1">hive&gt; select positive(12) from dual; </div>
<div class="O1">12 </div>
<div class="O1">
<div class="O">• <strong>negative 函数 : negative </strong></div>
<div class="O1">语法: negative(int a), negative(double a) </div>
<div class="O1">返回值: int double </div>
<div class="O1">说明: 返回-a </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select negative(-5) from dual; </div>
<div class="O1">5 </div>
<div class="O1">hive&gt; select negative(8) from dual; </div>
<div class="O1">-8 </div>
<div class="O1">
<div class="O">
<div>  </div>
<div><span style="font-size:16px;">第四部分：日期函数</span> </div>
</div>
</div>
<div class="O">
<div class="O">
<div>•UNIX时间戳转日期函数: from_unixtime </div>
<div>• 获取当前UNIX时间戳函数: unix_timestamp </div>
<div>•日期转UNIX时间戳函数: unix_timestamp </div>
<div>• 指定格式日期转UNIX时间戳函数: unix_timestamp </div>
<div>•日期时间转日期函数: to_date </div>
<div>•日期转年函数: year </div>
<div>• 日期转月函数: month </div>
<div>• 日期转天函数: day </div>
<div>• 日期转小时函数: hour </div>
<div>• 日期转分钟函数: minute </div>
<div>• 日期转秒函数: second </div>
<div>• 日期转周函数: weekofyear </div>
<div>• 日期比较函数: datediff </div>
<div>• 日期增加函数: date_add </div>
<div>• 日期减少函数: date_sub </div>
<div>
<div class="O">• <strong>UNIX 时间戳转日期函数 : from_unixtime </strong></div>
<div class="O1">语法: from_unixtime(bigint unixtime[, string format]) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明: 转化UNIX时间戳（从1970-01-01 00:00:00 UTC到指定时间的秒数）到当前时区的时间格式 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select from_unixtime(1323308943,'yyyyMMdd') from dual; </div>
<div class="O1">20111208 </div>
<div class="O1">
<div class="O">• <strong>获取当前 UNIX 时间戳函数 : unix_timestamp </strong></div>
<div class="O1">语法: unix_timestamp() </div>
<div class="O1">返回值: bigint </div>
<div class="O1">说明: 获得当前时区的UNIX时间戳 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select unix_timestamp() from dual; </div>
<div class="O1">1323309615 </div>
<div class="O1">
<div class="O">• <strong>日期转 UNIX 时间戳函数 : unix_timestamp </strong></div>
<div class="O1">语法: unix_timestamp(string date) </div>
<div class="O1">返回值: bigint </div>
<div class="O1">说明: 转换格式为"yyyy-MM-dd HH:mm:ss"的日期到UNIX时间戳。如果转化失败，则返回0。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select unix_timestamp('2011-12-07 13:01:03') from dual; </div>
<div class="O1">1323234063 </div>
<div class="O1">
<div class="O">• <strong>指定格式日期转 UNIX 时间戳函数 : unix_timestamp </strong></div>
<div class="O1">语法: unix_timestamp(string date, string pattern) </div>
<div class="O1">返回值: bigint </div>
<div class="O1">说明: 转换pattern格式的日期到UNIX时间戳。如果转化失败，则返回0。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select unix_timestamp('20111207 13:01:03','yyyyMMdd HH:mm:ss') from dual;
</div>
<div class="O1">1323234063 </div>
<div class="O1">
<div class="O">• <strong>日期时间转日期函数 : to_date </strong></div>
<div class="O1">语法: to_date(string timestamp) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明: 返回日期时间字段中的日期部分。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select to_date('2011-12-08 10:03:01') from dual; </div>
<div class="O1">2011-12-08 </div>
<div class="O1">
<div class="O">• <strong>日期转年函数 : year </strong></div>
<div class="O1">语法: year(string date) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明: 返回日期中的年。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select year('2011-12-08 10:03:01') from dual; </div>
<div class="O1">2011 </div>
<div class="O1">hive&gt; select year('2012-12-08') from dual; </div>
<div class="O1">2012 </div>
<div class="O1">
<div class="O">• <strong>日期转月函数 : month </strong></div>
<div class="O1">语法: month (string date) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明: 返回日期中的月份。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select month('2011-12-08 10:03:01') from dual; </div>
<div class="O1">12 </div>
<div class="O1">hive&gt; select month('2011-08-08') from dual; </div>
<div class="O1">8 </div>
<div class="O1">
<div class="O">• <strong>日期转天函数 : day </strong></div>
<div class="O1">语法: day (string date) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明: 返回日期中的天。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select day('2011-12-08 10:03:01') from dual; </div>
<div class="O1">8 </div>
<div class="O1">hive&gt; select day('2011-12-24') from dual; </div>
<div class="O1">24 </div>
<div class="O1">
<div class="O">• <strong>日期转小时函数 : hour </strong></div>
<div class="O1">语法: hour (string date) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明: 返回日期中的小时。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select hour('2011-12-08 10:03:01') from dual; </div>
<div class="O1">10 </div>
<div class="O1">
<div class="O">• <strong>日期转分钟函数 : minute </strong></div>
<div class="O1">语法: minute (string date) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明: 返回日期中的分钟。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select minute('2011-12-08 10:03:01') from dual; </div>
<div class="O1">3 </div>
</div>
<div class="O">
<div class="O">• <strong>日期转秒函数 : second </strong></div>
<div class="O1">语法: second (string date) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明: 返回日期中的秒。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select second('2011-12-08 10:03:01') from dual; </div>
<div class="O1">1 </div>
<div class="O">  </div>
<div class="O">
<div class="O">• <strong>日期转周函数 : weekofyear </strong></div>
<div class="O1">语法: weekofyear (string date) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明: 返回日期在当前的周数。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select weekofyear('2011-12-08 10:03:01') from dual; </div>
<div class="O1">49 </div>
<div class="O">  </div>
<div class="O">
<div class="O">• <strong>日期比较函数 : datediff </strong></div>
<div class="O1">语法: datediff(string enddate, string startdate) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明: 返回结束日期减去开始日期的天数。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select datediff('2012-12-08','2012-05-09') from dual; </div>
<div class="O1">213 </div>
<div class="O1">
<div class="O">• <strong>日期增加函数 : date_add </strong></div>
<div class="O1">语法: date_add(string startdate, int days) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明: 返回开始日期startdate增加days天后的日期。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select date_add('2012-12-08',10) from dual; </div>
<div class="O1">2012-12-18 </div>
<div class="O">  </div>
<div class="O">
<div class="O">• <strong>日期减少函数 : date_sub </strong></div>
<div class="O1">语法: date_sub (string startdate, int days) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明: 返回开始日期startdate减少days天后的日期。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select date_sub('2012-12-08',10) from dual; </div>
<div class="O1">2012-11-28 </div>
<div class="O1">
<div class="O">
<div>  </div>
<div><span style="font-size:16px;">第五部分：条件函数</span> </div>
</div>
</div>
<div class="O">
<div class="O">
<div>•If函数: if </div>
<div>•非空查找函数: COALESCE </div>
<div>•条件判断函数：CASE </div>
<div>
<div class="O">• <strong>If 函数 : if </strong></div>
<div class="O1">语法: if(boolean testCondition, T valueTrue, T valueFalseOrNull) </div>
<div class="O1">返回值: T </div>
<div class="O1">说明:  当条件testCondition为TRUE时，返回valueTrue；否则返回valueFalseOrNull </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select if(1=2,100,200) from dual; </div>
<div class="O1">200 </div>
<div class="O1">hive&gt; select if(1=1,100,200) from dual; </div>
<div class="O1">100 </div>
<div class="O1">
<div class="O">• <strong>非空查找函数 : COALESCE </strong></div>
<div class="O1">语法: COALESCE(T v1, T v2, …) </div>
<div class="O1">返回值: T </div>
<div class="O1">说明:  返回参数中的第一个非空值；如果所有值都为NULL，那么返回NULL </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select COALESCE(null,'100','50′) from dual; </div>
<div class="O1">100 </div>
<div class="O1">
<div class="O"><span><strong>条件判断函数：</strong></span> <span><strong>CASE </strong>
</span></div>
<div class="O1"><span>语法</span> <span>: CASE a WHEN b THEN c [WHEN d THEN e]* [ELSE f] END
</span></div>
<div class="O1"><span>返回值</span> <span>: T </span></div>
<div class="O1"><span>说明：如果</span> <span>a</span> <span>等于</span> <span>b</span> <span>
，那么返回</span> <span>c</span> <span>；如果</span> <span>a</span> <span>等于</span> <span>
d</span> <span>，那么返回</span> <span>e</span> <span>；否则返回</span> <span>f </span></div>
<div class="O1"><span>举例：</span> </div>
<div class="O1"><span>hive&gt; Select case 100 when 50 then 'tom' when 100 then 'mary' else 'tim'
</span><span>end from dual; </span></div>
<div class="O1"><span>mary </span></div>
<div class="O"><span> </span> </div>
<div class="O">
<div class="O">
<div>  </div>
<div><span style="font-size:16px;">第六部分：字符串函数</span> </div>
</div>
</div>
</div>
<div class="O">
<div class="O">
<div>•字符串长度函数：length </div>
<div>•字符串反转函数：reverse </div>
<div>•字符串连接函数：concat </div>
<div>• 带分隔符字符串连接函数：concat_ws </div>
<div>• 字符串截取函数：substr,substring </div>
<div>• 字符串截取函数：substr,substring </div>
<div>• 字符串转大写函数：upper,ucase </div>
<div>• 字符串转小写函数：lower,lcase </div>
<div>• 去空格函数：trim </div>
<div>• 左边去空格函数：ltrim </div>
<div>• 右边去空格函数：rtrim </div>
<div>
<div class="O">
<div>•正则表达式替换函数：regexp_replace </div>
<div>•正则表达式解析函数：regexp_extract </div>
<div>•URL解析函数：parse_url </div>
<div>•json解析函数：get_json_object </div>
<div>•空格字符串函数：space </div>
<div>•重复字符串函数：repeat </div>
<div>•首字符ascii函数：ascii </div>
<div>•左补足函数：lpad </div>
<div>•右补足函数：rpad </div>
<div>•分割字符串函数: split </div>
<div>•集合查找函数: find_in_set </div>
<div>
<div class="O">• <strong>字符串长度函数： length </strong></div>
<div class="O1">语法: length(string A) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明：返回字符串A的长度 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select length('abcedfg') from dual; </div>
<div class="O1">7 </div>
<div class="O1">
<div>
<div class="O">• <strong>字符串反转函数： reverse </strong></div>
<div class="O1">语法: reverse(string A) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：返回字符串A的反转结果 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select reverse(abcedfg’) from dual; </div>
<div class="O1">gfdecba </div>
<div class="O1">
<div>
<div class="O">• <strong>字符串连接函数： concat </strong></div>
<div class="O1">语法: concat(string A, string B…) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：返回输入字符串连接后的结果，支持任意个输入字符串 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select concat(‘abc’,'def’,'gh’) from dual; </div>
<div class="O1">abcdefgh </div>
<div class="O1">
<div>
<div class="O">• <strong>带分隔符字符串连接函数： concat_ws </strong></div>
<div class="O1">语法: concat_ws(string SEP, string A, string B…) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：返回输入字符串连接后的结果，SEP表示各个字符串间的分隔符 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select concat_ws(',','abc','def','gh') from dual; </div>
<div class="O1">abc,def,gh </div>
<div class="O1">
<div>
<div class="O">• <strong>字符串截取函数： substr,substring </strong></div>
<div class="O1">语法: substr(string A, int start),substring(string A, int start) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：返回字符串A从start位置到结尾的字符串 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select substr('abcde',3) from dual; </div>
<div class="O1">cde </div>
<div class="O1">hive&gt; select substring('abcde',3) from dual; </div>
<div class="O1">cde </div>
<div class="O1">hive&gt;  select substr('abcde',-1) from dual;  （和ORACLE相同） </div>
<div class="O1">e </div>
<div class="O1">
<div>
<div class="O">• <strong>字符串截取函数： substr,substring </strong></div>
<div class="O1">语法: substr(string A, int start, int len),substring(string A, int start, int len)
</div>
<div class="O1">返回值: string </div>
<div class="O1">说明：返回字符串A从start位置开始，长度为len的字符串 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select substr('abcde',3,2) from dual; </div>
<div class="O1">cd </div>
<div class="O1">hive&gt; select substring('abcde',3,2) from dual; </div>
<div class="O1">cd </div>
<div class="O1">hive&gt;select substring('abcde',-2,2) from dual; </div>
<div class="O1">de </div>
<div class="O1">
<div>
<div class="O">• <strong>字符串转大写函数： upper,ucase </strong></div>
<div class="O1">语法: upper(string A) ucase(string A) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：返回字符串A的大写格式 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select upper('abSEd') from dual; </div>
<div class="O1">ABSED </div>
<div class="O1">hive&gt; select ucase('abSEd') from dual; </div>
<div class="O1">ABSED </div>
<div class="O1">
<div>
<div class="O">• <strong>字符串转小写函数： lower,lcase </strong></div>
<div class="O1">语法: lower(string A) lcase(string A) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：返回字符串A的小写格式 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select lower('abSEd') from dual; </div>
<div class="O1">absed </div>
<div class="O1">hive&gt; select lcase('abSEd') from dual; </div>
<div class="O1">absed </div>
<div class="O1">
<div>
<div class="O">• <strong>去空格函数： trim </strong></div>
<div class="O1">语法: trim(string A) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：去除字符串两边的空格 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select trim(' abc ') from dual; </div>
<div class="O1">abc </div>
<div class="O1">
<div>
<div class="O">• <strong>左边去空格函数： ltrim </strong></div>
<div class="O1">语法: ltrim(string A) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：去除字符串左边的空格 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select ltrim(' abc ') from dual; </div>
<div class="O1">abc </div>
<div class="O1">
<div>
<div class="O">• <strong>右边去空格函数： rtrim </strong></div>
<div class="O1">语法: rtrim(string A) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：去除字符串右边的空格 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select rtrim(' abc ') from dual; </div>
<div class="O1">abc </div>
<div class="O1">
<div class="O">• <strong>正则表达式替换函数： regexp_replace </strong></div>
<div class="O1">语法: regexp_replace(string A, string B, string C) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：将字符串A中的符合java正则表达式B的部分替换为C。注意，在有些情况下要使用转义字符,类似oracle中的regexp_replace函数。
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select regexp_replace('foobar', 'oo|ar', '') from dual; </div>
<div class="O1">fb </div>
<div class="O1">
<div>
<div class="O">• <strong>正则表达式解析函数： regexp_extract </strong></div>
<div class="O">语法: regexp_extract(string subject, string pattern, int index) </div>
<div class="O">返回值: string </div>
<div class="O">说明：将字符串subject按照pattern正则表达式的规则拆分，返回index指定的字符。 </div>
<div class="O">举例： </div>
<div class="O">hive&gt; select regexp_extract('foothebar', 'foo(.*?)(bar)', 1) from dual;
</div>
<div class="O">the </div>
<div class="O">hive&gt; select regexp_extract('foothebar', 'foo(.*?)(bar)', 2) from dual;
</div>
<div class="O">bar </div>
<div class="O">hive&gt; select regexp_extract('foothebar', 'foo(.*?)(bar)', 0) from dual;
</div>
<div class="O">foothebar </div>
<div class="O"><strong>注意，在有些情况下要使用转义字符，下面的等号要用双竖线转 义，这是 java 正则表达式的规则。</strong> </div>
<div class="O">select data_field, </div>
<div class="O">regexp_extract(data_field,'.*?bgStart\\=([^&amp;]+)',1) as aaa, </div>
<div class="O">regexp_extract(data_field,'.*?contentLoaded_headStart\\=([^&amp;]+)',1) as bbb,
</div>
<div class="O">regexp_extract(data_field,'.*?AppLoad2Req\\=([^&amp;]+)',1) as ccc </div>
<div class="O">from pt_nginx_loginlog_st </div>
<div class="O">where pt = '2012-03-26' limit 2; </div>
<div class="O">
<div>
<div class="O">• <strong>URL 解析函数： parse_url </strong></div>
<div class="O1">语法: parse_url(string urlString, string partToExtract [, string keyToExtract])
</div>
<div class="O1">返回值: string </div>
<div class="O1">说明：返回URL中指定的部分。partToExtract的有效值为：HOST, PATH, QUERY, REF, PROTOCOL, AUTHORITY, FILE, and USERINFO.
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select parse_url('http://facebook.com/path1/p.php?k1=v1&amp;k2=v2#Ref1', 'HOST') from dual;
</div>
<div class="O1">facebook.com </div>
<div class="O1">hive&gt; select parse_url('http://facebook.com/path1/p.php?k1=v1&amp;k2=v2#Ref1', 'QUERY', 'k1') from dual;
</div>
<div class="O1">v1 </div>
<div class="O1">
<div>
<div class="O">• <strong>json 解析函数： get_json_object </strong></div>
<div class="O1">语法: get_json_object(string json_string, string path) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：解析json的字符串json_string,返回path指定的内容。如果输入的json字符串无效，那么返回NULL。 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select  get_json_object('{"store": </div>
<div class="O1">&gt;   {"fruit":\[{"weight":8,"type":"apple"},{"weight":9,"type":"pear"}],
</div>
<div class="O1">&gt;    "bicycle":{"price":19.95,"color":"red"} </div>
<div class="O1">&gt;   }, </div>
<div class="O1">&gt;  "email":"amy@only_for_json_udf_test.net", </div>
<div class="O1">&gt;  "owner":"amy" </div>
<div class="O1">&gt; } </div>
<div class="O1">&gt; ','$.owner') from dual; </div>
<div class="O1">amy </div>
<div class="O2">
<div>
<div class="O">• <strong>空格字符串函数： space </strong></div>
<div class="O1">语法: space(int n) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：返回长度为n的字符串 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select space(10) from dual; </div>
<div class="O1">hive&gt; select length(space(10)) from dual; </div>
<div class="O1">10 </div>
<div class="O2">
<div>
<div class="O">• <strong>重复字符串函数： repeat </strong></div>
<div class="O1">语法: repeat(string str, int n) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：返回重复n次后的str字符串 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select repeat('abc',5) from dual; </div>
<div class="O1">abcabcabcabcabc </div>
<div class="O2">
<div>
<div class="O">• <strong>首字符 ascii 函数： ascii </strong></div>
<div class="O1">语法: ascii(string str) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明：返回字符串str第一个字符的ascii码 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select ascii('abcde') from dual; </div>
<div class="O1">97 </div>
<div class="O">
<div>
<div class="O">• <strong>左补足函数： lpad </strong></div>
<div class="O1">语法: lpad(string str, int len, string pad) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：将str进行用pad进行左补足到len位 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select lpad('abc',10,'td') from dual; </div>
<div class="O1">tdtdtdtabc </div>
<div class="O1"><strong>注意：与 GP ， ORACLE 不同， pad 不能默认</strong> </div>
<div class="O1">
<div class="O">• <strong>右补足函数： rpad </strong></div>
<div class="O1">语法: rpad(string str, int len, string pad) </div>
<div class="O1">返回值: string </div>
<div class="O1">说明：将str进行用pad进行右补足到len位 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select rpad('abc',10,'td') from dual; </div>
<div class="O1">abctdtdtdt </div>
<div class="O1">
<div>
<div class="O">• <strong>分割字符串函数 : split </strong></div>
<div class="O1">语法:  split(string str, string pat) </div>
<div class="O1">返回值:  array </div>
<div class="O1">说明: 按照pat字符串分割str，会返回分割后的字符串数组 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select split('abtcdtef','t') from dual; </div>
<div class="O1">["ab","cd","ef"] </div>
<div class="O1">
<div>
<div class="O">• <strong>集合查找函数 : find_in_set </strong></div>
<div class="O1">语法: find_in_set(string str, string strList) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明: 返回str在strlist第一次出现的位置，strlist是用逗号分割的字符串。如果没有找该str字符，则返回0 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select find_in_set('ab','ef,ab,de') from dual; </div>
<div class="O1">2 </div>
<div class="O1">hive&gt; select find_in_set('at','ef,ab,de') from dual; </div>
<div class="O1">0 </div>
<div class="O1">
<div class="O">
<div>  </div>
<div><span style="font-size:16px;">第七部分：集合统计函数</span> </div>
<div>
<div class="O">
<div>•个数统计函数: count </div>
<div>•总和统计函数: sum </div>
<div>•平均值统计函数: avg </div>
<div>• 最小值统计函数: min </div>
<div>•最大值统计函数: max </div>
<div>
<div>
<div class="O">• <strong>个数统计函数 : count </strong></div>
<div class="O1">语法: count(*), count(expr), count(DISTINCT expr[, expr_.]) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明: count(*)统计检索出的行的个数，包括NULL值的行；count(expr)返回指定字段的非空值的个数；count(DISTINCT expr[, expr_.])返回指定字段的不同的非空值的个数
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select count(*) from dual; </div>
<div class="O1">20 </div>
<div class="O1">hive&gt; select count(distinct t) from dual; </div>
<div class="O1">10 </div>
<div class="O1">
<div>
<div class="O">• <strong>总和统计函数 : sum </strong></div>
<div class="O1">语法: sum(col), sum(DISTINCT col) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: sum(col)统计结果集中col的相加的结果；sum(DISTINCT col)统计结果中col不同值相加的结果 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select sum(t) from dual; </div>
<div class="O1">100 </div>
<div class="O1">hive&gt; select sum(distinct t) from dual; </div>
<div class="O1">70 </div>
<div class="O1">
<div>
<div class="O">• <strong>平均值统计函数 : avg </strong></div>
<div class="O1">语法: avg(col), avg(DISTINCT col) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: avg(col)统计结果集中col的平均值；avg(DISTINCT col)统计结果中col不同值相加的平均值 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select avg(t) from dual; </div>
<div class="O1">50 </div>
<div class="O1">hive&gt; select avg (distinct t) from dual; </div>
<div class="O1">30 </div>
<div class="O1">
<div>
<div class="O">• <strong>最小值统计函数 : min </strong></div>
<div class="O1">语法: min(col) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 统计结果集中col字段的最小值 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select min(t) from dual; </div>
<div class="O1">20 </div>
<div class="O1">
<div>
<div class="O">• <strong>最大值统计函数 : max </strong></div>
<div class="O1">语法: maxcol) </div>
<div class="O1">返回值: double </div>
<div class="O1">说明: 统计结果集中col字段的最大值 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select max(t) from dual; </div>
<div class="O1">120 </div>
<div class="O1">
<div class="O">
<div>  </div>
<div><span style="font-size:16px;">第八部分：符合类型构建操作</span> </div>
<div>
<div class="O">
<div>•Map类型构建: map </div>
<div>•Struct类型构建: struct </div>
<div>•array类型构建: array </div>
<div>
<div>
<div class="O">• <strong>Map 类型构建 : map </strong></div>
<div class="O1">语法: map (key1, value1, key2, value2, …) </div>
<div class="O1">说明：根据输入的key和value对构建map类型 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; Create table alex_test as select map('100','tom','200','mary') as t from dual;
</div>
<div class="O1">hive&gt; describe alex_test; </div>
<div class="O1">t       map&lt;string,string&gt; </div>
<div class="O1">hive&gt; select t from alex_test; </div>
<div class="O1">{"100":"tom","200":"mary"} </div>
<div class="O1">
<div>
<div class="O">• <strong>Struct 类型构建 : struct </strong></div>
<div class="O1">语法: struct(val1, val2, val3, …) </div>
<div class="O1">说明：根据输入的参数构建结构体struct类型 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; create table alex_test as select struct('tom','mary','tim') as t from dual;
</div>
<div class="O1">hive&gt; describe alex_test; </div>
<div class="O1">t       struct&lt;col1:string,col2:string,col3:string&gt; </div>
<div class="O1">hive&gt; select t from alex_test; </div>
<div class="O1">{"col1":"tom","col2":"mary","col3":"tim"} </div>
<div class="O1">
<div>
<div class="O">• <strong>array 类型构建 : array </strong></div>
<div class="O1">语法: array(val1, val2, …) </div>
<div class="O1">说明：根据输入的参数构建数组array类型 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; create table alex_test as select array("tom","mary","tim") as t from dual;
</div>
<div class="O1">hive&gt; describe alex_test; </div>
<div class="O1">t       array&lt;string&gt; </div>
<div class="O1">hive&gt; select t from alex_test; </div>
<div class="O1">["tom","mary","tim"] </div>
<div class="O1">
<div class="O">
<div>  </div>
<div>  </div>
<div><span style="font-size:16px;">第九部分：复杂类型访问操作</span> </div>
<div>
<div class="O">
<div>•array类型访问: A[n] </div>
<div>•map类型访问: M[key] </div>
<div>•struct类型访问: S.x </div>
<div>
<div>
<div class="O">• <strong>array 类型访问 : A[n] </strong></div>
<div class="O1">语法: A[n] </div>
<div class="O1">操作类型: A为array类型，n为int类型 </div>
<div class="O1">说明：返回数组A中的第n个变量值。数组的起始下标为0。比如，A是个值为['foo', 'bar']的数组类型，那么A[0]将返回'foo',而A[1]将返回'bar'
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; create table alex_test as select array("tom","mary","tim") as t from dual;
</div>
<div class="O1">hive&gt; select t[0],t[1],t[2] from alex_test; </div>
<div class="O1">tom     mary    tim </div>
<div class="O1">
<div>
<div class="O">• <strong>map 类型访问 : M[key] </strong></div>
<div class="O1">语法: M[key] </div>
<div class="O1">操作类型: M为map类型，key为map中的key值 </div>
<div class="O1">说明：返回map类型M中，key值为指定值的value值。比如，M是值为{'f' -&gt; 'foo', 'b' -&gt; 'bar', 'all' -&gt; 'foobar'}的map类型，那么M['all']将会返回'foobar'
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; Create table alex_test as select map('100','tom','200','mary') as t from dual;
</div>
<div class="O1">hive&gt; select t['200'],t['100'] from alex_test; </div>
<div class="O1">mary    tom </div>
<div class="O1">
<div>
<div class="O">• <strong>struct 类型访问 : S.x </strong></div>
<div class="O1">语法: S.x </div>
<div class="O1">操作类型: S为struct类型 </div>
<div class="O1">说明：返回结构体S中的x字段。比如，对于结构体struct foobar {int foo, int bar}，foobar.foo返回结构体中的foo字段
</div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; create table alex_test as select struct('tom','mary','tim') as t from dual;
</div>
<div class="O1">hive&gt; describe alex_test; </div>
<div class="O1">t       struct&lt;col1:string,col2:string,col3:string&gt; </div>
<div class="O1">hive&gt; select t.col1,t.col3 from alex_test; </div>
<div class="O1">tom     tim </div>
<div class="O1">
<div class="O">
<div><span style="font-size:16px;">第十部分：复杂类型长度统计函数</span> </div>
<div>
<div class="O">
<div>•Map类型长度函数: size(Map&lt;K.V&gt;) </div>
<div>•array类型长度函数: size(Array&lt;T&gt;) </div>
<div>•类型转换函数 </div>
<div>   </div>
</div>
</div>
<div> 
<div>
<div class="O">• <strong>Map 类型长度函数 : size(Map&lt;K.V&gt;) </strong></div>
<div class="O1">语法: size(Map&lt;K.V&gt;) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明: 返回map类型的长度 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select size(map('100','tom','101','mary')) from dual; </div>
<div class="O1">2 </div>
<div class="O">  </div>
<div class="O">
<div>
<div class="O">• <strong>array 类型长度函数 : size(Array&lt;T&gt;) </strong></div>
<div class="O1">语法: size(Array&lt;T&gt;) </div>
<div class="O1">返回值: int </div>
<div class="O1">说明: 返回array类型的长度 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select size(array('100','101','102','103')) from dual; </div>
<div class="O1">4 </div>
<div class="O">  </div>
<div class="O">
<div>
<div class="O">• <strong>类型转换函数 </strong></div>
<div class="O1">类型转换函数: cast </div>
<div class="O1">语法: cast(expr as &lt;type&gt;) </div>
<div class="O1">返回值: Expected "=" to follow "type" </div>
<div class="O1">说明: 返回array类型的长度 </div>
<div class="O1">举例： </div>
<div class="O1">hive&gt; select cast(1 as bigint) from dual; </div>
<div class="O1">1 </div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="O">  </div>
<div class="O">转载请注明【 <a href="http://sishuok.com/forum/blogPost/list/6222.html" rel="nofollow">
http://sishuok.com/forum/blogPost/list/6222.html</a>】 </div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p></p>
            </div>
                </div>