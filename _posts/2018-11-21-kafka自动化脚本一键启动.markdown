---
layout:     post
title:      kafka自动化脚本一键启动
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p>kafka 版本 kafka_2.11-0.10.2.1</p><p> </p><p>因为kafka没有批量启动脚本，每次都需要在各个broker节点上启动kafka服务。比较麻烦。</p><p> </p><p>这里自定义一个kafka启动的脚本：</p><pre><code class="language-java">#!/bin/bash

BROKERS="hdp-01 hdp-02 hdp-03"

KAFKA_HOME="/root/apps/kafka_2.11-0.10.2.1"

for broker in $BROKERS

do

        echo "INFO:starting kafka server on ${broker}"

        ssh $broker  "source /etc/profile;${KAFKA_HOME}/bin/kafka-server-start.sh -daemon ${KAF

KA_HOME}/config/server.properties &amp; "

        if [ $? != 0 ];

        then

                echo "Can not starting kafka server on host ${broker}";

                exit 1;

        fi

done</code></pre><br><p>思路： </p><p>设置brokers和 kafka的安装目录，备用。</p><p>循环执行启动kafka的进程。 使用—daemon指定后台启动。</p><p>并添加一些输出日志。</p><p>自定义kafka一键停止脚本：</p><pre><code class="language-java">#!/bin/bash

BROKERS="hdp-01 hdp-02 hdp-03"

KAFKA_HOME="/root/apps/kafka_2.11-0.10.2.1"

for broker in $BROKERS

do

        echo "INFO:stopping kafka server on ${broker}"

        ssh $broker "source /etc/profile;${KAFKA_HOME}/bin/kafka-server-stop.sh"

        if [ $? != 0 ];

        then

                echo "Can not stopping kafka server on host ${broker}"

                exit 1

        fi

done </code></pre><p>当前版本下，如果想使用kafka的停止命令，需要修改停止脚本文件：</p><p>修改kafka-server-stop.sh文件，去除一部分的过滤条件。之后停止脚本及一键停止的脚本才能正常执行。</p><p><img src="https://img-blog.csdn.net/20180701004213133?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIxNDM5Mzk1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""><br></p><p style="background:#FFFFFF;">注意事项：</p><p style="background:#FFFFFF;">1，本次测试的3台机器主机名分别是hdp-01,hdp-02和 hdp-03。 然后hdp-01到hdp-02和hdp-01到hdp-03的单向免密登录是通的。否则就需要先进行免密登录配置。（因为没有全部配通免密登录，所有启动命令只能在hdp-01上执行即可，如果想在任意一台机器上都能执行，那么就需要配置所有的免密登录）</p><p style="background:#FFFFFF;">2，在ssh 远程启动脚本中，先执行了 source /etc/profile，重新加载了系统环境变量。目的是为了把jdk的命令加载到当前系统环境中，否则报错。</p><p style="background:#FFFFFF;">报错如下：</p><p align="left" style="background:#FFFFFF;"><span style="color:#000000;">nohup: failed to run command `java': No such file or directory</span></p>            </div>
                </div>