---
layout:     post
title:      Kafka快速上手教程  3
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h1 id="flume-kafka-" style="font-size:2.25em;margin-left:0px;line-height:1.2;color:rgb(51,51,51);border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);">
Flume 与 Kafka 集成</h1>
<h2 id="-" style="line-height:1.225;color:rgb(51,51,51);font-size:1.75em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);">
一、实验介绍</h2>
<h3 id="1-1-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
1.1 实验内容</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
分别使用 Kafka 作为数据源，通道，沉漕与 Flume 集成 ，最后简要分析 Kafka， Flume 二者的区别联系。</p>
<h3 id="1-2-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
1.2 先学课程</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
Flume 介绍与安装:<a href="https://www.shiyanlou.com/courses/237" rel="nofollow" style="color:rgb(64,120,192);text-decoration:none;background-color:transparent;">https://www.shiyanlou.com/courses/237</a></p>
<h3 id="1-3-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
1.3 实验知识点</h3>
<ul style="color:rgb(51,51,51);font-size:16px;line-height:25.6px;"><li style="font-size:15px;">flume 原理</li><li style="font-size:15px;">kafka 消息队列</li><li style="font-size:15px;">hdfs 文件系统</li><li style="font-size:15px;">Zookeeper 单机安装</li></ul><h3 id="1-4-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
1.4 实验环境</h3>
<ul style="color:rgb(51,51,51);font-size:16px;line-height:25.6px;"><li style="font-size:15px;">Hadoop 2.6.1</li><li style="font-size:15px;">Kafka_2.10-0.10.0.0</li><li style="font-size:15px;">Flume-1.6.0</li><li style="font-size:15px;">Zookeeper-3.4.6</li><li style="font-size:15px;">Xfce 终端</li></ul><h3 id="1-5-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
1.5 适合人群</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
本课程属于中等难度级别，适合具有大数据 hadoop 基础的用户，如果对数据采集 了解能够更好的上手本课程。</p>
<h2 style="line-height:1.225;color:rgb(51,51,51);font-size:1.75em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);">
二、实验步骤</h2>
<p style="font-size:15px;color:rgb(51,51,51);">
我们已经在实验楼环境里下载并配置启动 hadoop-2.6.1 所需的文件，免除您配置文件的麻烦，您可以在 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">/opt</code> 找到，只需格式化并启动
 hadoop 进程即可。</p>
<h3 id="2-1-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
2.1　准备工作</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
双击打开桌面上的 Xfce 终端，用 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">sudo</code> 命令切换到 hadoop 用户，hadoop 用户密码为 hadoop，用 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">cd</code> 命令进入 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">/opt</code>目录。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="hljs ruby" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">$ su hadoop
$ cd /opt/
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2657timestamp1491894012889.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
在 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">/opt</code> 目录下格式化 hadoop。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="hljs perl" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">$ hadoop-<span class="hljs-number" style="color:rgb(174,129,255);font-size:15px;">2.6</span>.<span class="hljs-number" style="color:rgb(174,129,255);font-size:15px;">1</span>/bin/hdfs namenode -<span class="hljs-keyword" style="color:rgb(249,38,114);font-size:15px;">format</span>
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2657timestamp1491894114007.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
在 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">/opt</code> 目录下启动 hadoop 进程。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="hljs ruby" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">$ hadoop-<span class="hljs-number" style="color:rgb(174,129,255);font-size:15px;">2.6</span>.<span class="hljs-number" style="color:rgb(174,129,255);font-size:15px;">1</span>/sbin/start-all.sh
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2657timestamp1491894286864.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
用 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">jps</code> 查看 hadoop 进程是否启动。</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid214292labid2657timestamp1491894495396.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<h3 id="2-2-" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
2.2 下载所需安装包</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
你可以通过下面命令将 Flume， Kafka， Zookeeper 下载到实验楼环境中，进行学习。</p>
<p style="font-size:15px;color:rgb(51,51,51);">
在 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">/opt</code> 目录下，用 hadoop 用户通过 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">wget</code> 命令下载，并用 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">tar</code> 解压。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">$ hadoop@945f39ae074b:/opt$ sudo wget  http://labfile.oss.aliyuncs.com/courses/785/apache-flume-1.6.0-bin.tar.gz
$ hadoop@945f39ae074b:/opt$ sudo tar -zxvf apache-flume-1.6.0-bin.tar.gz
$ hadoop@945f39ae074b:/opt$ sudo wget http://labfile.oss.aliyuncs.com/courses/785/kafka_2.10-0.10.0.0.tgz
$ hadoop@945f39ae074b:/opt$ sudo tar -zxvf kafka_2.10-0.10.0.0.tgz
$ hadoop@945f39ae074b:/opt$ sudo wget http://labfile.oss.aliyuncs.com/courses/785/zookeeper-3.4.6.tar.gz
$ hadoop@945f39ae074b:/opt$ sudo tar -zxvf zookeeper-3.4.6.tar.gz
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
修改 flume-env.sh</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt$ <span class="hljs-built_in" style="color:rgb(230,219,116);font-size:15px;">cd</span> apache-flume-1.6.0-bin/conf/
hadoop@945f39ae074b:/opt/apache-flume-1.6.0-bin/conf$ sudo cp flume-env.sh.template  flume-env.sh   
hadoop@945f39ae074b:/opt/apache-flume-1.6.0-bin/conf$ sudo vi flume-env.sh
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491983201736.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
flume-env.sh文件需修改内容：</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);"><span class="hljs-built_in" style="color:rgb(230,219,116);font-size:15px;">export</span> JAVA_HOME=/usr/lib/jvm/java-8-oracle
<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Give Flume more memory and pre-allocate, enable remote monitoring via JMX</span>
<span class="hljs-built_in" style="color:rgb(230,219,116);font-size:15px;">export</span> JAVA_OPTS=<span class="hljs-string" style="color:rgb(230,219,116);font-size:15px;">"-Xms100m -Xmx2000m -Dcom.sun.management.jmxremote"</span>
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491983164525.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
修改 flume-conf.properties</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/apache-flume-1.6.0-bin/conf<span class="hljs-variable" style="color:rgb(230,219,116);font-size:15px;">$sudo</span> cp flume-conf.properties.template  flume-conf.properties
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
启动 Zookeeper 及 Kafka 服务，这里我们使用外部的 Zookeeper，需要进行一些配置修改才行。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt$ sudo chmod 777 -R zookeeper-3.4.6
hadoop@945f39ae074b:/opt$ <span class="hljs-built_in" style="color:rgb(230,219,116);font-size:15px;">cd</span> zookeeper-3.4.6/
hadoop@945f39ae074b:/opt/zookeeper-3.4.6$ sudo cp conf/zoo_sample.cfg conf/zoo.cfg
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
修改<code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">zoo.cfg</code>的配置。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="hljs ruby" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b<span class="hljs-symbol" style="color:rgb(102,217,239);font-size:15px;">:/opt/zookeeper-</span><span class="hljs-number" style="color:rgb(174,129,255);font-size:15px;">3.4</span>.<span class="hljs-number" style="color:rgb(174,129,255);font-size:15px;">6</span>$ sudo vi conf/zoo.cfg
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
添加修改以下内容。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="hljs ini" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);"><span class="hljs-attr" style="color:rgb(249,38,114);font-size:15px;">dataDir</span>=/opt/zookeeper-<span class="hljs-number" style="color:rgb(174,129,255);font-size:15px;">3.4</span>.<span class="hljs-number" style="color:rgb(174,129,255);font-size:15px;">6</span>/data
<span class="hljs-attr" style="color:rgb(249,38,114);font-size:15px;">dataLogDir</span>=/opt/zookeeper-<span class="hljs-number" style="color:rgb(174,129,255);font-size:15px;">3.4</span>.<span class="hljs-number" style="color:rgb(174,129,255);font-size:15px;">6</span>/logs
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
并在末尾添加。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">server.1=localhost:2888:3888
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491983854394.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
执行命令创建相应的文件。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/zookeeper-3.4.6$ sudo mkdir /opt/zookeeper-3.4.6/data
hadoop@945f39ae074b:/opt/zookeeper-3.4.6$ sudo mkdir /opt/zookeeper-3.4.6/logs
hadoop@945f39ae074b:/opt/zookeeper-3.4.6$ sudo chmod 777 -R ../zookeeper-3.4.6
hadoop@945f39ae074b:/opt/zookeeper-3.4.6$ sudo <span class="hljs-built_in" style="color:rgb(230,219,116);font-size:15px;">echo</span> 1 &gt;/opt/zookeeper-3.4.6/data/myid
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
启动 Zookeeper 并查看状态。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/zookeeper-3.4.6/bin$ ./zkServer.sh start
hadoop@945f39ae074b:/opt/zookeeper-3.4.6/bin$ ./zkServer.sh status
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491984328353.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
启动kafka</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);"><span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;">#权限不足，授权</span>
hadoop@945f39ae074b:/opt$ sudo chmod 777 -R kafka_2.10-0.10.0.0
hadoop@945f39ae074b:/opt$ <span class="hljs-built_in" style="color:rgb(230,219,116);font-size:15px;">cd</span>  kafka_2.10-0.10.0.0
<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;">#启动kafka</span>
hadoop@945f39ae074b:/opt/kafka_2.10-0.10.0.0$ bin/kafka-server-start.sh  config/server.properties  &amp;
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491985742581.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<h3 id="2-3-kafka-source" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
2.3 Kafka Source</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
前提开启 Zookeeper 服务，Kafka 服务，这里用 Kafka 作为 Source。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);"><span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;">#添加 kafkaSource.properties，配置如下</span>
hadoop@945f39ae074b:/opt/apache-flume-1.6.0-bin/conf$ sudo vi kafkaSource.properties
</code></pre>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);"><span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Name the components on this agent </span>
a1.sources=r1
a1.channels=c1
a1.sinks=k1

<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Describe/configure the source </span>
a1.sources.r1.type=org.apache.flume.source.kafka.KafkaSource
a1.sources.r1.zookeeperConnect=localhost:2181
a1.sources.r1.topic=testkafkasource
a1.sources.r1.groupId=flume
a1.sources.r1.kafka.consumer.timeout.ms=100
a1.sources.source1.interceptors.i1.type = timestamp
<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Use a channel which buffers events in memory</span>
a1.channels.c1.type=memory
a1.channels.c1.capacity = 10000
a1.channels.c1.transactionCapacity = 1000
<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Describe the sink </span>
a1.sinks.k1.type=hdfs
a1.sinks.k1.hdfs.path=hdfs://localhost:9000/flume-kafa/%{topic}/%y-%m-%d
a1.sinks.k1.hdfs.fileType=DataStream

<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Bind the source and sink to the channel </span>
a1.sources.r1.channels=c1
a1.sinks.k1.channel=c1
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
根据 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">kafkaSource.properties</code> 的配置创建主题 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">testkafkaSource</code>。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/kafka_2.10-0.10.0.0$ bin/kafka-topics.sh  --create --zookeeper localhost:2181  --replication-factor 1 --partitions 1 --topic testkafkasource
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491986156722.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
用一个 producer 向 testkafkasource 中写入消息。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/kafka_2.10-0.10.0.0<span class="hljs-variable" style="color:rgb(230,219,116);font-size:15px;">$bin</span>/kafka-console-producer.sh --broker-list localhost:9092 --topic testkafkasource
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
flume-ng 启动 agent：</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/apache-flume-1.6.0-bin$ bin/flume-ng agent --conf conf --conf-file conf/kafkaSource.properties --name a1 -Dflume.root.logger=INFO,console
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491986377625.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
在刚才启动的 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">agent</code> 输出的信息显示存储到 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">hdfs</code> 文件系统上。</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491986627726.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
使用 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">hadoop fs</code> 命令查看 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">hdfs</code> 文件系统的上的文件内容。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">$ hadoop fs -cat /flume-kafa/testkafkasource/17-04-12/FlumeData.1491986407870
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
双击桌面上的浏览器输入：<a href="http://www.shiyanlou/" rel="nofollow" style="color:rgb(64,120,192);text-decoration:none;background-color:transparent;">localhost:50070</a><a href="http://www.shiyanlou/" rel="nofollow" style="color:rgb(64,120,192);text-decoration:none;background-color:transparent;"></a> ,然后点击 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">Utilities</code>-&gt;<code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">Browse
 the file system</code></p>
<p style="font-size:15px;color:rgb(51,51,51);">
输入 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">/flume-kafa/testkafkasource/17-04-12</code>，当然您也可以用鼠标点击查找。</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491988123486.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
通过以上实验得知，我们成功的使用 Kafka 作为数据源向 HDFS 接收器发送数据。</p>
<h3 id="2-4-kafka-sink" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
2.4 Kafka Sink</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
前提是开启 Zookeeper 服务，Kafka 服务，这里用 Kafka 作为 Sink。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);"><span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;">#添加 kafkaSink.properties，配置如下</span>
hadoop@945f39ae074b:/opt/apache-flume-1.6.0-bin/conf$ sudo vi conf/kafkaSink.properties
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
添加如下代码：</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);"><span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Name the components on this agent </span>
a1.sources=r1
a1.channels=c1
a1.sinks=k1

<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Describe/configure the source </span>
a1.sources.r1.type=netcat
a1.sources.r1.bind=localhost
a1.sources.r1.port=8888

<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Use a channel which buffers events in memory</span>
a1.channels.c1.type=memory

<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Describe the sink </span>
a1.sinks.k1.type=org.apache.flume.sink.kafka.KafkaSink
a1.sinks.k1.topic=testkafkasink
a1.sinks.k1.brokerList=localhost:9092
a1.sinks.k1.requiredAcks=1
a1.sinks.k1.batchSize=20

<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Bind the source and sink to the channel </span>
a1.sources.r1.channels=c1
a1.sinks.k1.channel=c1
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
根据 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">kafkaSink.properties</code> 的配置创建主题 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">testkafkasink</code>。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/kafka_2.10-0.10.0.0$ bin/kafka-topics.sh  --create --zookeeper localhost:2181  --replication-factor 1 --partitions 1 --topic testkafkasink
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
flume-ng 启动 agent：</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/apache-flume-1.6.0-bin$ bin/flume-ng agent --conf conf --conf-file conf/kafkaSink.properties --name a1 -Dflume.root.logger=INFO,console
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
另外开启 Xfce 终端输入：</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">$ nc localhost 8888
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491989754518.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
再次开启 Xfce 终端，启动 consumer。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/kafka_2.10-0.10.0.0$  bin/kafka-console-consumer.sh --zookeeper  localhost:2181 --topic testkafkasink --from-beginning
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
查看是否消费了消息。注意这里需要关掉 flume-ng 启动的 agent。</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491989953514.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
通过以上实验得知，我们成功的使用 Kafka 作为 Sink 来消费送数据。</p>
<h3 id="2-5-kafka-channel" style="line-height:1.43;color:rgb(51,51,51);font-size:1.5em;">
2.5 Kafka Channel</h3>
<p style="font-size:15px;color:rgb(51,51,51);">
前提开启 Zookeeper 服务，Kafka 服务，这里用 Kafka 作为 Channel。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);"><span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;">#添加 kafkaChannel.properties，配置如下</span>
hadoop@945f39ae074b:/opt/apache-flume-1.6.0-bin/conf$ sudo vi conf/kafkaChannel.properties
</code></pre>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);"><span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Name the components on this agent </span>
a1.sources=r1
a1.channels=c1
a1.sinks=k1

<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Describe/configure the source </span>
a1.sources.r1.type=netcat
a1.sources.r1.bind=localhost
a1.sources.r1.port=8888


<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Describe the channel </span>
a1.channels.c1.type=org.apache.flume.channel.kafka.KafkaChannel
a1.channels.c1.capacity=1000
a1.channels.c1.transactionCapacity=1000
a1.channels.c1.brokerList=localhost:9092
a1.channels.c1.topic=testkafkachannel
a1.channels.c1.zookeeperConnect=localhost:2181

<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Describe the sink </span>
a1.sinks.k1.type=hdfs
a1.sinks.k1.hdfs.path=hdfs://localhost:9000/kafka-channel/logs/
a1.sinks.k1.hdfs.filePrefix=<span class="hljs-built_in" style="color:rgb(230,219,116);font-size:15px;">log</span>
a1.sinks.k1.hdfs.rollInterval=0
a1.sinks.k1.hdfs.rollCount=10000
a1.sinks.k1.hdfs.fileType=DataStream

<span class="hljs-comment" style="color:rgb(117,113,94);font-size:15px;"># Bind the source and sink to the channel </span>
a1.sources.r1.channels=c1
a1.sinks.k1.channel=c1
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
根据 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">kafkaChannel.properties</code> 的配置创建主题 testkafkachannel。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/kafka_2.10-0.10.0.0$ bin/kafka-topics.sh  --create --zookeeper localhost:2181  --replication-factor 1 --partitions 1 --topic testkafkachannel
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
flume-ng 启动 agent：</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/apache-flume-1.6.0-bin$ bin/flume-ng agent --conf conf --conf-file conf/kafkaChannel.properties --name a1 -Dflume.root.logger=INFO,console
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
另外开启终端输入：</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">$ nc localhost 8888
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491990584704.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
再次开启 kafka 终端，启动 consumer。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">hadoop@945f39ae074b:/opt/kafka_2.10-0.10.0.0$  bin/kafka-console-consumer.sh --zookeeper  localhost:2181 --topic testkafkachannel --from-beginning
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
刚才用 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">nc</code> 命令输入内容，在此处就可以打印输出。</p>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491990747776.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
另外通过使用 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">hadoop fs</code> 命令查看 <code style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13.5px;color:rgb(199,37,78);background-color:rgb(249,242,244);">hdfs</code> 文件系统的上的文件内容也是可以看到。</p>
<pre style="overflow:auto;font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;font-size:13px;line-height:1.42857;color:rgb(51,51,51);border:1px solid rgb(204,204,204);background-color:rgb(245,245,245);"><code class="lang-bash hljs" style="font-family:Menlo, Monaco, Consolas, 'Courier New', monospace;color:rgb(248,248,242);display:block;background:rgb(35,36,31);">$ hadoop fs -lsr hdfs://localhost:9000/kafka-channel/
</code></pre>
<p style="font-size:15px;color:rgb(51,51,51);">
<img src="https://dn-anything-about-doc.qbox.me/document-uid18510labid2683timestamp1491991120255.png/wm" alt="此处输入图片的描述" style="border:0px none;vertical-align:middle;"></p>
<p style="font-size:15px;color:rgb(51,51,51);">
通过以上实验得知，我们成功的使用 Kafka 作为 Channel 来发送数据到 HDFS。</p>
<h2 style="line-height:1.225;color:rgb(51,51,51);font-size:1.75em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);">
三、区别与联系</h2>
<p style="font-size:15px;color:rgb(51,51,51);">
Kafka 是一个可持久化的分布式的消息队列，你可以有许多生产者和很多的消费者共享多个主题 Topics。相比之下，Flume 是一个专用工具被设计为旨在往 HDFS，HBase 发送数据。它对 HDFS 有特殊的优化，并且集成了 Hadoop 的安全特性。所以，Cloudera 建议如果数据被多个系统消费的话，使用 kafka；如果数据被设计给 Hadoop 使用，使用 Flume。</p>
<p style="font-size:15px;color:rgb(51,51,51);">
Flume 和 Kafka 可以很好地结合起来使用。如果你的设计需要从 Kafka 到 Hadoop 的流数据，使用 Flume 代理并配置 Kafka 的 Source 读取数据也是可行的，你没有必要实现自己的消费者。你可以直接利用 Flume 与 HDFS 及 HBase 的结合的所有好处。你可以使用 Cloudera Manager 对消费者的监控，并且你甚至可以添加拦截器进行一些流处理。</p>
<p style="font-size:15px;color:rgb(51,51,51);">
Flume 和 Kafka 可以结合起来使用。通常会使用 Flume + Kafka 的方式。其实如果为了利用 Flume 已有的写 HDFS 功能，也可以使用 Kafka + Flume 的方式。</p>
<h2 style="line-height:1.225;color:rgb(51,51,51);font-size:1.75em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);">
四、实验总结</h2>
<p style="font-size:15px;color:rgb(51,51,51);">
正如你们所知 Flume 内置很多的 source 和sink 组件。然而，Kafka 明显有一个更小的生产消费者生态系统，并且 Kafka 的社区支持不好，希望将来这种情况会得到改善，使用 Kafka 意味着你准备好了编写你自己的生产者和消费者代码。如果已经存在的 Flume Sources 和 Sinks 满足你的需求，并且你更喜欢不需要任何开发的系统，请使用 Flume。</p>
<h2 style="line-height:1.225;color:rgb(51,51,51);font-size:1.75em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);">
五、扩展阅读</h2>
<ul style="color:rgb(51,51,51);font-size:16px;line-height:25.6px;"><li style="font-size:15px;"><a href="https://cwiki.apache.org//confluence/display/FLUME/Getting+Started" rel="nofollow" style="color:rgb(64,120,192);text-decoration:none;background-color:transparent;">https://cwiki.apache.org//confluence/display/FLUME/Getting+Started</a></li><li style="font-size:15px;"><a href="http://kafka.apache.org/quickstart" rel="nofollow" style="color:rgb(64,120,192);text-decoration:none;background-color:transparent;">http://kafka.apache.org/quickstart</a></li></ul>            </div>
                </div>