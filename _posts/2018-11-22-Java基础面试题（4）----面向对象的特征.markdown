---
layout:     post
title:      Java基础面试题（4）----面向对象的特征
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h2><a id="_0"></a>问题：简单的说一下面向对象的特征</h2>
<h2><a id="_2"></a>解析：</h2>
<p>我们在回答这类问题的时候，单独的知识点往往没有办法很好的说明，最好可以每个特征增加一个例子：</p>
<h2><a id="_5"></a>回答：</h2>
<h4><a id="1__6"></a>1. 封装</h4>
<ul>
<li>面向对象的封装：<br>
将对象抽象称为一个高度自治和抽象的个体，对象的状态由这个对象自己的行为（方法）来读取。</li>
<li>举个栗子：<br>
手机的一体机行为就是将电池封装起来，在出现一体机之前，很多的手机电池可以拆卸，造成更多不必要的电池事故，而将电池封装起来，就合理的避免了普通用户对手机点出的接触。想要获得电池，只有通过一定合理的方法。</li>
</ul>
<h4><a id="2___12"></a>2.  抽象</h4>
<ul>
<li>面向对象的抽象：<br>
找出一些事物的相似和共性之处，然后将这个事物归为一个类，这个类只考虑这些事物的相似和共同指出，并且忽略与当前的主题无关的方面，将注意力集中在当前的目标有关的方向。</li>
<li>举个栗子：<br>
在我们的实际编程中，经常需要对一些数据进行传输，比如我们要在网上爬去很多的图片信息，需要的信息包括图片的名字和图片的地址。这个时候我们会创建一个JavaBean的类Picture，用来装载这些信息，而不去关注真实的Picture的属性。这里就是使用了抽象的思想。实际生活中也常常用到，大哲学家亚里士多德就是使用了抽象的思想，对实际生活中的事物进行分类，这种思想非常常见。</li>
</ul>
<h4><a id="3__18"></a>3. 继承</h4>
<ul>
<li>面向对象的继承<br>
在定义和实现一个类的时候，可以在一个已经实现的类的基础上进行，把这个已经存在的类的内同作为自己的内容，并且可以加入若干新的内容，或者修改原来的方法使之更适应于现在的场景，这就是继承。</li>
</ul>

            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>