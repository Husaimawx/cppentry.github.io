---
layout:     post
title:      Hive的简单操作
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><span style="font-size:18px;"></span></p>
<p><span style="font-size:18px;">使用hive之前先启动hadoop</span></p>
<p><span style="font-size:18px;">进入到安装的路径：/opt/hadoop/hadoop-2.7.3/sbin</span></p>
<p><span style="font-size:18px;">执行命令：<br></span></p>
<p><span style="font-size:18px;">./start-dfs.sh</span></p>
<p><span style="font-size:18px;">./start-yarn.sh<br></span></p>
<p><span style="font-size:18px;">./hadoop-daemon.sh start datanode</span></p>
<p><span style="font-size:18px;">./mr-jobhistory-daemon.sh start historyserver<br></span></p>
<p><span style="font-size:18px;">执行完命令之后使用jps查看</span></p>
<span style="font-size:18px;">[root@tiancunPC sbin]# jps<br>
4992 org.eclipse.equinox.launcher_1.3.100.v20150511-1540.jar<br>
16066 JobHistoryServer<br>
15237 DataNode<br>
12837 ResourceManager<br>
16102 Jps<br>
12427 NameNode<br>
12620 SecondaryNameNode<br>
15503 RunJar<br><br></span>
<p><span style="font-size:18px;"><span style="font-size:18px;"><br></span></span></p>
<p><span style="font-size:18px;"><span style="font-size:18px;">启动hive，进入到安装目录bin中</span></span></p>
<p><span style="font-size:18px;"><span style="font-size:18px;">执行./hive<br></span></span></p>
<p><span style="font-size:18px;">进入到hive的命令行：</span></p>
<p><span style="font-size:18px;">hive&gt;</span></p>
<p><span style="font-size:18px;">1、查看有多少数据库：</span></p>
<p><span style="font-size:18px;">hive&gt; show databases;<br>
OK<br>
default<br>
Time taken: 0.016 seconds, Fetched: 1 row(s)<br>
hive&gt;</span></p>
<p><span style="font-size:18px;"><br>
2、使用数据库：</span></p>
<p><span style="font-size:18px;">hive&gt; use default;<br>
OK<br>
Time taken: 0.041 seconds<br>
hive&gt;<br></span></p>
<p><span style="font-size:18px;"><br></span></p>
<p><span style="font-size:18px;">3、查看有多少张表：</span></p>
<p><span style="font-size:18px;">hive&gt; show tables;<br>
OK<br>
Time taken: 0.256 seconds<br>
hive&gt;<br></span></p>
<p><span style="font-size:18px;"><br></span></p>
<p><span style="font-size:18px;">4、创建表：</span></p>
<p><span style="font-size:18px;">hive&gt; create table student(id int,name string) ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t';<br>
OK<br>
Time taken: 5.467 seconds<br>
hive&gt;<br></span></p>
<p><span style="font-size:18px;">其中ROW 和 FIELDS指定分割符，指定行和字段的分割；<br></span></p>
<p><span style="font-size:18px;"><br></span></p>
<p><span style="font-size:18px;">5、往表中放几条数据</span></p>
<p><span style="font-size:18px;">创建了一个/opt/datas 文件夹用来放student表的数据，创建一个文件student.txt</span></p>
<p><span style="font-size:18px;">编辑student.txt</span></p>
<p><span style="font-size:18px;">1001    zhangsan</span></p>
<p><span style="font-size:18px;">1002    lisi</span></p>
<p><span style="font-size:18px;">1003    wangwu</span></p>
<p><span style="font-size:18px;">现在要把student.txt文件中的数据加载到 student表中去</span></p>
<p><span style="font-size:18px;">hive&gt; load data local inpath '/opt/hadoop/datas/student.txt' into table student;<br></span></p>
<p><span style="font-size:18px;">指定这个命令可能会报一个错误：</span></p>
<p><span style="font-size:18px;"><span style="color:#FF0000;">Failed with exception File /tmp/hive-root/hive_2016-11-12_15-03-17_165_7992996511195552405-1/-ext-10000/student.txt could only be replicated to 0 nodes instead of minReplication (=1).  There are 0
 datanode(s) running and no node(s) are excluded in this operation.<br>
    at org.apache.hadoop.hdfs.server.blockmanagement.BlockManager.chooseTarget4NewBlock(BlockManager.java:1571)<br>
    at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getNewBlockTargets(FSNamesystem.java:3107)<br>
    at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getAdditionalBlock(FSNamesystem.java:3031)<br>
    at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.addBlock(NameNodeRpcServer.java:725)<br>
    at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.addBlock(ClientNamenodeProtocolServerSideTranslatorPB.java:492)<br>
    at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)<br>
    at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:616)<br>
    at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:982)<br>
    at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2049)<br>
    at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2045)<br>
    at java.security.AccessController.doPrivileged(Native Method)<br>
    at javax.security.auth.Subject.doAs(Subject.java:422)<br>
    at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1698)<br>
    at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2043)</span></span></p>
<p><span style="font-size:18px;"><span style="color:#FF0000;"><br></span></span></p>
<p><font size="4"><span style="color:#FF0000;">是datanode没有启动，重新执行命令<span style="font-size:18px;"><span style="font-size:18px;">./hadoop-daemon.sh start datanode</span></span>  启动一下即可</span></font></p>
<p><span style="font-size:18px;"><span style="color:#FF0000;"><br></span></span></p>
<p><span style="font-size:18px;"><span style="color:#FF0000;"><span style="color:#000000;">6、查询语句</span></span></span></p>
<p><span style="font-size:18px;"><span style="color:#FF0000;"><span style="color:#000000;">select * from student; 发现没有问题，但是select id from student;就报错了</span></span></span></p>
<p><span style="font-size:18px;"><span style="color:#FF0000;">Number of reduce tasks is set to 0 since there's no reduce operator<br>
Starting Job = job_1478941270145_0012, Tracking URL = http://tiancunPC:8088/proxy/application_1478941270145_0012/<br>
Kill Command = /opt/hadoop/hadoop-2.7.3/bin/hadoop job  -kill job_1478941270145_0012<br>
Interrupting... Be patient, this might take some time.<br>
Press Ctrl+C again to kill JVM<br>
killing job with: job_1478941270145_0012<br>
Exiting the JVM<br>
Hadoop job information for Stage-1: number of mappers: 0; number of reducers: 0<br>
2016-11-12 22:59:56,214 Stage-1 map = 0%,  reduce = 0%<br>
Ended Job = job_1478941270145_0012 with errors<br>
Error during job, obtaining debugging information...<br>
killing job with: job_1478941270145_0012<br>
FAILED: Execution Error, return code 2 from org.apache.hadoop.hive.ql.exec.mr.MapRedTask<br>
MapReduce Jobs Launched: <br>
Job 0:  HDFS Read: 0 HDFS Write: 0 FAIL</span></span></p>
<p><span style="font-size:18px;"><span style="color:#FF0000;"><br></span></span></p>
<p><span style="color:#FF0000;"><span style="font-size:18px;">解决办法：转载地址 https://www.iteblog.com/archives/831<br></span></span></p>
<p><span style="color:#FF0000;"><span style="font-size:18px;">说明：</span></span></p>
<p><span style="color:#FF0000;"><span style="font-size:18px;">如果你想查询某个表的某一列，Hive默认是会启用MapReduce Job来完成这个任务，如下：</span></span></p>
<div>
<div id="highlighter_50292" class="syntaxhighlighter nogutter java">
<table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="code">
<div>
<div class="line number1 index0 alt2"><code class="java plain">hive&gt; SELECT id, money FROM m limit
</code><code class="java value">10</code><code class="java plain">;</code></div>
<div class="line number2 index1 alt1"><code class="java plain">Total MapReduce jobs =
</code><code class="java value">1</code></div>
<div class="line number3 index2 alt2"><code class="java plain">Launching Job </code>
<code class="java value">1</code> <code class="java plain">out of </code><code class="java value">1</code></div>
<div class="line number4 index3 alt1"><code class="java plain">Number of reduce tasks is set to
</code><code class="java value">0</code> <code class="java plain">since there's no reduce operator</code></div>
<div class="line number5 index4 alt2"><code class="java plain">Cannot run job locally: Input Size (=
</code><code class="java value">235105473</code><code class="java plain">) is larger than
</code></div>
<div class="line number6 index5 alt1"><code class="java plain">hive.exec.mode.local.auto.inputbytes.max (=
</code><code class="java value">134217728</code><code class="java plain">)</code></div>
<div class="line number7 index6 alt2"><code class="java plain">Starting Job = job_1384246387966_0229, Tracking URL =
</code></div>
<div class="line number8 index7 alt1"><code class="java plain">http:</code><code class="java comments">//l-datalogm1.data.cn1:9981/proxy/application_1384246387966_0229/</code></div>
<div class="line number9 index8 alt2"><code class="java plain">Kill Command = /home/q/hadoop-</code><code class="java value">2.2</code><code class="java plain">.</code><code class="java value">0</code><code class="java plain">/bin/hadoop job 
</code></div>
<div class="line number10 index9 alt1"><code class="java plain">-kill job_1384246387966_0229</code></div>
<div class="line number11 index10 alt2"><code class="java plain">hadoop job information
</code><code class="java keyword">for</code> <code class="java plain">Stage-</code><code class="java value">1</code><code class="java plain">: number of mappers:
</code><code class="java value">1</code><code class="java plain">; </code></div>
<div class="line number12 index11 alt1"><code class="java plain">number of reducers:
</code><code class="java value">0</code></div>
<div class="line number13 index12 alt2"><code class="java value">2013</code><code class="java plain">-</code><code class="java value">11</code><code class="java plain">-</code><code class="java value">13</code>
<code class="java value">11</code><code class="java plain">:</code><code class="java value">35</code><code class="java plain">:</code><code class="java value">16</code><code class="java plain">,</code><code class="java value">167</code>
<code class="java plain">Stage-</code><code class="java value">1</code> <code class="java plain">
map = </code><code class="java value">0</code><code class="java plain">%,  reduce =
</code><code class="java value">0</code><code class="java plain">%</code></div>
<div class="line number14 index13 alt1"><code class="java value">2013</code><code class="java plain">-</code><code class="java value">11</code><code class="java plain">-</code><code class="java value">13</code>
<code class="java value">11</code><code class="java plain">:</code><code class="java value">35</code><code class="java plain">:</code><code class="java value">21</code><code class="java plain">,</code><code class="java value">327</code>
<code class="java plain">Stage-</code><code class="java value">1</code> <code class="java plain">
map = </code><code class="java value">100</code><code class="java plain">%,  reduce =
</code><code class="java value">0</code><code class="java plain">%,</code></div>
<div class="line number15 index14 alt2"><code class="java spaces"> </code><code class="java plain">Cumulative CPU
</code><code class="java value">1.26</code> <code class="java plain">sec</code></div>
<div class="line number16 index15 alt1"><code class="java value">2013</code><code class="java plain">-</code><code class="java value">11</code><code class="java plain">-</code><code class="java value">13</code>
<code class="java value">11</code><code class="java plain">:</code><code class="java value">35</code><code class="java plain">:</code><code class="java value">22</code><code class="java plain">,</code><code class="java value">377</code>
<code class="java plain">Stage-</code><code class="java value">1</code> <code class="java plain">
map = </code><code class="java value">100</code><code class="java plain">%,  reduce =
</code><code class="java value">0</code><code class="java plain">%,</code></div>
<div class="line number17 index16 alt2"><code class="java spaces"> </code><code class="java plain">Cumulative CPU
</code><code class="java value">1.26</code> <code class="java plain">sec</code></div>
<div class="line number18 index17 alt1"><code class="java plain">MapReduce Total cumulative CPU time:
</code><code class="java value">1</code> <code class="java plain">seconds </code>
<code class="java value">260</code> <code class="java plain">msec</code></div>
<div class="line number19 index18 alt2"><code class="java plain">Ended Job = job_1384246387966_0229</code></div>
<div class="line number20 index19 alt1"><code class="java plain">MapReduce Jobs Launched:</code></div>
<div class="line number21 index20 alt2"><code class="java plain">Job </code><code class="java value">0</code><code class="java plain">: Map:
</code><code class="java value">1</code>   <code class="java plain">Cumulative CPU:
</code><code class="java value">1.26</code> <code class="java plain">sec   </code>
</div>
<div class="line number22 index21 alt1"><code class="java plain">HDFS Read: </code>
<code class="java value">8388865</code> <code class="java plain">HDFS Write: </code>
<code class="java value">60</code> <code class="java plain">SUCCESS</code></div>
<div class="line number23 index22 alt2"><code class="java plain">Total MapReduce CPU Time Spent:
</code><code class="java value">1</code> <code class="java plain">seconds </code>
<code class="java value">260</code> <code class="java plain">msec</code></div>
<div class="line number24 index23 alt1"><code class="java plain">OK</code></div>
<div class="line number25 index24 alt2"><code class="java value">1</code>       <code class="java value">
122</code></div>
<div class="line number26 index25 alt1"><code class="java value">1</code>       <code class="java value">
185</code></div>
<div class="line number27 index26 alt2"><code class="java value">1</code>       <code class="java value">
231</code></div>
<div class="line number28 index27 alt1"><code class="java value">1</code>       <code class="java value">
292</code></div>
<div class="line number29 index28 alt2"><code class="java value">1</code>       <code class="java value">
316</code></div>
<div class="line number30 index29 alt1"><code class="java value">1</code>       <code class="java value">
329</code></div>
<div class="line number31 index30 alt2"><code class="java value">1</code>       <code class="java value">
355</code></div>
<div class="line number32 index31 alt1"><code class="java value">1</code>       <code class="java value">
356</code></div>
<div class="line number33 index32 alt2"><code class="java value">1</code>       <code class="java value">
362</code></div>
<div class="line number34 index33 alt1"><code class="java value">1</code>       <code class="java value">
364</code></div>
<div class="line number35 index34 alt2"><code class="java plain">Time taken: </code>
<code class="java value">16.802</code> <code class="java plain">seconds, Fetched:
</code><code class="java value">10</code> <code class="java plain">row(s)</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<p></p>
<p>　　我们都知道，启用MapReduce Job是会消耗系统开销的。对于这个问题，从Hive0.10.0版本开始，对于简单的不需要聚合的类似SELECT &lt;col&gt; from &lt;table&gt; LIMIT n语句，不需要起MapReduce job，直接通过Fetch task获取数据，可以通过下面几种方法实现：<br><strong><span style="color:#0000FF;">　　方法一：</span></strong></p>
<div>
<div id="highlighter_733502" class="syntaxhighlighter nogutter java">
<table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="code">
<div>
<div class="line number1 index0 alt2"><code class="java plain">hive&gt; set hive.fetch.task.conversion=more;</code></div>
<div class="line number2 index1 alt1"><code class="java plain">hive&gt; SELECT id, money FROM m limit
</code><code class="java value">10</code><code class="java plain">;</code></div>
<div class="line number3 index2 alt2"><code class="java plain">OK</code></div>
<div class="line number4 index3 alt1"><code class="java value">1</code>       <code class="java value">
122</code></div>
<div class="line number5 index4 alt2"><code class="java value">1</code>       <code class="java value">
185</code></div>
<div class="line number6 index5 alt1"><code class="java value">1</code>       <code class="java value">
231</code></div>
<div class="line number7 index6 alt2"><code class="java value">1</code>       <code class="java value">
292</code></div>
<div class="line number8 index7 alt1"><code class="java value">1</code>       <code class="java value">
316</code></div>
<div class="line number9 index8 alt2"><code class="java value">1</code>       <code class="java value">
329</code></div>
<div class="line number10 index9 alt1"><code class="java value">1</code>       <code class="java value">
355</code></div>
<div class="line number11 index10 alt2"><code class="java value">1</code>       <code class="java value">
356</code></div>
<div class="line number12 index11 alt1"><code class="java value">1</code>       <code class="java value">
362</code></div>
<div class="line number13 index12 alt2"><code class="java value">1</code>       <code class="java value">
364</code></div>
<div class="line number14 index13 alt1"><code class="java plain">Time taken: </code>
<code class="java value">0.138</code> <code class="java plain">seconds, Fetched: </code>
<code class="java value">10</code> <code class="java plain">row(s)</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<p>上面 set hive.fetch.task.conversion=more;开启了Fetch任务，所以对于上述简单的列查询不在启用MapReduce job！<br><strong><span style="color:#0000FF;">　　方法二：</span></strong></p>
<div>
<div id="highlighter_111982" class="syntaxhighlighter nogutter java">
<table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="code">
<div>
<div class="line number1 index0 alt2"><code class="java plain">bin/hive --hiveconf hive.fetch.task.conversion=more</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<p><strong><span style="color:#0000FF;">　　方法三：</span></strong><br>
上面的两种方法都可以开启了Fetch任务，但是都是临时起作用的；如果你想一直启用这个功能，可以在${HIVE_HOME}/conf/hive-site.xml里面加入以下配置：</p>
<div>
<div class="line number1 index0 alt2"><code class="java plain">&lt;property&gt;</code></div>
<div class="line number2 index1 alt1"><code class="java spaces">  </code><code class="java plain">&lt;name&gt;hive.fetch.task.conversion&lt;/name&gt;</code></div>
<div class="line number3 index2 alt2"><code class="java spaces">  </code><code class="java plain">&lt;value&gt;more&lt;/value&gt;</code></div>
<div class="line number4 index3 alt1"><code class="java spaces">  </code><code class="java plain">&lt;description&gt;</code></div>
<div class="line number5 index4 alt2"><code class="java spaces">    </code><code class="java plain">Some select queries can be converted to single FETCH task
</code></div>
<div class="line number6 index5 alt1"><code class="java spaces">    </code><code class="java plain">minimizing latency.Currently the query should be single
</code></div>
<div class="line number7 index6 alt2"><code class="java spaces">    </code><code class="java plain">sourced not having any subquery and should not have</code></div>
<div class="line number8 index7 alt1"><code class="java spaces">    </code><code class="java plain">any aggregations or distincts (which incurrs RS),
</code></div>
<div class="line number9 index8 alt2"><code class="java spaces">    </code><code class="java plain">lateral views and joins.</code></div>
<div class="line number10 index9 alt1"><code class="java spaces">    </code><code class="java value">1</code><code class="java plain">. minimal : SELECT STAR, FILTER on partition columns, LIMIT only</code></div>
<div class="line number11 index10 alt2"><code class="java spaces">    </code><code class="java value">2</code><code class="java plain">. more    : SELECT, FILTER, LIMIT only (+TABLESAMPLE, virtual columns)</code></div>
<div class="line number12 index11 alt1"><code class="java spaces">  </code><code class="java plain">&lt;/description&gt;</code></div>
<div class="line number13 index12 alt2"><code class="java plain">&lt;/property&gt;</code></div>
</div>
<br><p><span style="color:#FF0000;"><span style="font-size:18px;"><br></span></span></p>
<p><span style="color:#FF0000;"><span style="font-size:18px;"></span></span><br><span style="font-size:18px;"><span style="color:#FF0000;"></span></span></p>
<p><br></p>
<p><span style="font-size:18px;"><br></span></p>
<p><span style="font-size:18px;"><br></span></p>
<p><span style="font-size:18px;"><br></span></p>
<p><span style="font-size:18px;"><br></span></p>
<p><span style="font-size:18px;"><br></span></p>
            </div>
                </div>