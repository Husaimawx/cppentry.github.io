---
layout:     post
title:      JAVA操作HDFS案例
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/mmd0308/article/details/74276564				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><strong>Jar包引入，pom.xml：</strong></p>
<p></p>
<pre><code class="language-html">    &lt;dependency&gt;
      &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;
      &lt;artifactId&gt;hadoop-common&lt;/artifactId&gt;
      &lt;version&gt;2.8.0&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;
      &lt;artifactId&gt;hadoop-hdfs&lt;/artifactId&gt;
      &lt;version&gt;2.8.0&lt;/version&gt;
    &lt;/dependency&gt;</code></pre>
<p></p>
<p><span style="font-weight:bold;">将本地文件上传到hdfs服务器:</span></p>
<p></p>
<pre><code class="language-java">    /**
     * 上传文件到hdfs上
     */
    @Test
    public void upload() throws IOException {
        Configuration conf = new Configuration();
        conf.set("fs.defaultFS","hdfs://hzq:9000");
        FileSystem fs = FileSystem.get(conf);
        fs.copyFromLocalFile(new Path("/home/hzq/jdk1.8.tar.gz"),new Path("/demo"));
    }</code></pre><strong>解析：</strong>
<p></p>
<p>      在开发中我没有引入“core-site.xml”配置文件，所以在本地调用时使用conf进行配置“conf.set("fs.defaultFS","hdfs://hzq:9000");“，下面雷同。</p>
<p><strong>将hdfs上文件下载到本地：</strong></p>
<p></p>
<pre><code class="language-java">    /**
     * 将hdfs上文件下载到本地
     */
    @Test
    public void download() throws IOException {
        Configuration conf = new Configuration();
        conf.set("fs.defaultFS","hdfs://hzq:9000");
        FileSystem fs = FileSystem.newInstance(conf);
        fs.copyToLocalFile(new Path("/java/jdk1.8.tar.gz"),new Path("/home/hzq/"));
    }</code></pre><strong>删除hdfs上指定文件：</strong>
<p></p>
<p></p>
<pre><code class="language-java">    /**
     * 删除hdfs上的文件
     * @throws IOException
     */
    @Test
    public void removeFile() throws IOException {
        Configuration conf = new Configuration();
        conf.set("fs.defaultFS","hdfs://hzq:9000");
        FileSystem fs = FileSystem.newInstance(conf);
        fs.delete(new Path("/demo/jdk1.8.tar.gz"),true);
    }</code></pre><strong>在hdfs上创建文件夹：</strong><br><pre><code class="language-java">    /**
     * 在hdfs更目录下面创建test1文件夹
     * @throws IOException
     */
    @Test
    public void mkdir() throws IOException {
        Configuration conf = new Configuration();
        conf.set("fs.defaultFS","hdfs://hzq:9000");
        FileSystem fs = FileSystem.newInstance(conf);
        fs.mkdirs(new Path("/test1"));
    }</code></pre><strong>列出hdfs上所有的文件或文件夹：</strong>
<p></p>
<p></p>
<pre><code class="language-java"> @Test
    public void listFiles() throws IOException {
        Configuration conf = new Configuration();
        conf.set("fs.defaultFS","hdfs://hzq:9000");
        FileSystem fs = FileSystem.newInstance(conf);
        // true 表示递归查找  false 不进行递归查找
        RemoteIterator&lt;LocatedFileStatus&gt; iterator = fs.listFiles(new Path("/"), true);
        while (iterator.hasNext()){
            LocatedFileStatus next = iterator.next();
            System.out.println(next.getPath());
        }
        System.out.println("----------------------------------------------------------");
        FileStatus[] fileStatuses = fs.listStatus(new Path("/"));
        for (int i = 0; i &lt; fileStatuses.length; i++) {
            FileStatus fileStatus = fileStatuses[i];
            System.out.println(fileStatus.getPath());
        }
    }</code></pre><strong>运行结果：</strong>
<p></p>
<p>                                     <img src="https://img-blog.csdn.net/20170703221342857?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW1kMDMwOA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br><strong><br>
结果分析：</strong></p>
<p>       “listFiles“列出的是hdfs上所有文件的路径，不包括文件夹。根据你的设置，支持递归查找。</p>
<p>       ”listStatus“列出的是所有的文件和文件夹，不支持递归查找。如许递归，需要自己实现。</p>
<p></p>
<p><strong>总结：</strong>熟能生巧，加油！！！</p>
<p><br></p>
            </div>
                </div>