---
layout:     post
title:      Hive环境部署
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <h1>Hive安装部署-实验环境架构</h1>

<p><img alt="" class="has" src="https://img-blog.csdn.net/20180408135617832?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dZcGVyc2lzdA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p>

<h1><a name="t1"></a><strong>Hive安装部署-真实环境架构</strong></h1>

<p> <img alt="" class="has" src="https://img-blog.csdn.net/20180408135636622?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dZcGVyc2lzdA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p>

<h1><a name="t2"></a><strong>Hive 环境的安装部署</strong></h1>

<p>Hive 安装依赖 Hadoop 的集群，它是运行在 Hadoop 的基础上。所以在安装 Hive 之前，保证 Hadoop 集群能够成功运行。Hive的安装详细流程如下所示。</p>

<h2><a name="t3"></a>1、<strong>下载Hive</strong></h2>

<p>Hive是Apache 的一个顶级开源项目，我们可以直接到官网下载需要的版本即可。<a href="http://hadoop.f.dajiangtai.com/extralib/apache-hive-1.0.0-bin.tar.gz" rel="nofollow">使用的是apache-hive-1.0.0-bin.tar.gz版本，可以点击下载</a></p>

<h2><a name="t4"></a><strong>2、把Hive安装包apache-hive-1.0.0-bin.tar.gz移动到/home/hadoop/app/目录下并解</strong></h2>

<p>压，然后将文件名称改为 hive。</p>

<p>[hadoop@hadoop01 app]$ tar ‐zxvf apache‐hive‐1.0.0‐bin.tar.gz [hadoop@hadoop01 app]$ mv apache‐hive‐1.0.0‐bin hive</p>

<h2><a name="t5"></a><strong>3、添加hive环境变量</strong></h2>

<p>在/etc/profile文件中增加如下内容：</p>

<p>[root@hadoop01 ~]$ vi /etc/profile HIVE_HOME=/home/hadoop/app/hive</p>

<p> PATH=$JAVA_HOME/bin:$HADOOP_HOME/bin:$HIVE_HOME/bin:$PATH export HIVE_HOME</p>

<p>保存退出后，通过source命令使配置文件生效</p>

<p>[root@hadoop01 ~]$ source /etc/profile</p>

<h2><a name="t6"></a><strong>4、启动 Hive</strong></h2>

<p>建议：一直用root安装，方便，不用管权限。</p>

<p>此时切换用户至 hadoop 用户，在命令行输入“hive”命令进行测试。</p>

<p>[hadoop@hadoop01]$ hive hive&gt;</p>

<h3><a name="t7"></a><strong>1) 测试 Hive 是否安装成功。</strong></h3>

<p>hive&gt; show tables;</p>

<p>OK</p>

<p>Time taken: 0.043 seconds</p>

<h3><a name="t8"></a><strong>2) 创建表。</strong></h3>

<p>hive&gt; create table test_table (id int ,name string,no int);</p>

<p>OK</p>

<p>Time taken: 0.5 seconds</p>

<h3><a name="t9"></a><a><strong>3) </strong></a><strong>查询表。</strong></h3>

<p>hive&gt; select * from test_table;</p>

<p>OK</p>

<p>Time taken: 0.953 seconds</p>

<p>如果创建表和查询表操作没有出错，就说明 Hive 安装成功。</p>

<p>Hive 将元数据存储在 RDBMS 中，一般常用 MySQL 和 Derby。默认情况下，Hive 元数据保存在内嵌的 Derby 数据库中，只能允许一个会话连接，只适合简单的测试。实际生产环境中不适用，为了支持多用户会话，则需要一个独立的元数据库，使用 MySQL 作为元数据库，Hive 内部对 MySQL 提供了很好的支持，配置一个独立的元数据库需要增加以下步骤。</p>

<p>用的是 centos 系统。</p>

<h2><a name="t10"></a><strong>安装mysql</strong></h2>

<h3><a name="t11"></a><strong>1) 在线安装 mysql 数据库。</strong></h3>

<p>[root@hadoop01 app]# yum install mysql‐server Loaded plugins: fastestmirror</p>

<p>Determining fastest mirrors</p>

<p>* base: mirrors.yun‐idc.com</p>

<p>* extras: mirrors.btte.net</p>

<p>* updates: mirrors.163.com</p>

<h3><a name="t12"></a>1) <strong>启动 mysql 服务。</strong></h3>

<p>[root@hadoop01 app]# service mysqld start</p>

<p>Initializing MySQL database: Installing MySQL system tables...</p>

<p>OK</p>

<p>Filling help tables...</p>

<p>OK</p>

<p>To start mysqld at boot time you have to copy support‐files/mysql.server to the right place for your system</p>

<h3><a name="t13"></a><strong>3) 设置 mysql 的 root 密码。</strong></h3>

<p>MySQL在刚刚被安装的时候，它的 root 用户是没有被设置密码的。首先来设置 MySQL 的</p>

<p>root 密码。</p>

<p>[root@hadoop01 app]# mysql ‐u root ‐p Enter password: //默认密码为空，输入后回车即可</p>

<p>Welcome to the MySQL monitor. Commands end with ; or \g. Your MySQL connection id is 3</p>

<p>Server version: 5.1.73 Source distribution</p>

<p>Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved. mysql&gt;set password for root@localhost=password('root'); 密码设置为root</p>

<h3><a name="t14"></a><strong>4)为 Hive 建立相应的 Mysql 账户，并赋予足够的权限。</strong></h3>

<p>[root@hadoop01 app]# mysql ‐u root ‐proot</p>

<p>mysql&gt;create user 'hive' identified by 'hive'; //创建一个账号：用户名为hive，密码为hive</p>

<p>mysql&gt; grant all on *.* to 'hive'@'hadoop01' identified by 'hive'; //将权限授予host为hadoop01的hive用户 Query OK, 0 rows affected (0.00 sec)</p>

<p>mysql&gt; flush privileges;</p>

<p>Query OK, 0 rows affected (0.00 sec)</p>

<p>如果 hive 账户无法登陆。为hive@hadoop01 设置密码。</p>

<p>[root@hadoop01 ~]#mysql ‐u root ‐proot</p>

<p>mysql&gt;set password for hive@hadoop01=password('hive');</p>

<h3><a name="t15"></a><strong>5) 建立 Hive 专用的元数据库，记得用刚才创建的 “hive” 账号登录，命令如下。</strong></h3>

<p>[root@hadoop01 ~]#mysql ‐u hive ‐p //用hive用户登录，密码hive Enter password:</p>

<p>mysql&gt; create database hive; //创建数据库的名称为hive Query OK, 1 row affected (0.00 sec)</p>

<h3><a name="t16"></a><strong>6) 找到Hive安装目录 conf/下的 hive-site.xml文件，修改以下几个属性。</strong></h3>

<p>[hadoop@hadoop01 conf]$ vi hive‐site.xml</p>

<p>&lt; property&gt;</p>

<p>&lt; name&gt;javax.jdo.option.ConnectionDriverName&lt; /name&gt;</p>

<p>&lt; value&gt;com.mysql.jdbc.Driver&lt; /value&gt;</p>

<p>&lt; description&gt;Driver class name for a JDBC metastore&lt; /description&gt;</p>

<p>&lt; /property&gt;</p>

<p>&lt; property&gt;</p>

<p>&lt; name&gt;javax.jdo.option.ConnectionURL&lt; /name&gt;</p>

<p>&lt; value&gt;jdbc:mysql://hadoop01:3306/hive?characterEncoding=UTF‐8&lt; /value&gt;</p>

<p>&lt; description&gt;JDBC connect string for a JDBC metastore&lt; /description&gt;</p>

<p>&lt; /property&gt;</p>

<p>&lt; property&gt;</p>

<p>&lt; name&gt;javax.jdo.option.ConnectionUserName&lt; /name&gt;</p>

<p>&lt; value&gt;hive&lt; /value&gt;</p>

<p>&lt; description&gt;Username to use against metastore database&lt; /description&gt;</p>

<p>&lt; /property&gt;</p>

<p>&lt; property&gt;</p>

<p>&lt; name&gt;javax.jdo.option.ConnectionPassword&lt; /name&gt;</p>

<p>&lt; value&gt;hive&lt; /value&gt;</p>

<p>&lt; description&gt;password to use against metastore database&lt; /description&gt; &lt; /property&gt;</p>

<p>如果conf/目录下没有 hive-site.xml文件，则需要拷贝一个名为hive-site.xml的文件。</p>

<p>[hadoop@hadoop01 conf]$ cp hive‐default.xml.template hive‐site.xml</p>

<h3><a name="t17"></a><a href="http://hadoop.f.dajiangtai.com/extralib/mysql-connector-java-5.1.21.jar" rel="nofollow"><strong>7)将mysql-connector-java-5.1.21.jar驱动包，拷贝到 $HIVE_HOME/lib 目录下。</strong></a></h3>

<h3><a name="t18"></a><a href="http://hadoop.f.dajiangtai.com/extralib/mysql-connector-java-5.1.21.jar" rel="nofollow"><strong>可点击下</strong></a><a href="http://hadoop.f.dajiangtai.com/extralib/mysql-connector-java-5.1.21.jar" rel="nofollow"><strong>载 (http://hadoop.f.hadoop01.com/extralib/mysql-connector-java-5.1.21.jar) mysql驱</strong></a><strong>动包</strong></h3>

<p>[hadoop@hadoop01 lib]#rz //回车，选择已经下载好的mysql驱动包即可 [hadoop@hadoop01 lib]$ ls</p>

<p>mysql‐connector‐java‐5.1.21.jar</p>

<h3><a name="t19"></a><a><strong>8) </strong></a><strong>启动 </strong><a><strong>Hive </strong></a><strong>Shell，测试运行。</strong></h3>

<p>[hadoop@hadoop01 hive]$ hive hive&gt; show databases;</p>

<p>hive切换到mysql元数据库之后，hive启动时如果遇到以下错误：</p>

<p>Exception in thread "main"java.lang.RuntimeException:</p>

<p>java.lang.IllegalArgumentException:java.net.URISyntaxException:Relative path in</p>

<p>absolute URI:${system:java.io.tmpdir%7D/$%7Bsystem:user.name%7D</p>

<p>解决方案：</p>

<p>在hive 安装目录下，创建一个临时的IO文件iotmp</p>

<p>[hadoop@hadoop01 hive]$ mkdir iotmp</p>

<p>[hadoop@hadoop01 hive]$ ls</p>

<p>bin derby.log hcatalog lib metastore_db README.txt scripts</p>

<p>conf examples iotmp LICENSE NOTICE RELEASE_NOTES.txt</p>

<p>然后将路径配置到hive-site.xml文件的以下参数中：</p>

<p>[hadoop@hadoop01 conf]$ vi hive‐site.xml</p>

<p>&lt; property&gt;</p>

<p>&lt; name&gt;hive.querylog.location&lt; /name&gt;</p>

<p>&lt; value&gt;/home/hadoop/app/hive/iotmp&lt; /value&gt;</p>

<p>&lt; description&gt;Location of Hive run time structured log file&lt; /description&gt;</p>

<p>&lt; /property&gt;</p>

<p>&lt; property&gt;</p>

<p>&lt; name&gt;hive.exec.local.scratchdir&lt; /name&gt;</p>

<p>&lt; value&gt;/home/hadoop/app/hive/iotmp&lt; /value&gt;</p>

<p>&lt; description&gt;Local scratch space for Hive jobs&lt; /description&gt;</p>

<p>&lt; /property&gt;</p>

<p>&lt; property&gt;</p>

<p>&lt; name&gt;hive.downloaded.resources.dir&lt; /name&gt;</p>

<p>&lt; value&gt;/home/hadoop/app/hive/iotmp&lt; /value&gt;</p>

<p>&lt; description&gt;Temporary local directory for added resources in the remote file system.&lt; /descrip &lt; /property&gt;</p>

<p>保存，重启hive即可。</p>

<p>[hadoop@hadoop01 hive]$ hive hive&gt; show databases;</p>

<p>OK default</p>

<p>Time taken: 3.684 seconds, Fetched: 1 row(s) hive&gt;</p>

<p>OK,Hive 就可以使用!</p>            </div>
                </div>