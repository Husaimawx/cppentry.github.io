---
layout:     post
title:      [一起学Hive]之八-使用Hive命令行
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p>Hive提供的几种用户交互接口中，最常用的就是命令行接口。本文简单介绍一下Hive命令行接口(Hive Command Line)及Hive交互Shell(Hive Interactive Shell)的一些使用。</p>

<h2>七、使用Hive命令行</h2>

<h2>7.1 Hive Command Line</h2>

<p>输入$HIVE_HOME/bin/hive –H 或者 –help可以显示帮助选项：</p>

<p> </p>

<table><tbody><tr><td><strong>-d,–define &lt;key=value&gt;</strong></td>
			<td>定义一个变量值，这个变量可以在Hive交互Shell中引用，后面会介绍用法，比如：-d A=B</td>
		</tr><tr><td>–database &lt;databasename&gt;</td>
			<td>进入Hive交互Shell时候指定数据库，默认进入default数据库</td>
		</tr><tr><td>-e &lt;quoted-query-string&gt;</td>
			<td>命令行执行一段SQL语句</td>
		</tr><tr><td>-f &lt;filename&gt;</td>
			<td>filename文件中保存HQL语句，执行其中的语句</td>
		</tr><tr><td>-H,–help</td>
			<td>显示帮助信息</td>
		</tr><tr><td>-h &lt;hostname&gt;</td>
			<td>连接远程Hive Server，后续介绍</td>
		</tr><tr><td><strong>–hiveconf &lt;property=value&gt;</strong></td>
			<td>在命令行中设置Hive的运行时配置参数，优先级高于hive-site.xml,但低于Hive交互Shell中使用Set命令设置。</td>
		</tr><tr><td><strong>–hivevar &lt;key=value&gt;</strong></td>
			<td>同—define</td>
		</tr><tr><td>-i &lt;filename&gt;</td>
			<td>进入Hive交互Shell时候先执行filename中的HQL语句</td>
		</tr><tr><td>-p &lt;port&gt;</td>
			<td>连接远程Hive Server的端口号</td>
		</tr><tr><td>-S,–silent</td>
			<td>静默模式，指定后不显示执行进度信息，最后只显示结果</td>
		</tr><tr><td>-v,–verbose</td>
			<td>冗余模式，额外打印出执行的HQL语句</td>
		</tr></tbody></table><p> </p>

<p>这里特别介绍一下以下几个选项：</p>

<ul><li><strong>-d,–define &lt;key=value&gt;</strong></li>
</ul><p>执行$HIVE_HOME/bin/hive -d k1=v1 –database lxw1234</p>

<p>表示，定义了一个变量k1,值为v1,执行了数据库为lxw1234</p>

<p>进入Hive交互Shell之后，可以使用${k1}来引用该变量，比如：</p>

<p>hive&gt; select ‘${k1}’ from t_lxw1234 limit 1;</p>

<p>OK</p>

<p>v1</p>

<p>这里将k1的值v1打印出来。</p>

<ul><li><strong>–hiveconf &lt;property=value&gt;</strong></li>
</ul><p>可以使用该选项设定Hive的运行参数配置，相当于在Hive交互Shell中使用set命令进行设置，比如：</p>

<p>执行$HIVE_HOME/bin/hive –hiveconf mapred.reduce.tasks=20</p>

<p>进入交互Shell之后，运行的所有查询都会设置20个reduce task。</p>

<p>除非又用set mapred.reduce.tasks=N;进行另外设定。</p>

<ul><li><strong>–hivevar &lt;key=value&gt;</strong></li>
</ul><p>用法同-d和—define</p>

<p> </p>

<h2>7.2 Hive交互Shell</h2>

<p>Hive交互Shell指执行$HIVE_HOME/bin/hive之后，进入的有hive&gt;提示符的交互式命令行，在这里可以执行查询语句，设置参数等等，所有的命令必须以分号结束，具体有以下命令和选项：</p>

<ul><li><strong>quit</strong></li>
</ul><p>退出交互Shell</p>

<ul><li><strong>exit</strong></li>
</ul><p>退出交互Shell</p>

<ul><li><strong>reset</strong></li>
</ul><p>重置所有的Hive运行时配置参数，比如，之前使用set命令设置了reduce数量，使用reset之后，重置成hive-site.xml中的配置。</p>

<ul><li><strong>set &lt;key&gt;=&lt;value&gt;</strong></li>
</ul><p>设置Hive运行时配置参数，优先级最高，相同key，后面的设置会覆盖前面的设置。</p>

<ul><li><strong>set –v</strong></li>
</ul><p>打印出所有Hive的配置参数和Hadoop的配置参数。</p>

<ul><li><strong>add命令</strong></li>
</ul><p>包括 add FILE[S] &lt;filepath&gt; &lt;filepath&gt;* 、 add JAR[S] &lt;filepath&gt; &lt;filepath&gt;* 、add ARCHIVE[S] &lt;filepath&gt; &lt;filepath&gt;*</p>

<p>向DistributeCache中添加一个或过个文件、jar包、或者归档，添加之后，可以在Map和Reduce task中使用。</p>

<p>比如，自定义一个udf函数，打成jar包，在创建函数之前，必须使用add jar命令，将该jar包添加，否则会报错找不到类。</p>

<p> </p>

<ul><li><strong>list 命令</strong></li>
</ul><p>包括 list FILE[S] 、list JAR[S]  、list ARCHIVE[S]</p>

<p>列出当前DistributeCache中的文件、jar包或者归档。</p>

<ul><li><strong>delete 命令</strong></li>
</ul><p>包括 delete FILE[S] &lt;filepath&gt;* 、delete JAR[S] &lt;filepath&gt;*  、 delete ARCHIVE[S] &lt;filepath&gt;*</p>

<p>从DistributeCache中删除文件</p>

<ul><li><strong>! &lt;command&gt;</strong></li>
</ul><p>在交互Shell中执行Linux操作系统命令并打印出结果，不常用</p>

<p>比如：</p>

<p>hive&gt; !pwd;</p>

<p>/home/lxw1234</p>

<ul><li><strong>dfs &lt;dfs command&gt;</strong></li>
</ul><p>在交互Shell中执行hadoop fs 命令，不常用</p>

<p>比如，统计hdfs文件系统中/tmp/目录的总大小：</p>

<p>hive&gt; dfs -du -s /tmp/;</p>

<p>54656194751 /tmp</p>

<ul><li><strong>&lt;query string&gt;</strong></li>
</ul><p>最常用的，执行HQL语句，以分号结尾；</p>

<ul><li><strong>source FILE &lt;filepath&gt;</strong></li>
</ul><p>在交互Shell中执行一个脚本，不常用。</p>            </div>
                </div>