---
layout:     post
title:      Hive
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h1><a id="hive_0"></a>启动hive</h1>
<h2><a id="Hive_shell_2"></a>Hive shell</h2>
<pre class=" language-sh"><code class="prism  language-sh">#交互式hive shell
hive

#非交互式hive shell
hive -e 'command'
hive -f script.q
</code></pre>
<h2><a id="hive_13"></a>hive启动为一个服务器，来对外提供服务</h2>
<pre class=" language-sh"><code class="prism  language-sh">#启动hive server
hiveserver2
#不挂起、后台运行hive server，丢弃日志
nohup hiveserver2 1&gt;/dev/null 2&gt;/dev/null &amp;
</code></pre>
<h2><a id="hive_22"></a>连接hive服务</h2>
<pre class=" language-sh"><code class="prism  language-sh">beeline -u jdbc:hive2://node1:10000 -n root
</code></pre>
<h1><a id="_28"></a>数据类型</h1>

<table>
<thead>
<tr>
<th align="center">类型</th>
<th align="center">描述</th>
<th align="center">示例</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">BOOLEAN</td>
<td align="center">true/false</td>
<td align="center">TRUE</td>
</tr>
<tr>
<td align="center">TINYINT</td>
<td align="center">1byte</td>
<td align="center">1Y</td>
</tr>
<tr>
<td align="center">SMALLINT</td>
<td align="center">2byte</td>
<td align="center">1S</td>
</tr>
<tr>
<td align="center">INT</td>
<td align="center">4byte</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">BIGINT</td>
<td align="center">8byte</td>
<td align="center">1L</td>
</tr>
<tr>
<td align="center">FLOAT</td>
<td align="center">4byte单精度</td>
<td align="center">1.0</td>
</tr>
<tr>
<td align="center">DOUBLE</td>
<td align="center">8byte双精度</td>
<td align="center">1.0</td>
</tr>
<tr>
<td align="center">DECIMAL</td>
<td align="center">任意精度</td>
<td align="center">1.0</td>
</tr>
<tr>
<td align="center">STRING</td>
<td align="center">无限上限可变长度</td>
<td align="center">‘a’,“a”</td>
</tr>
<tr>
<td align="center">VARCHAR</td>
<td align="center">可变长字符串</td>
<td align="center">‘a’,“a”</td>
</tr>
<tr>
<td align="center">CHAR</td>
<td align="center">固定长度字符串</td>
<td align="center">‘a’,“a”</td>
</tr>
<tr>
<td align="center">BINARY</td>
<td align="center">字节数组</td>
<td align="center">不支持</td>
</tr>
<tr>
<td align="center">TIMESTAMP</td>
<td align="center">精确到纳秒时间戳</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">DATE</td>
<td align="center">日期</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">--------------------</td>
<td align="center">---------------------------</td>
<td align="center">-------------</td>
</tr>
<tr>
<td align="center">ARRAY</td>
<td align="center">一组有序字段</td>
<td align="center">array(1,2)</td>
</tr>
<tr>
<td align="center">MAP</td>
<td align="center">一组无序键值对</td>
<td align="center">map(‘a’,1,‘b’,2)</td>
</tr>
<tr>
<td align="center">STRUCT</td>
<td align="center">一组命名的字段</td>
<td align="center">struct(‘a’,1,2.0)</td>
</tr>
<tr>
<td align="center">UNION</td>
<td align="center">多个数据类型中的任意一个</td>
<td align="center">create_union(1,‘a’,63)</td>
</tr>
</tbody>
</table><pre><code class="language-sql"><code class="prism  language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> example <span class="token punctuation">(</span>
	e1 ARRAY<span class="token operator">&lt;</span><span class="token keyword">INT</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    e2 MAP<span class="token operator">&lt;</span>STRING<span class="token punctuation">,</span><span class="token keyword">INT</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    e3 STRUCT<span class="token operator">&lt;</span>a:STRING<span class="token punctuation">,</span>b:<span class="token keyword">INT</span><span class="token punctuation">,</span>c:<span class="token keyword">DOUBLE</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    e4 UNIONTYPE<span class="token operator">&lt;</span>STRING<span class="token punctuation">,</span><span class="token keyword">INT</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></code></pre>
<h1><a id="_61"></a>操作与函数</h1>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token comment">-- 显示内置函数列表</span>
<span class="token keyword">SHOW</span> FUNCTIONS<span class="token punctuation">;</span>

<span class="token comment">-- 查询特定函数描述,例如length</span>
<span class="token keyword">DESCRIBE</span> <span class="token keyword">FUNCTION</span> length<span class="token punctuation">;</span>
</code></code></pre>
<p>操作或函数如有需要会对数据进行隐式转换，转换规则类似Java</p>
<p>可以自行强制转换，如：CAST(‘1’ AS INT)</p>
<h1><a id="_75"></a>本地模式</h1>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token comment">-- 开启自动尝试使用本地模式</span>
<span class="token keyword">set</span> hive<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">.</span><span class="token keyword">mode</span><span class="token punctuation">.</span><span class="token keyword">local</span><span class="token punctuation">.</span>auto<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
</code></code></pre>
<h1><a id="_82"></a>表</h1>
<h2><a id="_84"></a>托管表和外部表</h2>
<p>托管表从HDFS装载数据时把数据转移到仓库目录，删除表时会将表目录及文件删除</p>
<p>外部表不会转移数据，删除表时也不会删除数据本身，而只会删除元数据</p>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token comment">-- 内部表，可以不用指定表目录位置，默认为/user/hive/warehouse/</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> managed_table <span class="token punctuation">(</span><span class="token keyword">column</span> string<span class="token punctuation">)</span> 
<span class="token keyword">ROW</span> FORMAT DELIMITED
	<span class="token keyword">FIELDS</span> <span class="token keyword">TERMINATED</span> <span class="token keyword">BY</span> <span class="token string">','</span><span class="token punctuation">;</span>
<span class="token keyword">LOAD</span> <span class="token keyword">DATA</span> INPATH <span class="token string">'/path../data.txt'</span> <span class="token keyword">INTO</span> <span class="token keyword">TABLE</span> managed_table<span class="token punctuation">;</span>

<span class="token comment">-- 外部表，需要指定外部表目录位置（到表名）</span>
<span class="token keyword">CREATE</span> EXTERNAL <span class="token keyword">TABLE</span> external_table <span class="token punctuation">(</span><span class="token keyword">column</span> string<span class="token punctuation">)</span>
<span class="token keyword">ROW</span> FORMAT DELIMITED
	<span class="token keyword">FIELDS</span> <span class="token keyword">TERMINATED</span> <span class="token keyword">BY</span> <span class="token string">','</span>
LOCATION <span class="token string">'/path../external_table'</span><span class="token punctuation">;</span>
<span class="token keyword">LOAD</span> <span class="token keyword">DATA</span> INPATH <span class="token string">'/path../data.txt'</span> <span class="token keyword">INTO</span> <span class="token keyword">TABLE</span> external_table<span class="token punctuation">;</span>
</code></code></pre>
<h2><a id="_105"></a>分区</h2>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token comment">-- 创建表时指定分区字段，不能与表字段相同，可以多个</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> table_name <span class="token punctuation">(</span><span class="token keyword">column</span> string<span class="token punctuation">)</span> 
PARTITIONED <span class="token keyword">BY</span> <span class="token punctuation">(</span>other_column string<span class="token punctuation">)</span>
<span class="token keyword">ROW</span> FORMAT DELIMITED
	<span class="token keyword">FIELDS</span> <span class="token keyword">TERMINATED</span> <span class="token keyword">BY</span> <span class="token string">','</span><span class="token punctuation">;</span>

<span class="token comment">-- 装载数据必须指定分区，分区字段以文件夹名形式存储与表目录下</span>
<span class="token keyword">LOAD</span> <span class="token keyword">DATA</span> INPATH <span class="token string">'/path../data.txt'</span>
<span class="token keyword">INTO</span> <span class="token keyword">TABLE</span> table_name
<span class="token keyword">PARTITION</span> <span class="token punctuation">(</span>other_column<span class="token operator">=</span><span class="token string">'partition_name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></code></pre>
<h2><a id="_120"></a>分桶</h2>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> table_name <span class="token punctuation">(</span><span class="token keyword">column</span> string<span class="token punctuation">)</span> 
<span class="token keyword">CLUSTERED</span> <span class="token keyword">BY</span> <span class="token punctuation">(</span><span class="token keyword">column</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> <span class="token number">3</span> BUCKETS <span class="token comment">-- 指定分桶数量</span>
<span class="token keyword">ROW</span> FORMAT DELIMITED
	<span class="token keyword">FIELDS</span> <span class="token keyword">TERMINATED</span> <span class="token keyword">BY</span> <span class="token string">','</span><span class="token punctuation">;</span>


<span class="token comment">-- 强制Hive为目标表的分桶初始化过程设置一个正确的reduce task个数</span>
<span class="token keyword">set</span> hive<span class="token punctuation">.</span>enforce<span class="token punctuation">.</span>bucketing<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token comment">-- 如果没有设置上述属性，则需要手动设置与分桶个数相匹配的reduce task个数</span>
<span class="token comment">-- 并且在插入的SELECT语句中增加CLUSTER BY语句</span>
<span class="token keyword">set</span> mapred<span class="token punctuation">.</span>reduce<span class="token punctuation">.</span>tasks<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>		<span class="token comment">-- 老</span>
<span class="token keyword">set</span> mapreduce<span class="token punctuation">.</span>job<span class="token punctuation">.</span>reduces<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>	<span class="token comment">-- 新，两个属性是同一个参数，对应不同版本hive</span>

<span class="token keyword">FROM</span> src
<span class="token keyword">INSERT</span> OVERWRITE <span class="token keyword">TABLE</span> dest
<span class="token keyword">SELECT</span> <span class="token keyword">column</span> <span class="token keyword">WHERE</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">[</span>CLUSTER <span class="token keyword">BY</span> <span class="token keyword">column</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></code></pre>
<h1><a id="HiveQL_141"></a>HiveQL</h1>
<h2><a id="UDF_143"></a>标准函数(UDF)</h2>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token comment">-- concat(str1, str2, ... strN) </span>
<span class="token comment">-- 	returns the concatenation of str1, str2, ... strN</span>
<span class="token comment">-- concat(bin1, bin2, ... binN) </span>
<span class="token comment">-- 	returns the concatenation of bytes in binary data  bin1, bin2, ... binN</span>
concat<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">-- concat_ws(separator, [string | array(string)]+) </span>
<span class="token comment">-- returns the concatenation of the strings separated by the separator.</span>
concat_ws<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">-- split(str, regex) - Splits str around occurances that match regex</span>
split<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></code></pre>
<h2><a id="UDAF_160"></a>聚合函数(UDAF)</h2>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token comment">-- collect_list(x) - Returns a list of objects with duplicates</span>
collect_list<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">-- collect_set(x) - Returns a set of objects with duplicate elements eliminated</span>
collect_set<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></code></pre>
<h2><a id="UDTF_170"></a>表生成函数(UDTF)</h2>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token comment">-- explode(a) - separates the elements of array a into multiple rows</span>
<span class="token comment">-- or the elements of a map into multiple rows and columns</span>
explode<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></code></pre>
<h2><a id="_178"></a>其他关键字</h2>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token comment">-- LATERAL VIEW   横向视图用法，常与explode搭配使用</span>
<span class="token keyword">select</span> column_name <span class="token keyword">from</span> table_name
LATERAL <span class="token keyword">VIEW</span> udtf<span class="token punctuation">(</span>expression<span class="token punctuation">)</span> tableAlias <span class="token keyword">AS</span> columnAlias <span class="token punctuation">(</span>‘<span class="token punctuation">,</span>’ columnAlias<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token comment">-- 开窗函数over，以row_number搭配函数为例</span>
<span class="token comment">-- 有order by子句时，窗口子句默认为RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW</span>
<span class="token comment">-- 省略order by子句时，窗口子句默认为整个组</span>
<span class="token comment">-- 第一行是 unbounded preceding，</span>
<span class="token comment">-- 当前行是 current row，</span>
<span class="token comment">-- 最后一行是 unbounded following，</span>
<span class="token comment">-- 窗口子句不能单独出现，必须有order by子句时才能出现</span>
<span class="token keyword">select</span> <span class="token keyword">column</span><span class="token punctuation">,</span>row_number<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span>patition <span class="token keyword">by</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">[</span><span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
           						<span class="token punctuation">[</span>RANGE <span class="token operator">BETWEEN</span> <span class="token keyword">UNBOUNDED</span> <span class="token keyword">PRECEDING</span> <span class="token operator">AND</span> <span class="token keyword">CURRENT</span> <span class="token keyword">ROW</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> table_name<span class="token punctuation">;</span>
</code></code></pre>
<h2><a id="_197"></a>常用技巧</h2>
<h3><a id="_199"></a>列转行</h3>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token keyword">select</span> concat_ws<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span> collect_set<span class="token punctuation">(</span>column1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>column2
<span class="token keyword">from</span> table_name
<span class="token keyword">group</span> <span class="token keyword">by</span> column2<span class="token punctuation">;</span>
</code></code></pre>
<h3><a id="_207"></a>行转列</h3>
<pre><code class="language-sql"><code class="prism  language-sql"><span class="token keyword">select</span> column1 <span class="token keyword">from</span> table_name
LATERAL <span class="token keyword">VIEW</span> explode<span class="token punctuation">(</span>column2<span class="token punctuation">)</span> tableAlias <span class="token keyword">AS</span> columnAlias <span class="token punctuation">(</span>‘<span class="token punctuation">,</span>’ columnAlias<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">;</span>
</code></code></pre>

            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>