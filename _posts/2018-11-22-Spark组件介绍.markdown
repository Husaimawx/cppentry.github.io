---
layout:     post
title:      Spark组件介绍
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/C_FuL/article/details/78316191				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h1 id="spark简介">Spark简介</h1>

<p><font color="red">Spark可以独立于Hadoop单独运行</font></p>

<h2 id="spark的设计理念">Spark的设计理念</h2>

<p></p><ul> <br>
<li>交互式和迭代式</li>
<li>在集群多点内存中运行的分布式计算</li>
<li>容错数据集合 <br></li></ul><p></p>

<blockquote>
  <p>同时Spark还支持使用不同的语言编程(Java,Scala,R,Python) <br>
  可以从不同的数据源获取数据(HDFS,Cassandra,HBase) <br>
  实现不同的功能Spark Core, Spark SQL, Spark Streaming, Spark MLIB和Graph X
  </p>
</blockquote>

<h2 id="运行模式">运行模式</h2>

<ul>
<li>批处理 – 用于大规模的分布式数据处理<code>spark -submit xxx</code></li>
<li>流方式 – Spark流用来传送和处理实时数据</li>
<li>交互方式 – 常用于处理内存中的大块数据.较低的延迟性<code>spark-shell</code> <code>pyspark</code></li>
</ul>

<h2 id="数据读写-spark可以从以下系统访问数据">数据读写 Spark可以从以下系统访问数据</h2>

<ul>
<li>Hadoop HDFS以及Hive, HBase等</li>
<li>Amazon S3</li>
<li>Cassandra, Mongodb</li>
</ul>



<h3 id="另外spark还支持以下文件格式">另外Spark还支持以下文件格式</h3>

<ul>
<li>Text(包括CSV JSON等)</li>
<li>SequenceFiles</li>
<li>AVRO</li>
<li>Parquet</li>
</ul>



<h2 id="spark主要部件">Spark主要部件</h2>

<p><img src="https://img-blog.csdn.net/20171023112923566?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ19GdUw=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""> <br>
- Spark Core: 包含spark的主要基本功能所有和RDD有关的API都出自于Spark Core. <br>
- Spark SQL: Spark中用于结构化数据处理的软件包. 用户可以在Spark环境下用SQL语言处理数据. <br>
- Spark Streaming: Spark中用来处理流数据的部件 <br>
- MLlib: Spark 中用来进行机器学习和数学建模的软件包 <br>
- GraphX: Spark 中用来进行图计算的函数库 <br>
- Cluster Managers: Spark 中用来管理集群或节点的软件平台.包括Hasoop YARN, Apache Mesos 和Standalone Scheduler</p>

<h2 id="spark各部件介绍">Spark各部件介绍</h2>

<h3 id="spark-core">Spark Core</h3>

<ul>
<li>Spark生态圈的核心: <br>
<ul><li>负责从HDFS, Amazon S3和HBase等持久层读取数据</li>
<li>在YARN和Standalone为资源管理器调度Job完成分布式计算</li></ul></li>
</ul>



<h4 id="包括两个重要部件">包括两个重要部件</h4>

<ul>
<li><p>有向无环图（DAG）的分布式并行计算框架</p>

<blockquote>
  <p>反应RDD之间的依赖关系 <br>
  提供Cache机制来支持多次迭代计算或者数据共享以减少迭代计算之间读取数据局的开销 <br>
  根据用户端对RDD的指令进行优化以减少系统开销</p>
</blockquote></li>
<li><p>容错分布式数据RDD (Resilient Distributed Dataset)</p>

<blockquote>
  <p>RDD代表了一系列数据集合分布在机群的内存中。SPARK CORE 的任务是对这些数据进行分布式计算。</p>
</blockquote>

<p>也就是说 <br>
SPARK CORE 就是 SPARK 功能调度中心，其中包括任务调动，内存管理，容错管理及存储管理。同时也是一些列应用程序的集中地。 <br>
这些应用程序用来定义和管理RDD (Resilient Distributed Dataset).</p></li>
</ul>

<h3 id="spark-sql">Spark SQL:</h3>

<blockquote>
  <p>Spark 中用于结构化数据处理的软件包。用户用户可以在Spark环境下用SQL语言处理数据。</p>
</blockquote>

<h3 id="spark-streaming">Spark Streaming：</h3>

<blockquote>
  <p>Spark 中用来处理流数据的部件</p>
</blockquote>

<h3 id="mllibspark">MLlib：Spark</h3>

<blockquote>
  <p>中用来进行机器学习和数学建模的软件包</p>
</blockquote>



<h3 id="graphxspark">GraphX：Spark</h3>

<blockquote>
  <p>中用来进行图计算(如社交媒体关系) 的库函数</p>
</blockquote>



<h3 id="启动方式">启动方式</h3>

<p>Cluster Managers：包括Hadoop YARN方式启动, Apache Mesos, 和 Standalone Scheduler (Spark 自带的用于单机系统)</p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>