---
layout:     post
title:      kafka浅谈
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<ul>
<li><strong>kafka概述</strong> <br>
kafka是一个分布式的流式处理平台，擅长发布、订阅、存储、和实时处理大规模流数据 。</li>
<li><strong>kafka与传统消息系统的对比</strong> <br>
kafka与传统消息系统相比，有以下不同： <br>
1、kafka是分布式消息系统，易于扩展 <br>
2、kafka同时为消息的发布和订阅提供高吞吐量 <br>
3、kafka是支持多订阅者，当失败时能够自动平衡消费者 <br>
4、kafka是支持消息持久化到磁盘，因此可用于批量消费</li>
<li><p><strong>kafka架构图</strong> <br>
<img src="https://img-blog.csdn.net/20171117160334624?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2hkNDgx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<p>如上图，kafka体系由若干producer（包括日志系统，业务数据，页面前段产生的数据等），broker（支持水平扩展，broker越多，集群吞吐量越大），consumer以及一个zookeeper集群（zk负责管理kafka集群配置选举leader，在consumer group发生改变是，进行平衡）组成。</p></li>
<li><strong>名词解释</strong> <br>
broker：kafka的数据存储单元，一个kafka节点就是一个broker，一个或者多个broker组成一个kafka集群。 <br>
topic：消息发送时都需要指定一个topic <br>
producer：消息生产者，向broker发送消息的客户端 <br>
consumer：消息的消费者，从broker读取消息的客户端 <br>
Consumer group：每个消费者都属于一个consumer group，一条消息可以被多个consumer group消费，在同一个group中只能被一个consumer消费。 <br>
partition：物理上的概念，每个topic包括多个partition，partition内部是有序的，底层又细分为segment，但是上层应用程序认为partition是kafka的最小存储单元。</li>
</ul>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>