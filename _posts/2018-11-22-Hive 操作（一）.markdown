---
layout:     post
title:      Hive 操作（一）
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/lanchunhui/article/details/50854230				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p><a href="http://blog.csdn.net/lanchunhui/article/details/50846659" rel="nofollow" target="_blank"> Hive 基础及安装 </a> <br>
<a href="http://blog.csdn.net/lanchunhui/article/details/50854230" rel="nofollow" target="_blank">Hive 操作（一）</a> <br>
<a href="http://blog.csdn.net/lanchunhui/article/details/50856868" rel="nofollow" target="_blank">hive 操作（二）——使用 mysql 作为 hive 的metastore </a> <br>
<a href="http://blog.csdn.net/lanchunhui/article/details/50858787" rel="nofollow" target="_blank"> hive 操作（三）——hive 的数据模型 </a> <br>
<a href="http://blog.csdn.net/lanchunhui/article/details/50859652" rel="nofollow" target="_blank">hive 操作（四） </a> <br>
注：</p>

<ul>
<li><p>（1）hive的映射工具metastore：</p>

<ul><li>SQL ⇒ MapReduce Job</li>
<li>表（SQL） ⇒ 文件/文件夹（hdfs）</li>
<li>字段 ⇒ 文件中的列</li></ul></li>
</ul>

<h2 id="hive-的-sql-操作">Hive 的 SQL 操作</h2>

<ul>
<li><p>（1）进入hive</p>

<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop0</span> ~]<span class="hljs-comment"># hive</span></code></pre>

<p>退出为<code>quit</code></p>

<pre class="prettyprint"><code class=" hljs mel">hive&gt; <span class="hljs-keyword">quit</span>;</code></pre></li>
<li><p>（2）基本的类 MySQL 的操作：</p>

<pre class="prettyprint"><code class=" hljs vhdl">hive&gt; show databases;
OK
<span class="hljs-keyword">default</span>
<span class="hljs-typename">Time</span> taken: <span class="hljs-number">2.456</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)

hive&gt; <span class="hljs-keyword">use</span> <span class="hljs-keyword">default</span>;
OK
<span class="hljs-typename">Time</span> taken: <span class="hljs-number">0.289</span> seconds

hive&gt; show tables;
OK
<span class="hljs-typename">Time</span> taken: <span class="hljs-number">0.149</span> seconds</code></pre></li>
<li><p>（3）DDL 操作</p>

<pre class="prettyprint"><code class=" hljs vhdl">hive&gt; create table t1(id <span class="hljs-typename">string</span>);
OK
<span class="hljs-typename">Time</span> taken: <span class="hljs-number">2.048</span> seconds
                # mysql 并不支持<span class="hljs-typename">string</span>的数据类型
hive&gt; show tables;
OK
t1
<span class="hljs-typename">Time</span> taken: <span class="hljs-number">0.037</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)</code></pre></li>
</ul>

<p>因为最终 hive （使用映射工具——metastore）是将 SQL 中创建的表转换为HDFS文件系统中的文件（文件夹），那么到底有没有转换过去呢？</p>

<p>我们在浏览器端输入：hadoop0:50070，进入 hadoop 集群的namenode节点，然后点击【Browse the filesystem】进入 hadoop 文件系统（File System）：</p>

<p></p><center> <br>
<img src="https://img-blog.csdn.net/20160311110442427" alt="这里写图片描述" title=""> <br>
</center><p></p>

<p>我们跳转到<code>/user/hive/warehouse</code>，会发现我们在hive创建的表<code>t1</code>以文件（文件夹）的形式进行存储。</p>

<p>hive 在 hdfs 中的默认位置是<strong>/user/hive/warehouse</strong>，是由配置文件hive-site.xml（由<code>mv $HIVE_HOME/conf/hive-default.xml.template $HIVE_HOME/conf/hive-site.xml</code>而来） 中属性 <strong>hive.metastore.warehouse.dir</strong> 决定的。出于简洁性的考虑，我们不妨将<code>hive.metastore.warehouse.dir</code>修改为<code>/hive</code>，系统会自动创建。</p>

<p>默认配置的含义在于，你可以重新配置；</p>

<p>经过一系列的SQL操作（尤其是创建操作），我们重新进入<code>hive/bin</code>，会发现其下多了，<code>derby.log</code>和<code>metastore_db</code>两个文件，<font color="red"><strong>derby 数据库在哪里运行就在哪里创建（derby.log和metastore_db）。也即我们不可在不同的位置执行 hive 操作，否则会发生不一致的情况。</strong></font></p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>