---
layout:     post
title:      HDFS在java中的操作方式
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h1 id="hdfs">HDFS</h1>

<p>标签： HDFS</p>

<hr>

<h2 id="一些简单的在java中操作hdfs的方法">一些简单的在java中操作hdfs的方法</h2>



<h3 id="首先需要确定服务器地址">首先需要确定服务器地址</h3>



<h3 id="如果用户名错误没有权限如果仅仅是测试可以在hadoop服务器上修改false-dfspermission参数">如果用户名错误，没有权限，如果仅仅是测试，可以在hadoop服务器上修改false dfs.permission参数</h3>



<pre class="prettyprint"><code class="language-java hljs "><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String HDFS=<span class="hljs-string">"hdfs://192.168.221.111:9000"</span>;
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Configuration conf;
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String hdfsPath;
    <span class="hljs-keyword">public</span> <span class="hljs-title">HdfsDao</span>(Configuration conf){
        <span class="hljs-keyword">this</span>(HDFS, conf);
    }
    <span class="hljs-keyword">public</span> <span class="hljs-title">HdfsDao</span>(String hdfsPath,Configuration conf){
        <span class="hljs-keyword">this</span>.hdfsPath=hdfsPath;
        <span class="hljs-keyword">this</span>.conf=conf;
    }</code></pre>



<pre class="prettyprint"><code class="language-java hljs "><span class="hljs-comment">//创建文件</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">createFileToHdfs</span>(String file,String content){
        Path path = <span class="hljs-keyword">new</span> Path(file);
        <span class="hljs-keyword">try</span>{
            FileSystem fs = FileSystem.get(URI.create(hdfsPath),conf);
            <span class="hljs-keyword">byte</span>[] buffer=content.getBytes();
            FSDataOutputStream fsdos=<span class="hljs-keyword">null</span>;
            <span class="hljs-keyword">if</span>(!fs.exists(path)){
                fs.createNewFile(path);
            }
            fsdos=fs.create(path);
            fsdos.write(buffer,<span class="hljs-number">0</span>,buffer.length);
            fsdos.close();
            fs.close();
        }<span class="hljs-keyword">catch</span>(IOException e){
            e.printStackTrace();
        }
    }</code></pre>



<pre class="prettyprint"><code class="language-java hljs "><span class="hljs-comment">//查看hdfs文件内容</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">cat</span>(String remote){
        Path path = <span class="hljs-keyword">new</span> Path(remote);
        <span class="hljs-keyword">try</span>{
            FileSystem fs = FileSystem.get(URI.create(hdfsPath),conf);
            FSDataInputStream fsdis=<span class="hljs-keyword">null</span>;
            <span class="hljs-keyword">if</span>(!fs.exists(path)){
                <span class="hljs-keyword">return</span>;
            }
            fsdis = fs.open(path);
            IOUtils.copyBytes(fsdis, System.out, <span class="hljs-number">4096</span>,<span class="hljs-keyword">false</span>);
            IOUtils.closeStream(fsdis);
            fs.close();
        }<span class="hljs-keyword">catch</span> (IOException e){
            e.printStackTrace();
        }
    }</code></pre>



<pre class="prettyprint"><code class="language-java hljs "><span class="hljs-comment">//上传</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">copyToHdfs</span>(String local,String remote){
        <span class="hljs-keyword">try</span>{
            FileSystem fs = FileSystem.get(URI.create(hdfsPath),conf);
            fs.copyFromLocalFile(<span class="hljs-keyword">new</span> Path(local), <span class="hljs-keyword">new</span> Path(remote));

        }<span class="hljs-keyword">catch</span>(IOException e){
            e.printStackTrace();
        }
    }</code></pre>



<pre class="prettyprint"><code class="language-java hljs "><span class="hljs-comment">//删除目录</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">rmdir</span>(String forder){
        Path path=<span class="hljs-keyword">new</span> Path(forder);
        <span class="hljs-keyword">try</span>{
            FileSystem fs =FileSystem.get(URI.create(hdfsPath), conf);
            System.out.println(fs.deleteOnExit(path));
        }<span class="hljs-keyword">catch</span>(IOException e){
            e.printStackTrace();
        }
    }
    <span class="hljs-comment">//创建目录</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">mkdir</span>(String forder){
        Path path=<span class="hljs-keyword">new</span> Path(forder);
        <span class="hljs-keyword">try</span>{
            FileSystem fs=FileSystem.get(URI.create(hdfsPath),conf);
            <span class="hljs-keyword">if</span>(!fs.exists(path)){
                fs.mkdirs(path);
            }
            fs.close();
        }<span class="hljs-keyword">catch</span>(IOException e){
            e.printStackTrace();
        }
    }</code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>