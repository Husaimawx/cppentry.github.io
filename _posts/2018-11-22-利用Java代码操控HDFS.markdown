---
layout:     post
title:      利用Java代码操控HDFS
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-light">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p></p><div class="toc"><h3>HDFS的Java API</h3><br>
当利用eclipse安装好HDFS环境了以后（具体步骤参考上一篇博文https://blog.csdn.net/Andrea_null/article/details/83032732），就可以编写代码操控HDFS了。编写的代码要参考关于HDFS的Java API。此处列举一部分操控HDFS的JavaAPI示例。</div><p></p>
<p>首先，想要操控HDFS，要先创建配置对象。创建配置对象的方法如下</p>
<blockquote>
<p>Configuration conf = new Configuration(true);</p>
</blockquote>
<p>然后再创建HDFS的对象</p>
<blockquote>
<p>FileSystem fs = FileSystem.get(conf);</p>
</blockquote>
<p>之后可以通过HDFS的对象对HDFS进行操作。</p>
<pre><code>//取路径下所有文件的信息
listStatus = fs.listStatus(destPath);
//创建新文件
fs.createNewFile(dirPath);
//创建目录
fs.mkdirs(dirPath);
//上传到HDFS
fs.copyFromLocalFile(srcPath_Hdfs, destPath_Hdfs);
//下载
fs.copyToLocalFile(srcPath_Hdfs, destPath_Hdfs);
//删除文件
fs.delete(new Path(path));
//内部拷贝
FileUtil.copy(srcPath.getFileSystem(conf), srcPath, destPath.getFileSystem(conf), destPath,false, conf);
//内部移动
FileUtil.copy(srcPath.getFileSystem(conf), srcPath, destPath.getFileSystem(conf), destPath,true, conf);
//追加
FSDataOutputStream append = fs.append(new Path(path));


</code></pre>

            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>