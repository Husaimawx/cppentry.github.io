---
layout:     post
title:      Hadoop 2.x常用端口及查看方法
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p><strong>一、常用端口</strong></p>

<table border="1" cellpadding="0" cellspacing="0"><tbody><tr><td style="width:89px;">组件</td>
			<td style="width:152px;">节点</td>
			<td style="width:78px;">默认端口</td>
			<td style="width:278px;">配置</td>
			<td>用途说明</td>
		</tr><tr><td style="width:89px;">HDFS</td>
			<td style="width:152px;">DataNode</td>
			<td style="width:78px;">50010</td>
			<td style="width:278px;">dfs.datanode.address</td>
			<td>datanode服务端口，用于数据传输</td>
		</tr><tr><td style="width:89px;">HDFS</td>
			<td style="width:152px;">DataNode</td>
			<td style="width:78px;">50075</td>
			<td style="width:278px;">dfs.datanode.http.address</td>
			<td>http服务的端口</td>
		</tr><tr><td style="width:89px;">HDFS</td>
			<td style="width:152px;">DataNode</td>
			<td style="width:78px;">50475</td>
			<td style="width:278px;">dfs.datanode.https.address</td>
			<td>https服务的端口</td>
		</tr><tr><td style="width:89px;">HDFS</td>
			<td style="width:152px;">DataNode</td>
			<td style="width:78px;">50020</td>
			<td style="width:278px;">dfs.datanode.ipc.address</td>
			<td>ipc服务的端口</td>
		</tr><tr><td style="width:89px;">HDFS</td>
			<td style="width:152px;">NameNode</td>
			<td style="width:78px;">50070</td>
			<td style="width:278px;">dfs.namenode.http-address</td>
			<td>http服务的端口</td>
		</tr><tr><td style="width:89px;">HDFS</td>
			<td style="width:152px;">NameNode</td>
			<td style="width:78px;">50470</td>
			<td style="width:278px;">dfs.namenode.https-address</td>
			<td>https服务的端口</td>
		</tr><tr><td style="width:89px;">HDFS</td>
			<td style="width:152px;">NameNode</td>
			<td style="width:78px;">8020</td>
			<td style="width:278px;">fs.defaultFS</td>
			<td>接收Client连接的RPC端口，用于获取文件系统metadata信息。</td>
		</tr><tr><td style="width:89px;">HDFS</td>
			<td style="width:152px;">journalnode</td>
			<td style="width:78px;">8485</td>
			<td style="width:278px;">dfs.journalnode.rpc-address</td>
			<td>RPC服务</td>
		</tr><tr><td style="width:89px;">HDFS</td>
			<td style="width:152px;">journalnode</td>
			<td style="width:78px;">8480</td>
			<td style="width:278px;">dfs.journalnode.http-address</td>
			<td>HTTP服务</td>
		</tr><tr><td style="width:89px;">HDFS</td>
			<td style="width:152px;">ZKFC</td>
			<td style="width:78px;">8019</td>
			<td style="width:278px;">dfs.ha.zkfc.port</td>
			<td>ZooKeeper FailoverController，用于NN HA</td>
		</tr><tr><td style="width:89px;">YARN</td>
			<td style="width:152px;">ResourceManager</td>
			<td style="width:78px;">8032</td>
			<td style="width:278px;">yarn.resourcemanager.address</td>
			<td>RM的applications manager(ASM)端口</td>
		</tr><tr><td style="width:89px;">YARN</td>
			<td style="width:152px;">ResourceManager</td>
			<td style="width:78px;">8030</td>
			<td style="width:278px;">yarn.resourcemanager.scheduler.address</td>
			<td>scheduler组件的IPC端口</td>
		</tr><tr><td style="width:89px;">YARN</td>
			<td style="width:152px;">ResourceManager</td>
			<td style="width:78px;">8031</td>
			<td style="width:278px;">yarn.resourcemanager.resource-tracker.address</td>
			<td>IPC</td>
		</tr><tr><td style="width:89px;">YARN</td>
			<td style="width:152px;">ResourceManager</td>
			<td style="width:78px;">8033</td>
			<td style="width:278px;">yarn.resourcemanager.admin.address</td>
			<td>IPC</td>
		</tr><tr><td style="width:89px;">YARN</td>
			<td style="width:152px;">ResourceManager</td>
			<td style="width:78px;">8088</td>
			<td style="width:278px;">yarn.resourcemanager.webapp.address</td>
			<td>http服务端口</td>
		</tr><tr><td style="width:89px;">YARN</td>
			<td style="width:152px;">NodeManager</td>
			<td style="width:78px;">8040</td>
			<td style="width:278px;">yarn.nodemanager.localizer.address</td>
			<td>localizer IPC</td>
		</tr><tr><td style="width:89px;">YARN</td>
			<td style="width:152px;">NodeManager</td>
			<td style="width:78px;">8042</td>
			<td style="width:278px;">yarn.nodemanager.webapp.address</td>
			<td>http服务端口</td>
		</tr><tr><td style="width:89px;">YARN</td>
			<td style="width:152px;">NodeManager</td>
			<td style="width:78px;">8041</td>
			<td style="width:278px;">yarn.nodemanager.address</td>
			<td>NM中container manager的端口</td>
		</tr><tr><td style="width:89px;">YARN</td>
			<td style="width:152px;">JobHistory Server</td>
			<td style="width:78px;">10020</td>
			<td style="width:278px;">mapreduce.jobhistory.address</td>
			<td>IPC</td>
		</tr><tr><td style="width:89px;">YARN</td>
			<td style="width:152px;">JobHistory Server</td>
			<td style="width:78px;">19888</td>
			<td style="width:278px;">mapreduce.jobhistory.webapp.address</td>
			<td>http服务端口</td>
		</tr><tr><td style="width:89px;">HBase</td>
			<td style="width:152px;">Master</td>
			<td style="width:78px;">60000</td>
			<td style="width:278px;">hbase.master.port</td>
			<td>IPC</td>
		</tr><tr><td style="width:89px;">HBase</td>
			<td style="width:152px;">Master</td>
			<td style="width:78px;">60010</td>
			<td style="width:278px;">hbase.master.info.port</td>
			<td>http服务端口</td>
		</tr><tr><td style="width:89px;">HBase</td>
			<td style="width:152px;">RegionServer</td>
			<td style="width:78px;">60020</td>
			<td style="width:278px;">hbase.regionserver.port</td>
			<td>IPC</td>
		</tr><tr><td style="width:89px;">HBase</td>
			<td style="width:152px;">RegionServer</td>
			<td style="width:78px;">60030</td>
			<td style="width:278px;">hbase.regionserver.info.port</td>
			<td>http服务端口</td>
		</tr><tr><td style="width:89px;">HBase</td>
			<td style="width:152px;">HQuorumPeer</td>
			<td style="width:78px;">2181</td>
			<td style="width:278px;">hbase.zookeeper.property.clientPort</td>
			<td>HBase-managed ZK mode，使用独立的ZooKeeper集群则不会启用该端口。</td>
		</tr><tr><td style="width:89px;">HBase</td>
			<td style="width:152px;">HQuorumPeer</td>
			<td style="width:78px;">2888</td>
			<td style="width:278px;">hbase.zookeeper.peerport</td>
			<td>HBase-managed ZK mode，使用独立的ZooKeeper集群则不会启用该端口。</td>
		</tr><tr><td style="width:89px;">HBase</td>
			<td style="width:152px;">HQuorumPeer</td>
			<td style="width:78px;">3888</td>
			<td style="width:278px;">hbase.zookeeper.leaderport</td>
			<td>HBase-managed ZK mode，使用独立的ZooKeeper集群则不会启用该端口。</td>
		</tr><tr><td style="width:89px;">Hive</td>
			<td style="width:152px;">Metastore</td>
			<td style="width:78px;">9083</td>
			<td style="width:278px;">/etc/default/hive-metastore中export PORT=&lt;port&gt;来更新默认端口</td>
			<td> </td>
		</tr><tr><td style="width:89px;">Hive</td>
			<td style="width:152px;">HiveServer</td>
			<td style="width:78px;">10000</td>
			<td style="width:278px;">/etc/hive/conf/hive-env.sh中export HIVE_SERVER2_THRIFT_PORT=&lt;port&gt;来更新默认端口</td>
			<td> </td>
		</tr><tr><td style="width:89px;">ZooKeeper</td>
			<td style="width:152px;">Server</td>
			<td style="width:78px;">2181</td>
			<td style="width:278px;">/etc/zookeeper/conf/zoo.cfg中clientPort=&lt;port&gt;</td>
			<td>对客户端提供服务的端口</td>
		</tr><tr><td style="width:89px;">ZooKeeper</td>
			<td style="width:152px;">Server</td>
			<td style="width:78px;">2888</td>
			<td style="width:278px;">/etc/zookeeper/conf/zoo.cfg中server.x=[hostname]:nnnnn[:nnnnn]，标蓝部分</td>
			<td>follower用来连接到leader，只在leader上监听该端口。</td>
		</tr><tr><td style="width:89px;">ZooKeeper</td>
			<td style="width:152px;">Server</td>
			<td style="width:78px;">3888</td>
			<td style="width:278px;">/etc/zookeeper/conf/zoo.cfg中server.x=[hostname]:nnnnn[:nnnnn]，标蓝部分</td>
			<td>用于leader选举的。只在electionAlg是1,2或3(默认)时需要。</td>
		</tr></tbody></table><p>所有端口协议均基于TCP。</p>

<p>部分端口说明参见：<a href="http://blog.csdn.net/xiaolang85/article/details/8647602" rel="nofollow">http://blog.csdn.net/xiaolang85/article/details/8647602</a></p>

<p> </p>

<p><strong>二、查看方法</strong></p>

<p>对于 NameNode 和 DataNode 可通过如下Web页面查看其信息：</p>

<p><strong>I. NameNode: http://{NameNodeServer}:50070/</strong></p>

<p>/dfshealth.jsp  HDFS信息页面，其中有链接可以查看文件系统</p>

<p>/dfsnodelist.jsp?whatNodes=(DEAD|LIVE)  显示DEAD或LIVE状态的datanode</p>

<p>/fsck  运行fsck命令，不推荐在集群繁忙时使用！</p>

<p><strong>II. DataNode: http://{DataNodeServer}:50075/</strong></p>

<p>/blockScannerReport  每个datanode都会指定间隔验证块信息</p>

<p><strong>III. 对于 NameNode 和 DataNode 都存在如下 Web URL：</strong></p>

<p>/logs  日志文件列表，用于下载和查看</p>

<p>/logLevel  允许你设定log4j的日志记录级别，类似于hadoop daemonlog</p>

<p>/stacks  所有线程的stack trace，对于debug很有帮助</p>

<p>/jmx  服务端的Metrics，以JSON格式输出。</p>

<p>/jmx?qry=Hadoop:*会返回所有hadoop相关指标。</p>

<p>/jmx?get=MXBeanName::AttributeName 查询指定bean指定属性的值，例如/jmx?get=Hadoop:service=NameNode,name=NameNodeInfo::ClusterId会返回ClusterId。  这个请求的处理类：org.apache.hadoop.jmx.JMXJsonServlet</p>

<p> </p>

<p>三、配置 Eclipse</p>

<p>1. 在 Define Hadoop Location 界面中，对于伪分布式部署且采用缺省配置情况下：</p>

<ul><li>Map/Reduce(V2) Master: localhost:50020</li>
	<li>DFS Master: localhost:8020</li>
</ul><p><a href="https://www.cnblogs.com/jancco/p/4447756.html" rel="nofollow">https://www.cnblogs.com/jancco/p/4447756.html</a></p>            </div>
                </div>