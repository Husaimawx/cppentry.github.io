---
layout:     post
title:      Flume入门教程
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/li295214001/article/details/50467847				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><span style="font-size:48px;"><strong><span style="font-family:'Microsoft YaHei';font-size:16px;"><span style="font-family:'Microsoft YaHei';"><span style="font-family:'Microsoft YaHei';font-size:16px;">Flume
</span>简介</span></span></strong></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;"><span style="font-family:'Microsoft YaHei';"></span>Flume 作为 cloudera 开发的实时日志收集系统，受到了业界的认可与广泛应用。Flume 初始的发行版本目前被统称为 Flume OG（original generation），属于 cloudera。但随着 FLume 功能的扩展，Flume OG 代码工程臃肿、核心组件设计不合理、核心配置不标准等缺点暴露出来，尤其是在
 Flume OG 的最后一个发行版本 0.94.0 中，日志传输不稳定的现象尤为严重，为了解决这些问题，2011 年 10 月 22 号，cloudera 完成了 Flume-728，对 Flume 进行了里程碑式的改动：重构核心组件、核心配置以及代码架构，重构后的版本统称为 Flume NG（next generation）；改动的另一原因是将 Flume 纳入 apache 旗下，cloudera Flume 改名为 Apache Flume。IBM 的这篇文章：《<a href="http://www.ibm.com/developerworks/cn/data/library/bd-1404flumerevolution/index.html" rel="nofollow"><span style="font-size:18px;">Flume
 NG：Flume 发展史上的第一次革命</span></a>》，从基本组件以及用户体验的角度阐述 Flume OG 到 Flume NG 发生的革命性变化。本文就不再赘述各种细枝末节了，不过这里还是简要提下 Flume NG （1.x.x）的主要变化：</span>
</p>
<ul><li><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">sources和sinks 使用channels 进行链接</span>
</li><li><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">两个主要channel 。1，  in-memory channel  非持久性支持，速度快。2 ， JDBC-based channel 持久性支持。</span>
</li><li><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">不再区分逻辑和物理node，所有物理节点统称为 “agents”,每个agents 都能运行0个或多个sources 和sinks</span>
</li><li><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">不再需要master节点和对<span class="OUTFOX_NANCI_WRAPPER">zookeeper</span><span class="OUTFOX_NANCI_TIPS">(动物园管理员)</span>的依赖，配置文件简单化。</span>
</li><li><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">插件化，一部分面对用户，工具或系统开发人员。</span>
</li><li><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">使用<span class="OUTFOX_NANCI_WRAPPER">Thrift</span><span class="OUTFOX_NANCI_TIPS">(节俭)</span>、Avro
 Flume sources 可以从flume0.9.4 发送 events  到flume 1.x</span> </li></ul><p><span style="font-family:'Microsoft YaHei';font-size:16px;">注：本文所使用的 Flume 版本为 flume-1.4.0-cdh4.7.0，不需要额外的安装过程，解压缩即可用。 <br></span></p>
<span id="OSC_h1_1"></span>
<h1><span style="font-family:'Microsoft YaHei';font-size:16px;"><span style="background-color:#FFE500;">1、Flume 的</span><span style="background-color:#FFE500;"></span><span style="background-color:#FFE500;">一些核心概念：</span><span style="background-color:#FFE500;"></span><span style="background-color:#FFE500;"></span></span>
</h1>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;"></span></p>
<table style="background-color:#FFFFFF;border:2px solid #CCCCCC;color:#555555;font-family:'宋体', Arial, 'Microsoft Yahei', sans-serif;font-size:14px;"><tbody><tr><th style="border:1px solid #CCCCCC;vertical-align:top;background-color:#EDEFF0;">
组件</th>
<th style="border:1px solid #CCCCCC;vertical-align:top;background-color:#EDEFF0;">
功能</th>
</tr><tr><td style="border:1px solid #CCCCCC;vertical-align:top;">Agent</td>
<td style="border:1px solid #CCCCCC;vertical-align:top;">使用JVM 运行Flume。每台机器运行一个agent，但是可以在一个agent中包含多个sources和sinks。</td>
</tr><tr><td style="border:1px solid #CCCCCC;vertical-align:top;">Client</td>
<td style="border:1px solid #CCCCCC;vertical-align:top;">生产数据，运行在一个独立的线程。</td>
</tr><tr><td style="border:1px solid #CCCCCC;vertical-align:top;">Source</td>
<td style="border:1px solid #CCCCCC;vertical-align:top;">从Client收集数据，传递给Channel。</td>
</tr><tr><td style="border:1px solid #CCCCCC;vertical-align:top;">Sink</td>
<td style="border:1px solid #CCCCCC;vertical-align:top;">从Channel收集数据，运行在一个独立线程。</td>
</tr><tr><td style="border:1px solid #CCCCCC;vertical-align:top;">Channel</td>
<td style="border:1px solid #CCCCCC;vertical-align:top;">连接 sources 和 sinks ，这个有点像一个队列。</td>
</tr><tr><td style="border:1px solid #CCCCCC;vertical-align:top;">Events</td>
<td style="border:1px solid #CCCCCC;vertical-align:top;">可以是日志记录、 avro 对象等。</td>
</tr></tbody></table><span id="OSC_h2_2"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;"><span style="background-color:#00D5FF;">1.1 数</span><span style="background-color:#00D5FF;"></span><span style="background-color:#00D5FF;">据流模型</span></span>
</h2>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;"><span class="OUTFOX_NANCI_WRAPPER">Flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span>以agent为最小的独立运行单位。一个agent就是一个JVM。单agent由Source、Sink和Channel三大组件构成，如下图：</span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><a href="http://static.oschina.net/uploads/img/201407/08014622_8PBx.png" rel="nofollow"><img src="http://static.oschina.net/uploads/img/201407/08014622_8PBx.png" alt="Agent component diagram"></a> 
 图一</span> </p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">Flume的数据流由事件(Event)贯穿始终。事件是Flume的基本数据单位，它携带日志数据(字节数组形式)并且携带有头信息，这些Event由Agent外部的Source，比如上图中的Web Server生成。当Source捕获事件后会进行特定的格式化，然后Source会把事件推入(单个或多个)Channel中。你可以把Channel看作是一个缓冲区，它将保存事件直到Sink处理完该事件。Sink负责持久化日志或者把事件推向另一个Source。<br>
很直白的设计，其中值得注意的是，Flume提供了大量内置的Source、Channel和Sink类型。不同类型的Source,Channel和Sink可以自由组合。组合方式基于用户设置的配置文件，非常灵活。比如：Channel可以把事件暂存在内存里，也可以持久化到本地硬盘上。Sink可以把日志写入HDFS, HBase，甚至是另外一个Source等等。<br>
如果你以为Flume就这些能耐那就大错特错了。Flume支持用户建立多级流，也就是说，多个agent可以协同工作，并且支持Fan-in、Fan-out、Contextual Routing、Backup Routes。如下图所示：</span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><a href="http://static.oschina.net/uploads/img/201407/08014622_pD3e.png" rel="nofollow"><img src="http://static.oschina.net/uploads/img/201407/08014622_pD3e.png" alt="A fan-out flow using a (multiplexing) channel selector"></a></span>
</p>
<span id="OSC_h2_3"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;background-color:#00D5FF;">1.2 高可靠性</span>
</h2>
<span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">作为生产环境运行的软件，高可靠性是必须的。<br>
从单agent来看，Flume使用基于事务的数据传递方式来保证事件传递的可靠性。Source和Sink被封装进一个事务。事件被存放在Channel中直到该事件被处理，Channel中的事件才会被移除。这是Flume提供的点到点的可靠机制。<br>
从多级流来看，前一个agent的sink和后一个agent的source同样有它们的事务来保障数据的可靠性。<br></span><span id="OSC_h2_4"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;background-color:#00D5FF;">1.3 可恢复性</span>
</h2>
<span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">还是靠Channel。推荐使用FileChannel，事件持久化在本地文件系统里(性能较差)。<br></span><span id="OSC_h1_5"></span>
<h1><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="background-color:#FFE500;"></span><span style="background-color:#FFE500;">2、Flume 整体架构介绍</span></span>
</h1>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">Flume架构整体上看就是 <span style="font-family:'Microsoft YaHei';font-size:16px;line-height:24px;">source</span>--&gt;c<span style="font-family:'Microsoft YaHei';font-size:16px;line-height:24px;">hannel</span>--&gt;<span style="font-family:'Microsoft YaHei';font-size:16px;line-height:24px;"><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:24px;">sink </span></span>的三层架构（参见最上面的
 图一），类似生成者和消费者的架构，他们之间通过queue（channel）传输，解耦。</span> </p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">Source:完成对日志数据的收集，分成 transtion 和 event 打入到channel之中。 <br>
Channel:主要提供一个队列的功能，对source提供中的数据进行简单的缓存。 <br>
Sink:取出Channel中的数据，进行相应的存储文件系统，数据库，或者提交到远程服务器。 <br>
对现有程序改动最小的使用方式是使用是直接读取程序原来记录的日志文件，基本可以实现无缝接入，不需要对现有程序进行任何改动。 <br>
对于直接读取文件Source, 主要有两种方式： <br></span></p>
<span id="OSC_h2_6"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="background-color:#00D5FF;">2.1 Exec
</span><span style="background-color:#00D5FF;"></span><span style="background-color:#00D5FF;">source</span></span>
</h2>
<span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">可通过写Unix command的方式组织数据，最常用的就是tail -F [file]。<br>
可以实现实时传输，但在<span class="OUTFOX_NANCI_WRAPPER">flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span>不运行和脚本错误时，会丢数据，也不支持断点续传功能。因为没有记录上次文件读到的位置，从而没办法知道，下次再读时，从什么地方开始读。特别是在日志文件一直在增加的时候。flume的source挂了。等flume的source再次开启的这段时间内，增加的日志内容，就没办法被source读取到了。不过flume有一个execStream的扩展，可以自己写一个监控日志增加情况，把增加的日志，通过自己写的工具把增加的内容，传送给flume的node。再传送给sink的node。要是能在tail类的source中能支持，在node挂掉这段时间的内容，等下次node开启后在继续传送，那就更完美了。<br></span><span id="OSC_h2_7"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="background-color:#00D5FF;">2.2 Spooling
</span><span style="background-color:#00D5FF;"></span><span style="background-color:#00D5FF;">Directory Source</span></span>
</h2>
<span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">SpoolSource:是监测配置的目录下新增的文件，并将文件中的数据读取出来，可实现准实时。需要注意两点：1、拷贝到<span class="OUTFOX_NANCI_WRAPPER">spool</span><span class="OUTFOX_NANCI_TIPS">(缠绕)</span>目录下的文件不可以再打开编辑。2、spool目录下不可包含相应的子目录。在实际使用的过程中，可以结合log4j使用，使用log4j的时候，将log4j的文件分割机制设为1分钟一次，将文件拷贝到spool的监控目录。log4j有一个TimeRolling的插件，可以把log4j分割的文件到spool目录。基本实现了实时的监控。Flume在传完文件之后，将会修改文件的后缀，变为.COMPLETED（后缀也可以在配置文件中灵活指定） <br>
ExecSource，SpoolSource对比：ExecSource可以实现对日志的实时收集，但是存在Flume不运行或者指令执行出错时，将无法收集到日志数据，无法何证日志数据的完整性。SpoolSource虽然无法实现实时的收集数据，但是可以使用以分钟的方式分割文件，趋近于实时。如果应用无法实现以分钟切割日志文件的话，可以两种收集方式结合使用。 <br>
Channel有多种方式：有MemoryChannel, JDBC Channel, MemoryRecoverChannel, FileChannel。MemoryChannel可以实现高速的吞吐，但是无法保证数据的完整性。MemoryRecoverChannel在官方文档的建议上已经建义使用FileChannel来替换。FileChannel保证数据的完整性与一致性。在具体配置FileChannel时，建议FileChannel设置的目录和程序日志文件保存的目录设成不同的磁盘，以便提高效率。 <br></span>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">Sink在设置存储数据时，可以向文件系统中，数据库中，hadoop中储数据，在日志数据较少时，可以将数据存储在文件系中，并且设定一定的时间间隔保存数据。在日志数据较多时，可以将相应的日志数据存储到Hadoop中，便于日后进行相应的数据分析。</span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span></p>
<h1><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="background-color:#FFE500;">3、常用架构、功能配</span><span style="background-color:#FFE500;"></span><span style="background-color:#FFE500;">置示例</span></span></h1>
<p></p>
<p>安装</p>
<p>flume的官方网站在哪里？<br>
　　<a href="http://flume.apache.org/" rel="nofollow">http://flume.apache.org/</a></p>
<p>在哪里下载？</p>
<p>　　<a href="http://www.apache.org/dyn/closer.cgi/flume/1.5.0/apache-flume-1.5.0-bin.tar.gz" rel="nofollow">http://www.apache.org/dyn/closer.cgi/flume/1.5.0/apache-flume-1.5.0-bin.tar.gz</a></p>
<br><p>1)将下载的flume包，解压到/home/hadoop目录中</p>
<p>2)修改 flume-env.sh 配置文件,主要是JAVA_HOME变量设置</p>
<p></p>
<pre><code class="language-java">root@m1:/home/hadoop/flume-1.5.0-bin# cp conf/flume-env.sh.template conf/flume-env.sh
root@m1:/home/hadoop/flume-1.5.0-bin# vi conf/flume-env.sh
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
  
# If this file is placed at FLUME_CONF_DIR/flume-env.sh, it will be sourced
# during Flume startup.
  
# Enviroment variables can be set here.
  
JAVA_HOME=/usr/lib/jvm/java-7-oracle
  
# Give Flume more memory and pre-allocate, enable remote monitoring via JMX
#JAVA_OPTS="-Xms100m -Xmx200m -Dcom.sun.management.jmxremote"
  
# Note that the Flume conf directory is always included in the classpath.
#FLUME_CLASSPATH=""</code></pre><br>
3)验证是否安装成功<br><p></p>
<div><pre><code class="language-html">root@m1:/home/hadoop# /home/hadoop/flume-1.5.0-bin/bin/flume-ng version
Flume 1.5.0
Source code repository: https://git-wip-us.apache.org/repos/asf/flume.git
Revision: 8633220df808c4cd0c13d1cf0320454a94f1ea97
Compiled by hshreedharan on Wed May 7 14:49:18 PDT 2014
From source with checksum a01fe726e4380ba0c9f7a7d222db961f
root@m1:/home/hadoop#</code></pre><br>
出现上面的信息，表示安装成功了<br></div>
<br><span id="OSC_h2_9"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="background-color:#00D5FF;">3.1 先来个简</span><span style="background-color:#00D5FF;"></span><span style="background-color:#00D5FF;">单的：单节点 Flume 配置</span></span>
</h2>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span></p>
<div>
<div id="highlighter_201368" class="syntaxhighlighter shell">
<div class="toolbar"><span><a href="http://my.oschina.net/leejun2005/blog/288136#" rel="nofollow" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
</td>
<td class="code">
<div>
<div class="line number1 index0 alt2"><code class="shell comments"># example.conf: A single-node Flume
<span class="OUTFOX_NANCI_WRAPPER">configuration</span><span class="OUTFOX_NANCI_TIPS">(配置)</span></code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="shell comments"># Name the <span class="OUTFOX_NANCI_WRAPPER">
components</span><span class="OUTFOX_NANCI_TIPS">(成分)</span> on this agent</code></div>
<div class="line number4 index3 alt1"><code class="shell plain">a1.sources = r1</code></div>
<div class="line number5 index4 alt2"><code class="shell plain">a1.sinks = k1</code></div>
<div class="line number6 index5 alt1"><code class="shell plain">a1.channels = c1</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="shell comments"># Describe/<span class="OUTFOX_NANCI_WRAPPER">configure</span><span class="OUTFOX_NANCI_TIPS">(安装)</span> the source</code></div>
<div class="line number9 index8 alt2"><code class="shell plain">a1.sources.r1.</code><code class="shell functions">type</code>
<code class="shell plain">= netcat</code></div>
<div class="line number10 index9 alt1"><code class="shell plain">a1.sources.r1.<span class="OUTFOX_NANCI_WRAPPER">bind</span><span class="OUTFOX_NANCI_TIPS">(结合)</span> =
<span class="OUTFOX_NANCI_WRAPPER">localhost</span><span class="OUTFOX_NANCI_TIPS">(本地主机)</span></code></div>
<div class="line number11 index10 alt2"><code class="shell plain">a1.sources.r1.port = 44444</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="shell comments"># Describe the sink</code></div>
<div class="line number14 index13 alt1"><code class="shell plain">a1.sinks.k1.</code><code class="shell functions">type</code>
<code class="shell plain">= logger</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"><code class="shell comments"># Use a channel which
<span class="OUTFOX_NANCI_WRAPPER">buffers</span><span class="OUTFOX_NANCI_TIPS">(有软皮摩擦)</span> events in memory</code></div>
<div class="line number17 index16 alt2"><code class="shell plain">a1.channels.c1.</code><code class="shell functions">type</code>
<code class="shell plain">= memory</code></div>
<div class="line number18 index17 alt1"><code class="shell plain">a1.channels.c1.<span class="OUTFOX_NANCI_WRAPPER">capacity</span><span class="OUTFOX_NANCI_TIPS">(能力)</span> = 1000</code></div>
<div class="line number19 index18 alt2"><code class="shell plain">a1.channels.c1.transactionCapacity = 100</code></div>
<div class="line number20 index19 alt1"> </div>
<div class="line number21 index20 alt2"><code class="shell comments"># Bind the source and sink to the channel</code></div>
<div class="line number22 index21 alt1"><code class="shell plain">a1.sources.r1.channels = c1</code></div>
<div class="line number23 index22 alt2"><code class="shell plain">a1.sinks.k1.channel = c1</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<span style="font-family:'Microsoft YaHei';font-size:16px;">将上述配置存为：example.conf</span>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">然后我们就可以启动 Flume 了：</span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span></p>
<div>
<div id="highlighter_966907" class="syntaxhighlighter shell">
<div class="toolbar"><span><a href="http://my.oschina.net/leejun2005/blog/288136#" rel="nofollow" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div>
<div class="line number1 index0 alt2"><code class="shell plain">bin</code><code class="shell plain">/flume-ng</code>
<code class="shell plain">agent --conf conf --conf-</code><code class="shell functions">file</code>
<code class="shell plain">example.conf --name a1 -Dflume.root.logger=INFO,<span class="OUTFOX_NANCI_WRAPPER">console</span><span class="OUTFOX_NANCI_TIPS">(控制台)</span></code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">PS：-Dflume.root.logger=INFO,console 仅为
<span class="OUTFOX_NANCI_WRAPPER">debug</span><span class="OUTFOX_NANCI_TIPS">(调试)</span> 使用，请勿生产环境生搬硬套，否则大量的日志会返回到终端。。。</span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="color:#E53333;"><strong>-c/--conf 后跟配置目录，-f/</strong></span><span style="color:#E53333;"><strong>--conf-file </strong></span><span style="color:#E53333;"><strong></strong></span><span style="color:#E53333;"><strong>后跟具体的配置文件，-n/</strong></span><span style="color:#E53333;"><strong>--name</strong></span><span style="color:#E53333;"><strong></strong></span><span style="color:#E53333;"><strong>
 指定agent的名称</strong></span><span style="color:#E53333;"><strong></strong></span><br></span></p>
<span style="font-family:'Microsoft YaHei';font-size:16px;">然后我们再开一个 <span class="OUTFOX_NANCI_WRAPPER">
shell</span><span class="OUTFOX_NANCI_TIPS">(壳)</span> 终端窗口，telnet 上配置中侦听的端口，就可以发消息看到效果了：</span>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span></p>
<div>
<div id="highlighter_457038" class="syntaxhighlighter shell">
<div class="toolbar"><span><a href="http://my.oschina.net/leejun2005/blog/288136#" rel="nofollow" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
</td>
<td class="code">
<div>
<div class="line number1 index0 alt2"><code class="shell plain">$ telnet <span class="OUTFOX_NANCI_WRAPPER">
localhost</span><span class="OUTFOX_NANCI_TIPS">(本地主机)</span> 44444</code></div>
<div class="line number2 index1 alt1"><code class="shell plain">Trying 127.0.0.1...</code></div>
<div class="line number3 index2 alt2"><code class="shell plain">Connected to localhost.localdomain (127.0.0.1).</code></div>
<div class="line number4 index3 alt1"><code class="shell plain">Escape character is
</code><code class="shell string">'^]'</code><code class="shell plain">.</code></div>
<div class="line number5 index4 alt2"><code class="shell plain">Hello world! &lt;ENTER&gt;</code></div>
<div class="line number6 index5 alt1"><code class="shell plain">OK</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<span style="font-family:'Microsoft YaHei';font-size:16px;"><span class="OUTFOX_NANCI_WRAPPER">Flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span> 终端窗口此时会打印出如下信息，就表示成功了：</span>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span></p>
<div>
<div id="highlighter_245327" class="syntaxhighlighter shell">
<div class="toolbar"><span><a href="http://my.oschina.net/leejun2005/blog/288136#" rel="nofollow" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
</td>
<td class="code">
<div>
<div class="line number1 index0 alt2"><code class="shell plain">12</code><code class="shell plain">/06/19</code>
<code class="shell plain">15:32:19 INFO </code><code class="shell functions">source</code><code class="shell plain">.NetcatSource: Source starting</code></div>
<div class="line number2 index1 alt1"><code class="shell plain">12</code><code class="shell plain">/06/19</code>
<code class="shell plain">15:32:19 INFO </code><code class="shell functions">source</code><code class="shell plain">.NetcatSource: Created serverSocket:sun.nio.ch.ServerSocketChannelImpl[</code><code class="shell plain">/127</code><code class="shell plain">.0.0.1:44444]</code></div>
<div class="line number3 index2 alt2"><code class="shell plain">12</code><code class="shell plain">/06/19</code>
<code class="shell plain">15:32:34 INFO sink.LoggerSink: Event: { headers:{} body: 48 65 6C 6C 6F 20 77 6F 72 6C 64 21 0D          Hello world!. }</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<span style="font-family:'Microsoft YaHei';font-size:16px;">至此，咱们的第一个 <span class="OUTFOX_NANCI_WRAPPER">
Flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span> Agent 算是部署成功了！</span>
<span id="OSC_h2_10"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="background-color:#00D5FF;">3.2
</span><span style="background-color:#00D5FF;">单节点 Flume</span><span style="background-color:#00D5FF;"></span><span style="background-color:#00D5FF;"> 直接写入 HDFS</span></span>
</h2>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span></p>
<div>
<div id="highlighter_64817" class="syntaxhighlighter shell">
<div class="toolbar"><span><a href="http://my.oschina.net/leejun2005/blog/288136#" rel="nofollow" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
</td>
<td class="code">
<div>
<div class="line number1 index0 alt2"><code class="shell comments"># <span class="OUTFOX_NANCI_WRAPPER">
Define</span><span class="OUTFOX_NANCI_TIPS">(定义)</span> a memory channel called ch1 on agent1</code></div>
<div class="line number2 index1 alt1"><code class="shell plain">agent1.channels.ch1.</code><code class="shell functions">type</code>
<code class="shell plain">= memory</code></div>
<div class="line number3 index2 alt2"><code class="shell plain">agent1.channels.ch1.<span class="OUTFOX_NANCI_WRAPPER">capacity</span><span class="OUTFOX_NANCI_TIPS">(能力)</span> = 100000</code></div>
<div class="line number4 index3 alt1"><code class="shell plain">agent1.channels.ch1.transactionCapacity = 100000</code></div>
<div class="line number5 index4 alt2"><code class="shell plain">agent1.channels.ch1.keep-alive = 30</code></div>
<div class="line number6 index5 alt1"> </div>
<div class="line number7 index6 alt2"><code class="shell comments"># <span class="OUTFOX_NANCI_WRAPPER">
Define</span><span class="OUTFOX_NANCI_TIPS">(定义)</span> an Avro source called avro-source1 on agent1 and tell it</code></div>
<div class="line number8 index7 alt1"><code class="shell comments"># to <span class="OUTFOX_NANCI_WRAPPER">
bind</span><span class="OUTFOX_NANCI_TIPS">(结合)</span> to 0.0.0.0:41414. Connect it to channel ch1.</code></div>
<div class="line number9 index8 alt2"><code class="shell comments">#agent1.sources.avro-source1.channels = ch1</code></div>
<div class="line number10 index9 alt1"><code class="shell comments">#agent1.sources.avro-source1.type = avro</code></div>
<div class="line number11 index10 alt2"><code class="shell comments">#agent1.sources.avro-source1.bind = 0.0.0.0</code></div>
<div class="line number12 index11 alt1"><code class="shell comments">#agent1.sources.avro-source1.port = 41414</code></div>
<div class="line number13 index12 alt2"><code class="shell comments">#agent1.sources.avro-source1.threads = 5</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="shell comments">#define source monitor a file</code></div>
<div class="line number16 index15 alt1"><code class="shell plain">agent1.sources.avro-source1.</code><code class="shell functions">type</code>
<code class="shell plain">= </code><code class="shell functions">exec</code></div>
<div class="line number17 index16 alt2"><code class="shell plain">agent1.sources.avro-source1.<span class="OUTFOX_NANCI_WRAPPER">shell</span><span class="OUTFOX_NANCI_TIPS">(壳)</span> =
</code><code class="shell plain">/bin/bash</code> <code class="shell plain">-c</code></div>
<div class="line number18 index17 alt1"><code class="shell plain">agent1.sources.avro-source1.</code><code class="shell functions">command</code>
<code class="shell plain">= </code><code class="shell functions">tail</code> <code class="shell plain">
-n +0 -F </code><code class="shell plain">/home/storm/tmp/id</code><code class="shell plain">.txt</code></div>
<div class="line number19 index18 alt2"><code class="shell plain">agent1.sources.avro-source1.channels = ch1</code></div>
<div class="line number20 index19 alt1"><code class="shell plain">agent1.sources.avro-source1.threads = 5</code></div>
<div class="line number21 index20 alt2"> </div>
<div class="line number22 index21 alt1"><code class="shell comments"># <span class="OUTFOX_NANCI_WRAPPER">
Define</span><span class="OUTFOX_NANCI_TIPS">(定义)</span> a logger sink that simply logs all events it receives</code></div>
<div class="line number23 index22 alt2"><code class="shell comments"># and connect it to the other end of the same channel.</code></div>
<div class="line number24 index23 alt1"><code class="shell plain">agent1.sinks.log-sink1.channel = ch1</code></div>
<div class="line number25 index24 alt2"><code class="shell plain">agent1.sinks.log-sink1.</code><code class="shell functions">type</code>
<code class="shell plain">= hdfs</code></div>
<div class="line number26 index25 alt1"><code class="shell plain">agent1.sinks.log-sink1.hdfs.path = hdfs:</code><code class="shell plain">//192</code><code class="shell plain">.168.1.111:8020</code><code class="shell plain">/flumeTest</code></div>
<div class="line number27 index26 alt2"><code class="shell plain">agent1.sinks.log-sink1.hdfs.writeFormat = Text</code></div>
<div class="line number28 index27 alt1"><code class="shell plain">agent1.sinks.log-sink1.hdfs.fileType = DataStream</code></div>
<div class="line number29 index28 alt2"><code class="shell plain">agent1.sinks.log-sink1.hdfs.rollInterval = 0</code></div>
<div class="line number30 index29 alt1"><code class="shell plain">agent1.sinks.log-sink1.hdfs.rollSize = 1000000</code></div>
<div class="line number31 index30 alt2"><code class="shell plain">agent1.sinks.log-sink1.hdfs.rollCount = 0</code></div>
<div class="line number32 index31 alt1"><code class="shell plain">agent1.sinks.log-sink1.hdfs.batchSize = 1000</code></div>
<div class="line number33 index32 alt2"><code class="shell plain">agent1.sinks.log-sink1.hdfs.txnEventMax = 1000</code></div>
<div class="line number34 index33 alt1"><code class="shell plain">agent1.sinks.log-sink1.hdfs.callTimeout = 60000</code></div>
<div class="line number35 index34 alt2"><code class="shell plain">agent1.sinks.log-sink1.hdfs.appendTimeout = 60000</code></div>
<div class="line number36 index35 alt1"> </div>
<div class="line number37 index36 alt2"><code class="shell comments"># Finally, now that we've
<span class="OUTFOX_NANCI_WRAPPER">defined</span><span class="OUTFOX_NANCI_TIPS">(定义)</span> all of our
<span class="OUTFOX_NANCI_WRAPPER">components</span><span class="OUTFOX_NANCI_TIPS">(成分)</span>, tell</code></div>
<div class="line number38 index37 alt1"><code class="shell comments"># agent1 which ones we want to
<span class="OUTFOX_NANCI_WRAPPER">activate</span><span class="OUTFOX_NANCI_TIPS">(刺激)</span>.</code></div>
<div class="line number39 index38 alt2"><code class="shell plain">agent1.channels = ch1</code></div>
<div class="line number40 index39 alt1"><code class="shell plain">agent1.sources = avro-source1</code></div>
<div class="line number41 index40 alt2"><code class="shell plain">agent1.sinks = log-sink1</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<span style="font-family:'Microsoft YaHei';font-size:16px;">启动如下命令，就可以在 hdfs 上看到效果了。</span>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-size:14px;">../bin/flume-ng agent --conf ../conf/ -f
<span class="OUTFOX_NANCI_WRAPPER">flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span>_directHDFS.conf -n agent1 -Dflume.root.logger=INFO,<span class="OUTFOX_NANCI_WRAPPER">console</span><span class="OUTFOX_NANCI_TIPS">(控制台)</span></span><br></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">PS：实际环境中有这样的需求，通过在多个agent端tail日志，发送给<span class="OUTFOX_NANCI_WRAPPER">collector</span><span class="OUTFOX_NANCI_TIPS">(收藏家)</span>，collector再把数据收集，统一发送给HDFS存储起来，当HDFS文件大小超过一定的大小或者超过在规定的时间间隔会生成一个文件。<br>
Flume 实现了两个Trigger，分别为SizeTriger（在调用HDFS输出流写的同时，count该流已经写入的大小总和，若超过一定大小，则创建新的文件和输出流，写入操作指向新的输出流，同时close以前的输出流）和TimeTriger（开启定时器，当到达该点时，自动创建新的文件和输出流，新的写入重定向到该流中，同时close以前的输出流）。<br></span></p>
<span id="OSC_h2_11"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="background-color:#00D5FF;">3.3 来一个常见架</span><span style="background-color:#00D5FF;"></span><span style="background-color:#00D5FF;">构：多 agent 汇聚写入 HDFS</span></span>
</h2>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><a href="http://static.oschina.net/uploads/img/201407/08014623_InSH.png" rel="nofollow"><img src="http://static.oschina.net/uploads/img/201407/08014623_InSH.png" alt="A fan-in flow using Avro RPC to consolidate events in one place"></a></span>
</p>
<p><br></p>
<span id="OSC_h3_12"></span>
<h3><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;background-color:#B8D100;">3.3.1 在各个webserv日志机上配置 Flume Client</span>
</h3>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span></p>
<div>
<div id="highlighter_477401" class="syntaxhighlighter shell">
<div class="toolbar"><span><a href="http://my.oschina.net/leejun2005/blog/288136#" rel="nofollow" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
</td>
<td class="code">
<div>
<div class="line number1 index0 alt2"><code class="shell comments"># clientMainAgent</code></div>
<div class="line number2 index1 alt1"><code class="shell plain">clientMainAgent.channels = c1</code></div>
<div class="line number3 index2 alt2"><code class="shell plain">clientMainAgent.sources  = s1</code></div>
<div class="line number4 index3 alt1"><code class="shell plain">clientMainAgent.sinks    = k1 k2</code></div>
<div class="line number5 index4 alt2"><code class="shell comments"># clientMainAgent sinks group</code></div>
<div class="line number6 index5 alt1"><code class="shell plain">clientMainAgent.sinkgroups = g1</code></div>
<div class="line number7 index6 alt2"><code class="shell comments"># clientMainAgent Spooling Directory Source</code></div>
<div class="line number8 index7 alt1"><code class="shell plain">clientMainAgent.sources.s1.</code><code class="shell functions">type</code>
<code class="shell plain">= spooldir</code></div>
<div class="line number9 index8 alt2"><code class="shell plain">clientMainAgent.sources.s1.spoolDir  =</code><code class="shell plain">/dsap/rawdata/</code></div>
<div class="line number10 index9 alt1"><code class="shell plain">clientMainAgent.sources.s1.fileHeader =
</code><code class="shell functions">true</code></div>
<div class="line number11 index10 alt2"><code class="shell plain">clientMainAgent.sources.s1.deletePolicy =immediate</code></div>
<div class="line number12 index11 alt1"><code class="shell plain">clientMainAgent.sources.s1.batchSize =1000</code></div>
<div class="line number13 index12 alt2"><code class="shell plain">clientMainAgent.sources.s1.channels =c1</code></div>
<div class="line number14 index13 alt1"><code class="shell plain">clientMainAgent.sources.s1.<span class="OUTFOX_NANCI_WRAPPER">deserializer</span><span class="OUTFOX_NANCI_TIPS">(并行化)</span>.maxLineLength =1048576</code></div>
<div class="line number15 index14 alt2"><code class="shell comments"># clientMainAgent FileChannel</code></div>
<div class="line number16 index15 alt1"><code class="shell plain">clientMainAgent.channels.c1.</code><code class="shell functions">type</code>
<code class="shell plain">= </code><code class="shell functions">file</code></div>
<div class="line number17 index16 alt2"><code class="shell plain">clientMainAgent.channels.c1.checkpointDir =
</code><code class="shell plain">/var/<span class="OUTFOX_NANCI_WRAPPER">flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span>/fchannel/<span class="OUTFOX_NANCI_WRAPPER">spool</span><span class="OUTFOX_NANCI_TIPS">(缠绕)</span>/<span class="OUTFOX_NANCI_WRAPPER">checkpoint</span><span class="OUTFOX_NANCI_TIPS">(检查站)</span></code></div>
<div class="line number18 index17 alt1"><code class="shell plain">clientMainAgent.channels.c1.dataDirs =
</code><code class="shell plain">/var/flume/fchannel/spool/data</code></div>
<div class="line number19 index18 alt2"><code class="shell plain">clientMainAgent.channels.c1.<span class="OUTFOX_NANCI_WRAPPER">capacity</span><span class="OUTFOX_NANCI_TIPS">(能力)</span> = 200000000</code></div>
<div class="line number20 index19 alt1"><code class="shell plain">clientMainAgent.channels.c1.keep-alive = 30</code></div>
<div class="line number21 index20 alt2"><code class="shell plain">clientMainAgent.channels.c1.write-timeout = 30</code></div>
<div class="line number22 index21 alt1"><code class="shell plain">clientMainAgent.channels.c1.checkpoint-timeout=600</code></div>
<div class="line number23 index22 alt2"><code class="shell comments"># clientMainAgent Sinks</code></div>
<div class="line number24 index23 alt1"><code class="shell comments"># k1 sink</code></div>
<div class="line number25 index24 alt2"><code class="shell plain">clientMainAgent.sinks.k1.channel = c1</code></div>
<div class="line number26 index25 alt1"><code class="shell plain">clientMainAgent.sinks.k1.</code><code class="shell functions">type</code>
<code class="shell plain">= avro</code></div>
<div class="line number27 index26 alt2"><code class="shell comments"># connect to CollectorMainAgent</code></div>
<div class="line number28 index27 alt1"><code class="shell plain">clientMainAgent.sinks.k1.</code><code class="shell functions">hostname</code>
<code class="shell plain">= flume115</code></div>
<div class="line number29 index28 alt2"><code class="shell plain">clientMainAgent.sinks.k1.port = 41415
</code></div>
<div class="line number30 index29 alt1"><code class="shell comments"># k2 sink</code></div>
<div class="line number31 index30 alt2"><code class="shell plain">clientMainAgent.sinks.k2.channel = c1</code></div>
<div class="line number32 index31 alt1"><code class="shell plain">clientMainAgent.sinks.k2.</code><code class="shell functions">type</code>
<code class="shell plain">= avro</code></div>
<div class="line number33 index32 alt2"><code class="shell comments"># connect to CollectorBackupAgent</code></div>
<div class="line number34 index33 alt1"><code class="shell plain">clientMainAgent.sinks.k2.</code><code class="shell functions">hostname</code>
<code class="shell plain">= flume116</code></div>
<div class="line number35 index34 alt2"><code class="shell plain">clientMainAgent.sinks.k2.port = 41415</code></div>
<div class="line number36 index35 alt1"><code class="shell comments"># clientMainAgent sinks group</code></div>
<div class="line number37 index36 alt2"><code class="shell plain">clientMainAgent.sinkgroups.g1.sinks = k1 k2</code></div>
<div class="line number38 index37 alt1"><code class="shell comments"># load_balance type</code></div>
<div class="line number39 index38 alt2"><code class="shell plain">clientMainAgent.sinkgroups.g1.<span class="OUTFOX_NANCI_WRAPPER">processor</span><span class="OUTFOX_NANCI_TIPS">(处理器)</span>.</code><code class="shell functions">type</code>
<code class="shell plain">= load_balance</code></div>
<div class="line number40 index39 alt1"><code class="shell plain">clientMainAgent.sinkgroups.g1.processor.<span class="OUTFOX_NANCI_WRAPPER">backoff</span><span class="OUTFOX_NANCI_TIPS">(铲背)</span>   =
</code><code class="shell functions">true</code></div>
<div class="line number41 index40 alt2"><code class="shell plain">clientMainAgent.sinkgroups.g1.<span class="OUTFOX_NANCI_WRAPPER">processor</span><span class="OUTFOX_NANCI_TIPS">(处理器)</span>.<span class="OUTFOX_NANCI_WRAPPER">selector</span><span class="OUTFOX_NANCI_TIPS">(选择器)</span> 
 = <span class="OUTFOX_NANCI_WRAPPER">random</span><span class="OUTFOX_NANCI_TIPS">(随机的)</span></code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-size:14px;">../bin/flume-ng agent --conf ../conf/ -f
<span class="OUTFOX_NANCI_WRAPPER">flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span>_Consolidation.conf -n clientMainAgent -Dflume.root.logger=DEBUG,<span class="OUTFOX_NANCI_WRAPPER">console</span><span class="OUTFOX_NANCI_TIPS">(控制台)</span></span><br></span></p>
<span id="OSC_h3_13"></span>
<h3><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;background-color:#B8D100;">3.3.2 在汇聚节点配置 Flume server</span>
</h3>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span></p>
<div>
<div id="highlighter_315509" class="syntaxhighlighter shell">
<div class="toolbar"><span><a href="http://my.oschina.net/leejun2005/blog/288136#" rel="nofollow" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
</td>
<td class="code">
<div>
<div class="line number1 index0 alt2"><code class="shell comments"># collectorMainAgent</code></div>
<div class="line number2 index1 alt1"><code class="shell plain">collectorMainAgent.channels = c2</code></div>
<div class="line number3 index2 alt2"><code class="shell plain">collectorMainAgent.sources  = s2</code></div>
<div class="line number4 index3 alt1"><code class="shell plain">collectorMainAgent.sinks    =k1 k2</code></div>
<div class="line number5 index4 alt2"><code class="shell comments"># collectorMainAgent AvroSource</code></div>
<div class="line number6 index5 alt1"><code class="shell comments">#</code></div>
<div class="line number7 index6 alt2"><code class="shell plain">collectorMainAgent.sources.s2.</code><code class="shell functions">type</code>
<code class="shell plain">= avro</code></div>
<div class="line number8 index7 alt1"><code class="shell plain">collectorMainAgent.sources.s2.<span class="OUTFOX_NANCI_WRAPPER">bind</span><span class="OUTFOX_NANCI_TIPS">(结合)</span> =
<span class="OUTFOX_NANCI_WRAPPER">flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span>115</code></div>
<div class="line number9 index8 alt2"><code class="shell plain">collectorMainAgent.sources.s2.port = 41415</code></div>
<div class="line number10 index9 alt1"><code class="shell plain">collectorMainAgent.sources.s2.channels = c2</code></div>
<div class="line number11 index10 alt2"> </div>
<div class="line number12 index11 alt1"><code class="shell comments"># collectorMainAgent FileChannel</code></div>
<div class="line number13 index12 alt2"><code class="shell comments">#</code></div>
<div class="line number14 index13 alt1"><code class="shell plain">collectorMainAgent.channels.c2.</code><code class="shell functions">type</code>
<code class="shell plain">= </code><code class="shell functions">file</code></div>
<div class="line number15 index14 alt2"><code class="shell plain">collectorMainAgent.channels.c2.checkpointDir =</code><code class="shell plain">/opt/var/flume/fchannel/<span class="OUTFOX_NANCI_WRAPPER">spool</span><span class="OUTFOX_NANCI_TIPS">(缠绕)</span>/<span class="OUTFOX_NANCI_WRAPPER">checkpoint</span><span class="OUTFOX_NANCI_TIPS">(检查站)</span></code></div>
<div class="line number16 index15 alt1"><code class="shell plain">collectorMainAgent.channels.c2.dataDirs =
</code><code class="shell plain">/opt/var/flume/fchannel/spool/data</code><code class="shell plain">,</code><code class="shell plain">/work/flume/fchannel/spool/data</code></div>
<div class="line number17 index16 alt2"><code class="shell plain">collectorMainAgent.channels.c2.<span class="OUTFOX_NANCI_WRAPPER">capacity</span><span class="OUTFOX_NANCI_TIPS">(能力)</span> = 200000000</code></div>
<div class="line number18 index17 alt1"><code class="shell plain">collectorMainAgent.channels.c2.transactionCapacity=6000</code></div>
<div class="line number19 index18 alt2"><code class="shell plain">collectorMainAgent.channels.c2.checkpointInterval=60000</code></div>
<div class="line number20 index19 alt1"><code class="shell comments"># collectorMainAgent hdfsSink</code></div>
<div class="line number21 index20 alt2"><code class="shell plain">collectorMainAgent.sinks.k2.</code><code class="shell functions">type</code>
<code class="shell plain">= hdfs</code></div>
<div class="line number22 index21 alt1"><code class="shell plain">collectorMainAgent.sinks.k2.channel = c2</code></div>
<div class="line number23 index22 alt2"><code class="shell plain">collectorMainAgent.sinks.k2.hdfs.path = hdfs:</code><code class="shell plain">//db-cdh-cluster/flume</code><code class="shell plain">%{</code><code class="shell functions">dir</code><code class="shell plain">}</code></div>
<div class="line number24 index23 alt1"><code class="shell plain">collectorMainAgent.sinks.k2.hdfs.filePrefix =k2_%{</code><code class="shell functions">file</code><code class="shell plain">}</code></div>
<div class="line number25 index24 alt2"><code class="shell plain">collectorMainAgent.sinks.k2.hdfs.inUsePrefix =_</code></div>
<div class="line number26 index25 alt1"><code class="shell plain">collectorMainAgent.sinks.k2.hdfs.inUseSuffix =.tmp</code></div>
<div class="line number27 index26 alt2"><code class="shell plain">collectorMainAgent.sinks.k2.hdfs.rollSize = 0</code></div>
<div class="line number28 index27 alt1"><code class="shell plain">collectorMainAgent.sinks.k2.hdfs.rollCount = 0</code></div>
<div class="line number29 index28 alt2"><code class="shell plain">collectorMainAgent.sinks.k2.hdfs.rollInterval = 240</code></div>
<div class="line number30 index29 alt1"><code class="shell plain">collectorMainAgent.sinks.k2.hdfs.writeFormat = Text</code></div>
<div class="line number31 index30 alt2"><code class="shell plain">collectorMainAgent.sinks.k2.hdfs.fileType = DataStream</code></div>
<div class="line number32 index31 alt1"><code class="shell plain">collectorMainAgent.sinks.k2.hdfs.batchSize = 6000</code></div>
<div class="line number33 index32 alt2"><code class="shell plain">collectorMainAgent.sinks.k2.hdfs.callTimeout = 60000</code></div>
<div class="line number34 index33 alt1"><code class="shell plain">collectorMainAgent.sinks.k1.</code><code class="shell functions">type</code>
<code class="shell plain">= hdfs</code></div>
<div class="line number35 index34 alt2"><code class="shell plain">collectorMainAgent.sinks.k1.channel = c2</code></div>
<div class="line number36 index35 alt1"><code class="shell plain">collectorMainAgent.sinks.k1.hdfs.path = hdfs:</code><code class="shell plain">//db-cdh-cluster/flume</code><code class="shell plain">%{</code><code class="shell functions">dir</code><code class="shell plain">}</code></div>
<div class="line number37 index36 alt2"><code class="shell plain">collectorMainAgent.sinks.k1.hdfs.filePrefix =k1_%{</code><code class="shell functions">file</code><code class="shell plain">}</code></div>
<div class="line number38 index37 alt1"><code class="shell plain">collectorMainAgent.sinks.k1.hdfs.inUsePrefix =_</code></div>
<div class="line number39 index38 alt2"><code class="shell plain">collectorMainAgent.sinks.k1.hdfs.inUseSuffix =.tmp</code></div>
<div class="line number40 index39 alt1"><code class="shell plain">collectorMainAgent.sinks.k1.hdfs.rollSize = 0</code></div>
<div class="line number41 index40 alt2"><code class="shell plain">collectorMainAgent.sinks.k1.hdfs.rollCount = 0</code></div>
<div class="line number42 index41 alt1"><code class="shell plain">collectorMainAgent.sinks.k1.hdfs.rollInterval = 240</code></div>
<div class="line number43 index42 alt2"><code class="shell plain">collectorMainAgent.sinks.k1.hdfs.writeFormat = Text</code></div>
<div class="line number44 index43 alt1"><code class="shell plain">collectorMainAgent.sinks.k1.hdfs.fileType = DataStream</code></div>
<div class="line number45 index44 alt2"><code class="shell plain">collectorMainAgent.sinks.k1.hdfs.batchSize = 6000</code></div>
<div class="line number46 index45 alt1"><code class="shell plain">collectorMainAgent.sinks.k1.hdfs.callTimeout = 60000</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-size:14px;">../bin/flume-ng agent --conf ../conf/ -f
<span class="OUTFOX_NANCI_WRAPPER">flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span>_Consolidation.conf -n collectorMainAgent -Dflume.root.logger=DEBUG,<span class="OUTFOX_NANCI_WRAPPER">console</span><span class="OUTFOX_NANCI_TIPS">(控制台)</span></span><br></span></p>
<span style="font-family:'Microsoft YaHei';font-size:16px;">上面采用的就是类似 cs 架构，各个 flume agent 节点先将各台机器的日志汇总到 Consolidation 节点，然后再由这些节点统一写入 HDFS，并且采用了负载均衡的方式，你还可以配置高可用的模式等等。</span>
<span id="OSC_h1_14"></span>
<h1><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;background-color:#FFE500;">4、可能遇到的问题：</span>
</h1>
<span id="OSC_h2_15"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="background-color:#00D5FF;">4.1 OOM
</span><span style="background-color:#00D5FF;"></span><span style="background-color:#00D5FF;">问题：</span></span>
</h2>
<div>
<div id="highlighter_952991" class="syntaxhighlighter shell">
<div class="toolbar"><span><a href="http://my.oschina.net/leejun2005/blog/288136#" rel="nofollow" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
</td>
<td class="code">
<div>
<div class="line number1 index0 alt2"><code class="shell plain">flume 报错：</code></div>
<div class="line number2 index1 alt1"><code class="shell plain">java.lang.OutOfMemoryError: GC overhead limit
<span class="OUTFOX_NANCI_WRAPPER">exceeded</span><span class="OUTFOX_NANCI_TIPS">(超过)</span></code></div>
<div class="line number3 index2 alt2"><code class="shell plain">或者：</code></div>
<div class="line number4 index3 alt1"><code class="shell plain">java.lang.OutOfMemoryError: Java heap space</code></div>
<div class="line number5 index4 alt2"><code class="shell plain">Exception </code>
<code class="shell keyword">in</code> <code class="shell plain">thread </code><code class="shell string">"SinkRunner-PollingRunner-DefaultSinkProcessor"</code>
<code class="shell plain">java.lang.OutOfMemoryError: Java heap space</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span class="OUTFOX_NANCI_WRAPPER">Flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span> 启动时的最大堆内存大小默认是 20M，线上环境很容易 OOM，因此需要你在 flume-env.sh 中添加 JVM
 启动参数: <br></span></p>
<div>
<div id="highlighter_814590" class="syntaxhighlighter java">
<div class="toolbar"><span><a href="http://my.oschina.net/leejun2005/blog/288136#" rel="nofollow" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div>
<div class="line number1 index0 alt2"><code class="java plain">JAVA_OPTS=</code><code class="java string">"-Xms8192m -Xmx8192m -Xss256k -Xmn2g -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:-UseGCOverheadLimit"</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">然后在启动 agent 的时候一定要带上 -c conf 选项，否则 flume-env.sh 里配置的环境变量不会被加载生效。</span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;">具体参见：</span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><a href="http://stackoverflow.com/questions/1393486/error-java-lang-outofmemoryerror-gc-overhead-limit-exceeded" rel="nofollow"><span style="font-size:14px;">http://stackoverflow.com/questions/1393486/error-java-lang-outofmemoryerror-gc-overhead-limit-exceeded</span></a></span>
</p>
<p><a href="http://marc.info/?l=flume-user&amp;m=138933303305433&amp;w=2" rel="nofollow"><span style="font-size:14px;">http://marc.info/?l=flume-user&amp;m=138933303305433&amp;w=2</span></a><span style="font-size:14px;"></span>
</p>
<span id="OSC_h2_16"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;background-color:#00D5FF;">4.2 JDK 版本不兼容问题：</span>
</h2>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"></span></p>
<div>
<div id="highlighter_34878" class="syntaxhighlighter java">
<div class="toolbar"><span><a href="http://my.oschina.net/leejun2005/blog/288136#" rel="nofollow" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
</td>
<td class="code">
<div>
<div class="line number1 index0 alt2"><code class="java value">2014</code><code class="java plain">-</code><code class="java value">07</code><code class="java plain">-</code><code class="java value">07</code>
<code class="java value">14</code><code class="java plain">:</code><code class="java value">44</code><code class="java plain">:</code><code class="java value">17</code><code class="java plain">,</code><code class="java value">902</code>
<code class="java plain">(agent-shutdown-hook) [WARN - org.apache.<span class="OUTFOX_NANCI_WRAPPER">flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span>.sink.hdfs.HDFSEventSink.stop(HDFSEventSink.java:</code><code class="java value">504</code><code class="java plain">)]
 Exception </code><code class="java keyword">while</code> <code class="java plain">
closing hdfs:</code><code class="java comments">//192.168.1.111:8020/flumeTest/FlumeData.
<span class="OUTFOX_NANCI_WRAPPER">Exception</span><span class="OUTFOX_NANCI_TIPS">(例外)</span> follows.</code></div>
<div class="line number2 index1 alt1"><code class="java plain">java.lang.UnsupportedOperationException: This is supposed to be
<span class="OUTFOX_NANCI_WRAPPER">overridden</span><span class="OUTFOX_NANCI_TIPS">(蹂躏)</span> by
<span class="OUTFOX_NANCI_WRAPPER">subclasses</span><span class="OUTFOX_NANCI_TIPS">(亚纲)</span>.</code></div>
<div class="line number3 index2 alt2"><code class="java spaces">        </code><code class="java plain">at com.google.protobuf.GeneratedMessage.getUnknownFields(GeneratedMessage.java:</code><code class="java value">180</code><code class="java plain">)</code></div>
<div class="line number4 index3 alt1"><code class="java spaces">        </code><code class="java plain">at org.apache.hadoop.hdfs.<span class="OUTFOX_NANCI_WRAPPER">protocol</span><span class="OUTFOX_NANCI_TIPS">(协议)</span>.<span class="OUTFOX_NANCI_WRAPPER">proto</span><span class="OUTFOX_NANCI_TIPS">(原型)</span>.ClientNamenodeProtocolProtos$GetFileInfoRequestProto.getSerializedSize(ClientNamenodeProtocolProtos.java:</code><code class="java value">30108</code><code class="java plain">)</code></div>
<div class="line number5 index4 alt2"><code class="java spaces">        </code><code class="java plain">at com.google.protobuf.AbstractMessageLite.toByteString(AbstractMessageLite.java:</code><code class="java value">49</code><code class="java plain">)</code></div>
<div class="line number6 index5 alt1"><code class="java spaces">        </code><code class="java plain">at org.apache.hadoop.ipc.ProtobufRpcEngine$<span class="OUTFOX_NANCI_WRAPPER">Invoker</span><span class="OUTFOX_NANCI_TIPS">(调用)</span>.constructRpcRequest(ProtobufRpcEngine.java:</code><code class="java value">149</code><code class="java plain">)</code></div>
<div class="line number7 index6 alt2"><code class="java spaces">        </code><code class="java plain">at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:</code><code class="java value">193</code><code class="java plain">)</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;">把你的 jdk7 换成 jdk6 试试。</span>
</p>
<span id="OSC_h2_17"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;background-color:#00D5FF;">4.3 小文件写入 HDFS 延时的问题</span>
</h2>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;">其实上面 3.2 中已有说明，<span class="OUTFOX_NANCI_WRAPPER">flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span> 的 sink 已经实现了几种最主要的持久化触发器：</span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;">比如按大小、按间隔时间、按消息条数等等，针对你的文件过小迟迟没法写入 HDFS 持久化的问题，</span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;">那是因为你此时还没有满足持久化的条件，比如你的行数还没有达到配置的阈值或者大小还没达到等等，</span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;">可以针对上面 3.2 小节的配置微调下，例如：</span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;"></span></p>
<div>
<div id="highlighter_219863" class="syntaxhighlighter shell">
<div class="toolbar"><span><a href="http://my.oschina.net/leejun2005/blog/288136#" rel="nofollow" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div>
<div class="line number1 index0 alt2"><code class="shell plain">agent1.sinks.log-sink1.hdfs.rollInterval = 20</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<span style="font-family:'Microsoft YaHei';font-size:16px;">当迟迟没有新日志生成的时候，如果你想很快的
<span class="OUTFOX_NANCI_WRAPPER">flush</span><span class="OUTFOX_NANCI_TIPS">(大量的)</span>，那么让它每隔 20s flush 持久化一下，agent 会根据多个条件，优先执行满足条件的触发器。</span>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;">下面贴一些常见的持久化触发器：</span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;"></span></p>
<div>
<div id="highlighter_678305" class="syntaxhighlighter shell">
<div class="toolbar"><span><a href="http://my.oschina.net/leejun2005/blog/288136#" rel="nofollow" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
</td>
<td class="code">
<div>
<div class="line number1 index0 alt2"><code class="shell comments"># Number of seconds to wait before rolling current file (in 600 seconds)</code></div>
<div class="line number2 index1 alt1"><code class="shell plain">agent.sinks.sink.hdfs.rollInterval=600</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="shell comments"># File size to
<span class="OUTFOX_NANCI_WRAPPER">trigger</span><span class="OUTFOX_NANCI_TIPS">(引发)</span> roll, in bytes (256Mb)</code></div>
<div class="line number5 index4 alt2"><code class="shell plain">agent.sinks.sink.hdfs.rollSize = 268435456</code></div>
<div class="line number6 index5 alt1"> </div>
<div class="line number7 index6 alt2"><code class="shell comments"># never roll based on number of events</code></div>
<div class="line number8 index7 alt1"><code class="shell plain">agent.sinks.sink.hdfs.rollCount = 0</code></div>
<div class="line number9 index8 alt2"> </div>
<div class="line number10 index9 alt1"><code class="shell comments"># Timeout after which
<span class="OUTFOX_NANCI_WRAPPER">inactive</span><span class="OUTFOX_NANCI_TIPS">(不活跃的)</span> files get closed (in seconds)</code></div>
<div class="line number11 index10 alt2"><code class="shell plain">agent.sinks.sink.hdfs.idleTimeout = 3600</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="shell plain">agent.sinks.HDFS.hdfs.batchSize = 1000</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<span style="font-family:'Microsoft YaHei';font-size:16px;">更多关于 sink 的触发机制与参数配置请参见：
</span><a href="http://flume.apache.org/FlumeUserGuide.html#hdfs-sink" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:16px;">http://<span class="OUTFOX_NANCI_WRAPPER">flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span>.apache.org/FlumeUserGuide.html#hdfs-sink</span></a>
<p><span style="font-family:'Microsoft YaHei';"><a href="http://stackoverflow.com/questions/20638498/flume-not-writing-to-hdfs-unless-killed" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:16px;">http://stackoverflow.com/questions/20638498/flume-not-writing-to-hdfs-unless-killed</span></a></span>
</p>
<p><span style="font-family:'Microsoft YaHei';color:#E53333;font-size:16px;"><strong>注意：对于 HDFS 来说应当竭力避免小文件问题，所以请慎重对待你配置的持久化触发机制。</strong></span>
</p>
<span id="OSC_h2_18"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;background-color:#00D5FF;"><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:24px;background-color:#00D5FF;">4.4 数据重复写入、丢失问题</span></span>
</h2>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;"><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:24px;">Flume的HDFSsink在数据写入/读出Channel时，都有Transcation的保证。当Transaction失败时，会回滚，然后重试。但由于HDFS不可修改文件的内容，假设有1万行数据要写入HDFS，而在写入5000行时，网络出现问题导致写入失败，Transaction回滚，然后重写这10000条记录成功，就会导致第一次写入的5000行重复。这些问题是
 HDFS 文件系统设计上的特性缺陷，并不能通过简单的Bugfix来解决。我们只能关闭批量写入，单条事务保证，或者启用监控策略，两端对数。<br></span></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;"><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:24px;">Memory和exec的方式可能会有数据丢失，file 是 end to end 的可靠性保证的，但是性能较前两者要差。</span></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;">end to end、store on failure 方式 ACK 确认时间设置过短（特别是高峰时间）也有可能引发数据的重复写入</span><span style="font-family:'Microsoft YaHei';font-size:16px;">。</span>
</p>
<span id="OSC_h2_19"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;background-color:#00D5FF;">4.5 tail 断点续传的问题：</span>
</h2>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;">可以在 tail 传的时候记录行号，下次再传的时候，取上次记录的位置开始传输，类似：</span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;"></span></p>
<div>
<div id="highlighter_503219" class="syntaxhighlighter shell">
<div class="toolbar"><span><a href="http://my.oschina.net/leejun2005/blog/288136#" rel="nofollow" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div>
<div class="line number1 index0 alt2"><code class="shell plain">agent1.sources.avro-source1.</code><code class="shell functions">command</code>
<code class="shell plain">= </code><code class="shell plain">/usr/local/bin/tail</code> 
<code class="shell plain">-n +$(</code><code class="shell functions">tail</code> <code class="shell plain">
-n1 </code><code class="shell plain">/home/storm/tmp/n</code><code class="shell plain">) --max-unchanged-stats=600 -F 
</code><code class="shell plain">/home/storm/tmp/id</code><code class="shell plain">.txt |
</code><code class="shell functions">awk</code> <code class="shell string">'ARNGIND==1{i=$0;next}{i++; if($0~/文件已截断/)i=0; print i &gt;&gt; "/home/storm/tmp/n";print $1"---"i}'</code>
<code class="shell plain">/home/storm/tmp/n</code> <code class="shell plain">-</code></div>
</div>
</td>
</tr></tbody></table></div>
</div>
<span style="font-size:16px;">需要注意如下几点：</span>
<p><span style="font-size:16px;"><span style="line-height:24px;font-size:16px;">（1）文件被
<span class="OUTFOX_NANCI_WRAPPER">rotation</span><span class="OUTFOX_NANCI_TIPS">(旋转)</span> 的时候，需要同步更新你的断点记录“指针”，</span></span>
</p>
<p><span style="font-size:16px;"><span style="line-height:24px;font-size:16px;">（2）需要按文件名来追踪文件，</span></span>
</p>
<p><span style="font-size:16px;"><span style="line-height:24px;font-size:16px;">（3）flume 挂掉后需要累加断点续传“指针”</span></span>
</p>
<p><span style="font-size:16px;"><span style="line-height:24px;font-size:16px;">（4）<span class="OUTFOX_NANCI_WRAPPER">flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span> 挂掉后，如果恰好文件被 rotation，那么会有丢数据的风险，</span></span>
</p>
<p><span style="font-size:16px;"><span style="line-height:24px;font-size:16px;">       只能监控尽快拉起或者加逻辑判断文件大小重置指针。</span></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;">（5）tail 注意你的版本，请更新 coreutils 包到最新。</span>
</p>
<span id="OSC_h2_20"></span>
<h2><span style="font-family:'Microsoft YaHei';font-size:16px;background-color:#00D5FF;">4.6 在
<span class="OUTFOX_NANCI_WRAPPER">Flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span> 中如何修改、丢弃、按预定义规则分类存储数据？</span>
</h2>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;">这里你需要利用 Flume 提供的拦截器（<span class="OUTFOX_NANCI_WRAPPER">Interceptor</span><span class="OUTFOX_NANCI_TIPS">(拦截机)</span>）机制来满足上述的需求了，具体请参考下面几个链接：</span>
</p>
<p><span><span style="line-height:24px;">（1）Flume-NG源码阅读之Interceptor(原创)  </span></span>
</p>
<p><span><span style="line-height:24px;"><a href="http://www.cnblogs.com/lxf20061900/p/3664602.html" rel="nofollow">http://www.cnblogs.com/lxf20061900/p/3664602.html</a><br></span></span></p>
<p><span><span style="line-height:24px;">（2）Flume-NG自定义拦截器</span></span> </p>
<p><span><span style="line-height:24px;"><a href="http://sep10.com/posts/2014/04/15/flume-interceptor/" rel="nofollow">http://sep10.com/posts/2014/04/15/flume-interceptor/</a><br></span></span></p>
<p><span><span style="line-height:24px;">（3）Flume-ng生产环境实践（四）实现log格式化interceptor</span></span>
</p>
<p><span><span style="line-height:24px;"><a href="http://blog.csdn.net/rjhym/article/details/8450728" rel="nofollow">http://blog.csdn.net/rjhym/article/details/8450728</a></span></span>
</p>
<p><span><span style="line-height:24px;">（4）flume-ng如何根据源文件名输出到HDFS文件名</span></span>
</p>
<p><span><span style="line-height:24px;"><a href="http://abloz.com/2013/02/19/flume-ng-output-according-to-the-source-file-name-to-the-hdfs-file-name.html" rel="nofollow">http://abloz.com/2013/02/19/flume-ng-output-according-to-the-source-file-name-to-the-hdfs-file-name.html</a></span></span>
</p>
<span id="OSC_h1_21"></span>
<h1><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="background-color:#FFE500;">5、Refe</span><span style="background-color:#FFE500;"></span><span style="background-color:#FFE500;">r：</span></span>
</h1>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;">（1）</span><span style="font-family:'Microsoft YaHei';font-size:12px;"><span class="OUTFOX_NANCI_WRAPPER">scribe</span><span class="OUTFOX_NANCI_TIPS">(抄写员)</span>、chukwa、kafka、flume日志系统对比
  </span></span> </p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><a href="http://www.ttlsa.com/log-system/scribe-chukwa-kafka-flume-log-system-contrast/" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://www.ttlsa.com/log-system/scribe-chukwa-kafka-flume-log-system-contrast/</span></a></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;">（2）</span><span style="font-family:'Microsoft YaHei';font-size:12px;">关于Flume-ng那些事  </span><a href="http://www.ttlsa.com/?s=flume" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://www.ttlsa.com/?s=flume</span></a></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:12px;">         </span><span style="font-family:'Microsoft YaHei';font-size:12px;">关于Flume-ng那些事（三）：常见架构测试  </span><a href="http://www.ttlsa.com/log-system/about-flume-ng-3/" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://www.ttlsa.com/log-system/about-flume-ng-3/</span></a>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;">（3）</span><span style="font-family:'Microsoft YaHei';font-size:14px;"></span><span style="font-family:'Microsoft YaHei';font-size:14px;"></span><span style="font-family:'Microsoft YaHei';font-size:14px;"></span><span style="font-family:'Microsoft YaHei';font-size:12px;"><span class="OUTFOX_NANCI_WRAPPER">Flume</span><span class="OUTFOX_NANCI_TIPS">(水道)</span>
 1.4.0 User Guide</span></span> </p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><a href="http://archive.cloudera.com/cdh4/cdh/4/flume-ng-1.4.0-cdh4.7.0/FlumeUserGuide.html" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://archive.cloudera.com/cdh4/cdh/4/flume-ng-1.4.0-cdh4.7.0/FlumeUserGuide.html</span></a></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;">（4）</span><span style="font-family:'Microsoft YaHei';font-size:12px;">flume日志采集  </span><a href="http://blog.csdn.net/sunmeng_007/article/details/9762507" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://blog.csdn.net/sunmeng_007/article/details/9762507</span></a></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;">（5）</span><span style="font-family:'Microsoft YaHei';font-size:12px;">Flume-NG + HDFS + HIVE 日志收集分析</span></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><a href="http://eyelublog.wordpress.com/2013/01/13/flume-ng-hdfs-hive-%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E5%88%86%E6%9E%90/" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://eyelublog.wordpress.com/2013/01/13/flume-ng-hdfs-hive-%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E5%88%86%E6%9E%90/</span></a></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;">（6）</span><span style="font-family:'Microsoft YaHei';font-size:12px;">【Twitter Storm系列】flume-ng+Kafka+Storm+HDFS 实时系统搭建</span></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><a href="http://blog.csdn.net/weijonathan/article/details/18301321" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://blog.csdn.net/weijonathan/article/details/18301321</span></a></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;">（7）</span><span style="font-family:'Microsoft YaHei';font-size:12px;">Flume-NG + HDFS + PIG 日志收集分析</span></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><a href="http://hi.baidu.com/life_to_you/item/a98e2ec3367486dbef183b5e" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://hi.baidu.com/life_to_you/item/a98e2ec3367486dbef183b5e</span></a><span style="font-family:'Microsoft YaHei';font-size:14px;"></span></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;">flume 示例一收集tomcat日志  </span><a href="http://my.oschina.net/88sys/blog/71529" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://my.oschina.net/88sys/blog/71529</span></a></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;">flume-ng 多节点集群示例  </span><a href="http://my.oschina.net/u/1401580/blog/204052" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://my.oschina.net/u/1401580/blog/204052</span></a></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;">试用flume-ng 1.1</span><span style="font-family:'Microsoft YaHei';font-size:14px;"></span><span style="font-family:'Microsoft YaHei';font-size:12px;">  </span><span style="font-family:'Microsoft YaHei';font-size:14px;"><a href="http://heipark.iteye.com/blog/1617995" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://heipark.iteye.com/blog/1617995</span></a></span><span style="font-family:'Microsoft YaHei';font-size:14px;"></span><span style="font-family:'Microsoft YaHei';font-size:14px;"></span><span style="font-family:'Microsoft YaHei';font-size:14px;"></span><span style="font-family:'Microsoft YaHei';font-size:14px;"></span><span style="font-family:'Microsoft YaHei';font-size:14px;"></span><br></span></p>
<p><span style="font-family:'Microsoft YaHei';font-size:12px;line-height:1.5;">（8）Flafka: Apache Flume Meets Apache Kafka for Event Processing</span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-size:14px;"><a href="http://blog.cloudera.com/blog/2014/11/flafka-apache-flume-meets-apache-kafka-for-event-processing/" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://blog.cloudera.com/blog/2014/11/flafka-apache-flume-meets-apache-kafka-for-event-processing/</span></a></span></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;">（9）</span><span style="font-family:'Microsoft YaHei';font-size:12px;">Flume-ng的原理和使用</span></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><a href="http://segmentfault.com/blog/javachen/1190000002532284" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://segmentfault.com/blog/javachen/1190000002532284</span></a></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;">（10）</span><span style="font-family:'Microsoft YaHei';font-size:12px;">基于Flume的美团日志收集系统(一)架构和设计</span></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><a href="http://tech.meituan.com/mt-log-system-arch.html" rel="nofollow"><span style="font-family:'Microsoft YaHei';font-size:12px;">http://tech.meituan.com/mt-log-system-arch.html</span></a></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;">（11）</span><span style="font-family:'Microsoft YaHei';font-size:12px;">基于Flume的美团日志收集系统(二)改进和优化</span></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-family:'Microsoft YaHei';font-size:12px;"><a href="http://tech.meituan.com/mt-log-system-optimization.html" rel="nofollow">http://tech.meituan.com/mt-log-system-optimization.html</a></span><span style="font-family:'Microsoft YaHei';font-size:12px;"></span><span style="font-family:'Microsoft YaHei';font-size:12px;"></span><span style="font-family:'Microsoft YaHei';font-size:12px;"></span><span style="font-family:'Microsoft YaHei';font-size:12px;"></span><span style="font-family:'Microsoft YaHei';font-size:12px;"></span><span style="font-family:'Microsoft YaHei';font-size:12px;"></span></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-size:12px;">（12）</span><span style="font-size:12px;">How-to: Do Real-Time Log
<span class="OUTFOX_NANCI_WRAPPER">Analytics</span><span class="OUTFOX_NANCI_TIPS">(分析学)</span> with Apache Kafka, Cloudera Search, and Hue</span></span>
</p>
<p><span style="font-family:'Microsoft YaHei';font-size:16px;line-height:1.5;"><span style="font-size:12px;"><a href="http://blog.cloudera.com/blog/2015/02/how-to-do-real-time-log-analytics-with-apache-kafka-cloudera-search-and-hue/" rel="nofollow">http://blog.cloudera.com/blog/2015/02/how-to-do-real-time-log-analytics-with-apache-kafka-cloudera-search-and-hue/</a></span><span style="font-size:12px;"></span><span style="font-size:12px;"></span></span>
</p>
<p><span><span style="font-size:16px;line-height:24px;"><span style="font-size:12px;">（13）</span><span style="font-size:12px;">Real-time analytics in Apache Flume - Part 1</span></span></span>
</p>
<p><span><span style="font-size:16px;line-height:24px;"><a href="http://jameskinley.tumblr.com/post/57704266739/real-time-analytics-in-apache-flume-part-1" rel="nofollow"><span style="font-size:12px;">http://jameskinley.tumblr.com/post/57704266739/real-time-analytics-in-apache-flume-part-1</span></a></span></span></p>
<br>            </div>
                </div>