---
layout:     post
title:      Flume（01）——日志采集框架Flume概述
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p></p><div class="toc"><h3>Flume</h3><ul><ul><li><a href="#1__1" rel="nofollow">1 概述</a></li><ul><ul><li><a href="#Flume_2" rel="nofollow">Flume是什么？</a></li><li><a href="#Flume_7" rel="nofollow">Flume的版本</a></li></ul></ul><li><a href="#2__33" rel="nofollow">2 运行机制</a></li><li><a href="#3_Flume_42" rel="nofollow">3 Flume采集系统结构图</a></li><ul><ul><li><a href="#31__43" rel="nofollow">3.1 简单结构</a></li><li><a href="#32__48" rel="nofollow">3.2 复杂架构</a></li></ul></ul></ul></ul></div><p></p>
<h2><a id="1__1"></a>1 概述</h2>
<h4><a id="Flume_2"></a>Flume是什么？</h4>
<p>Flume是一个分布式、可靠、高可用的，海量日志采集、聚合和传输的系统。<br>
Flume可以采集文件，socket数据包、文件、文件夹、kafka等各种形式源数据，又可以将采集到的数据(下沉sink)输出到HDFS、hbase、hive、kafka等众多外部存储系统中。<br>
一般的采集需求，通过对flume的简单配置即可实现。<br>
Flume针对特殊场景也具备良好的自定义扩展能力，可以适用于大部分的日常数据采集场景。</p>
<h4><a id="Flume_7"></a>Flume的版本</h4>
<p>主要有两个版本：Flume OG和Flume NG<br>
Flume OG:0.9.x或cdh3以及更早的版本,由agent、collector、master等组件构成<br>
Flume NG:1.x或cdh4以及之后的版本,由Agent、client等组件构成</p>
<p>Flume OG存在的问题:</p>
<pre><code> 1. Flume OG代码工程臃肿

 2.核心组件设计不合理

 3.核心配置不标准

 4.日志传输不稳定
</code></pre>
<p>Flume NG的特点:</p>
<pre><code>1.只有一种角色的节点:代理节点(Agent)

2.没有collector,master节点

3.去除了physical nodes,local nodes 的概念和相关内容

4.agent节点的组成发生了变化，脱离了zookeeper
</code></pre>
<p>Flume NG更像是一个轻量级的小工具，适应各种方式的日志收集，支持failover和负载均衡。</p>
<h2><a id="2__33"></a>2 运行机制</h2>
<p>1、Flume分布式系统中最核心的角色是agent，flume采集系统就是由一个个agent所连接起来形成。<br>
2、每一个agent相当于一个数据传递员，内部主要有三大组件：<br>
a、 <strong>Source</strong>：采集组件，用于跟数据源对接，以获取数据。不同的 source，可以接受不同的数据格式。<br>
b、 <strong>Sink</strong>：下沉组件，用于往下一级agent传递数据或者往最终存储系统传递数据。sink 会消费 channel 中的数据，然后送给外部源或者其他 source。<br>
c、 <strong>Channel</strong>：传输通道组件，也可以说成是一个存储池，用于从source将数据传递到sink。channel 中的数据直到进入到下一个channel中或者进入终端才会被删除。<br>
<img src="https://img-blog.csdn.net/20181001214618144?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZlbmdnbXM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p>
<h2><a id="3_Flume_42"></a>3 Flume采集系统结构图</h2>
<h4><a id="31__43"></a>3.1 简单结构</h4>
<p>简单结构主要是单个agent采集数据。<br>
<img src="https://img-blog.csdn.net/20181001214601250?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZlbmdnbXM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"><br>
嗯，这里把上面的图再放一遍。。。都是官网的图啦~</p>
<h4><a id="32__48"></a>3.2 复杂架构</h4>
<p>复杂架构是由多级agent之间串联。根据需要，想怎么串就怎么串。也叫多级flume<br>
<img src="https://img-blog.csdn.net/20181001214816523?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZlbmdnbXM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p>

            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>