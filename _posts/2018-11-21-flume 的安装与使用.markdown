---
layout:     post
title:      flume 的安装与使用
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：原创文章 欢迎参考 请勿抄袭					https://blog.csdn.net/aA518189/article/details/80888029				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <h1><span style="color:#000000;">1. 概述</span></h1><h2><span style="color:#000000;"><span style="font-family:'宋体';">什么是</span>flume?</span></h2><p><strong><span style="color:#000000;">Flume<span style="font-family:'宋体';">是一种分布式，可靠且可用的服务，用于高效地收集，汇总和移动大量日志数据。它具有基于流式数据流的简单而灵活的架构。它具有可靠的可靠性机制以及许多故障转移和恢复机制，具有强大的容错性和容错能力。它使用一个简单的可扩展数据模型，允许在线分析应用程序。</span></span></strong></p><h2><span style="color:#000000;">Flume特性</span></h2><p><strong><span style="color:#000000;">Flume<span style="font-family:'宋体';">是一个分布式、可靠、和高可用的海量日志采集、聚合和传输的系统。</span></span></strong></p><p><strong><span style="color:#000000;">Flume<span style="font-family:'宋体';">可以采集文件，</span><span style="font-family:Calibri;">socket</span><span style="font-family:'宋体';">数据包、文件、文件夹、</span><span style="font-family:Calibri;">kafka</span><span style="font-family:'宋体';">等各种形式源数据，又可以将采集到的数据</span><span style="font-family:Calibri;">(</span><span style="font-family:'宋体';">下沉</span><span style="font-family:Calibri;">sink)</span><span style="font-family:'宋体';">输出到</span><span style="font-family:Calibri;">HDFS</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">hbase</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">hive</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">kafka</span><span style="font-family:'宋体';">等众多外部存储系统中</span></span></strong></p><p><strong><span style="color:#000000;"><span style="font-family:'宋体';">一般的采集需求，通过对</span>flume<span style="font-family:'宋体';">的简单配置即可实现</span></span></strong></p><p><strong><span style="color:#000000;">u Flume<span style="font-family:'宋体';">针对特殊场景也具备良好的自定义扩展能力，因此，</span><span style="font-family:Calibri;">flume</span><span style="font-family:'宋体';">可以适用于大部分的日常数据采集场景</span></span></strong></p><h1><span style="color:#000000;">2. Flume<span style="font-family:'宋体';">的一些核心概念</span></span></h1><p><strong><span style="color:#ff0000;">Client<span style="font-family:'宋体';">：</span></span><span style="color:rgb(0,0,0);font-family:Verdana;">Client</span><span style="color:rgb(0,0,0);font-family:'宋体';">生产数据，运行在一个独立的线程。</span></strong></p><p><strong><span style="color:#ff0000;">Event</span><span style="font-family:'宋体';"><span style="color:#ff0000;">：</span><span style="color:#000000;"> 一个</span></span><span style="color:rgb(0,0,0);"><span style="font-family:'宋体';">数据单元，消息头和消息体组成。</span></span><span style="color:rgb(0,0,0);"><span style="font-family:'宋体';">（</span>Events<span style="font-family:'宋体';">可以是日志记录、 </span><span style="font-family:Verdana;">avro </span><span style="font-family:'宋体';">对象等。）</span></span><span style="color:rgb(0,0,0);"><br></span><span style="color:#ff0000;">Flow</span><span style="font-family:'宋体';"><span style="color:#ff0000;">：</span> </span><span style="color:rgb(0,0,0);font-family:Verdana;">Event</span><span style="color:rgb(0,0,0);font-family:'宋体';">从源点到达目的点的迁移的抽象。</span><span style="color:rgb(0,0,0);"><br></span><span style="color:#ff0000;">Agent</span><span style="font-family:'宋体';"><span style="color:#ff0000;">：</span><span style="color:#000000;"> 一个独立的</span></span><span style="color:rgb(0,0,0);font-family:Verdana;">Flume</span><span style="color:rgb(0,0,0);font-family:'宋体';">进程，包含组件</span><span style="color:rgb(0,0,0);font-family:Verdana;">Source</span><span style="color:rgb(0,0,0);font-family:'宋体';">、 </span><span style="color:rgb(0,0,0);font-family:Verdana;">Channel</span><span style="color:rgb(0,0,0);font-family:'宋体';">、 </span><span style="color:rgb(0,0,0);font-family:Verdana;">Sink</span><span style="color:rgb(0,0,0);font-family:'宋体';">。（</span><span style="color:rgb(0,0,0);font-family:Verdana;">Agent</span><span style="color:rgb(0,0,0);font-family:'宋体';">使用</span><span style="color:rgb(0,0,0);font-family:Verdana;">JVM </span><span style="color:rgb(0,0,0);font-family:'宋体';">运行</span><span style="color:rgb(0,0,0);font-family:Verdana;">Flume</span><span style="color:rgb(0,0,0);font-family:'宋体';">。每台机器运行一个</span><span style="color:rgb(0,0,0);font-family:Verdana;">agent</span><span style="color:rgb(0,0,0);font-family:'宋体';">，但是可以在一个</span><span style="color:rgb(0,0,0);font-family:Verdana;">agent</span><span style="color:rgb(0,0,0);font-family:'宋体';">中包含</span></strong></p><p><strong><span style="color:rgb(0,0,0);"><span style="font-family:'宋体';">　　　　　　多个</span>sources<span style="font-family:'宋体';">和</span><span style="font-family:Verdana;">sinks</span><span style="font-family:'宋体';">。）</span></span><span style="color:rgb(0,0,0);"><br></span><span style="color:#ff0000;">Source</span><span style="color:rgb(0,0,0);font-family:'宋体';">：</span><span style="color:rgb(0,0,0);"><span style="font-family:'宋体';">消费</span>web<span style="font-family:'宋体';">系统这样的外部数据源中的数据（一般就是</span><span style="font-family:Verdana;">web</span><span style="font-family:'宋体';">系统产生的日志），外部数据源会向</span><span style="font-family:Verdana;">flume</span><span style="font-family:'宋体';">发送某种能被</span><span style="font-family:Verdana;">flume</span><span style="font-family:'宋体';">识别的格式的事件，有以下几种类型：</span></span><span style="color:rgb(0,0,0);">avro <span style="font-family:'宋体';">、</span><span style="font-family:Verdana;">exec</span><span style="font-family:'宋体';">、</span><span style="font-family:Verdana;">jms</span><span style="font-family:'宋体';">、</span><span style="font-family:Verdana;">spooling directory source</span><span style="font-family:'宋体';">、</span><span style="font-family:Verdana;">kafka</span><span style="font-family:'宋体';">、</span><span style="font-family:Verdana;">netcat</span><span style="font-family:'宋体';">等</span><span style="font-family:Verdana;"> </span></span><span style="color:rgb(0,0,0);"><br></span><span style="color:#ff0000;">Channel<span style="font-family:'宋体';">：</span></span><span style="color:rgb(0,0,0);"><span style="font-family:'宋体';">当</span>flume source<span style="font-family:'宋体';">从外部</span><span style="font-family:Verdana;">source</span><span style="font-family:'宋体';">读取到数据的时候，</span><span style="font-family:Verdana;">flume</span><span style="font-family:'宋体';">会将数据先存放在一个或多个</span><span style="font-family:Verdana;">channel</span><span style="font-family:'宋体';">中，这些数据将会一直被存放在</span><span style="font-family:Verdana;">channel</span><span style="font-family:'宋体';">中直到它被</span><span style="font-family:Verdana;">sink</span><span style="font-family:'宋体';">消费了为止，</span><span style="font-family:Verdana;">channel</span><span style="font-family:'宋体';">的主要类型有：</span></span><span style="color:rgb(0,0,0);">memory<span style="font-family:'宋体';">、</span><span style="font-family:Verdana;">jdbc</span><span style="font-family:'宋体';">、</span><span style="font-family:Verdana;">kafka</span><span style="font-family:'宋体';">、</span><span style="font-family:Verdana;">file</span><span style="font-family:'宋体';">等</span><span style="font-family:Verdana;"> </span></span><span style="color:rgb(0,0,0);"><br></span><span style="color:#ff0000;">Sink<span style="font-family:'宋体';">：</span></span><span style="color:rgb(0,0,0);"><span style="font-family:'宋体';">消费</span>channel<span style="font-family:'宋体';">中的数据，然后将其存放进外部持久化的文件系统中，</span><span style="font-family:Verdana;">Sink</span><span style="font-family:'宋体';">的类型主要有</span><span style="font-family:Verdana;">HDFS</span><span style="font-family:'宋体';">、</span><span style="font-family:Verdana;">Hive</span><span style="font-family:'宋体';">、</span></span><span style="color:rgb(0,0,0);">Avro<span style="font-family:'宋体';">、</span><span style="font-family:Verdana;">File Roll</span><span style="font-family:'宋体';">、</span><span style="font-family:Verdana;">kafka</span><span style="font-family:'宋体';">、</span><span style="font-family:Verdana;">HBase</span><span style="font-family:'宋体';">、</span><span style="font-family:Verdana;">ElasticSearch </span></span></strong></p><h2><span style="color:#000000;">Agent<span style="font-family:'宋体';">结构　　</span></span></h2><p><strong><span style="color:#000000;">Flume <span style="font-family:'宋体';">运行的核心是</span> Agent<span style="font-family:'宋体';">。</span><span style="font-family:Verdana;">Flume</span><span style="font-family:'宋体';">以</span><span style="font-family:Verdana;">agent</span><span style="font-family:'宋体';">为最小的独立运行单位</span><span style="font-family:'宋体';">。一个</span>agent<span style="font-family:'宋体';">就是一个</span><span style="font-family:Verdana;">JVM</span><span style="font-family:'宋体';">。它是一个完整的数据收集工具，含有三个核心组件，分别是</span></span></strong></p><p><strong><span style="color:#000000;"> source<span style="font-family:'宋体';">、 </span><span style="font-family:Verdana;">channel</span><span style="font-family:'宋体';">、 </span><span style="font-family:Verdana;">sink</span><span style="font-family:'宋体';">。通过这些组件， </span><span style="font-family:Verdana;">Event </span><span style="font-family:'宋体';">可以从一个地方流向另一个地方，如下图所示。</span></span></strong></p><p><strong><span style="color:#000000;"><span style="font-family:'宋体';"><strong><span style="color:#000000;"><img src="https://img-blog.csdn.net/2018070218183353?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FBNTE4MTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></span></strong><br></span></span></strong></p><h2><span style="color:#000000;"><span style="font-family:Verdana;">source</span></span></h2><p><strong><span style="color:#000000;">Source<span style="font-family:'宋体';">是</span><span style="font-family:'宋体';">数据的收集端，负责将数据捕获后进行特殊的格式化，将数据封装到事件（</span>event<span style="font-family:'宋体';">） 里，然后将事件推入</span><span style="font-family:Verdana;">Channel</span><span style="font-family:'宋体';">中</span><span style="font-family:'宋体';">。</span> Flume<span style="font-family:'宋体';">提供了</span><span style="font-family:'宋体';">很多内置的</span><br></span></strong></p><p><strong><span style="color:#000000;">Source<span style="font-family:'宋体';">， 支持 </span><span style="font-family:Verdana;">Avro</span><span style="font-family:'宋体';">， </span><span style="font-family:Verdana;">log4j</span><span style="font-family:'宋体';">， </span><span style="font-family:Verdana;">syslog </span><span style="font-family:'宋体';">和 </span><span style="font-family:Verdana;">http post(body</span><span style="font-family:'宋体';">为</span><span style="font-family:Verdana;">json</span><span style="font-family:'宋体';">格式</span><span style="font-family:Verdana;">)</span><span style="font-family:'宋体';">。可以让应用程序同已有的</span>Source<span style="font-family:'宋体';">直接打交道，如</span><span style="font-family:Verdana;">AvroSource</span><span style="font-family:'宋体';">，</span></span></strong></p><p><strong><span style="color:#000000;"><span style="font-family:'宋体';"><img src="https://img-blog.csdn.net/20180702182053490?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FBNTE4MTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""><br></span></span></strong></p><strong><span style="color:#000000;">SyslogTcpSource<span style="font-family:'宋体';">。 如果内置的</span><span style="font-family:Verdana;">Source</span><span style="font-family:'宋体';">无法满足需要， </span><span style="font-family:Verdana;">Flume</span><span style="font-family:'宋体';">还支持自定义</span><span style="font-family:Verdana;">Source</span><span style="font-family:'宋体';">。</span></span></strong><h2><span style="color:#000000;"><span style="font-family:Verdana;">Channel</span></span></h2><p><strong><span style="color:#000000;">Channel<span style="font-family:'宋体';">是连</span><span style="font-family:'宋体';">接</span>Source<span style="font-family:'宋体';">和</span><span style="font-family:Verdana;">Sink</span><span style="font-family:'宋体';">的组件</span><span style="font-family:'宋体';">，大家可以将它</span><span style="font-family:'宋体';">看做一个数据的缓冲区（数据队列），它可以将事件暂存到内存中也可以持久化到本地磁盘上</span><span style="font-family:'宋体';">，</span> <span style="font-family:'宋体';">直</span><br><span style="font-family:'宋体';">　　到</span>Sink<span style="font-family:'宋体';">处理完该事件</span><span style="font-family:'宋体';">。介绍两个较为常用的</span>Channel<span style="font-family:'宋体';">， </span><span style="font-family:Verdana;">MemoryChannel</span><span style="font-family:'宋体';">和</span><span style="font-family:Verdana;">FileChannel</span><span style="font-family:'宋体';">。</span></span></strong></p><h2><span style="color:#000000;"><span style="font-family:Verdana;">Sink</span></span></h2><p><strong><span style="color:#000000;">Sink<span style="font-family:'宋体';">从</span>Channel<span style="font-family:'宋体';">中取出事件，然后将数据发到别处，可以向文件系统、数据库、 </span><span style="font-family:Verdana;">hadoop</span><span style="font-family:'宋体';">存数据</span><span style="font-family:'宋体';">，</span> <span style="font-family:'宋体';">也可以是</span><span style="font-family:'宋体';">其他</span>agent<span style="font-family:'宋体';">的</span><span style="font-family:Verdana;">Source</span><span style="font-family:'宋体';">。在</span><span style="font-family:'宋体';">日志数据较少时，可</span><br></span></strong></p><p><strong><span style="color:#000000;"><span style="font-family:'宋体';">　　以将数据存储在文件系统中，并且设定一定的时间间隔保存数据</span><span style="font-family:'宋体';">。</span></span></strong></p><p><strong><span style="color:#000000;"><span style="font-family:'宋体';"><img src="https://img-blog.csdn.net/20180702182149302?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FBNTE4MTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""><br></span></span></strong></p><p><br></p><p><span style="color:rgb(0,0,0);font-size:28px;font-weight:bold;">3. </span><span style="color:rgb(0,0,0);font-size:28px;"><strong>Flume<span style="font-family:'宋体';">原理</span></strong></span></p><h3><span style="color:#000000;">3.1.1. 简单结构</span></h3><p><strong><span style="color:#000000;"><span style="font-family:'宋体';">单个</span>agent<span style="font-family:'宋体';">采集数据</span></span></strong></p><p><strong><span style="color:#000000;"> <img src="https://img-blog.csdn.net/20180702182412292?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FBNTE4MTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></span></strong></p><h3><span style="color:#000000;">3.1.2. 复杂结构</span></h3><p><strong><span style="color:#000000;"><span style="font-family:'宋体';">多级</span>agent<span style="font-family:'宋体';">之间串联</span></span></strong></p><p><strong><span style="color:#000000;"> <img src="https://img-blog.csdn.net/20180702182426164?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FBNTE4MTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></span></strong></p><h1><span style="color:#000000;">4.  Flume<span style="font-family:'宋体';">实战案例</span></span></h1><p><strong><span style="color:#ff0000;">友情建议：学会从官网上学习不同装置下的配置文件的书写</span></strong></p><h2><span style="color:#000000;">Flume的安装部署</span></h2><p><strong><span style="color:#000000;">1、Flume<span style="font-family:'宋体';">的安装非常简单，只需要解压即可，当然，前提是已有</span><span style="font-family:Calibri;">hadoop</span><span style="font-family:'宋体';">环境</span></span></strong></p><p><strong><span style="color:#000000;">上传安装包到数据源所在节点上</span></strong></p><p><strong><span style="color:#000000;"><span style="font-family:'宋体';">然后解压</span>  tar -zxvf apache-flume-1.6.0-bin.tar.gz</span></strong></p><p><strong><span style="color:#000000;"><span style="font-family:'宋体';">然后进入</span>flume<span style="font-family:'宋体';">的目录，修改</span><span style="font-family:Calibri;">conf</span><span style="font-family:'宋体';">下的</span><span style="font-family:Calibri;">flume-env.sh</span><span style="font-family:'宋体';">，在里面配置</span><span style="font-family:Calibri;">JAVA_HOME</span></span></strong></p><p><span><strong><span style="color:#000000;"><span style="font-family:Calibri;"></span></span></strong></span></p><p><strong><span style="color:#000000;">Which  java <span style="font-family:'宋体';">查找</span><span style="font-family:Calibri;">java</span><span style="font-family:'宋体';">的目录</span></span></strong></p><p><span><strong><span style="color:#000000;">把flume-env.sh.template<span style="font-family:'宋体';">修改为</span>flume-env.sh</span></strong></span></p><p><strong><span style="color:#000000;"><span style="font-family:Calibri;"><strong><span style="color:#000000;"><img src="https://img-blog.csdn.net/20180702182609108?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FBNTE4MTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></span></strong><br></span></span></strong></p><p><strong><span style="color:#000000;"><span style="font-family:Calibri;"><strong><span style="color:#000000;"><img src="https://img-blog.csdn.net/20180702182702305?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FBNTE4MTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""><br></span></strong></span></span></strong></p><p><strong><span style="color:#000000;">创建一个文件夹用户保存自己以后的采集方案和配置文件</span></strong></p><p><strong><span style="color:#000000;"> <img src="https://img-blog.csdn.net/20180702182743564?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FBNTE4MTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></span></strong></p><p><strong><span style="color:#000000;">2<span style="font-family:'宋体';">、根据数据采集的需求配置采集方案，描述在配置文件中</span><span style="font-family:Calibri;">(</span><span style="font-family:'宋体';">文件名可任意自定义</span><span style="font-family:Calibri;">)</span></span></strong></p><p><strong><span style="color:#000000;">3<span style="font-family:'宋体';">、指定采集方案配置文件，在相应的节点上启动</span><span style="font-family:Calibri;">flume agent</span></span></strong></p><p><strong><span style="color:#000000;">先用一个最简单的例子来测试一下程序环境是否正常</span></strong></p><p><strong><span style="color:#000000;"> <img src="https://img-blog.csdn.net/20180702182804239?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FBNTE4MTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></span></strong></p><h2><span style="color:#000000;">采集方案</span></h2><p><strong><span style="color:#000000;">1、<span style="font-family:'宋体';">先在</span>flume<span style="font-family:'宋体';">的</span><span style="font-family:Calibri;">conf</span><span style="font-family:'宋体';">目录下新建一个配置文件（采集方案）</span></span></strong></p><p><strong><span style="color:#000000;">vi   netcat-logger.properties</span></strong></p><table border="1" cellspacing="0"><tbody><tr><td valign="top"><p><strong><span style="color:#000000;"># <span style="font-family:'宋体';">定义这个</span><span style="font-family:Calibri;">agent</span><span style="font-family:'宋体';">中各组件的名字</span></span></strong></p><p><strong><span style="color:#000000;">a1.sources = r1</span></strong></p><p><strong><span style="color:#000000;">a1.sinks = k1</span></strong></p><p><strong><span style="color:#000000;">a1.channels = c1</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># <span style="font-family:'宋体';">描述和配置</span><span style="font-family:Calibri;">source</span><span style="font-family:'宋体';">组件：</span><span style="font-family:Calibri;">r1</span></span></strong></p><p><strong><span style="color:#000000;">a1.sources.r1.type = netcat</span></strong></p><p><strong><span style="color:#000000;">a1.sources.r1.bind = localhost</span></strong></p><p><strong><span style="color:#000000;">a1.sources.r1.port = 44444</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># <span style="font-family:'宋体';">描述和配置</span><span style="font-family:Calibri;">sink</span><span style="font-family:'宋体';">组件：</span><span style="font-family:Calibri;">k1</span></span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.type = logger</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># <span style="font-family:'宋体';">描述和配置</span><span style="font-family:Calibri;">channel</span><span style="font-family:'宋体';">组件，此处使用是内存缓存的方式</span></span></strong></p><p><strong><span style="color:#000000;">a1.channels.c1.type = memory</span></strong></p><p><strong><span style="color:#000000;">a1.channels.c1.capacity = 1000</span></strong></p><p><strong><span style="color:#000000;">a1.channels.c1.transactionCapacity = 100</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># <span style="font-family:'宋体';">描述和配置</span><span style="font-family:Calibri;">source  channel   sink</span><span style="font-family:'宋体';">之间的连接关系</span></span></strong></p><p><strong><span style="color:#000000;">a1.sources.r1.channels = c1</span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.channel = c1</span></strong></p></td></tr></tbody></table><h2><span style="color:#000000;"><span style="font-family:'宋体';"><br>启动</span>agent去采集数据</span></h2><table border="1" cellspacing="0"><tbody><tr><td valign="top"><p><strong><span style="color:#000000;">Bin ./flume-ng agent -c conf -f myconf/netcat-logger.properties -n a1 -Dflume.root.logger=INFO,console</span></strong></p></td></tr></tbody></table><h2><span style="color:#000000;">启动命令注意事项</span></h2><p><strong><span style="color:#000000;">Ø -c conf   <span style="font-family:'宋体';">指定</span><span style="font-family:Calibri;">flume</span><span style="font-family:'宋体';">自身的配置文件所在目录</span>//不能改变</span></strong></p><p><strong><span style="color:#000000;">Ø <span style="font-family:'宋体';">注意：</span>-f<span style="font-family:'宋体';">后目录要看实在哪里运行 只在</span><span style="font-family:Calibri;">bin</span><span style="font-family:'宋体';">目录中还是在</span><span style="font-family:Calibri;">flume</span><span style="font-family:'宋体';">首页中</span></span></strong></p><p><strong><span style="color:#000000;">Ø -f conf/netcat-logger.conf  <span style="font-family:'宋体';">指定我们所描述的采集方案</span></span></strong></p><p><strong><span style="color:#000000;">Ø -n a1  <span style="font-family:'宋体';">指定我们这个</span><span style="font-family:Calibri;">agent</span><span style="font-family:'宋体';">的名字</span>，你的采集方案里面agent<span style="font-family:'宋体';">的名字</span>是什么，启动指令里面必须写什么，要一直。</span></strong></p><p><strong><span style="color:#000000;"> <img src="https://img-blog.csdn.net/20180702182831204?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FBNTE4MTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></span></strong></p><p><strong><span style="color:#000000;">2、测试</span></strong></p><p><strong><span style="color:#000000;"><span style="font-family:'宋体';">先要往</span>agent<span style="font-family:'宋体';">的</span><span style="font-family:Calibri;">source</span><span style="font-family:'宋体';">所监听的端口上发送数据，让</span><span style="font-family:Calibri;">agent</span><span style="font-family:'宋体';">有数据可采</span></span></strong></p><p><strong><span style="color:#000000;"><span style="font-family:'宋体';">随便在一个能跟</span>agent<span style="font-family:'宋体';">节点联网的机器上</span></span></strong></p><p><strong><span style="color:#000000;">telnet anget-hostname  port   <span style="font-family:'宋体';">（</span><span style="font-family:Calibri;">telnet localhost 44444</span><span style="font-family:'宋体';">） </span></span></strong></p><p><strong><span style="color:#000000;"> <img src="https://img-blog.csdn.net/20180702182911803?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FBNTE4MTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></span></strong></p><h2><span style="color:#000000;"> <span style="font-family:'宋体';">采集案例</span></span></h2><h3><span style="color:#000000;">4.1.1. <span style="font-family:'宋体';">采集目录到</span>HDFS</span></h3><p><strong><span style="color:#000000;">结构示意图：</span></strong></p><p><strong><span style="color:#000000;"> <img src="https://img-blog.csdn.net/2018070218292393?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FBNTE4MTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"><span style="font-family:'宋体';">采集需求：某服务器的某特定目录下，会不断产生新的文件，每当有新文件出现，就需要把文件采集到</span>HDFS<span style="font-family:'宋体';">中去</span></span></strong></p><p><strong><span style="color:#000000;"><span style="font-family:'宋体';">根据需求，首先定义以下</span>3<span style="font-family:'宋体';">大要素</span></span></strong></p><p><strong><span style="color:#000000;">l <span style="font-family:'宋体';">数据源组件，即</span>source <span style="font-family:'宋体';">——监控文件目录 </span><span style="font-family:Calibri;">:  spooldir</span></span></strong></p><p><strong><span style="color:#000000;">spooldir<span style="font-family:'宋体';">特性：</span></span></strong></p><p><strong><span style="color:#000000;">   1<span style="font-family:'宋体';">、监视一个目录，只要目录中出现新文件，就会采集文件中的内容</span></span></strong></p><p><strong><span style="color:#000000;">   2<span style="font-family:'宋体';">、采集完成的文件，会被</span><span style="font-family:Calibri;">agent</span><span style="font-family:'宋体';">自动添加一个后缀：</span><span style="font-family:Calibri;">COMPLETED</span></span></strong></p><p><strong><span style="color:#000000;">   3<span style="font-family:'宋体';">、所监视的目录中不允许重复出现相同文件名的文件</span></span></strong></p><p><strong><span style="color:#000000;">l <span style="font-family:'宋体';">下沉组件，即</span>sink<span style="font-family:'宋体';">——</span><span style="font-family:Calibri;">HDFS</span><span style="font-family:'宋体';">文件系统  </span><span style="font-family:Calibri;">:  hdfs sink</span></span></strong></p><p><strong><span style="color:#000000;">l <span style="font-family:'宋体';">通道组件，即</span>channel<span style="font-family:'宋体';">——可用</span><span style="font-family:Calibri;">file channel </span><span style="font-family:'宋体';">也可以用内存</span><span style="font-family:Calibri;">channel</span></span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;">配置文件编写：</span></strong></p><table border="1" cellspacing="0"><tbody><tr><td valign="top"><p><strong><span style="color:#000000;">#<span style="font-family:'宋体';">定义三大组件的名称</span></span></strong></p><p><strong><span style="color:#000000;">agent1.sources = source1</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks = sink1</span></strong></p><p><strong><span style="color:#000000;">agent1.channels = channel1</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># 配置<span style="font-family:Calibri;">source</span><span style="font-family:'宋体';">组件</span></span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.type = spooldir</span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.spoolDir = /root/hdftest/</span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.fileHeader = false</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;">#配置拦截器</span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.interceptors = i1</span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.interceptors.i1.type = host</span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.interceptors.i1.hostHeader = hostname</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># 配置<span style="font-family:Calibri;">sink</span><span style="font-family:'宋体';">组件</span></span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.type = hdfs</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.path =hdfs://wangzhihua1:9000/weblog/flume-collection/%y-%m-%d/%H-%M</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.filePrefix = access_log</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.maxOpenFiles = 5000</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.batchSize= 100</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.fileType = DataStream</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.writeFormat =Text</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.rollSize = 102400</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.rollCount = 1000000</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.rollInterval = 60</span></strong></p><p><strong><span style="color:#000000;">#agent1.sinks.sink1.hdfs.round = true</span></strong></p><p><strong><span style="color:#000000;">#agent1.sinks.sink1.hdfs.roundValue = 10</span></strong></p><p><strong><span style="color:#000000;">#agent1.sinks.sink1.hdfs.roundUnit = minute</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.useLocalTimeStamp = true</span></strong></p><p><strong><span style="color:#000000;"># Use a channel which buffers events in memory</span></strong></p><p><strong><span style="color:#000000;">agent1.channels.channel1.type = memory</span></strong></p><p><strong><span style="color:#000000;">agent1.channels.channel1.keep-alive = 120</span></strong></p><p><strong><span style="color:#000000;">agent1.channels.channel1.capacity = 500000</span></strong></p><p><strong><span style="color:#000000;">agent1.channels.channel1.transactionCapacity = 600</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># Bind the source and sink to the channel</span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.channels = channel1</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.channel = channel1</span></strong></p></td></tr></tbody></table><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;">Channel<span style="font-family:'宋体';">参数解释：</span></span></strong></p><p><strong><span style="color:#000000;">capacity<span style="font-family:'宋体';">：默认该通道中最大的可以存储的</span><span style="font-family:Calibri;">event</span><span style="font-family:'宋体';">数量</span></span></strong></p><p><strong><span style="color:#000000;">trasactionCapacity<span style="font-family:'宋体';">：每次最大可以从</span><span style="font-family:Calibri;">source</span><span style="font-family:'宋体';">中拿到或者送到</span><span style="font-family:Calibri;">sink</span><span style="font-family:'宋体';">中的</span><span style="font-family:Calibri;">event</span><span style="font-family:'宋体';">数量</span></span></strong></p><p><strong><span style="color:#000000;">keep-alive<span style="font-family:'宋体';">：</span><span style="font-family:Calibri;">event</span><span style="font-family:'宋体';">添加到通道中或者移出的允许时间</span></span></strong></p><h4><span style="color:#000000;">4.1.1.1. <span style="font-family:'黑体';">执行</span>flume<span style="font-family:'黑体';">：</span></span></h4><p><strong><span style="color:#000000;"> <img src="https://img-blog.csdn.net/20180702182938925?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FBNTE4MTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></span></strong></p><h3><span style="color:#000000;">4.1.2. <span style="font-family:'宋体';">采集文件到</span>HDFS</span></h3><p><strong><span style="color:#000000;"><span style="font-family:'宋体';">采集需求：比如业务系统使用</span>log4j<span style="font-family:'宋体';">生成的日志，日志内容不断增加，需要把追加到日志文件中的数据</span>实时<span style="font-family:'宋体';">采集到</span>hdfs</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"><span style="font-family:'宋体';">根据需求，首先定义以下</span>3<span style="font-family:'宋体';">大要素</span></span></strong></p><p><strong><span style="color:#000000;">l <span style="font-family:'宋体';">采集源，即</span>source<span style="font-family:'宋体';">——监控文件内容更新 </span><span style="font-family:Calibri;">:  exec  </span>‘tail -F file’</span></strong></p><p><strong><span style="color:#000000;">l <span style="font-family:'宋体';">下沉目标，即</span>sink<span style="font-family:'宋体';">——</span><span style="font-family:Calibri;">HDFS</span><span style="font-family:'宋体';">文件系统  </span><span style="font-family:Calibri;">:  hdfs sink</span></span></strong></p><p><strong><span style="color:#000000;">l Source<span style="font-family:'宋体';">和</span><span style="font-family:Calibri;">sink</span><span style="font-family:'宋体';">之间的传递通道——</span><span style="font-family:Calibri;">channel</span><span style="font-family:'宋体';">，可用</span><span style="font-family:Calibri;">file channel </span><span style="font-family:'宋体';">也可以用 内存</span><span style="font-family:Calibri;">channel</span></span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;">配置文件编写：</span></strong></p><table border="1" cellspacing="0"><tbody><tr><td valign="top"><p><strong><span style="color:#000000;">agent1.sources = source1</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks = sink1</span></strong></p><p><strong><span style="color:#000000;">agent1.channels = channel1</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># Describe/configure tail -F source1</span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.type = exec</span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.command = tail -F /home/hadoop/logs/access_log</span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.channels = channel1</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;">#configure host for source</span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.interceptors = i1</span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.interceptors.i1.type = host</span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.interceptors.i1.hostHeader = hostname</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># Describe sink1</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.type = hdfs</span></strong></p><p><strong><span style="color:#000000;">#a1.sinks.k1.channel = c1</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.path =hdfs://hdp-node-01:9000/weblog/flume-collection/%y-%m-%d/%H-%M</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.filePrefix = access_log</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.maxOpenFiles = 5000</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.batchSize= 100</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.fileType = DataStream</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.writeFormat =Text</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.rollSize = 102400</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.rollCount = 1000000</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.rollInterval = 60</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.round = true</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.roundValue = 10</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.roundUnit = minute</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.hdfs.useLocalTimeStamp = true</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># Use a channel which buffers events in memory</span></strong></p><p><strong><span style="color:#000000;">agent1.channels.channel1.type = memory</span></strong></p><p><strong><span style="color:#000000;">agent1.channels.channel1.keep-alive = 120</span></strong></p><p><strong><span style="color:#000000;">agent1.channels.channel1.capacity = 500000</span></strong></p><p><strong><span style="color:#000000;">agent1.channels.channel1.transactionCapacity = 600</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># Bind the source and sink to the channel</span></strong></p><p><strong><span style="color:#000000;">agent1.sources.source1.channels = channel1</span></strong></p><p><strong><span style="color:#000000;">agent1.sinks.sink1.channel = channel1</span></strong></p></td></tr></tbody></table><h1><span style="color:#000000;">5. Flume<span style="font-family:'宋体';">实战采集文件内容存入</span><span style="font-family:Calibri;">HDFS</span></span></h1><p align="justify"><strong><span style="color:#000000;">1、flume安装目录下新建文件夹 myconf </span></strong></p><p align="justify"><strong><span style="color:#000000;">2、在myconf 下新建文件 </span></strong></p><p align="justify"><strong><span style="color:#000000;">log-hdfs.conf</span></strong></p><p align="justify"><strong><span style="color:#000000;">内容如下：</span></strong></p><p align="justify"><strong><span style="color:#000000;">主要使用了 </span></strong></p><table border="1" cellspacing="0"><tbody><tr><td valign="top"><p><strong><span style="color:#000000;"># Name the components on this agent</span></strong></p><p><strong><span style="color:#000000;">a1.sources = r1</span></strong></p><p><strong><span style="color:#000000;">a1.sinks = k1</span></strong></p><p><strong><span style="color:#000000;">a1.channels = c1</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;">#exec <span style="font-family:'宋体';">指的是命令</span></span></strong></p><p><strong><span style="color:#000000;"># Describe/configure the source</span></strong></p><p><strong><span style="color:#000000;">a1.sources.r1.type = exec</span></strong></p><p><strong><span style="color:#000000;">#F<span style="font-family:'宋体';">根据文件名追中</span><span style="font-family:Calibri;">, f</span><span style="font-family:'宋体';">根据文件的</span><span style="font-family:Calibri;">nodeid</span><span style="font-family:'宋体';">追中</span></span></strong></p><p><strong><span style="color:#000000;">a1.sources.r1.command = tail -F /root/testflume.log</span></strong></p><p><strong><span style="color:#000000;">a1.sources.r1.channels = c1</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># Describe the sink</span></strong></p><p><strong><span style="color:#000000;">#<span style="font-family:'宋体';">下沉目标</span></span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.type = hdfs</span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.channel = c1</span></strong></p><p><strong><span style="color:#000000;">#<span style="font-family:'宋体';">指定目录</span><span style="font-family:Calibri;">, flum</span><span style="font-family:'宋体';">帮做目的替换</span></span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.hdfs.path = hdfs://hdp-node-01:9000/flume/events/%y-%m-%d/%H%M/</span></strong></p><p><strong><span style="color:#000000;">#<span style="font-family:'宋体';">文件的命名</span><span style="font-family:Calibri;">, </span><span style="font-family:'宋体';">前缀</span></span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.hdfs.filePrefix = events-</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;">#10 <span style="font-family:'宋体';">分钟就改目录（创建目录）， （这些参数影响</span><span style="font-family:Calibri;">/flume/events/%y-%m-%d/%H%M/</span><span style="font-family:'宋体';">）</span></span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.hdfs.round = true</span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.hdfs.roundValue = 10</span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.hdfs.roundUnit = minute</span></strong></p><p><strong><span style="color:#000000;">#<span style="font-family:'宋体';">目录里面有文件</span></span></strong></p><p><strong><span style="color:#000000;">#------start----<span style="font-family:'宋体';">两个条件，只要符合其中一个就满足</span><span style="font-family:Calibri;">---</span></span></strong></p><p><strong><span style="color:#000000;">#<span style="font-family:'宋体';">文件滚动之前的等待时间</span><span style="font-family:Calibri;">(</span><span style="font-family:'宋体';">秒</span><span style="font-family:Calibri;">)</span></span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.hdfs.rollInterval = 3</span></strong></p><p><strong><span style="color:#000000;">#<span style="font-family:'宋体';">文件滚动的大小限制</span><span style="font-family:Calibri;">(bytes)</span></span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.hdfs.rollSize = 500</span></strong></p><p><strong><span style="color:#000000;">#<span style="font-family:'宋体';">写入多少个</span><span style="font-family:Calibri;">event</span><span style="font-family:'宋体';">数据后滚动文件</span><span style="font-family:Calibri;">(</span><span style="font-family:'宋体';">事件个数</span><span style="font-family:Calibri;">)</span></span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.hdfs.rollCount = 20</span></strong></p><p><strong><span style="color:#000000;">#-------end-----</span></strong></p><p><strong><span style="color:#000000;">#5<span style="font-family:'宋体';">个事件就往里面写入</span></span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.hdfs.batchSize = 5</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;">#<span style="font-family:'宋体';">用本地时间格式化目录</span></span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;">#<span style="font-family:'宋体';">下沉后</span><span style="font-family:Calibri;">, </span><span style="font-family:'宋体';">生成的文件类型，默认是</span><span style="font-family:Calibri;">Sequencefile</span><span style="font-family:'宋体';">，可用</span><span style="font-family:Calibri;">DataStream</span><span style="font-family:'宋体';">，则为普通文本</span></span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.hdfs.fileType = DataStream</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># Use a channel which buffers events in memory</span></strong></p><p><strong><span style="color:#000000;">a1.channels.c1.type = memory</span></strong></p><p><strong><span style="color:#000000;">a1.channels.c1.capacity = 1000</span></strong></p><p><strong><span style="color:#000000;">a1.channels.c1.transactionCapacity = 100</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p><p><strong><span style="color:#000000;"># Bind the source and sink to the channel</span></strong></p><p><strong><span style="color:#000000;">a1.sources.r1.channels = c1</span></strong></p><p><strong><span style="color:#000000;">a1.sinks.k1.channel = c1</span></strong></p><p><strong><span style="color:#000000;"> </span></strong></p></td></tr></tbody></table><p><strong><span style="color:#000000;"><br>3、shell命令不断写数据到文件</span></strong></p><p><strong><span style="color:#000000;">[hadoop@nbdo3 testdata]$ while true; do echo "hello ningbo do" &gt;&gt; testflume.log ; sleep 2; done</span></strong></p><p><strong><span style="color:#000000;">4、在新窗口用tail 命令查看到 testflume.log文件内容不断增加</span></strong></p><p align="justify"><strong><span style="color:#000000;">[hadoop@nbdo3 testdata]$ tail -f testflume.log <br>hello ningbo do<br>hello ningbo do<br>hello ningbo do<br>5、启动hadoop</span></strong></p><p align="justify"><strong><span style="color:#000000;">6、启动flume</span></strong></p><p><strong><span style="color:#000000;"> bin/flume-ng agent -c conf -f myconf/log.conf -n a1 -Dflume.root.logger=INFO,console</span></strong></p>            </div>
                </div>