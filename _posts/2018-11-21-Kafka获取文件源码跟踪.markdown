---
layout:     post
title:      Kafka获取文件源码跟踪
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，出处为 http://blog.csdn.net/silentwolfyh					https://blog.csdn.net/silentwolfyh/article/details/55254581				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h1 id="目录">目录：</h1>



<h2 id="1执行步鄹">1、执行步鄹</h2>



<h2 id="2结果展现">2、结果展现</h2>



<h2 id="学习kafka提前参考">学习kafka提前参考：</h2>



<h3 id="kafka文件的存储机制">Kafka文件的存储机制</h3>

<p><a href="http://blog.csdn.net/silentwolfyh/article/details/55095146" rel="nofollow" target="_blank">http://blog.csdn.net/silentwolfyh/article/details/55095146</a></p>



<h3 id="kafka无丢失提取kafka的值详解kafka的消费过程">Kafka：无丢失提取kafka的值，详解kafka的消费过程</h3>

<p><a href="http://blog.csdn.net/silentwolfyh/article/details/54891764" rel="nofollow" target="_blank">http://blog.csdn.net/silentwolfyh/article/details/54891764</a></p>



<h2 id="title">————————————————————————————————————</h2>



<h2 id="1执行步鄹-1">1、执行步鄹</h2>

<p>1）代码整体查看以及源码地址 <br>
2）获取topic下面block中Partition的Offset <br>
3）通过Offset转为OffsetRange 对象 <br>
4）通过KafkaUtils.createRDD[String, String, StringDecoder, StringDecoder](sc, kafkaParams, offsetRanges)转为RDD</p>

<p><strong>1）代码整体查看以及源码地址</strong> <br>
<img src="https://img-blog.csdn.net/20170216124455023?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>

<p><strong>2）获取topic下面block中Partition的Offset</strong> <br>
<img src="https://img-blog.csdn.net/20170216124204302?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>

<p>val req = OffsetRequest(reqMap)      代码调试 <br>
<img src="https://img-blog.csdn.net/20170216123959755?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title="">    <br>
val resp = consumer.getOffsetsBefore(req)  代码调试 <br>
<img src="https://img-blog.csdn.net/20170216124010445?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""> <br>
 val respMap = resp.partitionErrorAndOffsets</p>

<p><strong>3）通过Offset转为OffsetRange 对象</strong> <br>
<img src="https://img-blog.csdn.net/20170216123718347?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>

<p><strong>4）通过KafkaUtils.createRDD[String, String, StringDecoder, StringDecoder](sc, kafkaParams, offsetRanges)转为RDD</strong> <br>
<img src="https://img-blog.csdn.net/20170216123756207?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>



<h2 id="2结果展现-1">2、结果展现</h2>

<p><img src="https://img-blog.csdn.net/20170216124245647?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>

<p>       <font size="5" color="#ff0000" face="黑体">如果您喜欢我写的博文，读后觉得收获很大，不妨小额赞助我一下，让我有动力继续写出高质量的博文，感谢您的赞赏！！！</font> <br>
</p><center><img src="https://img-blog.csdn.net/20170607081951153" width="180" height="180"></center><p></p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>