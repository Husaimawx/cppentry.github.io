---
layout:     post
title:      4-1、Spark简介
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：分享的快乐。。					https://blog.csdn.net/baolibin528/article/details/50864346				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h1 style="text-align:center;">1<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">简介</span></h1>
<h3>1.1<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">为何物？</span></h3>
<p>Spark<span style="font-family:'宋体';">是基于</span><span style="color:rgb(0,0,255);">内存计算</span>的大数据<span style="color:rgb(0,0,255);">并行计算框架</span>。</p>
<p>Spark<span style="font-family:'宋体';">基于内存计算，提高了大数据环境下处理的实时性，同时保证了</span><span style="color:rgb(0,0,255);">高容错性</span>和高伸缩性。</p>
<p>Spark<span style="font-family:'宋体';">于</span><span style="color:rgb(0,0,255);">2009</span>年诞生于加州大学伯克利分校<span style="color:rgb(0,0,255);">AMPLab</span>。现在已经成为<span style="font-family:Calibri;">Apache</span><span style="font-family:'宋体';">软件基金会旗下的</span><span style="color:rgb(0,0,255);">顶级开源项目</span>。</p>
<p> </p>
<p>Spark<span style="font-family:'宋体';">历史与发展：</span></p>
<p>2009<span style="font-family:'宋体';">年：</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">诞生于</span><span style="font-family:Calibri;">AMPLab;</span></p>
<p>2010<span style="font-family:'宋体';">年：开源</span><span style="font-family:Calibri;">;</span><br>
2013<span style="font-family:'宋体';">年</span><span style="font-family:Calibri;">6</span><span style="font-family:'宋体';">月：</span><span style="font-family:Calibri;">Apache</span><span style="font-family:'宋体';">孵化器项目：</span><br>
2014<span style="font-family:'宋体';">年</span><span style="font-family:Calibri;">2</span><span style="font-family:'宋体';">月：</span><span style="font-family:Calibri;">Apache</span><span style="font-family:'宋体';">顶级项目</span><span style="font-family:Calibri;">;</span><br>
2014<span style="font-family:'宋体';">年</span><span style="font-family:Calibri;">2</span><span style="font-family:'宋体';">月：大数据公司</span><span style="font-family:Calibri;">Cloudera</span><span style="font-family:'宋体';">宣城加大</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">框架的投入来取代</span><span style="font-family:Calibri;">MapReduce;</span></p>
<p>2014<span style="font-family:'宋体';">年</span><span style="font-family:Calibri;">4</span><span style="font-family:'宋体';">月：大数据公司</span><span style="font-family:Calibri;">MapR</span><span style="font-family:'宋体';">投入</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">阵营，</span><span style="font-family:Calibri;">Apache Mahout</span><span style="font-family:'宋体';">放弃</span><span style="font-family:Calibri;">MapReduce</span><span style="font-family:'宋体';">，将使用</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">作为计算引擎</span><span style="font-family:Calibri;">;</span></p>
<p>2014<span style="font-family:'宋体';">年</span><span style="font-family:Calibri;">5</span><span style="font-family:'宋体';">月：</span><span style="font-family:Calibri;">Pivotal Hadoop</span><span style="font-family:'宋体';">集成</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">全栈</span><span style="font-family:Calibri;">;</span><br>
2014<span style="font-family:'宋体';">年</span><span style="font-family:Calibri;">5</span><span style="font-family:'宋体';">月</span><span style="font-family:Calibri;">30</span><span style="font-family:'宋体';">日：</span><span style="font-family:Calibri;">Spark1.0.0</span><span style="font-family:'宋体';">发布</span><span style="font-family:Calibri;">;</span></p>
<p>2014<span style="font-family:'宋体';">年</span><span style="font-family:Calibri;">6</span><span style="font-family:'宋体';">月：</span><span style="font-family:Calibri;">Spark 2014</span><span style="font-family:'宋体';">峰会在旧金山召开</span><span style="font-family:Calibri;">;</span></p>
<p>2014<span style="font-family:'宋体';">年</span><span style="font-family:Calibri;">7</span><span style="font-family:'宋体';">月：</span><span style="font-family:Calibri;">Hive on Spark</span><span style="font-family:'宋体';">项目启动</span><span style="font-family:Calibri;">;</span></p>
<p>2015<span style="font-family:'宋体';">年：</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">成为了现在大数据领域最火的开源软件</span><span style="font-family:Calibri;">;</span></p>
<p>2016<span style="font-family:'宋体';">年：</span><span style="font-family:Calibri;">Spark2.0</span><span style="font-family:'宋体';">将发布</span><span style="font-family:Calibri;">;</span></p>
<p> </p>
<p>one stack to rule them all</p>
<p> <img src="https://img-blog.csdn.net/20160312104320422?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p> </p>
<p>Spark<span style="font-family:'宋体';">因何而生：</span></p>
<p><img src="https://img-blog.csdn.net/20160312104602817?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br>
  </p>
<h3>1.2<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">和</span><span style="font-family:Calibri;">Hadoop</span><span style="font-family:'宋体';">关系</span></h3>
<p>Spark<span style="font-family:'宋体';">用</span><span style="font-family:Calibri;">Scala</span><span style="font-family:'宋体';">语言编写，</span><span style="font-family:Calibri;">Hadoop</span><span style="font-family:'宋体';">用</span><span style="font-family:Calibri;">Java</span><span style="font-family:'宋体';">语言编写。</span></p>
<p>Spark<span style="font-family:'宋体';">是一个计算框架，而</span><span style="font-family:Calibri;">Hadoop</span><span style="font-family:'宋体';">中包含计算框架</span><span style="font-family:Calibri;">MapReduce</span><span style="font-family:'宋体';">和分布式文件系统</span><span style="font-family:Calibri;">HDFS</span><span style="font-family:'宋体';">，</span><span style="font-family:Calibri;">Hadoop</span><span style="font-family:'宋体';">更广泛地说还包含在其生态系统上的其他系统，如</span><span style="font-family:Calibri;">HBase</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Hive</span><span style="font-family:'宋体';">等。</span></p>
<p><span style="color:rgb(0,0,255);">Spark<span style="font-family:'宋体';">是</span><span style="font-family:Calibri;">MapReduce</span><span style="font-family:'宋体';">的替代方案，而且兼容</span><span style="font-family:Calibri;">HDFS</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Hive</span><span style="font-family:'宋体';">等分布式存储层</span></span>，可融入<span style="font-family:Calibri;">Hadoop</span><span style="font-family:'宋体';">的生态系统，以弥补</span><span style="font-family:Calibri;">MapReduce</span><span style="font-family:'宋体';">的不足。</span></p>
<p> </p>
<p>Spark<span style="font-family:'宋体';">相比</span><span style="font-family:Calibri;">Hadoop MapReduce</span><span style="font-family:'宋体';">的优势：</span></p>
<p>1）、中间结果输出</p>
<p>基于<span style="font-family:Calibri;">MapReduce</span><span style="font-family:'宋体';">的计算引擎通常会把中间结果输出到磁盘上，进行存储和容错。当一些查询翻译到</span><span style="font-family:Calibri;">MapReduce</span><span style="font-family:'宋体';">任务时，处于任务管道承接考虑，往往会产生多个</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">，而这些串联的</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">又依赖于底层文件系统来存储每一个</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">的输出结果。</span></p>
<p><span style="color:rgb(0,0,255);">Spark<span style="font-family:'宋体';">将执行模型抽象为通用的有向无环图</span><span style="font-family:Calibri;">(DAG)</span><span style="font-family:'宋体';">，这可以将多</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">的任务串联或者并行执行</span></span>，而无须将<span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">中间结果输出到</span><span style="font-family:Calibri;">HDFS</span><span style="font-family:'宋体';">上面。类似的引擎包括</span><span style="font-family:Calibri;">Dryad</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Tez</span><span style="font-family:'宋体';">。</span></p>
<p> </p>
<p>2）、数据格式和内存布局</p>
<p>MapReduce Schema on Read<span style="font-family:'宋体';">处理方式会引起较大的处理开销。</span></p>
<p>Spark<span style="font-family:'宋体';">抽象出分布式内存存储结构弹性分布式数据集</span><span style="font-family:Calibri;">RDD</span><span style="font-family:'宋体';">，进行数据的存储。</span></p>
<p>RDD<span style="font-family:'宋体';">支持粗粒度写操作，但对于读取操作，</span><span style="font-family:Calibri;">RDD</span><span style="font-family:'宋体';">可以精确到每条记录。</span></p>
<p> </p>
<p>3）、执行策略</p>
<p>MapReduce<span style="font-family:'宋体';">在数据</span><span style="font-family:Calibri;">Shuffle</span><span style="font-family:'宋体';">之前花费大量时间来排序。</span></p>
<p>Spark<span style="font-family:'宋体';">任务在</span><span style="font-family:Calibri;">Shuffle</span><span style="font-family:'宋体';">中不是所有的情景都需要排序，所以支持基于</span><span style="font-family:Calibri;">Hasnde</span><span style="font-family:'宋体';">的分布式聚合，调度中采用更为通用的任务执行计划图</span><span style="font-family:Calibri;">(DAG)</span><span style="font-family:'宋体';">，每一次轮次的输出结果在内存缓存。</span></p>
<p> </p>
<p>4）、任务调度和开销</p>
<p>Hadoop MapReduce<span style="font-family:'宋体';">是为了运行长达数小时的批量作业而设计的，在某些极端的情况下，提交一个任务的延迟非常高。</span></p>
<p>Spark<span style="font-family:'宋体';">采用了事件驱动的类库</span><span style="font-family:Calibri;">AKKA</span><span style="font-family:'宋体';">来启动任务，通过线程池复用线程来避免进程或线程启动和切换开销。</span></p>
<p> </p>
<p> </p>
<p>简单的说：</p>
<p>与<span style="font-family:Calibri;">MapReduce</span><span style="font-family:'宋体';">提供的编程模型相比，</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">具有如下鲜明的两点：</span></p>
<p>1）、计算更为快捷，速度可以提高<span style="font-family:Calibri;">10</span><span style="font-family:'宋体';">到</span><span style="font-family:Calibri;">100</span><span style="font-family:'宋体';">倍</span><span style="font-family:Calibri;">;</span><br>
2<span style="font-family:'宋体';">）、计算过程中，如果某一点出现问题，事件重演的代价远远小于</span><span style="font-family:Calibri;">MapReduce</span><span style="font-family:'宋体';">。</span></p>
<p> </p>
<p>从<span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">的应用理论上来讲，原先基于</span><span style="font-family:Calibri;">MapReduce</span><span style="font-family:'宋体';">来开发的分析工具都可以基于</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">来实现，通过这样一种迁移来达到更快的处理效果。</span></p>
<p> </p>
<p>Spark<span style="font-family:'宋体';">和</span><span style="font-family:Calibri;">Hadoop</span><span style="font-family:'宋体';">的几重关系：</span></p>
<p>1）、<span style="color:rgb(0,0,255);">Spark<span style="font-family:'宋体';">和</span><span style="font-family:Calibri;">Hadoop</span><span style="font-family:'宋体';">的</span><span style="font-family:Calibri;">MapReduce</span><span style="font-family:'宋体';">处于同一层面</span></span>。</p>
<p>2）、<span style="color:rgb(0,0,255);">Spark<span style="font-family:'宋体';">可以部署在</span><span style="font-family:Calibri;">YARN</span><span style="font-family:'宋体';">上</span></span>。</p>
<p>3）、<span style="color:rgb(0,0,255);">Spark<span style="font-family:'宋体';">原生支持</span><span style="font-family:Calibri;">HDFS</span><span style="font-family:'宋体';">文件系统的访问</span></span>。</p>
<p> </p>
<h3>1.3<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">生态系统</span><span style="font-family:Calibri;">BDAS</span></h3>
<p>Spark<span style="font-family:'宋体';">已经发展成为包含众多子项目的大数据计算平台。伯克利将</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">的整个生态系统称为伯克利数据分析栈（</span><span style="font-family:Calibri;">BDAS</span><span style="font-family:'宋体';">）。</span></p>
<p>核心框架是<span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">。</span></p>
<p>支持结构化数据<span style="font-family:Calibri;">SQL</span><span style="font-family:'宋体';">查询和分析的查询引擎</span><span style="font-family:Calibri;">Spark SQL;</span></p>
<p>提供机器学习功能的系统<span style="font-family:Calibri;">MLbase</span><span style="font-family:'宋体';">及底层的分布式机器学习库</span><span style="font-family:Calibri;">MLlib;</span><br>
并行图计算框架<span style="font-family:Calibri;">GraphX</span><span style="font-family:'宋体';">；</span></p>
<p>流计算框架<span style="font-family:Calibri;">Spark Streaming;</span></p>
<p>采样近似计算查询引擎<span style="font-family:Calibri;">BlinkDB</span><span style="font-family:'宋体';">；</span><br>
内存分布式文件系统<span style="font-family:Calibri;">Tachyon;</span></p>
<p>资源管理框架<span style="font-family:Calibri;">Mesos;</span></p>
<p> <img src="https://img-blog.csdn.net/20160312104337297?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p></p>
<p> </p>
<p> </p>
<h3>1.4<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">架构</span></h3>
<p>Spark<span style="font-family:'宋体';">架构采用了分布式计算中的</span><span style="color:rgb(0,0,255);">Master-Slave<span style="font-family:'宋体';">模型</span></span>。</p>
<p>Master<span style="font-family:'宋体';">是对应集群中的含有</span><span style="font-family:Calibri;">Master</span><span style="font-family:'宋体';">进程的节点，</span><span style="font-family:Calibri;">Slave</span><span style="font-family:'宋体';">是集群中含有</span><span style="font-family:Calibri;">Worker</span><span style="font-family:'宋体';">进程的节点。</span></p>
<p><span style="color:rgb(0,0,255);">Master<span style="font-family:'宋体';">作为整个集群的控制器，负责整个集群的正常运行</span><span style="font-family:Calibri;">;</span></span></p>
<p>Worker<span style="font-family:'宋体';">相当于计算节点，接收主节点命令和进行状态汇报</span><span style="font-family:Calibri;">;</span></p>
<p>Executor<span style="font-family:'宋体';">负责任务的执行</span><span style="font-family:Calibri;">;</span></p>
<p>Client<span style="font-family:'宋体';">作为用户的客户端负责提交应用</span><span style="font-family:Calibri;">;</span></p>
<p>Driver<span style="font-family:'宋体';">负责控制一个应用的执行</span><span style="font-family:Calibri;">;</span></p>
<p>   <img src="https://img-blog.csdn.net/20160312104341495?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p> </p>
<p>Driver<span style="font-family:'宋体';">和</span><span style="font-family:Calibri;">Worker</span><span style="font-family:'宋体';">是两个重要的角色。</span></p>
<p><span style="color:rgb(0,0,255);">Driver<span style="font-family:'宋体';">程序是应用逻辑执行的起点，负责作业的调度，即</span><span style="font-family:Calibri;">Task</span><span style="font-family:'宋体';">任务的分发，而多个</span><span style="font-family:Calibri;">Worker</span><span style="font-family:'宋体';">用来管理计算节点和创建</span><span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">并行处理任务。</span></span></p>
<p>执行阶段，<span style="font-family:Calibri;">Driver</span><span style="font-family:'宋体';">会将</span><span style="font-family:Calibri;">Task</span><span style="font-family:'宋体';">和</span><span style="font-family:Calibri;">Task</span><span style="font-family:'宋体';">所依赖的</span><span style="font-family:Calibri;">file</span><span style="font-family:'宋体';">和</span><span style="font-family:Calibri;">jar</span><span style="font-family:'宋体';">序列化后传递给对应的</span><span style="font-family:Calibri;">Worker</span><span style="font-family:'宋体';">机器，同时</span><span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">对相应的数据分区的任务进行处理。</span></p>
<p> </p>
<table><tbody><tr><td valign="top">
<p>Spark<span style="font-family:'宋体';">架构中的基本组件：</span></p>
<p><span style="color:rgb(255,0,0);">ClusterManager</span>：在<span style="font-family:Calibri;">Standalone</span><span style="font-family:'宋体';">模式中即为</span><span style="font-family:Calibri;">Master</span><span style="font-family:'宋体';">节点，控制整个集群，监控</span><span style="font-family:Calibri;">Worker</span><span style="font-family:'宋体';">。在</span><span style="font-family:Calibri;">YARN</span><span style="font-family:'宋体';">模式中为资源管理器。</span></p>
<p><span style="color:rgb(255,0,0);">Worker</span>：从节点，负责控制计算节点，启动<span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">或</span><span style="font-family:Calibri;">Driver</span><span style="font-family:'宋体';">。在</span><span style="font-family:Calibri;">YARN</span><span style="font-family:'宋体';">模式中为</span><span style="font-family:Calibri;">NodeManager</span><span style="font-family:'宋体';">，负责计算节点的控制。</span></p>
<p><span style="color:rgb(255,0,0);">Driver</span>：运行<span style="font-family:Calibri;">Application</span><span style="font-family:'宋体';">的</span><span style="font-family:Calibri;">main()</span><span style="font-family:'宋体';">函数并创建</span><span style="font-family:Calibri;">SparkContext</span><span style="font-family:'宋体';">。</span></p>
<p><span style="color:rgb(255,0,0);">Executor</span>：执行器，在<span style="font-family:Calibri;">worker node</span><span style="font-family:'宋体';">上执行任务的组件、用于启动线程池运行任务。每个</span><span style="font-family:Calibri;">Application</span><span style="font-family:'宋体';">拥有独立的一组</span><span style="font-family:Calibri;">Executors</span><span style="font-family:'宋体';">。</span></p>
<p><span style="color:rgb(255,0,0);">SparkContext</span>：整个应用的上下文，控制应用的声明周期。</p>
<p><span style="color:rgb(255,0,0);">RDD</span>：<span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">基本的计算单元，一组</span><span style="font-family:Calibri;">RDD</span><span style="font-family:'宋体';">可形成执行的有向无环图</span><span style="font-family:Calibri;">RDD Graph</span><span style="font-family:'宋体';">。</span></p>
<p><span style="color:rgb(255,0,0);">DAGScheduler</span>：根据作业<span style="font-family:Calibri;">(Job)</span><span style="font-family:'宋体';">构建基于</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">的</span><span style="font-family:Calibri;">DAG</span><span style="font-family:'宋体';">，并提交</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">给</span><span style="font-family:Calibri;">TaskScheduler</span><span style="font-family:'宋体';">。</span></p>
<p><span style="color:rgb(255,0,0);">TaskScheduler</span>：将任务<span style="font-family:Calibri;">(Task)</span><span style="font-family:'宋体';">分发给</span><span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">执行。</span></p>
<p><span style="color:rgb(255,0,0);">SparkEnv</span>：线程级别的上下文，存储运行时的重要组件的引用。</p>
<p> </p>
<p>在<span style="font-family:Calibri;">SparkEnv</span><span style="font-family:'宋体';">内创建如下一些重要的引用：</span></p>
<p>MapOutPutTracker<span style="font-family:'宋体';">：负责</span><span style="font-family:Calibri;">Shuffle</span><span style="font-family:'宋体';">元信息的存储。</span></p>
<p>BroadcastManager<span style="font-family:'宋体';">：负责广播变量的控制与元信息的存储。</span></p>
<p>BlockManager<span style="font-family:'宋体';">：负责存储管理、创建和查询块。</span></p>
<p>MetricsSystem<span style="font-family:'宋体';">：监控运行时的性能指标信息。</span></p>
<p>SparkConf<span style="font-family:'宋体';">：负责存储配置信息。</span></p>
<p> </p>
</td>
</tr></tbody></table><p> </p>
<p> </p>
<p>Spark<span style="font-family:'宋体';">整体流程为：</span></p>
<p><span style="color:rgb(0,0,255);">Client<span style="font-family:'宋体';">提交应用，</span><span style="font-family:Calibri;">Master</span><span style="font-family:'宋体';">找到一个</span><span style="font-family:Calibri;">Worker</span><span style="font-family:'宋体';">启动</span><span style="font-family:Calibri;">Driver</span><span style="font-family:'宋体';">，</span><span style="font-family:Calibri;">Driver</span><span style="font-family:'宋体';">向</span><span style="font-family:Calibri;">Master</span><span style="font-family:'宋体';">或者资源管理器申请资源，之后将应用转化为</span><span style="font-family:Calibri;">RDD Graph</span><span style="font-family:'宋体';">，再由</span><span style="font-family:Calibri;">DAGScheduler</span><span style="font-family:'宋体';">将</span><span style="font-family:Calibri;">RDD Graph</span><span style="font-family:'宋体';">转化为</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">的有向无环图提交给</span><span style="font-family:Calibri;">TaskScheduler</span><span style="font-family:'宋体';">，由</span><span style="font-family:Calibri;">TaskScheduler</span><span style="font-family:'宋体';">提交任务给</span><span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">执行</span></span>。任务提交的过程中，其它组件协同工作，确保整个应用顺利执行。</p>
<p></p>
<p>Spark standalone<span style="font-family:'宋体';">架构</span><span style="font-family:Calibri;">:</span></p>
<p> <img src="https://img-blog.csdn.net/20160312104347688?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p> </p>
<h3>1.5<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">核心组件</span></h3>
<p>Spark<span style="font-family:'宋体';">支持丰富的应用计算场景，这个通过在</span><span style="font-family:Calibri;">Spark Core</span><span style="font-family:'宋体';">上构建多个组件完成的。</span></p>
<p>1.5.1<span style="font-family:'黑体';">、</span><span style="font-family:Calibri;">Spark Streaming</span></p>
<p>Spark Streaming<span style="font-family:'宋体';">实现了实时流处理</span><span style="font-family:Calibri;">;</span></p>
<p>Spark Streaming<span style="font-family:'宋体';">基于</span><span style="font-family:Calibri;">Spark Core</span><span style="font-family:'宋体';">实现了可扩展、高吞吐和容错的实时数据流处理。</span></p>
<p> <img src="https://img-blog.csdn.net/20160312104353714?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p>Spark Streaming<span style="font-family:'宋体';">是将流式计算分解成一系列短小的批处理作业。</span></p>
<p>这里的批处理引擎是<span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">，也就是把</span><span style="font-family:Calibri;">Spark Streaming</span><span style="font-family:'宋体';">的输入数据按照尺寸（如</span><span style="font-family:Calibri;">1</span><span style="font-family:'宋体';">秒）分成一段一段的数据（</span><span style="font-family:Calibri;">Stream</span><span style="font-family:'宋体';">），每一段数据都转换为</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">中的</span><span style="font-family:Calibri;">RDD</span><span style="font-family:'宋体';">，然后将</span><span style="font-family:Calibri;">Spark Streaming</span><span style="font-family:'宋体';">中对</span><span style="font-family:Calibri;">DStream</span><span style="font-family:'宋体';">的转换变为针对</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">中对</span><span style="font-family:Calibri;">RDD</span><span style="font-family:'宋体';">的转换操作。将</span><span style="font-family:Calibri;">RDD</span><span style="font-family:'宋体';">经过操作变成中间结果保存在内存中。</span></p>
<p>1.5.2<span style="font-family:'黑体';">、</span><span style="font-family:Calibri;">MLlib</span></p>
<p>MLlib<span style="font-family:'宋体';">是</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">对常用的机器学习算法的实现库，同时含有相关的测试和数据生成器，包括分类、回归、聚类、降维、协同过滤以及底层基本的优化元素。</span></p>
<p>MLlib<span style="font-family:'宋体';">实现了很多机器学习算法：</span></p>
<p>分类与回归的算法包括<span style="font-family:Calibri;">SVM</span><span style="font-family:'宋体';">、逻辑回归、线性回归、朴素贝叶斯、决策树等；</span></p>
<p>协同过滤实现了交替最小二乘法（<span style="font-family:Calibri;">ALS</span><span style="font-family:'宋体';">）；</span></p>
<p>聚类实现了<span style="font-family:Calibri;">K-means</span><span style="font-family:'宋体';">、高斯混合、</span><span style="font-family:Calibri;">PIC</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">LDA</span><span style="font-family:'宋体';">和</span><span style="font-family:Calibri;">Streaming</span><span style="font-family:'宋体';">版本的</span><span style="font-family:Calibri;">K-means</span><span style="font-family:'宋体';">；</span></p>
<p>降维实现了<span style="font-family:Calibri;">SVD</span><span style="font-family:'宋体';">和</span><span style="font-family:Calibri;">PCA</span><span style="font-family:'宋体';">；</span></p>
<p>还有频繁模式挖掘的<span style="font-family:Calibri;">FP-growth</span><span style="font-family:'宋体';">；</span></p>
<p>1.5.3<span style="font-family:'黑体';">、</span><span style="font-family:Calibri;">Spark SQL</span></p>
<p>Spark SQL<span style="font-family:'宋体';">实现了基于</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">的交互式查询</span><span style="font-family:Calibri;">;</span></p>
<p> <img src="https://img-blog.csdn.net/20160312104400251?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p> </p>
<p>数据源<span style="font-family:Calibri;">API</span><span style="font-family:'宋体';">通过</span><span style="font-family:Calibri;">Spark SQL</span><span style="font-family:'宋体';">提供了访问结构化数据的可插拔机制。数据源有了简便的途径进行数据转换并加入到</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">平台中。</span></p>
<p>数据源<span style="font-family:Calibri;">API</span><span style="font-family:'宋体';">的另一个优点就是不管数据的来源如何，用户都能通过</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">支持的所有语言来操作这些数据。</span></p>
<p>1.5.4<span style="font-family:'黑体';">、</span><span style="font-family:Calibri;">GraphX</span></p>
<p>GraphX<span style="font-family:'宋体';">实现了图计算，是</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">提供的关于图和图并行计算的</span><span style="font-family:Calibri;">API</span><span style="font-family:'宋体';">，它集</span><span style="font-family:Calibri;">ETL</span><span style="font-family:'宋体';">、试探性分析和迭代式的图计算与一体，在灵活性、易用性和容错性的前提下获得了很好的性能。</span></p>
<p>图算法是很多复杂机器学习算法的基础，<span style="font-family:Calibri;">GraphX</span><span style="font-family:'宋体';">的特点是离线计算、批量处理、基于同步的整体同步并行计算模型（</span><span style="font-family:Calibri;">BSP</span><span style="font-family:'宋体';">）。</span></p>
<p><a href="http://www.cnblogs.com/Leo_wl/p/3530464.html" rel="nofollow"><span style="color:rgb(0,0,255);">http://www.cnblogs.com/Leo_wl/p/3530464.html</span></a></p>
<p> </p>
<h3>1.6<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">版本</span></h3>
<p> <img src="https://img-blog.csdn.net/20160312104404980?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p> </p>
<h3>1.7<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">整体代码结构规格</span></h3>
<p>Spark Core<span style="font-family:'宋体';">是</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">的核心，它体现了</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">的核心设计思想。</span></p>
<p>Spark SQL<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">MLlib</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">GraphX</span><span style="font-family:'宋体';">和</span><span style="font-family:Calibri;">Spark Streaming</span><span style="font-family:'宋体';">都是基于</span><span style="font-family:Calibri;">Spark Core</span><span style="font-family:'宋体';">的实现和衍生。</span></p>
<p>在<span style="font-family:Calibri;">Spark1.2.0</span><span style="font-family:'宋体';">版本中，</span><span style="font-family:Calibri;">Spark Core</span><span style="font-family:'宋体';">包含了近</span><span style="font-family:Calibri;">6.5</span><span style="font-family:'宋体';">万行的</span><span style="font-family:Calibri;">Scala</span><span style="font-family:'宋体';">代码。</span></p>
<p> <img src="https://img-blog.csdn.net/20160312104411876?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p> </p>
<p> </p>
<table><tbody><tr><td valign="top">
<p>scheduler<span style="font-family:'宋体';">：文件夹中含有负责整体的</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">应用、任务调度的代码</span><span style="font-family:Calibri;">;</span></p>
<p>broadcast<span style="font-family:'宋体';">：含有</span><span style="font-family:Calibri;">Broadcast(</span><span style="font-family:'宋体';">广播变量</span><span style="font-family:Calibri;">)</span><span style="font-family:'宋体';">的实现代码，</span><span style="font-family:Calibri;">API</span><span style="font-family:'宋体';">是</span><span style="font-family:Calibri;">Java</span><span style="font-family:'宋体';">和</span><span style="font-family:Calibri;">Python</span><span style="font-family:'宋体';">实现的</span><span style="font-family:Calibri;">;</span></p>
<p>deploy:<span style="font-family:'宋体';">含有</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">部署与启动运行的代码</span><span style="font-family:Calibri;">;</span></p>
<p>Common<span style="font-family:'宋体';">：不是一个文件夹，而是代表</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">通用的类和逻辑的实现</span><span style="font-family:Calibri;">;</span><br>
metrics<span style="font-family:'宋体';">：是运行时状态监控逻辑代码，</span><span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">中含有</span><span style="font-family:Calibri;">Worker</span><span style="font-family:'宋体';">节点负责计算的逻辑代码</span><span style="font-family:Calibri;">;</span></p>
<p>Partial<span style="font-family:'宋体';">：含有近似评估代码</span><span style="font-family:Calibri;">;</span></p>
<p>Network<span style="font-family:'宋体';">：含有集群通信模块代码</span><span style="font-family:Calibri;">;</span><br>
serializer<span style="font-family:'宋体';">：含有序列化模块的代码</span><span style="font-family:Calibri;">;</span></p>
<p>Storage<span style="font-family:'宋体';">：含有存储模块代码</span><span style="font-family:Calibri;">;</span><br>
ui<span style="font-family:'宋体';">：含有监控界面的代码逻辑</span><span style="font-family:Calibri;">;</span></p>
<p>下面是<span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">生态系统其它组件的实现：</span></p>
<p>Streaming<span style="font-family:'宋体';">：是</span><span style="font-family:Calibri;">Spark Streaming</span><span style="font-family:'宋体';">的实现代码</span><span style="font-family:Calibri;">;</span><br>
YARN<span style="font-family:'宋体';">：是</span><span style="font-family:Calibri;">Spark on YARN</span><span style="font-family:'宋体';">的部分实现代码</span><span style="font-family:Calibri;">;</span><br>
graphx<span style="font-family:'宋体';">：含有</span><span style="font-family:Calibri;">GraphX</span><span style="font-family:'宋体';">实现代码</span><span style="font-family:Calibri;">;</span><br>
interpreter<span style="font-family:'宋体';">：代码交互式</span><span style="font-family:Calibri;">shell</span><span style="font-family:'宋体';">的代码</span><span style="font-family:Calibri;">;</span></p>
<p>Mllib<span style="font-family:'宋体';">：代表</span><span style="font-family:Calibri;">MLlib</span><span style="font-family:'宋体';">算法实现的代码</span><span style="font-family:Calibri;">;</span><br>
sql<span style="font-family:'宋体';">：是</span><span style="font-family:Calibri;">Spark SQL</span><span style="font-family:'宋体';">的代码</span><span style="font-family:Calibri;">;</span></p>
</td>
</tr></tbody></table><p> </p>
<h3>1.8<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark on YARN</span></h3>
<p> <img src="https://img-blog.csdn.net/20160312104442565?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p> </p>
<p>Spark on YARN<span style="font-family:'宋体';">架构解析如下：</span></p>
<p>基于<span style="font-family:Calibri;">YARN</span><span style="font-family:'宋体';">的</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">作业首先由客户端生成作业信息，提交给</span><span style="font-family:Calibri;">ResourceManager</span><span style="font-family:'宋体';">，</span><span style="font-family:Calibri;">ResourceManager</span><span style="font-family:'宋体';">在某一</span><span style="font-family:Calibri;">NodeManager</span><span style="font-family:'宋体';">汇报时把</span><span style="font-family:Calibri;">AppMaster</span><span style="font-family:'宋体';">分配给</span><span style="font-family:Calibri;">NodeManager</span><span style="font-family:'宋体';">，</span><span style="font-family:Calibri;">NodeManager</span><span style="font-family:'宋体';">启动</span><span style="font-family:Calibri;">SparkAppMaster</span><span style="font-family:'宋体';">，</span><span style="font-family:Calibri;">SparkAppMaster</span><span style="font-family:'宋体';">启动后初始化作业，然后向</span><span style="font-family:Calibri;">ResourceManager</span><span style="font-family:'宋体';">申请资源，申请到相应资源后，</span><span style="font-family:Calibri;">SparkAppMaster</span><span style="font-family:'宋体';">通过</span><span style="font-family:Calibri;">RPC</span><span style="font-family:'宋体';">让</span><span style="font-family:Calibri;">NodeManager</span><span style="font-family:'宋体';">启动相应的</span><span style="font-family:Calibri;">SparkExecutor</span><span style="font-family:'宋体';">，</span><span style="font-family:Calibri;">SparkExecutor</span><span style="font-family:'宋体';">向</span><span style="font-family:Calibri;">SparkAppMaster</span><span style="font-family:'宋体';">汇报并完成相应的任务。此外，</span><span style="font-family:Calibri;">SparkClient</span><span style="font-family:'宋体';">会通过</span><span style="font-family:Calibri;">AppMaster</span><span style="font-family:'宋体';">获取作业运行状态。</span></p>
<div><span style="font-family:'宋体';"><br></span></div>
            </div>
                </div>