---
layout:     post
title:      Hive基本概念及数据存储
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p></p><div class="toc"><h3>Hive基本概念）</h3><ul><ul><li><a href="#1hive_1" rel="nofollow">1、hive简单介绍</a></li><ul><ul><li><a href="#Hive_2" rel="nofollow">Hive是什么？</a></li><li><a href="#Hive_4" rel="nofollow">Hive的优点：</a></li><li><a href="#Hive_8" rel="nofollow">Hive的特点：</a></li></ul></ul><li><a href="#2Hive_17" rel="nofollow">2、Hive架构</a></li><ul><ul><li><a href="#_18" rel="nofollow">架构图</a></li><li><a href="#_21" rel="nofollow">基本组成</a></li></ul></ul><li><a href="#3HiveHadoop_26" rel="nofollow">3、Hive与Hadoop的关系</a></li><li><a href="#4Hive_30" rel="nofollow">4、Hive与传统数据库对比</a></li><li><a href="#5Hive_35" rel="nofollow">5、Hive的数据存储</a></li><ul><ul><li><a href="#tableexternal_table_46" rel="nofollow">table和external table的区别</a></li></ul></ul></ul></ul></div><p></p>
<h2><a id="1hive_1"></a>1、hive简单介绍</h2>
<h4><a id="Hive_2"></a>Hive是什么？</h4>
<p>Hive是基于Hadoop的一个数据仓库工具，可以将结构化的数据文件映射为一张数据库表，并提供类SQL查询功能。</p>
<h4><a id="Hive_4"></a>Hive的优点：</h4>
<p>操作接口采用类SQL语法，提供项目快速开发的能力，提高生产力。<br>
避免一直写MapReduce，简化MapReduce实现复杂查询逻辑的开发，减少开发人员的学习成本。<br>
功能扩展很方便。</p>
<h4><a id="Hive_8"></a>Hive的特点：</h4>
<p><strong>可扩展性</strong><br>
Hive可以自由的扩展集群的规模，一般情况下不需要重启服务。</p>
<p><strong>延展性</strong><br>
Hive支持用户自定义函数，用户可以根据自己的需求来实现自己的函数。</p>
<p><strong>容错性</strong><br>
良好的容错性，节点出现问题SQL仍可完成执行。</p>
<h2><a id="2Hive_17"></a>2、Hive架构</h2>
<h4><a id="_18"></a>架构图</h4>
<p><img src="https://img-blog.csdn.net/20180921212229335?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZlbmdnbXM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p>
<h4><a id="_21"></a>基本组成</h4>
<p><strong>用户接口</strong>：包括CLI、JDBC/ODBC、WebGUI。其中，CLI(command line interface)为shell命令行；JDBC/ODBC是Hive的JAVA实现，与传统数据库JDBC类似；WebGUI是通过浏览器访问Hive。<br>
<strong>元数据存储</strong>：通常是存储在关系数据库如mysql/derby中。Hive 将元数据存储在数据库中。Hive 中的元数据包括表的名字，表的列和分区及其属性，表的属性（是否为外部表等），表的数据所在目录等。<br>
<strong>解释器、编译器、优化器、执行器</strong>:完成HQL 查询语句从词法分析、语法分析、编译、优化以及查询计划的生成。生成的查询计划存储在HDFS 中，并在随后有MapReduce 调用执行。</p>
<h2><a id="3HiveHadoop_26"></a>3、Hive与Hadoop的关系</h2>
<p>Hive利用HDFS存储数据，利用MapReduce查询分析数据<br>
<img src="https://img-blog.csdn.net/20180921212432825?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZlbmdnbXM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p>
<h2><a id="4Hive_30"></a>4、Hive与传统数据库对比</h2>
<p>hive用于海量数据的离线数据分析，具有sql数据库的外表，但应用场景完全不同，hive只适合用来做批量数据统计分析。<br><br>
Hive与传统关系型数据库对比图：<br>
<img src="https://img-blog.csdn.net/20180921212613612?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZlbmdnbXM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p>
<h2><a id="5Hive_35"></a>5、Hive的数据存储</h2>
<p>1、Hive中所有的数据都存储在 HDFS 系统中。没有专门的数据存储格式（可支持Text，SequenceFile，ParquetFile，RCFILE等），也没有为数据建立索引，用户可以非常自由的组织 Hive 中的表。<br>
SequenceFile是hadoop中的一种文件格式：<br>
文件内容是以序列化的k-v对象来组织的。<br>
2、在创建表的时候只要告诉 Hive 数据中的列分隔符和行分隔符，Hive 就可以进行解析数据。<br>
3、Hive 中包含以下数据模型：DB、Table，External Table，Partition，Bucket。<br>
db：在hdfs中表现为${hive.metastore.warehouse.dir}目录下一个文件夹<br>
table（表）：在hdfs中表现所属db目录下一个文件夹。和数据库中的 Table 在概念上是类似的，每一个 Table 在 Hive 中都有一个相应的目录存储数据。<br>
external table（外部表）：与table类似，不过其数据存放位置可以在任意指定路径。<br>
partition（分区）：在hdfs中表现为table目录下的子目录。在 Hive 中，表中的一个 Partition 对应于表下的一个目录，所有的 Partition 的数据都存储在对应的目录中。<br>
bucket（桶）：在hdfs中表现为同一个表目录下根据hash散列之后的多个文件</p>
<h4><a id="tableexternal_table_46"></a>table和external table的区别</h4>
<p>Table 的创建过程和数据加载过程（这两个过程可以在同一个语句中完成），在加载数据的过程中，实际数据会被移动到数据仓库目录中；之后对数据对访问将会直接在数据仓库目录中完成。删除表时，表中的数据和元数据将会被同时删除。<br>
<br><br>
External Table 只有一个过程，加载数据和创建表同时完成（CREATE EXTERNAL TABLE ……LOCATION），实际数据是存储在 LOCATION 后面指定的 HDFS 路径中，并不会移动到数据仓库目录中。当删除一个 External Table 时，仅删除元数据，表中的数据不会真正被删除。</p>

            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>