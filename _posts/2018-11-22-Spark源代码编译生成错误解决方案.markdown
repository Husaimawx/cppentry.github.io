---
layout:     post
title:      Spark源代码编译生成错误解决方案
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/yangzl2008/article/details/11695353				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h1>缘由</h1>
<p>最近项目需要对Spark进行二次开发，在对Spark二次开发完成之后，需要对其进行打包成exe文件的操作。互联网真是一个宝贵的知识库，千辛万苦之下找到了<a href="http://blog.csdn.net/ikmb/article/details/4472343" rel="nofollow">Spark开发记录(windows环境)</a>和<a href="http://blog.sina.com.cn/s/blog_6c85d5c10100n1mn.html" rel="nofollow">install4j打包Spark详解</a>，前者介绍了两种版本spark的打包方式，而后者的打包方式适用于较早的2.5.x版本的Spark，对于2.6.x版本的Spark可以按照第一篇文章介绍的内容进行打包操作。但是按照操作进行下去之后发现项目无法ant打包成功。错误代码如下：</p>
<h1>错误代码</h1>
<p></p>
<pre><code class="language-plain">exe:
 [launch4j] Compiling resources
 [launch4j] Linking
 [launch4j] Wrapping
 [launch4j] Successfully created D:\javaee_workspace\spark\target\build\Spark.exe
 [launch4j] Compiling resources
 [launch4j] Linking
 [launch4j] Successfully created D:\javaee_workspace\spark\target\build\starter.exe
installer.izpack:
   [IzPack] Building installer jar: D:\javaee_workspace\spark\installer\spark-installer.jar
   [IzPack] Copying 61 files into installer
   [IzPack] Merging 8 jars into installer
   [IzPack] Writing 1 Pack into installer
installer.izpack.exe:
     [exec] Traceback (most recent call last):
     [exec]   File "c:/IzPack/utils/wrappers/izpack2exe/izpack2exe.py", line 126, in &lt;module&gt;
     [exec]     main()
     [exec]   File "c:/IzPack/utils/wrappers/izpack2exe/izpack2exe.py", line 123, in main
     [exec]     create_exe(parse_options())
     [exec]   File "c:/IzPack/utils/wrappers/izpack2exe/izpack2exe.py", line 77, in create_exe
     [exec]     subprocess.call(p7zcmd, shell=use_shell)
     [exec]   File "C:\Python27\lib\subprocess.py", line 524, in call
     [exec]     return Popen(*popenargs, **kwargs).wait()
     [exec]   File "C:\Python27\lib\subprocess.py", line 711, in __init__
     [exec]     errread, errwrite)
     [exec]   File "C:\Python27\lib\subprocess.py", line 948, in _execute_child
     [exec]     startupinfo)
     [exec] WindowsError: [Error 193] %1 不是有效的 Win32

BUILD FAILED
D:\javaee_workspace\spark\build\build.xml:876: exec returned: 1</code></pre>
<p></p>
<h1>解决方案</h1>
<p>于是上网上搜索，在Openfire的官方网站上有人提出了这个问题“<a href="http://community.igniterealtime.org/thread/47995" rel="nofollow">failing python script while creating installer using Izpack for spark 2.6.3</a>”，但是没有人回答，于是又在浩大的网络上寻找答案，但是最终还是没有找到。</p>
<p>在查找关于python的相关内容时，找到了<a href="http://stackoverflow.com/questions/9531683/problems-using-subprocess-call-in-python-2-7-2-on-windows" rel="nofollow">Problems using subprocess.call() in Python 2.7.2 on Windows</a>这个帖子，虽然内容不一样，但是引起的Python的错误是一样的，其解决方案是：</p>
<p></p>
<pre><code class="language-python">subprocess.call('dir', shell=True)</code></pre>
于是，找到了C:\IzPack\utils\wrappers\izpack2exe下的izpack2exe.py文件，找到调用subprocess.call('dir', shell=True)的代码如下：
<p></p>
<p></p>
<pre><code class="language-python">use_shell = sys.platform != 'win32'
    
    if (os.access('installer.7z', os.F_OK)):
        os.remove('installer.7z')
    files = '" "'.join(settings.file)
    p7zcmd = '"%s" a -mmt -t7z -mx=9 installer.7z "%s"' % (p7z, files)
    subprocess.call(p7zcmd, shell=use_shell)</code></pre>
将其
<p></p>
<p></p>
<pre><code class="language-python">subprocess.call(p7zcmd, shell=use_shell)</code></pre>
替换为<br><pre><code class="language-python">subprocess.call(p7zcmd, shell=True)</code></pre>
程序再次点击ant运行installer.izpack.exe打包程序，执行打包出spark-installer.exe文件。<br><br><p></p>
            </div>
                </div>