---
layout:     post
title:      大数据HDFS总结
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-light">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p><strong>HDFS：</strong><br>
HDFS即Hadoop分布式文件系统（Hadoop Distributed Filesystem），以流式数据访问模式来存储文件。<br>
<strong>HDFS Block：</strong><br>
HDFS上的文件被划分为块大小的多个分块，作为独立的存储单元，称为数据块。<br>
<strong>HDFS的三个节点：</strong><br>
Namenode：用来管理HDFS的元数据。<br>
Datanode：文件系统的工作节点，负责存储元数据。<br>
Secondary Namenode：Namenode备份节点，解决数据安全问题，与Namenode进行通信，以便定期保存HDFS元数据的快照。</p>
<p><strong>HDFS的局限性：</strong><br>
HDFS不适合用在要求低时间延迟数据访问的应用，存储大量的小文件，多用户写入，任意修改文件。</p>
<p><strong>HDFS启动过程：</strong><br>
1）在NameNode主节点启动时，首先进入安全模式：</p>
<p>1.加载fsimage，加载到内存中<br>
2.如果edits文件不为空，那么Namenode自己来合并<br>
3.检查DN的健康情况<br>
4.如果有DN挂掉了，指挥做备份</p>
<p>2）当集群启动之时，DN会向NN发送一些信息（Block位置、DN地址）<br>
3）client向NN汇报当前要上传的文件信息（block数量）文件的上传时间、权限、拥有者<br>
4）client计算block的数量，向NN请求一个ID号，请求存放block的位置</p>
<p><strong>Client向Datanode写数据的详细过程：</strong><br>
1、如果要上传一个大文件，计算大文件的block数量大文件地址/128M=block数<br>
2、client会向namenode汇报：<br>
（1）当前大文件的blokc数<br>
（2）当前大文件属于谁权限<br>
（3）上传时间<br>
3、client切割出来一个block<br>
4、请求block块的ld号以及地址<br>
5、因为namenode能够掌控全局，管理所有的DN，所以他会将负载不高的DN地址返回给client<br>
6、client拿到地址后，向Datanode上传数据<br>
7、DN将block存储完毕后，会向Namenode汇报当前的存储情况<br>
<img src="https://img-blog.csdn.net/20181009203755225?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NoZW5tZW5neGkxMjIw/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p>
<p><strong>Namenode的作用：</strong><br>
1、掌控全局，管理DataNode以及元数据<br>
2、接受客户端的读写服务<br>
3、收集DataNode汇报的Block列表信息NameNode保存metadata信息（包括文件owership和permissions文件大小，时间、Block列表、Block 副本位置）<br>
4、接受client的读请求，返回地址</p>
<p><strong>Datanode的作用：</strong><br>
1、存储block块<br>
2、向Namenode汇报发送心跳<br>
3、接受client的读请求</p>
<p><strong>HDFS的备份机制：</strong><br>
1、第一个block存储在负载不是很高的一台服务器上<br>
2、第1个备份的block存储在与第一个block不同的机架随机一条服务<br>
3、第2个备份在与第一个备份相同的机架随机一台服务器</p>
<p><strong>Namenode持久化：</strong><br>
当一个edits使用超过3600秒或者edits文件超过64M，会将edits和fsimage拉取到Secondary Namenode，模拟执行edits文件产生元数据，合并成新的fsimage.ckpt传回Namenode。<br>
edits：具体的操作信息<br>
fsimage：元数据<br>
<img src="https://img-blog.csdn.net/20181009203805661?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NoZW5tZW5neGkxMjIw/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p>
<p><strong>搭建集群的模式：</strong><br>
1、	伪分布式<br>
在一台服务器上，启动多个进程，模拟多个角色<br>
2、	完全分布式<br>
在多台服务器上，每台服务器启动不同角色的进程，使用多台服务器组成HDFS集群。<br>
3、高可用的完全分布式</p>

            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>