---
layout:     post
title:      hadoop2.0.x【2】--Apache Hadoop MapReduce - Migrating from Apache Hadoop 1.x to Apache Hadoop 2--翻译与分析
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<div class="section">
<h3><a name="Introduction">Introduction</a></h3>
<p>This document provides information for users to migrate their Apache Hadoop MapReduce applications from Apache Hadoop 1.x to Apache Hadoop 2.x.</p>
<p><strong><span id="result_box" lang="zh-cn" xml:lang="zh-cn"><span>本文档提供</span><span>的信息</span><span>为用户</span><span>从Apache</span>
<span class="hps">Hadoop的</span><span>1.x</span><span class="hps">的</span><span>MapReduce应用</span><span>迁移</span><span>到Apache</span>
<span class="hps">Hadoop的</span><span>2.x版本</span></span></strong><br></p>
<p>In Apache Hadoop 2.x we have spun off resource management capabilities into Apache Hadoop YARN, a general purpose, distributed application management framework while Apache Hadoop MapReduce (aka MRv2) remains as a pure distributed computation framework.</p>
<p><strong><span lang="zh-cn" xml:lang="zh-cn"><span>在</span><span>Apache </span><span>Hadoop
</span><span>2.x中</span><span>我们已经</span><span>剥离了</span><span>资源管理</span><span>功能集成到</span><span>Apache
</span><span>Hadoop </span><span>YARN，</span><span>成为通用化的</span><span>分布式应用程序</span><span>的管理框架</span><span>，同时</span><span>Apache
</span><span>Hadoop </span><span>MapReduce</span><span>（</span><span>又名</span><span>MRv2</span><span>）</span><span>仍然是一个</span><span>纯粹的</span><span>分布式计算</span><span>框架。</span></span></strong><br></p>
<p>In general, the previous MapReduce runtime (aka MRv1) has been reused and no major surgery has been conducted on it. Therefore, MRv2 is able to ensure satisfactory compatibility with MRv1 applications. However, due to some improvements and code refactorings,
 a few APIs have been rendered backward-incompatible. <br></p>
<p><strong><span lang="zh-cn" xml:lang="zh-cn"><span>在</span><span>一般情况下，</span><span>以前的</span><span>MapReduce的</span><span>运行时</span><span>（又名</span><span>MRv1</span><span>）无需大的改动而在其上运行</span><span>。</span><span></span><span>MRv2</span><span>能够</span><span>确保与</span><span>MRv1</span><span>应用的良好</span><span>兼容性。</span><span>虽然进行</span><span>一些改进</span><span>和</span><span>代码</span><span>重构</span><span>，部分</span><span>API</span><span>已提供</span><span>向后</span><span>兼容。</span></span></strong><br></p>
<p>The remainder of this page will discuss the scope and the level of backward compatibility that we support in Apache Hadoop MapReduce 2.x (MRv2).</p>
<p><strong><span lang="zh-cn" xml:lang="zh-cn"><span>在</span><span>这个</span><span>页面</span><span>的其余部分将</span><span>讨论我们</span><span>在</span><span>Apache
</span><span>Hadoop </span><span>MapReduce </span><span>2.X</span><span>（</span><span>MRv2</span><span>）</span><span></span><span>向后兼容范围</span><span></span><span>。</span></span></strong><br></p>
</div>
<div class="section">
<h3><a name="Binary_Compatibility">Binary Compatibility</a></h3>
<p>First, we ensure binary compatibility to the applications that use old <strong>
mapred</strong> APIs. This means that applications which were built against MRv1 <strong>
mapred</strong> APIs can run directly on YARN without recompilation, merely by pointing them to an Apache Hadoop 2.x cluster via configuration.</p>
<p><strong><span lang="zh-cn" xml:lang="zh-cn"><span>首先，在</span><span>二进制兼容</span><span>于使用</span><span>老</span><span>mapred</span><span>的API</span><span>的应用程序。</span><span>这意味着使用</span><span></span><span>MRv1</span>
<span class="hps">mapred</span> <span class="hps">API构建的程序可以</span><span>直接在YARN</span><span>上运行</span><span>而无需重新编译</span><span>，</span><span>仅仅通过进行</span></span>Apache Hadoop 2.x集群进行配置即可。</strong><br></p>
</div>
<div class="section">
<h3><a name="Source_Compatibility">Source Compatibility</a></h3>
<p>We cannot ensure complete binary compatibility with the applications that use <strong>
mapreduce</strong> APIs, as these APIs have evolved a lot since MRv1. However, we ensure source compatibility for<strong>mapreduce</strong> APIs that break binary compatibility. In other words, users should recompile their applications that use<strong>mapreduce</strong>
 APIs against MRv2 jars. One notable binary incompatibility break is Counter and CounterGroup.</p>
<p><strong><span lang="zh-cn" xml:lang="zh-cn"><span>我们不能</span><span>保证</span><span>二进制完全兼容</span><span>使用</span><span>MapReduce</span>
<span class="hps">API的</span><span>应用程序</span><span>，</span><span>因为这些</span><span>API已经</span><span>从</span><span>MRv1</span><span>发展了很多</span><span>。</span><span>然而，我们</span><span>保证</span><span>源代码级别</span><span>mapreduce</span><span>的兼容，即使</span><span></span><span>二进制</span><span>API兼容。</span><span>换句话说，</span><span>用户只需要</span><span>基于<span lang="zh-cn" xml:lang="zh-cn"><span></span><span>MRv2</span><span>
 jars</span></span>重新编译他们</span><span>的</span><span>使用mapreduce</span><span> API的</span><span>应用程序</span><span>。</span><span>需要注意的</span><span>二进制形式不兼容</span>Counter<span>和</span><span>CounterGroup</span><span>。</span></span></strong><br></p>
</div>
<div class="section">
<h3><a name="Not_Supported">Not Supported</a></h3>
<p>MRAdmin has been removed in MRv2 because because <tt>mradmin</tt> commands no longer exist. They have been replaced by the commands in<tt>rmadmin</tt>. We neither support binary compatibility nor source compatibility for the applications that use this class
 directly.</p>
<p><span lang="zh-cn" xml:lang="zh-cn"><span><strong><span lang="zh-cn" xml:lang="zh-cn"><span>因为</span><span>mradmin</span><span>命令不再</span><span>存在</span></span>，MRAdmin</strong></span><strong><span>已</span><span>MRv2</span><span>被删除</span><span></span><span>。</span><span>他们</span><span>已被替换</span><span>的命令</span><span>rmadmin</span><span>。</span><span>无论是<span lang="zh-cn" xml:lang="zh-cn"><span>二进制</span><span>和源代码级别都不</span><span>兼容</span></span></span><span></span><span>直接</span><span>使用这个类</span><span>的</span><span>应用程序</span><span></span><span>。</span></strong></span><br></p>
</div>
<div class="section">
<h3><a name="Tradeoffs_between_MRv1_Users_and_Early_MRv2_Adopters">Tradeoffs between MRv1 Users and Early MRv2 Adopters</a></h3>
<p>Unfortunately, maintaining binary compatibility for MRv1 applications may lead to binary incompatibility issues for early MRv2 adopters, in particular Hadoop 0.23 users. For<strong>mapred</strong> APIs, we have chosen to be compatible with MRv1 applications,
 which have a larger user base. For<strong>mapreduce</strong> APIs, if they don't significantly break Hadoop 0.23 applications, we still change them to be compatible with MRv1 applications. Below is the list of MapReduce APIs which are incompatible with Hadoop
 0.23.</p>
<p><strong><span lang="zh-cn" xml:lang="zh-cn"><span style="color:#FF0000;"><span>不幸的是</span><span>，</span><span></span><span>MRv1</span><span>应用程序的二进制</span><span>兼容性</span><span>可能会导致</span><span>二进制</span><span>不兼容的问题</span><span>早日</span><span>MRv2</span><span>采用</span><span>，</span><span>特别是</span><span>Hadoop的</span><span>0.23</span><span>用户</span><span>。</span>
<span class="hps">For mapred</span><span>的API</span><span>，</span><span>我们选择</span><span>与</span><span>MRv1</span><span>的应用程序</span><span>，</span><span>其中有一个</span><span>更大的用户群</span><span>兼容</span><span>。</span>
<span class="hps">For mapreduce</span><span>的API</span><span>，</span><span>如果他们不</span><span>显著</span><span>突破</span><span>0.23</span><span>的Hadoop</span><span>应用程序</span><span>，</span><span>我们仍然</span><span>将其更改为</span><span>与</span><span>MRv1</span><span>应用程序兼容。</span></span><span>下面是</span><span>MapReduce的</span><span>API的</span><span>这是</span><span>用Hadoop</span><span>0.23</span><span>不兼容</span><span>的</span><span>列表</span><span>。</span></span></strong><br></p>
<table class="bodyTable" border="1"><tbody><tr class="a"><td align="left"><strong>Problematic Function</strong></td>
<td align="left"><strong>Incompatibility Issue</strong></td>
</tr><tr class="b"><td align="left"><tt>org.apache.hadoop.util.ProgramDriver#drive</tt></td>
<td align="left">Return type changes from <tt>void</tt> to <tt>int</tt></td>
</tr><tr class="a"><td align="left"><tt>org.apache.hadoop.mapred.jobcontrol.Job#getMapredJobID</tt></td>
<td align="left">Return type changes from <tt>String</tt> to <tt>JobID</tt></td>
</tr><tr class="b"><td align="left"><tt>org.apache.hadoop.mapred.TaskReport#getTaskId</tt></td>
<td align="left">Return type changes from <tt>String</tt> to <tt>TaskID</tt></td>
</tr><tr class="a"><td align="left"><tt>org.apache.hadoop.mapred.ClusterStatus#UNINITIALIZED_MEMORY_VALUE</tt></td>
<td align="left">Data type changes from <tt>long</tt> to <tt>int</tt></td>
</tr><tr class="b"><td align="left"><tt>org.apache.hadoop.mapreduce.filecache.DistributedCache#getArchiveTimestamps</tt></td>
<td align="left">Return type changes from <tt>long[]</tt> to <tt>String[]</tt></td>
</tr><tr class="a"><td align="left"><tt>org.apache.hadoop.mapreduce.filecache.DistributedCache#getFileTimestamps</tt></td>
<td align="left">Return type changes from <tt>long[]</tt> to <tt>String[]</tt></td>
</tr><tr class="b"><td align="left"><tt>org.apache.hadoop.mapreduce.Job#failTask</tt></td>
<td align="left">Return type changes from <tt>void</tt> to <tt>boolean</tt></td>
</tr><tr class="a"><td align="left"><tt>org.apache.hadoop.mapreduce.Job#killTask</tt></td>
<td align="left">Return type changes from <tt>void</tt> to <tt>boolean</tt></td>
</tr><tr class="b"><td align="left"><tt>org.apache.hadoop.mapreduce.Job#getTaskCompletionEvents</tt></td>
<td align="left">Return type changes from <tt>o.a.h.mapred.TaskCompletionEvent[]</tt> to<tt>o.a.h.mapreduce.TaskCompletionEvent[]</tt></td>
</tr></tbody></table></div>
<div class="section">
<h3><a name="Malicious">Malicious</a></h3>
<p>For the users who are going to try <tt>hadoop-examples-1.x.x.jar</tt> on YARN, please note that<tt>hadoop -jar hadoop-examples-1.x.x.jar</tt> will still use
<tt>hadoop-mapreduce-examples-2.x.x.jar</tt>, which is installed together with other MRv2 jars. By default Hadoop framework jars appear before the users' jars in the classpath, such that the classes from the 2.x.x jar will still be picked. Users should remove
<tt>hadoop-mapreduce-examples-2.x.x.jar</tt> from the classpath of all the nodes in a cluster. Otherwise, users need to set<tt>HADOOP_USER_CLASSPATH_FIRST=true</tt> and
<tt>HADOOP_CLASSPATH=...:hadoop-examples-1.x.x.jar</tt> to run their target examples jar, and add the following configuration in<tt>mapred-site.xml</tt> to make the processes in YARN containers pick this jar as well.</p>
<p><span lang="zh-cn" xml:lang="zh-cn"><span>对于</span><span>想要在YARN上尝试的</span><span></span><span></span><span></span><tt>hadoop-examples-1.x.x.jar</tt><span></span><span>的</span><span>用户</span><span>，</span><span>请注意</span><tt>hadoop -jar hadoop-examples-1.x.x.jar</tt><span>仍然会使用</span><tt>hadoop-mapreduce-examples-2.x.x.jar</tt><span>，这是与</span><span></span><span>其他</span><span>MRv2</span><span>
 jar一起安装的。</span><span>默认情况下，</span><span>Hadoop框架</span><span>的jar</span><span>在</span><span>用户</span><span>类路径中的</span><span>jar文件</span><span>之前</span><span>被调用，</span><span>使得从</span><span>2.xx版本</span><span>的jar</span><span>的类</span><span>会被优先</span><span></span><span>。</span><span>用户应该</span><span>从</span><span>集群中的</span><span>所有节点</span><span>的类路径</span><span>中删除</span><span></span><tt>hadoop-mapreduce-examples-2.x.x.jar</tt><span>。</span><span>否则</span><span>，</span><span>用户需要设置</span><span></span><tt>HADOOP_USER_CLASSPATH_FIRST=true</tt>，<span></span><span></span><tt>HADOOP_CLASSPATH=...:hadoop-examples-1.x.x.jar</tt><span></span><span>来运行他们的</span><span>目标</span><span>实例</span><span>的jar</span><span>，</span><span>并添加以下</span><span>配置</span><span>在mapred</span><span class="atn">-</span><span>site.xml中</span><span>，使</span>YARN中的进程有限使用这个jar<span>。</span></span><br></p>
<div class="source">
<pre>    &lt;property&gt;
        &lt;name&gt;mapreduce.job.user.classpath.first&lt;/name&gt;
        &lt;value&gt;true&lt;/value&gt;
    &lt;/property&gt;</pre>
</div>
</div>
            </div>
                </div>