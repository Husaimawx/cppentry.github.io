---
layout:     post
title:      Flume部署和启动
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;"><span style="line-height:1.5;">Flume启动命令</span></div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;">    flume-ng agent  --conf  conf  --conf-file  conf/file.log --name agent1 -Dflume.root.logger=DEBUG, console</div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;">    -c (--conf) ： flume的conf文件路径</div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;">    -f (--conf-file) ： 自定义的flume配置文件</div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;">    -n (--name)： 自定义的flume配置文件中agent的name</div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;"><br style="background-color:inherit;"></div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;">
<div style="background-color:inherit;">log4j:WARN No appenders could be found for logger (org.apache.flume.node.PollingPropertiesFileConfigurationProvider).</div>
<div style="background-color:inherit;">log4j:WARN Please initialize the log4j system properly.</div>
<div style="background-color:inherit;">log4j:WARN See <a href="http://logging.apache.org/log4j/1.2/faq.html#noconfig" rel="nofollow" style="background-color:inherit;">http://logging.apache.org/log4j/1.2/faq.html#noconfig</a> for more info.</div>
</div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;">是因为--conf 指定的配置路径找不到 log4j.properties的文件。</div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;"><br style="background-color:inherit;"></div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;"><span style="background-color:inherit;">示例： spooldir 数据源</span></div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;"><span style="background-color:inherit;"></span><pre><code class="language-html"> #声明source、channel、sink
    agent-1.channels=ch-1
    agent-1.sources=src-1
    agent-1.sinks=log-sink1

    #channel的类型 
    agent-1.channels.ch-1.type=memory

    #sources的获取，spooldir通过文件夹的形式，只需要把日志文件放入flumelog2文件夹，sink会以logger的形式打印出来
    agent-1.sources.src-1.type=spooldir
    agent-1.sources.src-1.channels=ch-1
    agent-1.sources.src-1.spoolDir=/home/hadoop/app/flumelog2
    agent-1.sources.src-1.fileHeader=true

    #sink消费类型 logger
    agent-1.sinks.log-sink1.type=logger
    agent-1.sinks.log-sink1.channel=ch-1</code></pre><br></div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;"><span style="background-color:inherit;">  </span></div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;"><span style="background-color:inherit;">示例： spoolDir  --&gt; hdfs</span></div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;">
<div style="background-color:inherit;"><pre><code class="language-html">agent1.sources=source1
    agent1.sinks=sink1
    agent1.channels=channel1

    # spoolDir 检测改路径的文件，有新的文件进入，就会被检测到。
    agent1.sources.source1.type=spooldir
    agent1.sources.source1.spoolDir=/home/hadoop/app/flumelog/log
    agent1.sources.source1.channels=channel1
    agent1.sources.source1.fileHeader=false
    agent1.sources.source1.interceptors=i1
    agent1.sources.source1.interceptors.i1.type=timestamp

    # sink消费channel1中的数据到hdfs里。
    agent1.sinks.sink1.type=hdfs
    agent1.sinks.sink1.hdfs.path=hdfs://hdp-server01:9000/flume/log
    agent1.sinks.sink1.hdfs.fileType=DataStream
    agent1.sinks.sink1.hdfs.writeFormat=Text
    agent1.sinks.sink1.hdfs.rollInterval=0
    agent1.sinks.sink1.hdfs.rollCount=0
    agent1.sinks.sink1.hdfs.bachSize=1000
    agent1.sinks.sink1.channel=channel1
    agent1.sinks.sink1.hdfs.filePrefix=%Y-%m-%d

    # channel以文件的形式保存source传输过来的数据。checkpointDir路径下存放一些数据的缓存。dataDirs路径下存放一些操作记录和数据。（可以自己指定）
    agent1.channels.channel1.type=file
    agent1.channels.channel1.checkpointDir=/home/hadoop/app/flumelog/log/logdfstmp/point
    agent1.channels.channel1.dataDirs=/home/hadoop/app/flumelog/log/logdfstmp</code></pre><br></div>
</div>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;"><br style="background-color:inherit;"></div>
<p style="font-family:'微软雅黑';font-size:14px;line-height:21px;">
ps：</p>
<p style="font-family:'微软雅黑';font-size:14px;line-height:21px;">
    1、data/log-ID，这种类型的文件存放的是put、take、commit、rollback的操作记录及数据。</p>
<p style="font-family:'微软雅黑';font-size:14px;line-height:21px;">
    2、checkpoint/checkpoint存放的是event在那个data文件logFileID，的什么位置offset等信息。</p>
<p style="font-family:'微软雅黑';font-size:14px;line-height:21px;">
    2、checkpoint/inflightTakes存放的是事务take的缓存数据，每隔段时间就重建文件。</p>
<p style="font-family:'微软雅黑';font-size:14px;line-height:21px;">
    3、checkpoint/inflightPuts存放的是事务对应的put缓存数据，每隔段时间就重建文件。</p>
<p style="font-family:'微软雅黑';font-size:14px;line-height:21px;">
    4、checkpoint/checkpoint.meta主要存储的是logfileID及对应event的数量等信息。</p>
<p style="font-family:'微软雅黑';font-size:14px;line-height:21px;">
    5、data/log-ID.meta，主要记录log-ID下一个写入位置以及logWriteOrderID等信息。</p>
<p style="font-family:'微软雅黑';font-size:14px;line-height:21px;">
    6、每个data目录里data文件保持不超过2个。</p>
<p style="font-family:'微软雅黑';font-size:14px;line-height:21px;">
    7、putList和takeList是缓存存储的是相应的FlumeEventPointer，但是inflightTakes和inflightPuts其实也是缓存存储的也是相应的信息，只不过比两者多存一些信息罢了，功能重合度很高，为什么会这样呢？我想是一个只能在内存，一个可以永久存储(当然是不断重建的)，后者可以用来进行flume再启动的恢复。</p>
<div style="font-family:'微软雅黑';font-size:14px;line-height:21px;"><span style="background-color:inherit;"></span>
<p style="font-weight:normal;background-color:inherit;">
</p>
</div>
            </div>
                </div>