---
layout:     post
title:      hive的学习笔记2-hive源码的编译
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p></p><div class="toc"><div class="toc">
<ul>
<li><a href="#hive%E6%9E%B6%E6%9E%84" rel="nofollow">hive架构</a><ul>
<li><a href="#hive%E7%9A%84%E7%94%A8%E6%88%B7%E6%8F%90%E4%BA%A4sql%E7%9A%84%E6%96%B9%E5%BC%8F" rel="nofollow">hive的用户提交SQL的方式</a></li>
<li><a href="#sql%E6%8F%90%E4%BA%A4%E4%BB%A5%E5%90%8E%E7%BB%8F%E8%BF%87%E4%B8%89%E4%B8%AA%E6%AD%A5%E9%AA%A4" rel="nofollow">sql提交以后经过三个步骤</a></li>
<li><a href="#hive-%E6%9E%B6%E6%9E%84" rel="nofollow">hive 架构</a></li>
<li><a href="#hive%E4%B8%AD%E6%94%AF%E6%8C%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B" rel="nofollow">hive中支持的数据类型</a><ul>
<li><a href="#%E7%AE%80%E5%8D%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B" rel="nofollow">简单的数据类型</a></li>
<li><a href="#%E5%A4%8D%E6%9D%82%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B" rel="nofollow">复杂的数据类型</a></li>
</ul>
</li>
<li><a href="#hive%E7%9A%84%E6%95%B0%E6%8D%AE%E6%8A%BD%E8%B1%A1" rel="nofollow">hive的数据抽象</a></li>
<li><a href="#hive%E7%9A%84%E4%BA%AE%E7%82%B9" rel="nofollow">hive的亮点</a></li>
</ul>
</li>
<li><a href="#hive%E7%9A%84%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91" rel="nofollow">hive的源码编译</a><ul>
<li><a href="#maven%E7%9A%84%E5%AE%89%E8%A3%85" rel="nofollow">maven的安装</a></li>
<li><a href="#%E4%BF%AE%E6%94%B9maven%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" rel="nofollow">修改maven的配置文件</a></li>
<li><a href="#%E7%BC%96%E8%AF%91hive%E7%9A%84%E6%BA%90%E7%A0%81" rel="nofollow">编译hive的源码</a></li>
</ul>
</li>
</ul>
</div>
</div>


<h1 id="hive架构">hive架构</h1>

<h2 id="hive的用户提交sql的方式">hive的用户（提交SQL的方式）</h2>

<p>1.Cli（命令行） <br>
Cli（hive shell） <br>
2.JDBC/ODBC（面向应用程序进行编程开发） <br>
3.Web UI（Hue/hwi）（不常用）</p>

<h2 id="sql提交以后经过三个步骤">sql提交以后经过三个步骤</h2>

<p>1.编译 <br>
2.优化 <br>
3.执行 <br>
生成类似mapreducer的task。提交到hadoop集群上执行。</p>

<h2 id="hive-架构">hive 架构</h2>

<p><img src="http://ww4.sinaimg.cn/mw1024/c398f415gw1f4dhf54g9aj20o20en0ut.jpg" alt="hive的架构" title=""> <br>
 - Command-line shell 和Thrift/jdbc这两个相当于相当于客户端。 <br>
    Thrift是一种跨语言的服务。 <br>
 - Metastore 元数据存有：database（location/owner/name）/table。存在mysql上。 <br>
真正的hive的数据存在hdfs上 <br>
    hive自带一个berby数据库，一般不使用。只能启动一个命令行。 <br>
 - Driver：一个SQL运行以后，会先经过Driver，然后经过mapReduce执行，然后写到HDFS或HBase上。 <br>
driver：包括很多部分 <br>
1.编译：将SQL转换成一个抽象的语法树 <br>
2.解析：解析成hive可以认识的东西（检查表是否存在，列是否存在，语法是否正确）如果sql语句没有问题，就会转化成一个逻辑的查询计划。 <br>
3.优化：将逻辑的执行计划转化成物理的窒息计划。将优化后的执行计划交由执行引擎来使用。（执行引擎：mapreduce） <br>
4.序列化与反序列化（Serializer/Deserializer）</p>

<h2 id="hive中支持的数据类型">hive中支持的数据类型</h2>

<h3 id="简单的数据类型">简单的数据类型</h3>

<ul>
<li>int</li>
<li>boolean</li>
<li>float</li>
<li>string</li>
<li>timestamp</li>
</ul>

<h3 id="复杂的数据类型">复杂的数据类型</h3>

<ul>
<li>struct</li>
<li>map</li>
<li>array</li>
</ul>

<h2 id="hive的数据抽象">hive的数据抽象</h2>

<p>hive中任何一个数据库（表）对应的都是hdfs上的一个文件夹。<img src="http://ww2.sinaimg.cn/mw690/c398f415gw1f4dmxqzojsj20oq0ebabt.jpg" alt="hive的数据结构" title=""></p>

<h2 id="hive的亮点">hive的亮点</h2>

<ul>
<li>写hive比mapredce简单</li>
<li>hql和sql非常类似，语法类似</li>
<li>hive提供了很多内置函数，在分析统计上比较方便</li>
<li>hive 支持udf函数（user-defined function）</li>
<li>hive在大规模的数据集上，支持各种数据类型</li>
<li>hive支持权限控制，支持元数据管理。</li>
<li>hive还有很多查询优化</li>
</ul>

<hr>

<h1 id="hive的源码编译">hive的源码编译</h1>

<h2 id="maven的安装">maven的安装</h2>

<p>先安装一个maven <br>
进入maven的网站 maven.apache.org/下载最新版maven <br>
解压到soft文件夹下，并配置环境变量。</p>

<pre class="prettyprint"><code class=" hljs bash"><span class="hljs-built_in">sudo</span> gedit /etc/profile</code></pre>



<pre class="prettyprint"><code class="language-xml hljs ">export MAVEN_HOME=/home/devil/soft/apache-maven-3.3.9
export PATH=$PATH:$MAVEN_HOME/bin</code></pre>



<pre class="prettyprint"><code class=" hljs bash"><span class="hljs-built_in">source</span> /etc/profile</code></pre>



<h2 id="修改maven的配置文件">修改maven的配置文件</h2>

<p>修改maven的conf文件夹下的settings.xml文件。 <br>
设置maven的本地仓库</p>

<pre class="prettyprint"><code class="language-xml hljs "><span class="hljs-tag">&lt;<span class="hljs-title">localRepository</span>&gt;</span>/home/devil/maven_repos<span class="hljs-tag">&lt;/<span class="hljs-title">localRepository</span>&gt;</span></code></pre>

<p>这样maven就搭建好了，可以通过命令</p>



<pre class="prettyprint"><code class=" hljs livecodeserver">mvn -<span class="hljs-built_in">version</span></code></pre>

<p>查看maven的版本</p>



<h2 id="编译hive的源码">编译hive的源码</h2>

<p>在hive.apache.org下载hive的源码，解压下来。在解压后的文件夹下执行命令：</p>

<pre class="prettyprint"><code class=" hljs lasso">mvn clean install <span class="hljs-attribute">-Phadoop</span><span class="hljs-subst">-</span><span class="hljs-number">2</span>,dist <span class="hljs-attribute">-DskinpTests</span> <span class="hljs-attribute">-Dhadoop</span><span class="hljs-subst">-</span><span class="hljs-number">23.</span>version<span class="hljs-subst">=</span><span class="hljs-number">2.7</span><span class="hljs-number">.1</span> <span class="hljs-attribute">-Dspark</span><span class="hljs-built_in">.</span>version<span class="hljs-subst">=</span><span class="hljs-number">1.4</span><span class="hljs-number">.1</span> </code></pre>

<p>这一步大概编译了半小时，看其他资料说，可以在maven/conf下的settings.xml中设置镜像为oschina的镜像，提高编译速度，但我设置以后，提醒502错误。</p>

<p>编译完成后在/home/devil/soft/hive-1.2.1-src/packaging/target文件夹里面就是我们的编译后的东西。 <br>
我们可以用里面的apache-hive-1.2.1-bin.tar.gz来进行hive 的安装。 </p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>