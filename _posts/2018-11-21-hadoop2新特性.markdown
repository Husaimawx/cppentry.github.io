---
layout:     post
title:      hadoop2新特性
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h2>一 hdfs联邦</h2>
<h3>1.hdfs两层模型：</h3>
<h4><span></span>namespace</h4>
<div><span></span>包括目录/文件 和 块 。它支持所有命名空间相关的文件操作，如对文件和目录的增删改查</div>
<h4><span></span>block storage service</h4>
<h5><span></span>在namenode中块的管理</h5>
<div><span></span>datanode集群的注册/心跳检测功能等</div>
<div><span></span>处理块报告信息和维护块的位置信息</div>
<div><span></span>块的位置信息的增删改查</div>
<div><span></span>管理块的冗余信息/创建副本/删除多余副本等</div>
<div><br></div>
<h5><span></span>存储</h5>
<div><span></span>datanode提供本地文件系统上块的存储/读写/访问等</div>
<div><br></div>
<div><br></div>
<div><img src="https://img-blog.csdn.net/20140916204412721?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMDQxNDA2Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></div>
<div><br></div>
<h3>2.   1..x hdfs架构的缺陷</h3>
<div><span></span>整个集群中有且只有一个命名空间</div>
<div><br></div>
<div><span></span>具体看看这里</div>
<div><span><a href="http://blog.csdn.net/strongerbit/article/details/7013221" rel="nofollow">http://blog.csdn.net/strongerbit/article/details/7013221</a></span></div>
<div><br></div>
<div><br></div>
<h3>3.联邦</h3>
<div><span></span>使用多个独立的namenode和namespace，每个namenode都是独立的</div>
<div><span></span>datanode被所有的namenode使用</div>
<div><span></span>每个datanode在所有的namenode上注册，datanode发送心跳信息/块报告到所有namenode,同时执行所有namenode的命令</div>
<div><br></div>
<div><img src="https://img-blog.csdn.net/20140916205917928?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMDQxNDA2Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br></div>
<div><br></div>
<h3>4.块池</h3>
<div><span></span>块池是属于单个namespace的一组块</div>
<div><span></span>每一个datanode为所有的block pool存储块</div>
<div><span></span>datanode是一个物理概念，而block pool是一个 重新将block划分的 逻辑概念</div>
<div><span></span>同一个datanode中可以存着属于多个block pool 的块</div>
<div><span></span>block pool 允许 一个命名空间 在 不通知其他命名空间 的情况下 为一个新的block 创建 blockID</div>
<div><span></span>一个namenode失效不会影响 其下的datanode 为其他namenode服务</div>
<div><br></div>
<h3>5.好处</h3>
<div><span></span>1. 可以扩展namespace</div>
<div><span></span>2.通过增加namenode可解决namenode的单点瓶颈</div>
<div><span></span>3.多namenode可以将不同的应用和用户隔离在不同的namespaces</div>
<div><br></div>
<div><a href="https://issues.apache.org/jira/secure/attachment/12453067/high-level-design.pdf" rel="nofollow">https://issues.apache.org/jira/secure/attachment/12453067/high-level-design.pdf</a><br></div>
<div><br></div>
<div><br></div>
<div><br></div>
<h2>二 快照</h2>
<h4><span></span>1.基本操作</h4>
<div><span></span>设置一个目录为可快照</div>
<div><span></span>hdfs dfsadmin -allowSnapshot &lt;Path&gt;</div>
<div><span></span>取消目录可快照</div>
<div><span></span>hdfs dfsadmin -disallowSnapShot &lt;Path&gt;</div>
<div><span></span>生成快照</div>
<div><span></span>hdfs dfsadmin -createSnapShot &lt;Path&gt; [&lt;snapShotName&gt;]</div>
<div><span></span>删除快照</div>
<div><span></span>hdfs dfsadmin -deleteSnapShot &lt;Path&gt; snapShotName</div>
<div><span></span>列出所有可快照目录</div>
<div><span></span>hdfs lsSnapshottableDir</div>
<div><span></span>比较快照之间的差异</div>
<div><span></span>hdfs snapshotDiffer &lt;path&gt; &lt;fromSnapshot&gt; &lt;toSnapshot&gt;</div>
<div><br></div>
<h4><span></span>2.快照位置</h4>
<div><span></span>listing all the snapshots under a snapshotalble directory</div>
<div><span></span>hdfs dfs -ls /foo/.snapshot</div>
<div><br></div>
<div><span></span>listing  the files in snapshot s0:</div>
<div><span></span>hdfs dfs -ls/foo/.snapshot/s0</div>
<div><br></div>
<div><span></span>copy a file from snapshot s0:</div>
<div><span></span> hdfs dfs -cp /foo/.snapshot/s0/bar /tmp</div>
<div><span></span></div>
<div><br></div>
            </div>
                </div>