---
layout:     post
title:      一脸懵逼学习KafKa集群的安装搭建--（一种高吞吐量的分布式发布订阅消息系统）
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/Biexiansheng/article/details/78813085				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><span style="font-size:18px;">1：KafKa的官方网址：<a href="http://kafka.apache.org/" rel="nofollow">http://kafka.apache.org/</a></span><br></p>
<p><span style="font-size:18px;">开发流程图，如：</span></p>
<p><span style="font-size:18px;"><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103110051732-1162217078.png" alt=""></span></p>
<p><span style="font-size:18px;">2：KafKa的基础知识：</span></p>
<blockquote>
<p><span style="font-size:18px;">2.1：kafka是一个分布式的消息缓存系统<br>
2.2：kafka集群中的服务器都叫做broker<br>
2.3：kafka有两类客户端，一类叫producer（消息生产者），一类叫做consumer（消息消费者），客户端和broker服务器之间采用tcp协议连接<br>
2.4：kafka中不同业务系统的消息可以通过topic进行区分，而且每一个消息topic都会被分区，以分担消息读写的负载<br><span style="font-size:18px;">2.</span>5<span style="font-size:18px;">：</span>每一个分区都可以有多个副本，以防止数据的丢失<br><span style="font-size:18px;">2.</span>6<span style="font-size:18px;">：</span>某一个分区中的数据如果需要更新，都必须通过该分区所有副本中的leader来更新<br><span style="font-size:18px;">2.</span>7<span style="font-size:18px;">：</span>消费者可以分组，比如有两个消费者组A和B，共同消费一个topic：order_info,A和B所消费的消息不会重复<br>
　　比如 order_info 中有100个消息，每个消息有一个id,编号从0-99，那么，如果A组消费0-49号，B组就消费50-99号<br><span style="font-size:18px;">2.</span>8<span style="font-size:18px;">：</span>消费者在具体消费某个topic中的消息时，可以指定起始偏移量<br></span></p>
</blockquote>
<p><span style="font-size:18px;"> 3：KafKa集群的安装搭建，注意区分单节点KafKa集群的搭建。</span></p>
<p><span style="font-size:18px;">　　3.1：kafka集群安装，第一步上传kafka_2.10-0.8.1.1.tgz到虚拟机上面，过程省略，然后进行解压缩操作：</span></p>
<p><span style="font-size:18px;"><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103113955482-1846801599.png" alt=""></span></p>
<p>　　<span style="font-size:18px;">3.2：修改kafka配置文件，修改server.properties</span></p>
<p><span style="font-size:18px;"><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103114342076-403307805.png" alt=""></span></p>
<p><span style="font-size:18px;">修改如下所示，具体情况可以根据手册修改，详细修改可以参考Kafka的文档：</span></p>
<p> <img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103115535935-1265976529.png" alt=""></p>
<p><span style="font-size:18px;"> 使用自己部署的Zookeeper集群，修改如下所示：</span></p>
<p><span style="font-size:18px;">可以直接搜索:/zookeeper.connect找到所要修改的内容：</span></p>
<p><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103115856888-878785568.png" alt=""></p>
<p><span style="font-size:18px;"> 将配置好的Kafka复制到另外两个节点上面：</span></p>
<p><span style="font-size:18px;">[root@master hadoop]# scp -r kafka_2.10-0.8.1.1/ slaver1:/home/hadoop/</span></p>
<p><span style="font-size:18px;">[root@master hadoop]# scp -r kafka_2.10-0.8.1.1/ slaver2:/home/hadoop/</span></p>
<p> <img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103120218951-1529186002.png" alt=""></p>
<p><span style="font-size:18px;"> 然后修改一下另外两台的broker.id=2和broker.id=3：</span></p>
<p> <img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103123145248-1714257200.png" alt=""></p>
<p><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103123230045-166929819.png" alt=""></p>
<p> 　<span style="font-size:18px;">　3.3：将zookeeper集群启动：</span></p>
<blockquote><span style="font-size:18px;">[root@master hadoop]# cd /home/hadoop/zookeeper-3.4.5/bin/</span></blockquote>
<blockquote><span style="font-size:18px;">[root@master bin]# ./zkServer.sh start</span></blockquote>
<blockquote><span style="font-size:18px;">[root@slaver2 bin]#  ./zkServer.sh status<br></span></blockquote>
<p> <img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103141358295-1046613268.png" alt=""></p>
<p> 　　<span style="font-size:18px;">3.4：在每一台节点上启动broker：</span></p>
<p><span style="font-size:18px;">　　　　bin/kafka-server-start.sh config/server.properties</span></p>
<div class="cnblogs_code">
<pre>Unrecognized VM option <span style="color:#800000;">'</span><span style="color:#800000;">UseCompressedOops</span><span style="color:#800000;">'</span><span style="color:#000000;">
Error: Could not create the Java Virtual Machine.
Error: A fatal exception has occurred. Program will exit.</span></pre>
</div>
<p><span style="font-size:18px;">启动的时候报错了，问题的根本是<span style="color:#800000;">UseCompressedOops</span>是jdk8的，而我的jdk是7，所以解决一下问题：</span></p>
<p><span style="font-size:18px;">原因是jdk的版本不匹配，需要修改一下配置文件<br>
修改文件：<br>
　　去掉这个配置<br>
　　-XX:+UseCompressedOops</span></p>
<p> <img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103143808732-424745463.png" alt=""></p>
<p><span style="font-size:18px;">进去以后，搜索一下比较快:/<span style="color:#800000;">UseCompressedOops</span>，然后看到如下，删除如此配置：</span></p>
<p><span style="font-size:18px;">[root@master bin]# vim kafka-run-class.sh</span></p>
<p><span style="font-size:18px;"><span style="font-size:18px;">其他两个节点的都按照如此删除掉即可</span>：</span></p>
<p><span style="font-size:18px;"><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103144120060-456196733.png" alt=""></span></p>
<p><span style="font-size:18px;">修改好以后开始跑：</span></p>
<p><span style="font-size:18px;">在每一台节点上启动broker</span><br><span style="font-size:18px;">bin/kafka-server-start.sh config/server.properties</span></p>
<p><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103144421545-1373368167.png" alt=""></p>
<p><span style="font-size:18px;">然后按照如此将其他两个节点都启动起来，然后复制xshell的连接看一下jps进程启动情况：</span></p>
<p><span style="font-size:18px;"> 三个都启动起来，可以看一下，broker 1，broker 2，broker 3都启动起来了：</span></p>
<p><span style="font-size:18px;"><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103145150404-1300790432.png" alt=""></span></p>
<p><span style="font-size:18px;">可以使用复制的xshell窗口查看jps进程启动情况：</span></p>
<p><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103145250466-539843407.png" alt=""></p>
<p> 　　<span style="font-size:18px;">3.5：在kafka集群中创建一个topic：</span></p>
<blockquote>
<p><span style="font-size:18px;">[root@master kafka_2.10-0.8.1.1]# bin/kafka-topics.sh --create --zookeeper master:2181 --replication-factor 3 --partitions 1 --topic order</span></p>
</blockquote>
<p> <img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103150114357-677591324.png" alt=""></p>
<p><span style="font-size:18px;">可以查看一下自己创建的topic：</span></p>
<blockquote>
<p><span style="font-size:18px;"> [root@master kafka_2.10-0.8.1.1]# bin/kafka-topics.sh --list --zookeeper master:2181</span></p>
</blockquote>
<p><span style="font-size:18px;">可以创建多个多个topic，也可以查看一下自己创建的topic：</span></p>
<p><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103150459091-1797397238.png" alt=""></p>
<p> 　<span style="font-size:18px;">　3.6：用一个producer向某一个topic中写入消息，生产者产生消息，消费者消费消息，如下生产者可以生产：</span></p>
<p><span style="font-size:18px;">如下先启动一下生产者，先不生产消息，然后一个消费者，看看是否有输出，然后再生产消息，再去消费者看看消费消息：</span></p>
<div class="cnblogs_code">
<pre><span style="color:#000000;">#生产者
[root@master kafka_2.</span><span style="color:#800080;">10</span>-<span style="color:#800080;">0.8</span>.<span style="color:#800080;">1.1</span>]# bin/kafka-console-producer.sh --broker-list master:<span style="color:#800080;">9092</span> --<span style="color:#000000;">topic order
#消费者
[root@master kafka_2.</span><span style="color:#800080;">10</span>-<span style="color:#800080;">0.8</span>.<span style="color:#800080;">1.1</span>]# bin/kafka-console-consumer.sh --zookeeper master:<span style="color:#800080;">2181</span> --<span style="color:#0000ff;">from</span>-beginning --topic order</pre>
</div>
<p><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103154216529-667996134.png" alt=""></p>
<p><span style="font-size:18px;">上面是生产者：</span></p>
<p><span style="font-size:18px;">下面是消费者：</span></p>
<p><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103154244826-1183309998.png" alt=""></p>
<p>　　<span style="font-size:18px;">3.7：查看一个topic的分区及副本状态信息：</span></p>
<p><span style="font-size:18px;">自己可以找任意一个xshell复制连接进程查看：</span></p>
<blockquote>
<p><span style="font-size:18px;">[root@slaver1 kafka_2.10-0.8.1.1]# bin/kafka-topics.sh --describe --zookeeper master:2181 --topic order</span></p>
</blockquote>
<p><span style="font-size:18px;"><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103154656466-18273106.png" alt=""></span></p>
<p><span style="font-size:18px;"> 4：kafka运行在后台如何操作，如下所示：</span></p>
<p><span style="font-size:18px;"><span style="font-size:18px;">　　1&gt;/dev/null：代表标准输入到这个目录；</span></span></p>
<p><span style="font-size:18px;"><span style="font-size:18px;">　　2&gt;&amp;1：代表标准输出也到这个目录下面；</span></span></p>
<p><span style="font-size:18px;"><span style="font-size:18px;">　　&amp;：代表这个是后台运行；</span></span></p>
<blockquote>
<p><span style="font-size:18px;">[root@master kafka_2.10-0.8.1.1]# bin/kafka-server-start.sh config/server.properties 1&gt;/dev/null 2&gt;&amp;1 &amp;</span></p>
</blockquote>
<p><img src="http://images2017.cnblogs.com/blog/1002211/201711/1002211-20171103165813357-75039201.png" alt=""></p>
<p> </p>
            </div>
                </div>