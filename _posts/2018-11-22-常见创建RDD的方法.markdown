---
layout:     post
title:      常见创建RDD的方法
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><span style="font-size:14px;">第一阶段（<span style="font-family:Calibri;">1-3</span><span style="font-family:'宋体';">月）：会从浅入深，基于大量案例实战，深度剖析和讲解</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">，并且会包含完全从企业真实复杂业务需求中抽取出的案例实战。课程会涵盖</span><span style="font-family:Calibri;">Scala</span><span style="font-family:'宋体';">编程详解、</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">核心编程、</span><span style="font-family:Calibri;">Spark SQL</span><span style="font-family:'宋体';">和</span><span style="font-family:Calibri;">Spark Streaming</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark GraphX</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">SparkR</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Machine Learning</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">内核以及源码剖析、性能调优、企业级案例实战等部分</span></span></p>
<p><span style="font-size:14px;">第二阶段（<span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">超大规模大数据案例实战）：使用了</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">技术生态栈中的</span><span style="font-family:Calibri;">Spark Core</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark SQL</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark Streaming</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">SparkR</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Machine Learning</span><span style="font-family:'宋体';">，进行离线计算和实时计算业务模块的开发、数据的关联性分析、用户行为模式和特征的训练与应用、用户网络的社区发现、用户影响力、能量传播、标签传播、标签推理、人群划分、年龄段预测、商品交易时序跳转</span></span></p>
<p><span style="font-family:'宋体';"></span></p>
<p style="font-size:14px;"><strong>创建RDD方法</strong></p>
<p style="font-size:14px;">创建<span style="font-family:Calibri;">RDD</span><span style="font-family:'宋体';">的方式（方法很多，场景也很多）以下为较为常见的七中方式：</span></p>
<p style="font-size:14px;">1<span style="font-family:'宋体';">，使用程序中的集合创建</span><span style="font-family:Calibri;">RDD;</span></p>
<p style="font-size:14px;">2<span style="font-family:'宋体';">，使用本地文件系统创建</span><span style="font-family:Calibri;">RDD</span><span style="font-family:'宋体';">；</span></p>
<p style="font-size:14px;">3<span style="font-family:'宋体';">，使用</span><span style="font-family:Calibri;">HDS</span><span style="font-family:'宋体';">创建</span><span style="font-family:Calibri;">RDD</span></p>
<p style="font-size:14px;">4<span style="font-family:'宋体';">，基于</span><span style="font-family:Calibri;">DB</span><span style="font-family:'宋体';">创建</span><span style="font-family:Calibri;">RDD</span></p>
<p style="font-size:14px;">5<span style="font-family:'宋体';">，基于</span><span style="font-family:Calibri;">NoSQL,</span><span style="font-family:'宋体';">例如</span><span style="font-family:Calibri;">HBase</span></p>
<p style="font-size:14px;">6<span style="font-family:'宋体';">，基于</span><span style="font-family:Calibri;">S3</span><span style="font-family:'宋体';">创建</span><span style="font-family:Calibri;">RDD</span></p>
<p style="font-size:14px;">7<span style="font-family:'宋体';">，基于数据流创建</span><span style="font-family:Calibri;">RDD</span></p>
<p style="font-size:14px;color:rgb(170,170,170);"><span style="color:#a52a00;">我们可以在再智能设备 例如手机 平板 电视 上使用Spark，也可以在PC和Server使用使用SDpark！</span></p>
<p style="font-size:14px;color:rgb(170,170,170);"><span style="color:rgb(165,42,0);">多线程方式模拟分布式，</span><span style="color:rgb(165,42,0);">Local模式 默认情况下如果失败了 就是失败了。下面代码使用程序中的集合创建ＲＤＤ。</span></p>
<p style="font-size:14px;color:rgb(170,170,170);"><span style="color:rgb(165,42,0);"><strong>（1）通过集合创建ＲＤＤ</strong></span></p>
<pre><code class="language-java">object TestClassRdd_1 {
  def main(args:Array[String]): Unit ={
    val conf =new SparkConf()
    conf.setAppName("My first Test in class of the Spark")
    conf.setMaster("local")
    val sc = new SparkContext(conf)
    val number = 1 to 100
    val rdd =sc.parallelize(number)
    val sum =rdd.reduce(_+_)  //1+2=3 3+3=6 6+4=10
    println("1+ ... +100"+ sum)
  }
}</code></pre><strong style="font-size:14px;"><span style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:15px;line-height:24px;">（２）使用ＨＤＦＳ创建RDD</span><br></strong><pre><code class="language-java">val conf = new SparkConf()
conf.setAppName()
    conf.setMaster("local")
   
    val sc = new SparkContext()
    val numbers = 1 to 100 //创建一个scala集合
    val rdd = sc.textFile(“/input/data/reanme.md”)  //创建了一个ParallelCollectionRDD
    val linesLength = rdd.map(line =&gt; line.length)  
    val sum = linesLength.reduce(_ + _)  
 println("The total characters of the file is : " + sum)</code></pre><strong style="font-size:14px;"><span style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:15px;line-height:24px;">（3）本地文件创建RDD，主要用于测试大量数据</span><br></strong><pre><code class="language-java">val conf = new SparkConf()
conf.setAppName()
    conf.setMaster("Create RDD in local")
   
    val sc = new SparkContext()
    val numbers = 1 to 100 
    val rdd = sc.textFile(“D://spark//reanme.md”)  //创建了一个ParallelCollectionRDD
    val linesLength = rdd.map(line =&gt; line.length)  
    val sum = linesLength.reduce(_ + _)  
 println("The total characters of the file is : " + sum)</code></pre>
<div style="font-size:14px;text-align:center;"><img src="https://img-blog.csdn.net/20160120082023846?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></div>
<div style="font-size:14px;text-align:left;"><br></div>
<span style="font-size:12px;"><span style="font-family:Calibri;color:rgb(0,0,0);text-align:justify;text-indent:21pt;"><span>将代码拷贝到Spark集群，进行运行，上图其实将1-100分成了32个Partition，下面运行</span></span><span style="color:rgb(170,170,170);text-align:justify;text-indent:21pt;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;line-height:18px;background-color:rgb(247,247,249);"><span style="color:rgb(0,0,0);"><span>parallelize(默认情况Spark最大允许cores)，生成parallelizeCollectionRDDreduce不会产生RDD。</span></span></span></span>
<p><span style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;line-height:18px;text-align:justify;text-indent:21pt;font-size:12px;background-color:rgb(247,247,249);">实际上Spark的并行度到底应该设置为多少呢？</span><span style="text-indent:21pt;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;line-height:18px;text-align:justify;font-size:12px;background-color:rgb(247,247,249);">每个Core可以乘上2-4个partitions,任务处理大小不同，所需CPU、MEＭ均不同，设置CORES大小在64-128之间，跟并行度有关，跟数据规模无关，只跟每个Stage在计算Partition所需的CPU、MEM有关。</span><span style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;line-height:18px;text-align:justify;text-indent:21pt;font-size:12px;background-color:rgb(247,247,249);">基于文件系统创建RDD</span><span style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;line-height:18px;text-align:justify;text-indent:21pt;font-size:12px;background-color:rgb(247,247,249);">BlockManagerMaster会持有整个Application的Block的位置、Block所占用的存储空间等元数据信息，在Spark的Driver的DAGScheduler中就是通过这些信息来确认数据运行的本地性的。</span></p>
<p style="text-align:center;"><span style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;line-height:18px;text-align:justify;text-indent:21pt;font-size:12px;background-color:rgb(247,247,249);"><img src="https://img-blog.csdn.net/20160120082238763?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></span></p>
<p><span style="font-family:'宋体';"><span style="font-size:12px;"><span style="color:rgb(170,170,170);text-align:justify;text-indent:21pt;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;line-height:18px;background-color:rgb(247,247,249);"><span style="color:rgb(0,0,0);"><span><br></span></span></span></span></span></p>
<p><span style="font-size:14px;"><span style="font-family:'宋体';"></span></span></p>
<p>ＤＴ大数据梦工厂</p>
<p>新浪微博：<a href="http://www.weibo.com/ilovepains/" rel="nofollow"><span style="color:rgb(0,0,255);">www.weibo.com/ilovepains/</span></a></p>
<p>微信公众号：<span style="font-family:Calibri;">DT_Spark</span></p>
<p>博客：<a href="/ilovepains" rel="nofollow"><span style="color:rgb(0,0,255);">http://.blog.sina.com.cn/ilovepains</span></a></p>
<p>TEL:18610086859</p>
<p>Email:18610086859@vip.126.com </p>
<br><p><span style="font-size:14px;"><span style="font-family:'宋体';"><br></span></span></p>
<p><span style="font-size:14px;"><span style="font-family:'宋体';"><br></span></span></p>
<p><span style="font-size:14px;"><span style="font-family:'宋体';"><br></span></span></p>
<p><span style="font-size:14px;"><span style="font-family:'宋体';"><br></span></span></p>
<p><span style="font-size:14px;"><span style="font-family:'宋体';"><br></span></span></p>
<p><span style="font-size:14px;"><span style="font-family:'宋体';"><br></span></span></p>
<p><span style="font-size:14px;"><span style="font-family:'宋体';"><br></span></span></p>
            </div>
                </div>