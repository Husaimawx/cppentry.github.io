---
layout:     post
title:      flume使用（六）：后台启动及日志查看
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：					https://blog.csdn.net/maoyuanming0806/article/details/80807087				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<blockquote>
  <p>本文介绍flume后台启动方式，运行日志查看</p>
  
  <p></p><div class="toc"><div class="toc">
<ul>
<li><a href="#%E5%A4%84%E7%90%86%E7%9A%84%E9%97%AE%E9%A2%98" rel="nofollow">处理的问题</a></li>
<li><a href="#flume%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C" rel="nofollow">flume后台运行</a></li>
<li><a href="#flume%E8%BF%90%E8%A1%8C%E6%97%A5%E5%BF%97%E6%9F%A5%E7%9C%8B" rel="nofollow">flume运行日志查看</a><ul>
<li><a href="#nohup%E5%90%8E%E5%8F%B0%E5%90%AF%E5%8A%A8%E6%9F%A5%E7%9C%8B%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%97%A5%E5%BF%97" rel="nofollow">nohup后台启动查看控制台日志</a></li>
<li><a href="#flume%E8%BF%90%E8%A1%8C%E6%97%A5%E5%BF%97%E6%A0%B9%E6%8D%AElog4jproperties%E9%85%8D%E7%BD%AE%E8%BE%93%E5%87%BA" rel="nofollow">flume运行日志根据log4j.properties配置输出</a></li>
</ul>
</li>
</ul>
</div>
</div>

</blockquote>



<h1 id="处理的问题">处理的问题</h1>

<p>flume 普通方式启动会有自己自动停掉的问题，这可能是linux的进程机制把他停掉的原因。 <br>
普通运行方式：</p>



<pre class="prettyprint"><code class=" hljs lasso"><span class="hljs-built_in">.</span>/flume<span class="hljs-attribute">-ng</span> agent <span class="hljs-attribute">-c</span> <span class="hljs-built_in">..</span>/conf <span class="hljs-attribute">-f</span> <span class="hljs-built_in">..</span>/conf/g01<span class="hljs-attribute">-taildir</span><span class="hljs-attribute">-avro</span><span class="hljs-attribute">-sink</span><span class="hljs-built_in">.</span>conf <span class="hljs-attribute">-n</span> agent1 <span class="hljs-attribute">-Dflume</span><span class="hljs-built_in">.</span>root<span class="hljs-built_in">.</span>logger<span class="hljs-subst">=</span>INFO,console</code></pre>

<h1 id="flume后台运行">flume后台运行</h1>

<p>nohup加在原命令头，&amp;加在原命令尾部</p>



<pre class="prettyprint"><code class=" hljs lasso">nohup <span class="hljs-built_in">.</span>/flume<span class="hljs-attribute">-ng</span> agent <span class="hljs-attribute">-c</span> <span class="hljs-built_in">..</span>/conf <span class="hljs-attribute">-f</span> <span class="hljs-built_in">..</span>/conf/g01<span class="hljs-attribute">-taildir</span><span class="hljs-attribute">-avro</span><span class="hljs-attribute">-sink</span><span class="hljs-built_in">.</span>conf <span class="hljs-attribute">-n</span> agent1 <span class="hljs-attribute">-Dflume</span><span class="hljs-built_in">.</span>root<span class="hljs-built_in">.</span>logger<span class="hljs-subst">=</span>INFO,console <span class="hljs-subst">&amp;</span></code></pre>

<blockquote>
  <p>有人说直接加 &amp; 就可以了，对，但是再加上nohup可以把原本在console输出的运行日志输出在nohup.out中</p>
</blockquote>



<h1 id="flume运行日志查看">flume运行日志查看</h1>

<p>这里介绍两种方式</p>



<h2 id="nohup后台启动查看控制台日志">nohup后台启动查看控制台日志</h2>

<p>以nohup 和 &amp; 组合的运行方式，会将原本在console的输出定向到flume的bin目录下的nohup.out文件中。</p>

<p>大多flume博文都有介绍flume的启动命令，但是命令都是将运行日志打印在控制台，这是入门级的demo运行方式，实际上flume原本就配置了运行日志输出位置，如下小节说明</p>



<h2 id="flume运行日志根据log4jproperties配置输出">flume运行日志根据log4j.properties配置输出</h2>

<p>在flume的配置文件目录及 conf 目录中有log4j.properties配置文件，其实就已经配置了flume启动日志输出位置。</p>

<p>【log4j.prpoerties】</p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-preprocessor">#</span>
<span class="hljs-preprocessor"># Licensed to the Apache Software Foundation (ASF) under one</span>
<span class="hljs-preprocessor"># or more contributor license agreements.  See the NOTICE file</span>
<span class="hljs-preprocessor"># distributed with this work for additional information</span>
<span class="hljs-preprocessor"># regarding copyright ownership.  The ASF licenses this file</span>
<span class="hljs-preprocessor"># to you under the Apache License, Version 2.0 (the</span>
<span class="hljs-preprocessor"># "License"); you may not use this file except in compliance</span>
<span class="hljs-preprocessor"># with the License.  You may obtain a copy of the License at</span>
<span class="hljs-preprocessor">#</span>
<span class="hljs-preprocessor">#  http://www.apache.org/licenses/LICENSE-2.0</span>
<span class="hljs-preprocessor">#</span>
<span class="hljs-preprocessor"># Unless required by applicable law or agreed to in writing,</span>
<span class="hljs-preprocessor"># software distributed under the License is distributed on an</span>
<span class="hljs-preprocessor"># "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span>
<span class="hljs-preprocessor"># KIND, either express or implied.  See the License for the</span>
<span class="hljs-preprocessor"># specific language governing permissions and limitations</span>
<span class="hljs-preprocessor"># under the License.</span>
<span class="hljs-preprocessor">#</span>

<span class="hljs-preprocessor"># Define some default values that can be overridden by system properties.</span>
<span class="hljs-preprocessor">#</span>
<span class="hljs-preprocessor"># For testing, it may also be convenient to specify</span>
<span class="hljs-preprocessor"># -Dflume.root.logger=DEBUG,console when launching flume.</span>

<span class="hljs-preprocessor">#flume.root.logger=DEBUG,console</span>
flume<span class="hljs-preprocessor">.root</span><span class="hljs-preprocessor">.logger</span>=INFO,LOGFILE
flume<span class="hljs-preprocessor">.log</span><span class="hljs-preprocessor">.dir</span>=./logs
flume<span class="hljs-preprocessor">.log</span><span class="hljs-preprocessor">.file</span>=flume<span class="hljs-preprocessor">.log</span>

log4j<span class="hljs-preprocessor">.logger</span><span class="hljs-preprocessor">.org</span><span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.flume</span><span class="hljs-preprocessor">.lifecycle</span> = INFO
log4j<span class="hljs-preprocessor">.logger</span><span class="hljs-preprocessor">.org</span><span class="hljs-preprocessor">.jboss</span> = WARN
log4j<span class="hljs-preprocessor">.logger</span><span class="hljs-preprocessor">.org</span><span class="hljs-preprocessor">.mortbay</span> = INFO
log4j<span class="hljs-preprocessor">.logger</span><span class="hljs-preprocessor">.org</span><span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.avro</span><span class="hljs-preprocessor">.ipc</span><span class="hljs-preprocessor">.NettyTransceiver</span> = WARN
log4j<span class="hljs-preprocessor">.logger</span><span class="hljs-preprocessor">.org</span><span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span> = INFO
log4j<span class="hljs-preprocessor">.logger</span><span class="hljs-preprocessor">.org</span><span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hive</span> = ERROR

<span class="hljs-preprocessor"># Define the root logger to the system property "flume.root.logger".</span>
log4j<span class="hljs-preprocessor">.rootLogger</span>=${flume<span class="hljs-preprocessor">.root</span><span class="hljs-preprocessor">.logger</span>}


<span class="hljs-preprocessor"># Stock log4j rolling file appender</span>
<span class="hljs-preprocessor"># Default log rotation configuration</span>
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.LOGFILE</span>=org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.log</span>4j<span class="hljs-preprocessor">.RollingFileAppender</span>
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.LOGFILE</span><span class="hljs-preprocessor">.MaxFileSize</span>=<span class="hljs-number">100</span>MB
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.LOGFILE</span><span class="hljs-preprocessor">.MaxBackupIndex</span>=<span class="hljs-number">10</span>
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.LOGFILE</span><span class="hljs-preprocessor">.File</span>=${flume<span class="hljs-preprocessor">.log</span><span class="hljs-preprocessor">.dir</span>}/${flume<span class="hljs-preprocessor">.log</span><span class="hljs-preprocessor">.file</span>}
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.LOGFILE</span><span class="hljs-preprocessor">.layout</span>=org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.log</span>4j<span class="hljs-preprocessor">.PatternLayout</span>
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.LOGFILE</span><span class="hljs-preprocessor">.layout</span><span class="hljs-preprocessor">.ConversionPattern</span>=%d{dd MMM yyyy HH:mm:ss,SSS} %-<span class="hljs-number">5</span>p [%t] (%C.%M:%L) %<span class="hljs-built_in">x</span> - %m%n


<span class="hljs-preprocessor"># Warning: If you enable the following appender it will fill up your disk if you don't have a cleanup job!</span>
<span class="hljs-preprocessor"># This uses the updated rolling file appender from log4j-extras that supports a reliable time-based rolling policy.</span>
<span class="hljs-preprocessor"># See http://logging.apache.org/log4j/companions/extras/apidocs/org/apache/log4j/rolling/TimeBasedRollingPolicy.html</span>
<span class="hljs-preprocessor"># Add "DAILY" to flume.root.logger above if you want to use this</span>
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.DAILY</span>=org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.log</span>4j<span class="hljs-preprocessor">.rolling</span><span class="hljs-preprocessor">.RollingFileAppender</span>
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.DAILY</span><span class="hljs-preprocessor">.rollingPolicy</span>=org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.log</span>4j<span class="hljs-preprocessor">.rolling</span><span class="hljs-preprocessor">.TimeBasedRollingPolicy</span>
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.DAILY</span><span class="hljs-preprocessor">.rollingPolicy</span><span class="hljs-preprocessor">.ActiveFileName</span>=${flume<span class="hljs-preprocessor">.log</span><span class="hljs-preprocessor">.dir</span>}/${flume<span class="hljs-preprocessor">.log</span><span class="hljs-preprocessor">.file</span>}
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.DAILY</span><span class="hljs-preprocessor">.rollingPolicy</span><span class="hljs-preprocessor">.FileNamePattern</span>=${flume<span class="hljs-preprocessor">.log</span><span class="hljs-preprocessor">.dir</span>}/${flume<span class="hljs-preprocessor">.log</span><span class="hljs-preprocessor">.file</span>}.%d{yyyy-MM-dd}
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.DAILY</span><span class="hljs-preprocessor">.layout</span>=org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.log</span>4j<span class="hljs-preprocessor">.PatternLayout</span>
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.DAILY</span><span class="hljs-preprocessor">.layout</span><span class="hljs-preprocessor">.ConversionPattern</span>=%d{dd MMM yyyy HH:mm:ss,SSS} %-<span class="hljs-number">5</span>p [%t] (%C.%M:%L) %<span class="hljs-built_in">x</span> - %m%n


<span class="hljs-preprocessor"># console</span>
<span class="hljs-preprocessor"># Add "console" to flume.root.logger above if you want to use this</span>
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.console</span>=org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.log</span>4j<span class="hljs-preprocessor">.ConsoleAppender</span>
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.console</span><span class="hljs-preprocessor">.target</span>=System<span class="hljs-preprocessor">.err</span>
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.console</span><span class="hljs-preprocessor">.layout</span>=org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.log</span>4j<span class="hljs-preprocessor">.PatternLayout</span>
log4j<span class="hljs-preprocessor">.appender</span><span class="hljs-preprocessor">.console</span><span class="hljs-preprocessor">.layout</span><span class="hljs-preprocessor">.ConversionPattern</span>=%d (%t) [%p - %l] %m%n
</code></pre>

<p>然而大多博文的命令都是如此：……. -Dflume.root.logger=INFO,console</p>



<pre class="prettyprint"><code class=" hljs lasso"><span class="hljs-built_in">.</span>/flume<span class="hljs-attribute">-ng</span> agent <span class="hljs-attribute">-c</span> <span class="hljs-built_in">..</span>/conf <span class="hljs-attribute">-f</span> <span class="hljs-built_in">..</span>/conf/g01<span class="hljs-attribute">-taildir</span><span class="hljs-attribute">-avro</span><span class="hljs-attribute">-sink</span><span class="hljs-built_in">.</span>conf <span class="hljs-attribute">-n</span> agent1 <span class="hljs-attribute">-Dflume</span><span class="hljs-built_in">.</span>root<span class="hljs-built_in">.</span>logger<span class="hljs-subst">=</span>INFO,console</code></pre>

<p>其中</p>



<pre class="prettyprint"><code class=" hljs avrasm">-Dflume<span class="hljs-preprocessor">.root</span><span class="hljs-preprocessor">.logger</span>=INFO,console </code></pre>

<p>就表示将运行日志输出到控制台。</p>

<p>那么把该条删除就可以按照log4j的配置输出到对应日志文件中</p>

<p>注意，如果没有输出到对应日志文件，那么看下flume的lib包中是否含有log4j的依赖jar包</p>



<pre class="prettyprint"><code class=" hljs avrasm">log4j-<span class="hljs-number">1.2</span><span class="hljs-number">.16</span><span class="hljs-preprocessor">.jar</span>

slf4j-api-<span class="hljs-number">1.6</span><span class="hljs-number">.4</span><span class="hljs-preprocessor">.jar</span>

slf4j-log4j12-<span class="hljs-number">1.6</span><span class="hljs-number">.1</span><span class="hljs-preprocessor">.jar</span></code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>