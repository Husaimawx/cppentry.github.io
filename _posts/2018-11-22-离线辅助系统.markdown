---
layout:     post
title:      离线辅助系统
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p style="margin-left:0cm;">学习目标：</p>

<p style="margin-left:0cm;">1、理解flume、sqoop、oozie的应用场景</p>

<p style="margin-left:0cm;">2、理解flume、sqoop、oozie的基本原理</p>

<p style="margin-left:0cm;">3、掌握flume、sqoop、oozie的使用方法</p>

<p style="margin-left:0cm;"> </p>

<table border="1" cellspacing="0"><tbody><tr><td rowspan="13" style="vertical-align:top;width:72.5pt;">
			<p style="margin-left:0cm;">离线辅助系统</p>
			</td>
			<td rowspan="3" style="vertical-align:top;width:79.45pt;">
			<p style="margin-left:0cm;">数据接入</p>
			</td>
			<td style="vertical-align:top;width:274.15pt;">
			<p style="margin-left:0cm;">Flume介绍</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:274.15pt;">
			<p style="margin-left:0cm;">Flume组件</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:274.15pt;">
			<p style="margin-left:0cm;">Flume实战案例</p>
			</td>
		</tr><tr><td rowspan="4" style="vertical-align:top;width:79.45pt;">
			<p style="margin-left:0cm;">任务调度</p>
			</td>
			<td style="vertical-align:top;width:274.15pt;">
			<p style="margin-left:0cm;">调度器基础</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:274.15pt;">
			<p style="margin-left:0cm;">市面上调度工具</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:274.15pt;">
			<p style="margin-left:0cm;">Oozie的使用</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:274.15pt;">
			<p style="margin-left:0cm;">Oozie的流程定义详解</p>
			</td>
		</tr><tr><td rowspan="6" style="vertical-align:top;width:79.45pt;">
			<p style="margin-left:0cm;">数据导出</p>
			</td>
			<td style="vertical-align:top;width:274.15pt;">
			<p style="margin-left:0cm;">sqoop基础知识</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:274.15pt;">
			<p style="margin-left:0cm;">sqoop实战及原理</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:274.15pt;">
			<p style="margin-left:0cm;">Sqoop数据导入实战</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:274.15pt;">
			<p style="margin-left:0cm;">Sqoop数据导出实战</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:274.15pt;">
			<p style="margin-left:0cm;">Sqoop作业操作</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:274.15pt;">
			<p style="margin-left:0cm;">Sqoop的原理</p>
			</td>
		</tr></tbody></table><p> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h1 style="margin-left:0cm;"><strong>前言</strong></h1>
	</li>
</ul><p style="margin-left:0cm;">在一个完整的大数据处理系统中，除了hdfs+mapreduce+hive组成分析系统的核心之外，还需要数据采集、结果数据导出、任务调度等不可或缺的辅助系统，而这些辅助工具在hadoop生态体系中都有便捷的开源框架，如图所示：</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"><img alt="" class="has" height="394" src="https://img-blog.csdnimg.cn/20181106171923563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dveHV5YW9oYW9oYW94dWV4aQ==,size_16,color_FFFFFF,t_70" width="877"></p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h1 style="margin-left:0cm;"><strong>一、日志采集框架Flume</strong></h1>
	</li>
	<li>
	<h2 style="margin-left:0cm;"><strong>1.1 Flume介绍</strong></h2>
	</li>
	<li>
	<h3 style="margin-left:0cm;"><strong>1.1.1 概述</strong></h3>
	</li>
</ul><ol><li>Flume是一个分布式、可靠、和高可用的海量日志采集、聚合和传输的系统。</li>
	<li>Flume可以采集文件，socket数据包等各种形式源数据，又可以将采集到的数据输出到HDFS、hbase、hive、kafka等众多外部存储系统中</li>
	<li>一般的采集需求，通过对flume的简单配置即可实现</li>
	<li>Flume针对特殊场景也具备良好的自定义扩展能力，因此，flume可以适用于大部分的日常数据采集场景</li>
</ol><p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>1.1.2 运行机制</strong></h3>
	</li>
</ul><ol><li>Flume分布式系统中最<strong>核心的角色是</strong><strong>agent</strong>，flume采集系统就是由一个个agent所连接起来形成</li>
	<li><strong>每一个agent</strong><strong>相当于一个<a>数据传递员</a></strong><a class="msocomanchor" href="#_msocom_1" rel="nofollow" id="_anchor_1" name="_msoanchor_1">[M1]</a> <strong>，内部有三个组件：</strong>
	<ol><li>
		<ol><li>Source：采集源，用于跟数据源对接，以获取数据</li>
			<li>Sink：下沉地，采集数据的传送目的，用于往下一级agent传递数据或者往最终存储系统传递数据</li>
			<li>Channel：angent内部的数据传输通道，用于从source将数据传递到sink</li>
		</ol></li>
	</ol></li>
</ol><p style="margin-left:63pt;"> </p>

<p style="margin-left:0cm;"><img alt="" class="has" height="223" src="https://img-blog.csdnimg.cn/20181106171923537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dveHV5YW9oYW9oYW94dWV4aQ==,size_16,color_FFFFFF,t_70" width="576"></p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>1.1.3 Flume采集系统结构图</strong></h3>
	</li>
</ul><p style="margin-left:63pt;"> </p>

<p><strong>1. 简单结构</strong></p>

<p style="margin-left:0cm;">单个agent采集数据</p>

<p style="margin-left:0cm;"><img alt="" class="has" height="249" src="https://img-blog.csdnimg.cn/20181106171923569.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dveHV5YW9oYW9oYW94dWV4aQ==,size_16,color_FFFFFF,t_70" width="658"></p>

<p><strong>2. 复杂结构</strong></p>

<p style="margin-left:0cm;">多级agent之间串联</p>

<p style="margin-left:0cm;"><img alt="" class="has" height="438" src="https://img-blog.csdnimg.cn/20181106171923608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dveHV5YW9oYW9oYW94dWV4aQ==,size_16,color_FFFFFF,t_70" width="652"></p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h2 style="margin-left:0cm;"><strong>1.2 Flume实战案例</strong></h2>
	</li>
	<li><strong>1.2.1 Flume的安装部署</strong></li>
</ul><ol><li>Flume的安装非常简单，只需要解压即可，当然，前提是已有hadoop环境</li>
</ol><p style="margin-left:0cm;">上传安装包到数据源所在节点上</p>

<p style="margin-left:0cm;">然后解压  tar -zxvf apache-flume-1.6.0-bin.tar.gz</p>

<p style="margin-left:0cm;">然后进入flume的目录，修改conf下的flume-env.sh，在里面配置JAVA_HOME</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">2、根据数据采集的需求<strong>配置采集方案</strong>，描述在配置文件中(文件名可任意自定义)</p>

<p style="margin-left:0cm;">3、<strong>指定采集方案配置文件</strong>，在相应的节点上启动flume agent</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">先用一个最简单的例子来测试一下程序环境是否正常</p>

<ol><li>先在flume的conf目录下新建一个文件</li>
</ol><p style="margin-left:0cm;">vi   netcat-logger.conf</p>

<table border="1" cellspacing="0" style="width:545px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;"># 定义这个agent中各组件的名字</p>

			<p style="margin-left:0cm;">a1.sources = r1</p>

			<p style="margin-left:0cm;">a1.sinks = k1</p>

			<p style="margin-left:0cm;">a1.channels = c1</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># 描述和配置source组件：r1</p>

			<p style="margin-left:0cm;">a1.sources.r1.type = netcat</p>

			<p style="margin-left:0cm;">a1.sources.r1.bind = localhost</p>

			<p style="margin-left:0cm;">a1.sources.r1.port = 44444</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># 描述和配置sink组件：k1</p>

			<p style="margin-left:0cm;">a1.sinks.k1.type = logger</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># 描述和配置channel组件，此处使用是内存缓存的方式</p>

			<p style="margin-left:0cm;">a1.channels.c1.type = memory</p>

			<p style="margin-left:0cm;">a1.channels.c1.capacity = 1000</p>

			<p style="margin-left:0cm;">a1.channels.c1.transactionCapacity = 100</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># 描述和配置source  channel   sink之间的连接关系</p>

			<p style="margin-left:0cm;">a1.sources.r1.channels = c1</p>

			<p style="margin-left:0cm;">a1.sinks.k1.channel = c1</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p>2.启动agent去采集数据</p>

<table border="1" cellspacing="0" style="width:520px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">bin/flume-ng agent -c conf -f conf/netcat-logger.conf -n a1  -Dflume.root.logger=INFO,console</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;">-c conf   指定flume自身的配置文件所在目录</p>

<p style="margin-left:0cm;">-f conf/netcat-logger.con  指定我们所描述的采集方案</p>

<p style="margin-left:0cm;">-n a1  指定我们这个agent的名字</p>

<p>3.测试</p>

<p style="margin-left:0cm;">先要往agent采集监听的端口上发送数据，让agent有数据可采</p>

<p style="margin-left:0cm;">随便在一个能跟agent节点联网的机器上</p>

<p style="margin-left:0cm;">telnet anget-hostname  port   （telnet localhost 44444）</p>

<p style="margin-left:0cm;"><img alt="" class="has" height="137" src="https://img-blog.csdnimg.cn/20181106171923538.png" width="472"></p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li><strong>1.2.2 采集案例</strong></li>
	<li><strong>a、采集目录到HDFS</strong></li>
</ul><p style="margin-left:0cm;">采集需求：某服务器的某特定目录下，会不断产生新的文件，每当有新文件出现，就需要把文件采集到HDFS中去</p>

<p style="margin-left:0cm;">根据需求，首先定义以下3大要素</p>

<ol><li>采集源，即source——监控文件目录 :  spooldir</li>
	<li>下沉目标，即sink——HDFS文件系统  :  hdfs sink</li>
	<li>source和sink之间的传递通道——channel，可用file channel 也可以用内存channel</li>
</ol><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">配置文件编写：</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">#定义三大组件的名称</p>

			<p style="margin-left:0cm;">agent1.sources = source1</p>

			<p style="margin-left:0cm;">agent1.sinks = sink1</p>

			<p style="margin-left:0cm;">agent1.channels = channel1</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># 配置source组件</p>

			<p style="margin-left:0cm;">agent1.sources.source1.<span style="color:#ff0000;">type = spooldir</span></p>

			<p style="margin-left:0cm;">agent1.sources.source1.<span style="color:#ff0000;">spoolDir = /home/hadoop/logs/</span></p>

			<p style="margin-left:0cm;">agent1.sources.source1.fileHeader = false</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;">#配置拦截器</p>

			<p style="margin-left:0cm;">agent1.sources.source1.interceptors = i1</p>

			<p style="margin-left:0cm;">agent1.sources.source1.interceptors.i1.type = host</p>

			<p style="margin-left:0cm;">agent1.sources.source1.interceptors.i1.hostHeader = hostname</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># 配置sink组件</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.type = hdfs</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.path =hdfs://hdp-node-01:9000/weblog/flume-collection/%y-%m-%d/%H-%M</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.filePrefix = access_log</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.maxOpenFiles = 5000</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.batchSize= 100</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.fileType = DataStream</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.writeFormat =Text</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.rollSize = 102400</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.rollCount = 1000000</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.rollInterval = 60</p>

			<p style="margin-left:0cm;">#agent1.sinks.sink1.hdfs.round = true</p>

			<p style="margin-left:0cm;">#agent1.sinks.sink1.hdfs.roundValue = 10</p>

			<p style="margin-left:0cm;">#agent1.sinks.sink1.hdfs.roundUnit = minute</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.useLocalTimeStamp = true</p>

			<p style="margin-left:0cm;"># Use a channel which buffers events in memory</p>

			<p style="margin-left:0cm;">agent1.channels.channel1.type = memory</p>

			<p style="margin-left:0cm;">agent1.channels.channel1.keep-alive = 120</p>

			<p style="margin-left:0cm;">agent1.channels.channel1.capacity = 500000</p>

			<p style="margin-left:0cm;">agent1.channels.channel1.transactionCapacity = 600</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># Bind the source and sink to the channel</p>

			<p style="margin-left:0cm;">agent1.sources.source1.channels = channel1</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.channel = channel1</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">Channel参数解释：</p>

<p style="margin-left:0cm;">capacity：默认该通道中最大的可以存储的event数量</p>

<p style="margin-left:0cm;">trasactionCapacity：每次最大可以从source中拿到或者送到sink中的event数量</p>

<p style="margin-left:0cm;">keep-alive：event添加到通道中或者移出的允许时间</p>

<p style="margin-left:0cm;"> </p>

<ul><li><strong>b、采集文件到HDFS</strong></li>
</ul><p style="margin-left:0cm;">采集需求：比如业务系统使用log4j生成的日志，日志内容不断增加，需要把追加到日志文件中的数据实时采集到hdfs</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">根据需求，首先定义以下3大要素</p>

<ol><li>采集源，即source——监控文件内容更新 :  exec  ‘tail -F file’</li>
	<li>下沉目标，即sink——HDFS文件系统  :  hdfs sink</li>
	<li>Source和sink之间的传递通道——channel，可用file channel 也可以用 内存channel</li>
</ol><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">配置文件编写：</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">agent1.sources = source1</p>

			<p style="margin-left:0cm;">agent1.sinks = sink1</p>

			<p style="margin-left:0cm;">agent1.channels = channel1</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># Describe/configure tail -F source1</p>

			<p style="margin-left:0cm;">agent1.sources.source1.type = exec</p>

			<p style="margin-left:0cm;">agent1.sources.source1.command = tail -F /home/hadoop/logs/access_log</p>

			<p style="margin-left:0cm;">agent1.sources.source1.channels = channel1</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;">#configure host for source</p>

			<p style="margin-left:0cm;">agent1.sources.source1.interceptors = i1</p>

			<p style="margin-left:0cm;">agent1.sources.source1.interceptors.i1.type = host</p>

			<p style="margin-left:0cm;">agent1.sources.source1.interceptors.i1.hostHeader = hostname</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># Describe sink1</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.type = hdfs</p>

			<p style="margin-left:0cm;">#a1.sinks.k1.channel = c1</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.path =hdfs://hdp-node-01:9000/weblog/flume-collection/%y-%m-%d/%H-%M</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.filePrefix = access_log</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.maxOpenFiles = 5000</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.batchSize= 100</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.fileType = DataStream</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.writeFormat =Text</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.rollSize = 102400</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.rollCount = 1000000</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.rollInterval = 60</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.round = true</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.roundValue = 10</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.roundUnit = minute</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.hdfs.useLocalTimeStamp = true</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># Use a channel which buffers events in memory</p>

			<p style="margin-left:0cm;">agent1.channels.channel1.type = memory</p>

			<p style="margin-left:0cm;">agent1.channels.channel1.keep-alive = 120</p>

			<p style="margin-left:0cm;">agent1.channels.channel1.capacity = 500000</p>

			<p style="margin-left:0cm;">agent1.channels.channel1.transactionCapacity = 600</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># Bind the source and sink to the channel</p>

			<p style="margin-left:0cm;">agent1.sources.source1.channels = channel1</p>

			<p style="margin-left:0cm;">agent1.sinks.sink1.channel = channel1</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h2 style="margin-left:0cm;"><strong>1.3 更多source和sink组件</strong></h2>
	</li>
</ul><p style="margin-left:0cm;">Flume支持众多的source和sink类型，详细手册可参考官方文档</p>

<p style="margin-left:0cm;"><a href="http://flume.apache.org/FlumeUserGuide.html" rel="nofollow">http://flume.apache.org/FlumeUserGuide.html</a></p>

<ul><li>
	<h1 style="margin-left:0cm;"><strong>二、 工作流调度器azkaban</strong></h1>
	</li>
	<li>
	<h2 style="margin-left:0cm;"><strong>2.1 概述</strong></h2>
	</li>
	<li>
	<h3 style="margin-left:0cm;"><strong>2.1.1为什么需要工作流调度系统</strong></h3>
	</li>
	<li>一个完整的数据分析系统通常都是由大量任务单元组成：</li>
</ul><p style="margin-left:0cm;">shell脚本程序，java程序，mapreduce程序、hive脚本等</p>

<ul><li>各任务单元之间存在时间先后及前后依赖关系</li>
	<li>为了很好地组织起这样的复杂执行计划，需要一个工作流调度系统来调度执行；</li>
</ul><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">例如，我们可能有这样一个需求，某个业务系统每天产生20G原始数据，我们每天都要对其进行处理，处理步骤如下所示：</p>

<ol><li>通过Hadoop先将原始数据同步到HDFS上；</li>
	<li>借助MapReduce计算框架对原始数据进行转换，生成的数据以分区表的形式存储到多张Hive表中；</li>
	<li>需要对Hive中多个表的数据进行JOIN处理，得到一个明细数据Hive大表；</li>
	<li>将明细数据进行复杂的统计分析，得到结果报表信息；</li>
	<li>需要将统计分析得到的结果数据同步到业务系统中，供业务调用使用。</li>
</ol><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>2.1.2 工作流调度实现方式</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">简单的任务调度：直接使用linux的crontab来定义；</p>

<p style="margin-left:0cm;">复杂的任务调度：开发调度平台</p>

<p style="margin-left:0cm;">或使用现成的开源调度系统，比如ooize、azkaban等</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>2.1.3 常见工作流调度系统</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">市面上目前有许多工作流调度器</p>

<p style="margin-left:0cm;">在hadoop领域，常见的工作流调度器有Oozie, Azkaban,Cascading,Hamake等</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>2.1.4 各种调度工具特性对比</strong></h3>
	</li>
</ul><p style="margin-left:0cm;"><span style="color:#362e2b;">下面的表格对上述四种</span><span style="color:#362e2b;">hadoop</span><span style="color:#362e2b;">工作流调度器的关键特性进行了比较，尽管这些工作流调度器能够解决的需求场景基本一致，但在设计理念，目标用户，应用场景等方面还是存在显著的区别，在做技术选型的时候，可以提供参考</span></p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">特性</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">Hamake</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">Oozie</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">Azkaban</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">Cascading</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">工作流描述语言</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">XML</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">XML (xPDL based)</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">text file with key/value pairs</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">Java API</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">依赖机制</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">data-driven</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">explicit</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">explicit</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">explicit</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">是否要web容器</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">No</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">Yes</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">Yes</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">No</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">进度跟踪</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">console/log messages</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">web page</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">web page</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">Java API</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">Hadoop job调度支持</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">no</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">运行模式</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">command line utility</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">daemon</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">daemon</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">API</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">Pig支持</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">事件通知</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">no</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">no</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">no</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">需要安装</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">no</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">no</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">支持的hadoop版本</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">0.18+</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">0.20+</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">currently unknown</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">0.18+</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">重试支持</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">no</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">workflownode evel</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">运行任意命令</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
		</tr><tr><td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">Amazon EMR支持</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
			<td style="vertical-align:top;width:85.2pt;">
			<p style="margin-left:0cm;">no</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">currently unknown</p>
			</td>
			<td style="vertical-align:top;width:85.25pt;">
			<p style="margin-left:0cm;">yes</p>
			</td>
		</tr></tbody></table><ul><li>
	<h3 style="margin-left:0cm;"><strong>2.1.5 Azkaban与Oozie对比</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">对市面上最流行的两种调度器，给出以下详细对比，以供技术选型参考。总体来说，ooize相比azkaban是一个重量级的任务调度系统，功能全面，但配置使用也更复杂。如果可以不在意某些功能的缺失，轻量级调度器azkaban是很不错的候选对象。</p>

<p style="margin-left:0cm;">详情如下：</p>

<ul><li>功能</li>
</ul><p style="margin-left:0cm;">两者均可以调度mapreduce,pig,java,脚本工作流任务</p>

<p style="margin-left:0cm;">两者均可以定时执行工作流任务</p>

<p style="margin-left:0cm;"> </p>

<ul><li>工作流定义</li>
</ul><p style="margin-left:0cm;">Azkaban使用Properties文件定义工作流</p>

<p style="margin-left:0cm;">Oozie使用XML文件定义工作流</p>

<p style="margin-left:0cm;"> </p>

<ul><li>工作流传参</li>
</ul><p style="margin-left:0cm;">Azkaban支持直接传参，例如${input}</p>

<p style="margin-left:0cm;">Oozie支持参数和EL表达式，例如${fs:dirSize(myInputDir)}</p>

<p style="margin-left:0cm;"> </p>

<ul><li>定时执行</li>
</ul><p style="margin-left:0cm;">Azkaban的定时执行任务是基于时间的</p>

<p style="margin-left:0cm;">Oozie的定时执行任务基于时间和输入数据</p>

<p style="margin-left:0cm;"> </p>

<ul><li>资源管理</li>
</ul><p style="margin-left:0cm;">Azkaban有较严格的权限控制，如用户对工作流进行读/写/执行等操作</p>

<p style="margin-left:0cm;">Oozie暂无严格的权限控制</p>

<p style="margin-left:0cm;"> </p>

<ul><li>工作流执行</li>
</ul><p style="margin-left:0cm;">Azkaban有两种运行模式，分别是solo server mode(executor server和web server部署在同一台节点)和multi server mode(executor server和web server可以部署在不同节点)</p>

<p style="margin-left:0cm;">Oozie作为工作流服务器运行，支持多用户和多工作流</p>

<p style="margin-left:0cm;"> </p>

<ul><li>工作流管理</li>
</ul><p style="margin-left:0cm;">Azkaban支持浏览器以及ajax方式操作工作流</p>

<p style="margin-left:0cm;">Oozie支持命令行、HTTP REST、Java API、浏览器操作工作流</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h2 style="margin-left:0cm;"><strong>2.2 Azkaban介绍</strong></h2>
	</li>
</ul><p style="margin-left:0cm;">Azkaban是由Linkedin开源的一个批量工作流任务调度器。用于在一个工作流内以一个特定的顺序运行一组工作和流程。Azkaban定义了一种KV文件格式来建立任务之间的依赖关系，并提供一个易于使用的web用户界面维护和跟踪你的工作流。</p>

<p style="margin-left:0cm;">它有如下功能特点：</p>

<ul><li>Web用户界面</li>
	<li>方便上传工作流</li>
	<li>方便设置任务之间的关系</li>
	<li>调度工作流</li>
	<li>认证/授权(权限的工作)</li>
	<li>能够杀死并重新启动工作流</li>
	<li>模块化和可插拔的插件机制</li>
	<li>项目工作区</li>
	<li>工作流和任务的日志记录和审计</li>
</ul><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h2 style="margin-left:0cm;"><strong>2. 3 Azkaban安装部署</strong></h2>
	</li>
	<li>
	<h3 style="margin-left:0cm;"><strong>准备工作</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">Azkaban Web服务器</p>

<p style="margin-left:0cm;">azkaban-web-server-2.5.0.tar.gz</p>

<p style="margin-left:0cm;">Azkaban执行服务器 </p>

<p style="margin-left:0cm;">azkaban-executor-server-2.5.0.tar.gz</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">MySQL</p>

<p style="margin-left:0cm;">目前azkaban只支持 mysql,需安装mysql服务器,本文档中默认已安装好mysql服务器,并建立了 root用户,密码 root.</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">下载地址:http://azkaban.github.io/downloads.html</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>安装</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">将安装文件上传到集群,最好上传到安装 hive、sqoop的机器上,方便命令的执行</p>

<p style="margin-left:0cm;">在当前用户目录下新建 azkabantools目录,用于存放源安装文件.新建azkaban目录,用于存放azkaban运行程序</p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>azkaban web服务器安装</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">解压azkaban-web-server-2.5.0.tar.gz</p>

<p style="margin-left:0cm;">命令: tar –zxvf azkaban-web-server-2.5.0.tar.gz</p>

<p style="margin-left:0cm;">将解压后的azkaban-web-server-2.5.0 移动到 azkaban目录中,并重新命名 webserver</p>

<p style="margin-left:0cm;">命令: mv azkaban-web-server-2.5.0 ../azkaban</p>

<p style="margin-left:0cm;">        cd ../azkaban</p>

<p style="margin-left:0cm;">        mv azkaban-web-server-2.5.0  server</p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>azkaban 执行服器安装</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">解压azkaban-executor-server-2.5.0.tar.gz</p>

<p style="margin-left:0cm;">命令:tar –zxvf azkaban-executor-server-2.5.0.tar.gz</p>

<p style="margin-left:0cm;">将解压后的azkaban-executor-server-2.5.0 移动到 azkaban目录中,并重新命名 executor</p>

<p style="margin-left:0cm;">命令:mv azkaban-executor-server-2.5.0  ../azkaban</p>

<p style="margin-left:0cm;">cd ../azkaban</p>

<p style="margin-left:0cm;">mv azkaban-executor-server-2.5.0  executor</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">azkaban脚本导入</p>

<p style="margin-left:0cm;">解压: azkaban-sql-script-2.5.0.tar.gz</p>

<p style="margin-left:0cm;">命令:tar –zxvf azkaban-sql-script-2.5.0.tar.gz</p>

<p style="margin-left:0cm;">将解压后的mysql 脚本,导入到mysql中:</p>

<p style="margin-left:0cm;">进入mysql</p>

<p style="margin-left:0cm;">mysql&gt; create database azkaban;</p>

<p style="margin-left:0cm;">mysql&gt; use azkaban;</p>

<p style="margin-left:0cm;">Database changed</p>

<p style="margin-left:0cm;">mysql&gt; source /home/hadoop/azkaban-2.5.0/create-all-sql-2.5.0.sql;</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>创建SSL配置</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">参考地址: http://docs.codehaus.org/display/JETTY/How+to+configure+SSL</p>

<p style="margin-left:0cm;">命令: keytool -keystore keystore -alias jetty -genkey -keyalg RSA</p>

<p style="margin-left:0cm;">运行此命令后,会提示输入当前生成 keystor的密码及相应信息,输入的密码请劳记,信息如下:</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">输入keystore密码： </p>

<p style="margin-left:0cm;">再次输入新密码:</p>

<p style="margin-left:0cm;">您的名字与姓氏是什么？</p>

<p style="margin-left:0cm;">  [Unknown]： </p>

<p style="margin-left:0cm;">您的组织单位名称是什么？</p>

<p style="margin-left:0cm;">  [Unknown]： </p>

<p style="margin-left:0cm;">您的组织名称是什么？</p>

<p style="margin-left:0cm;">  [Unknown]： </p>

<p style="margin-left:0cm;">您所在的城市或区域名称是什么？</p>

<p style="margin-left:0cm;">  [Unknown]： </p>

<p style="margin-left:0cm;">您所在的州或省份名称是什么？</p>

<p style="margin-left:0cm;">  [Unknown]： </p>

<p style="margin-left:0cm;">该单位的两字母国家代码是什么</p>

<p style="margin-left:0cm;">  [Unknown]：  CN</p>

<p style="margin-left:0cm;">CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=CN 正确吗？</p>

<p style="margin-left:0cm;">  [否]：  y</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">输入&lt;jetty&gt;的主密码</p>

<p style="margin-left:0cm;">        （如果和 keystore 密码相同，按回车）： </p>

<p style="margin-left:0cm;">再次输入新密码:</p>

<p style="margin-left:0cm;">完成上述工作后,将在当前目录生成 keystore 证书文件,将keystore 考贝到 azkaban web服务器根目录中.如:cp keystore azkaban/webserver</p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>配置文件</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">注：先配置好服务器节点上的时区</p>

<ol><li>先生成时区配置文件Asia/Shanghai，用交互式命令 <span style="color:#000000;">tzselect </span><span style="color:#000000;">即可</span></li>
	<li><span style="color:#000000;">拷贝该时区文件，覆盖系统本地时区配置</span></li>
</ol><p style="margin-left:0cm;"><span style="color:#000000;">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime  </span></p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">azkaban web服务器配置</p>

<p style="margin-left:0cm;">进入azkaban web服务器安装目录 conf目录</p>

<p style="margin-left:0cm;"> </p>

<p><strong>修改azkaban.properties文件</strong></p>

<p style="margin-left:0cm;">命令vi azkaban.properties</p>

<p style="margin-left:0cm;">内容说明如下:</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">#Azkaban Personalization Settings</p>

			<p style="margin-left:0cm;">azkaban.name=Test                           #服务器UI名称,用于服务器上方显示的名字</p>

			<p style="margin-left:0cm;">azkaban.label=My Local Azkaban                               #描述</p>

			<p style="margin-left:0cm;">azkaban.color=#FF3601                                                 #UI颜色</p>

			<p style="margin-left:0cm;">azkaban.default.servlet.path=/index                         #</p>

			<p style="margin-left:0cm;">web.resource.dir=web/                                                 #默认根web目录</p>

			<p style="margin-left:0cm;"><span style="color:#ff0000;">default.timezone.id=Asia/Shanghai  </span>                         #默认时区,已改为亚洲/上海 默认为美国</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;">#Azkaban UserManager class</p>

			<p style="margin-left:0cm;">user.manager.class=azkaban.user.XmlUserManager   #用户权限管理默认类</p>

			<p style="margin-left:0cm;">user.manager.xml.file=conf/azkaban-users.xml              #用户配置,具体配置参加下文</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;">#Loader for projects</p>

			<p style="margin-left:0cm;">executor.global.properties=conf/global.properties    # global配置文件所在位置</p>

			<p style="margin-left:0cm;">azkaban.project.dir=projects                                                #</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"><span style="color:#ff0000;">database.type=mysql                                                              #</span><span style="color:#ff0000;">数据库类型</span></p>

			<p style="margin-left:0cm;"><span style="color:#ff0000;">mysql.port=3306                                                                       #</span><span style="color:#ff0000;">端口号</span></p>

			<p style="margin-left:0cm;"><span style="color:#ff0000;">mysql.host=hadoop03                                                      #</span><span style="color:#ff0000;">数据库连接</span><span style="color:#ff0000;">IP</span></p>

			<p style="margin-left:0cm;"><span style="color:#ff0000;">mysql.database=azkaban                                                       #</span><span style="color:#ff0000;">数据库实例名</span></p>

			<p style="margin-left:0cm;"><span style="color:#ff0000;">mysql.user=root                                                                 #</span><span style="color:#ff0000;">数据库用户名</span></p>

			<p style="margin-left:0cm;"><span style="color:#ff0000;">mysql.password=root                                                          #</span><span style="color:#ff0000;">数据库密码</span></p>

			<p style="margin-left:0cm;"><span style="color:#ff0000;">mysql.numconnections=100                                                  #</span><span style="color:#ff0000;">最大连接数</span></p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># Velocity dev mode</p>

			<p style="margin-left:0cm;">velocity.dev.mode=false</p>

			<p style="margin-left:0cm;"># Jetty服务器属性.</p>

			<p style="margin-left:0cm;">jetty.maxThreads=25                                                               #最大线程数</p>

			<p style="margin-left:0cm;">jetty.ssl.port=8443                                                                   #Jetty SSL端口</p>

			<p style="margin-left:0cm;">jetty.port=8081                                                                         #Jetty端口</p>

			<p style="margin-left:0cm;">jetty.keystore=keystore                                                          #SSL文件名</p>

			<p style="margin-left:0cm;">jetty.password=123456                                                             #SSL文件密码</p>

			<p style="margin-left:0cm;">jetty.keypassword=123456                                                      #Jetty主密码 与 keystore文件相同</p>

			<p style="margin-left:0cm;">jetty.truststore=keystore                                                                #SSL文件名</p>

			<p style="margin-left:0cm;">jetty.trustpassword=123456                                                   # SSL文件密码</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># 执行服务器属性</p>

			<p style="margin-left:0cm;">executor.port=12321                                                               #执行服务器端口</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># 邮件设置</p>

			<p style="margin-left:0cm;">mail.sender=xxxxxxxx@163.com                                       #发送邮箱</p>

			<p style="margin-left:0cm;">mail.host=smtp.163.com                                                       #发送邮箱smtp地址</p>

			<p style="margin-left:0cm;">mail.user=xxxxxxxx                                       #发送邮件时显示的名称</p>

			<p style="margin-left:0cm;">mail.password=**********                                                 #邮箱密码</p>

			<p style="margin-left:0cm;">job.failure.email=xxxxxxxx@163.com                              #任务失败时发送邮件的地址</p>

			<p style="margin-left:0cm;">job.success.email=xxxxxxxx@163.com                            #任务成功时发送邮件的地址</p>

			<p style="margin-left:0cm;">lockdown.create.projects=false                                           #</p>

			<p style="margin-left:0cm;">cache.directory=cache                                                            #缓存目录</p>

			<p style="margin-left:0cm;"> </p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p><strong>azkaban 执行服务器配置</strong></p>

<p style="margin-left:0cm;">进入执行服务器安装目录conf,修改azkaban.properties</p>

<p style="margin-left:0cm;">vi azkaban.properties</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">#Azkaban</p>

			<p style="margin-left:0cm;">default.timezone.id=Asia/Shanghai                                              #时区</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># Azkaban JobTypes 插件配置</p>

			<p style="margin-left:0cm;">azkaban.jobtype.plugin.dir=plugins/jobtypes                   #jobtype 插件所在位置</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;">#Loader for projects</p>

			<p style="margin-left:0cm;">executor.global.properties=conf/global.properties</p>

			<p style="margin-left:0cm;">azkaban.project.dir=projects</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;">#数据库设置</p>

			<p style="margin-left:0cm;">database.type=mysql                                                                       #数据库类型(目前只支持mysql)</p>

			<p style="margin-left:0cm;">mysql.port=3306                                                                                #数据库端口号</p>

			<p style="margin-left:0cm;">mysql.host=192.168.20.200                                                           #数据库IP地址</p>

			<p style="margin-left:0cm;">mysql.database=azkaban                                                                #数据库实例名</p>

			<p style="margin-left:0cm;">mysql.user=azkaban                                                                         #数据库用户名</p>

			<p style="margin-left:0cm;">mysql.password=oracle                                                                   #数据库密码</p>

			<p style="margin-left:0cm;">mysql.numconnections=100                                                           #最大连接数</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;"># 执行服务器配置</p>

			<p style="margin-left:0cm;">executor.maxThreads=50                                                                #最大线程数</p>

			<p style="margin-left:0cm;">executor.port=12321                                                               #端口号(如修改,请与web服务中一致)</p>

			<p style="margin-left:0cm;">executor.flow.threads=30                                                                #线程数</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p><strong>用户配置</strong></p>

<p style="margin-left:0cm;">进入azkaban web服务器conf目录,修改azkaban-users.xml</p>

<p style="margin-left:0cm;">vi azkaban-users.xml 增加 管理员用户</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">&lt;azkaban-users&gt;</p>

			<p style="margin-left:0cm;">        &lt;user username="azkaban" password="azkaban" roles="admin" groups="azkaban" /&gt;</p>

			<p style="margin-left:0cm;">        &lt;user username="metrics" password="metrics" roles="metrics"/&gt;</p>

			<p style="margin-left:0cm;">        <span style="color:#ff0000;">&lt;user username="admin" password="admin" roles="admin,metrics" /&gt;</span></p>

			<p style="margin-left:0cm;">        &lt;role name="admin" permissions="ADMIN" /&gt;</p>

			<p style="margin-left:0cm;">        &lt;role name="metrics" permissions="METRICS"/&gt;</p>

			<p style="margin-left:0cm;">&lt;/azkaban-users&gt;</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>启动</strong></h3>
	</li>
</ul><p><strong>web服务器</strong></p>

<p style="margin-left:0cm;">在azkaban web服务器目录下执行启动命令</p>

<p style="margin-left:0cm;">bin/azkaban-web-start.sh</p>

<p style="margin-left:0cm;">注:在web服务器根目录运行</p>

<p style="margin-left:0cm;"> </p>

<p><strong>执行服务器</strong></p>

<p style="margin-left:0cm;">在执行服务器目录下执行启动命令</p>

<p style="margin-left:0cm;">bin/azkaban-executor-start.sh ./</p>

<p style="margin-left:0cm;">注:只能要执行服务器根目录运行</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">启动完成后,在浏览器(建议使用谷歌浏览器)中输入https://服务器IP地址:8443 ,即可访问azkaban服务了.在登录中输入刚才新的户用名及密码,点击 login.</p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h2 style="margin-left:0cm;"><strong>2.4 Azkaban实战</strong></h2>
	</li>
</ul><p style="margin-left:0cm;">Azkaba内置的任务类型支持command、java</p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>Command类型单一job示例</strong></h3>
	</li>
	<li>1.创建job描述文件</li>
</ul><p style="margin-left:0cm;">vi command.job</p>

<table border="1" cellspacing="0" style="width:586px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">#command.job</p>

			<p style="margin-left:0cm;">type=command                                                   </p>

			<p style="margin-left:0cm;">command=echo 'hello'</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>2.将job资源文件打包成zip文件</li>
</ul><p style="margin-left:0cm;">zip command.job</p>

<p style="margin-left:0cm;"> </p>

<ul><li>3.通过azkaban的web管理平台创建project并上传job压缩包</li>
</ul><p style="margin-left:0cm;">首先创建project</p>

<p style="margin-left:0cm;"><img alt="" class="has" height="350" src="https://img-blog.csdnimg.cn/20181106171923578.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dveHV5YW9oYW9oYW94dWV4aQ==,size_16,color_FFFFFF,t_70" width="1118"></p>

<p style="margin-left:0cm;">上传zip包</p>

<p style="margin-left:0cm;"><img alt="" class="has" height="274" src="https://img-blog.csdnimg.cn/20181106171923650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dveHV5YW9oYW9oYW94dWV4aQ==,size_16,color_FFFFFF,t_70" width="1200"></p>

<ul><li style="margin-left:0cm;">4.启动执行该job</li>
</ul><p style="margin-left:0cm;"><img alt="" class="has" height="177" src="https://img-blog.csdnimg.cn/20181106171923656.png" width="1048"></p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>Command类型多job工作流flow</strong></h3>
	</li>
	<li>1.创建有依赖关系的多个job描述</li>
</ul><p style="margin-left:0cm;">第一个job：foo.job</p>

<table border="1" cellspacing="0" style="width:502px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;"># foo.job</p>

			<p style="margin-left:0cm;">type=command</p>

			<p style="margin-left:0cm;">command=echo foo</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;">第二个job：bar.job依赖foo.job</p>

<table border="1" cellspacing="0" style="width:473px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;"># bar.job</p>

			<p style="margin-left:0cm;">type=command</p>

			<p style="margin-left:0cm;">dependencies=foo</p>

			<p style="margin-left:0cm;">command=echo bar</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<ul><li>2.将所有job资源文件打到一个zip包中</li>
</ul><p style="margin-left:0cm;"><img alt="" class="has" height="73" src="https://img-blog.csdnimg.cn/20181106171923666.png" width="226"></p>

<p style="margin-left:0cm;"> </p>

<ul><li>3.在azkaban的web管理界面创建工程并上传zip包</li>
	<li>4.启动工作流flow</li>
</ul><p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>HDFS操作任务</strong></h3>
	</li>
	<li>1.创建job描述文件</li>
</ul><table border="1" cellspacing="0" style="width:475px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;"># fs.job</p>

			<p style="margin-left:0cm;">type=command</p>

			<p style="margin-left:0cm;">command=/home/hadoop/apps/hadoop-2.6.1/bin/hadoop fs -mkdir /azaz</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<ul><li>2.将job资源文件打包成zip文件</li>
</ul><p style="margin-left:0cm;"><img alt="" class="has" height="78" src="https://img-blog.csdnimg.cn/20181106171923699.png" width="130"></p>

<ul><li style="margin-left:0cm;">3、通过azkaban的web管理平台创建project并上传job压缩包</li>
	<li style="margin-left:0cm;">4、启动执行该job</li>
</ul><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<h3 style="margin-left:0cm;"><strong>MAPREDUCE任务</strong></h3>

<p style="margin-left:0cm;">Mr任务依然可以使用command的job类型来执行</p>

<ul><li>1.创建job描述文件，及mr程序jar包（示例中直接使用hadoop自带的example jar）</li>
</ul><table border="1" cellspacing="0" style="width:507px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;"># mrwc.job</p>

			<p style="margin-left:0cm;">type=command</p>

			<p style="margin-left:0cm;">command=/home/hadoop/apps/hadoop-2.6.1/bin/hadoop  jar hadoop-mapreduce-examples-2.6.1.jar wordcount /wordcount/input /wordcount/azout</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>2.将所有job资源文件打到一个zip包中</li>
</ul><p style="margin-left:0cm;"><img alt="" class="has" height="91" src="https://img-blog.csdnimg.cn/20181106171923703.png" width="278"></p>

<p style="margin-left:0cm;"> </p>

<ul><li style="margin-left:0cm;">3、在azkaban的web管理界面创建工程并上传zip包</li>
	<li style="margin-left:0cm;">4、启动job</li>
</ul><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>HIVE脚本任务</strong></h3>
	</li>
	<li>1.创建job描述文件和hive脚本</li>
</ul><p style="margin-left:0cm;">Hive脚本： test.sql</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">use default;</p>

			<p style="margin-left:0cm;">drop table aztest;</p>

			<p style="margin-left:0cm;">create table aztest(id int,name string) row format delimited fields terminated by ',';</p>

			<p style="margin-left:0cm;">load data inpath '/aztest/hiveinput' into table aztest;</p>

			<p style="margin-left:0cm;">create table azres as select * from aztest;</p>

			<p style="margin-left:0cm;">insert overwrite directory '/aztest/hiveoutput' select count(1) from aztest;</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;">Job描述文件：hivef.job</p>

<table border="1" cellspacing="0" style="width:503px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;"># hivef.job</p>

			<p style="margin-left:0cm;">type=command</p>

			<p style="margin-left:0cm;">command=/home/hadoop/apps/hive/bin/hive -f 'test.sql'</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<ul><li style="margin-left:0cm;">2、将所有job资源文件打到一个zip包中</li>
	<li style="margin-left:0cm;">3、在azkaban的web管理界面创建工程并上传zip包</li>
	<li style="margin-left:0cm;">4、启动job</li>
</ul><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h1 style="margin-left:0cm;"><strong>3. sqoop数据迁移</strong></h1>
	</li>
	<li>
	<h2 style="margin-left:0cm;"><strong>3.1 概述</strong></h2>
	</li>
</ul><p style="margin-left:0cm;">sqoop是apache旗下一款<strong>“</strong><strong>Hadoop</strong><strong>和关系数据库服务器之间传送数据”</strong>的工具。</p>

<p style="margin-left:0cm;"><strong>导入数据</strong>：MySQL，Oracle导入数据到Hadoop的HDFS、HIVE、HBASE等数据存储系统；</p>

<p style="margin-left:0cm;"><strong>导出数据：</strong>从Hadoop的文件系统中导出数据到关系数据库</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"><img alt="" class="has" height="280" src="https://img-blog.csdnimg.cn/20181106171923720.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dveHV5YW9oYW9oYW94dWV4aQ==,size_16,color_FFFFFF,t_70" width="600"></p>

<ul><li>
	<h2 style="margin-left:0cm;"><strong>3.2 工作机制</strong></h2>
	</li>
</ul><p style="margin-left:0cm;">将导入或导出命令翻译成mapreduce程序来实现</p>

<p style="margin-left:0cm;">在翻译出的mapreduce中主要是对inputformat和outputformat进行定制</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h2 style="margin-left:0cm;"><strong>3.3 sqoop实战及原理</strong></h2>
	</li>
	<li>
	<h3 style="margin-left:0cm;"><strong>3.3.1 sqoop安装</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">安装sqoop的前提是已经具备java和hadoop的环境</p>

<ul><li><strong>1、下载并解压</strong></li>
</ul><p style="margin-left:0cm;">最新版下载地址http://ftp.wayne.edu/apache/sqoop/1.4.6/</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li><strong>2、修改配置文件</strong></li>
</ul><p style="margin-left:0cm;">$ cd $SQOOP_HOME/conf</p>

<p style="margin-left:0cm;">$ mv sqoop-env-template.sh sqoop-env.sh</p>

<p style="margin-left:0cm;">打开sqoop-env.sh并编辑下面几行：</p>

<p style="margin-left:0cm;">export HADOOP_COMMON_HOME=/home/hadoop/apps/hadoop-2.6.1/</p>

<p style="margin-left:0cm;">export HADOOP_MAPRED_HOME=/home/hadoop/apps/hadoop-2.6.1/</p>

<p style="margin-left:0cm;">export HIVE_HOME=/home/hadoop/apps/hive-1.2.1</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li><strong>3.加入mysql的jdbc驱动包</strong></li>
</ul><p style="margin-left:0cm;">cp  ~/app/hive/lib/mysql-connector-java-5.1.28.jar   $SQOOP_HOME/lib/</p>

<ul><li><strong>4、验证启动</strong></li>
</ul><p style="margin-left:0cm;">$ cd $SQOOP_HOME/bin</p>

<p style="margin-left:0cm;">$ sqoop-version</p>

<p style="margin-left:0cm;">预期的输出：</p>

<p style="margin-left:0cm;">15/12/17 14:52:32 INFO sqoop.Sqoop: Running Sqoop version: 1.4.6</p>

<p style="margin-left:0cm;">Sqoop 1.4.6 git commit id 5b34accaca7de251fc91161733f906af2eddbe83</p>

<p style="margin-left:0cm;">Compiled by abe on Fri Aug 1 11:19:26 PDT 2015</p>

<p style="margin-left:0cm;">到这里，整个Sqoop安装工作完成。</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h2 style="margin-left:0cm;"><strong>3.4 Sqoop的数据导入</strong></h2>
	</li>
</ul><p style="margin-left:0cm;">“导入工具”导入单个表从RDBMS到HDFS。表中的每一行被视为HDFS的记录。所有记录都存储为文本文件的文本数据（或者Avro、sequence文件等二进制数据） </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>3.4.1 语法</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">下面的语法用于将数据导入HDFS。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">$ sqoop import (generic-args) (import-args)</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>3.4.2 示例</strong></h3>
	</li>
</ul><p><strong>表数据</strong></p>

<p style="margin-left:0cm;">在mysql中有一个库userdb中三个表：emp, emp_add和emp_contact</p>

<p style="margin-left:0cm;">表emp:</p>

<table border="1" cellspacing="0" style="width:435px;"><tbody><tr><td style="background-color:#eeeeee;border-color:#dddddd;width:49.6pt;">
			<p style="margin-left:0cm;"><strong><span style="color:#313131;">id</span></strong></p>
			</td>
			<td style="background-color:#eeeeee;border-color:#dddddd;width:72.8pt;">
			<p style="margin-left:0cm;"><strong><span style="color:#313131;">name</span></strong></p>
			</td>
			<td style="background-color:#eeeeee;border-color:#dddddd;width:96pt;">
			<p style="margin-left:0cm;"><strong><span style="color:#313131;">deg</span></strong></p>
			</td>
			<td style="background-color:#eeeeee;border-color:#dddddd;width:61.2pt;">
			<p style="margin-left:0cm;"><strong><span style="color:#313131;">salary</span></strong></p>
			</td>
			<td style="background-color:#eeeeee;border-color:#dddddd;width:47.95pt;">
			<p style="margin-left:0cm;"><strong><span style="color:#313131;">dept</span></strong></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:49.6pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1201</span></p>
			</td>
			<td style="vertical-align:top;width:72.8pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">gopal</span></p>
			</td>
			<td style="vertical-align:top;width:96pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">manager</span></p>
			</td>
			<td style="vertical-align:top;width:61.2pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">50,000</span></p>
			</td>
			<td style="vertical-align:top;width:47.95pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">TP</span></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:49.6pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1202</span></p>
			</td>
			<td style="vertical-align:top;width:72.8pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">manisha</span></p>
			</td>
			<td style="vertical-align:top;width:96pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">Proof reader</span></p>
			</td>
			<td style="vertical-align:top;width:61.2pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">50,000</span></p>
			</td>
			<td style="vertical-align:top;width:47.95pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">TP</span></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:49.6pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1203</span></p>
			</td>
			<td style="vertical-align:top;width:72.8pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">khalil</span></p>
			</td>
			<td style="vertical-align:top;width:96pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">php dev</span></p>
			</td>
			<td style="vertical-align:top;width:61.2pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">30,000</span></p>
			</td>
			<td style="vertical-align:top;width:47.95pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">AC</span></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:49.6pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1204</span></p>
			</td>
			<td style="vertical-align:top;width:72.8pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">prasanth</span></p>
			</td>
			<td style="vertical-align:top;width:96pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">php dev</span></p>
			</td>
			<td style="vertical-align:top;width:61.2pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">30,000</span></p>
			</td>
			<td style="vertical-align:top;width:47.95pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">AC</span></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:49.6pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1205</span></p>
			</td>
			<td style="vertical-align:top;width:72.8pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">kranthi</span></p>
			</td>
			<td style="vertical-align:top;width:96pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">admin</span></p>
			</td>
			<td style="vertical-align:top;width:61.2pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">20,000</span></p>
			</td>
			<td style="vertical-align:top;width:47.95pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">TP</span></p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;">表emp_add:</p>

<table border="1" cellspacing="0" style="width:465px;"><tbody><tr><td style="background-color:#eeeeee;border-color:#dddddd;width:70.05pt;">
			<p style="margin-left:0cm;"><strong><span style="color:#313131;">id</span></strong></p>
			</td>
			<td style="background-color:#eeeeee;border-color:#dddddd;width:72.3pt;">
			<p style="margin-left:0cm;"><strong><span style="color:#313131;">hno</span></strong></p>
			</td>
			<td style="background-color:#eeeeee;border-color:#dddddd;width:87.6pt;">
			<p style="margin-left:0cm;"><strong><span style="color:#313131;">street</span></strong></p>
			</td>
			<td style="background-color:#eeeeee;border-color:#dddddd;width:96.35pt;">
			<p style="margin-left:0cm;"><strong><span style="color:#313131;">city</span></strong></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:70.05pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1201</span></p>
			</td>
			<td style="vertical-align:top;width:72.3pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">288A</span></p>
			</td>
			<td style="vertical-align:top;width:87.6pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">vgiri</span></p>
			</td>
			<td style="vertical-align:top;width:96.35pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">jublee</span></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:70.05pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1202</span></p>
			</td>
			<td style="vertical-align:top;width:72.3pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">108I</span></p>
			</td>
			<td style="vertical-align:top;width:87.6pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">aoc</span></p>
			</td>
			<td style="vertical-align:top;width:96.35pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">sec-bad</span></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:70.05pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1203</span></p>
			</td>
			<td style="vertical-align:top;width:72.3pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">144Z</span></p>
			</td>
			<td style="vertical-align:top;width:87.6pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">pgutta</span></p>
			</td>
			<td style="vertical-align:top;width:96.35pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">hyd</span></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:70.05pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1204</span></p>
			</td>
			<td style="vertical-align:top;width:72.3pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">78B</span></p>
			</td>
			<td style="vertical-align:top;width:87.6pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">old city</span></p>
			</td>
			<td style="vertical-align:top;width:96.35pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">sec-bad</span></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:70.05pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1205</span></p>
			</td>
			<td style="vertical-align:top;width:72.3pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">720X</span></p>
			</td>
			<td style="vertical-align:top;width:87.6pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">hitec</span></p>
			</td>
			<td style="vertical-align:top;width:96.35pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">sec-bad</span></p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;">表emp_conn:</p>

<p style="margin-left:0cm;"> </p>

<table border="1" cellspacing="0" style="width:514px;"><tbody><tr><td style="background-color:#eeeeee;border-color:#dddddd;width:72.55pt;">
			<p style="margin-left:0cm;"><strong><span style="color:#313131;">id</span></strong></p>
			</td>
			<td style="background-color:#eeeeee;border-color:#dddddd;width:106.55pt;">
			<p style="margin-left:0cm;"><strong><span style="color:#313131;">phno</span></strong></p>
			</td>
			<td style="background-color:#eeeeee;border-color:#dddddd;width:145.85pt;">
			<p style="margin-left:0cm;"><strong><span style="color:#313131;">email</span></strong></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:72.55pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1201</span></p>
			</td>
			<td style="vertical-align:top;width:106.55pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">2356742</span></p>
			</td>
			<td style="vertical-align:top;width:145.85pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">gopal@tp.com</span></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:72.55pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1202</span></p>
			</td>
			<td style="vertical-align:top;width:106.55pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1661663</span></p>
			</td>
			<td style="vertical-align:top;width:145.85pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">manisha@tp.com</span></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:72.55pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1203</span></p>
			</td>
			<td style="vertical-align:top;width:106.55pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">8887776</span></p>
			</td>
			<td style="vertical-align:top;width:145.85pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">khalil@ac.com</span></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:72.55pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1204</span></p>
			</td>
			<td style="vertical-align:top;width:106.55pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">9988774</span></p>
			</td>
			<td style="vertical-align:top;width:145.85pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">prasanth@ac.com</span></p>
			</td>
		</tr><tr><td style="border-color:#dddddd;vertical-align:top;width:72.55pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1205</span></p>
			</td>
			<td style="vertical-align:top;width:106.55pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">1231231</span></p>
			</td>
			<td style="vertical-align:top;width:145.85pt;">
			<p style="margin-left:0cm;"><span style="color:#313131;">kranthi@tp.com</span></p>
			</td>
		</tr></tbody></table><p><strong>导入表表数据到HDFS</strong></p>

<p style="margin-left:0cm;">下面的命令用于从MySQL数据库服务器中的emp表导入HDFS。</p>

<table border="1" cellspacing="0" style="width:489px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">$bin/sqoop import \</p>

			<p style="margin-left:0cm;">--connect jdbc:mysql://hdp-node-01:3306/test \</p>

			<p style="margin-left:0cm;">--username root \</p>

			<p style="margin-left:0cm;">--password root \</p>

			<p style="margin-left:0cm;">--table emp --m 1</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">如果成功执行，那么会得到下面的输出。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">14/12/22 15:24:54 INFO sqoop.Sqoop: Running Sqoop version: 1.4.5</p>

			<p style="margin-left:0cm;">14/12/22 15:24:56 INFO manager.MySQLManager: Preparing to use a MySQL streaming resultset.</p>

			<p style="margin-left:0cm;">INFO orm.CompilationManager: Writing jar file: /tmp/sqoop-hadoop/compile/cebe706d23ebb1fd99c1f063ad51ebd7/emp.jar</p>

			<p style="margin-left:0cm;">-----------------------------------------------------</p>

			<p style="margin-left:0cm;">O mapreduce.Job: map 0% reduce 0%</p>

			<p style="margin-left:0cm;">14/12/22 15:28:08 INFO mapreduce.Job: map 100% reduce 0%</p>

			<p style="margin-left:0cm;">14/12/22 15:28:16 INFO mapreduce.Job: Job job_1419242001831_0001 completed successfully</p>

			<p style="margin-left:0cm;">-----------------------------------------------------</p>

			<p style="margin-left:0cm;">-----------------------------------------------------</p>

			<p style="margin-left:0cm;">14/12/22 15:28:17 INFO mapreduce.ImportJobBase: Transferred 145 bytes in 177.5849 seconds (0.8165 bytes/sec)</p>

			<p style="margin-left:0cm;">14/12/22 15:28:17 INFO mapreduce.ImportJobBase: Retrieved 5 records.</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">为了验证在HDFS导入的数据，请使用以下命令查看导入的数据</p>

<table border="1" cellspacing="0" style="width:481px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">$ $HADOOP_HOME/bin/hadoop fs -cat /user/hadoop/emp/part-m-00000</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">emp表的数据和字段之间用逗号(,)表示。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">1201, gopal,    manager, 50000, TP</p>

			<p style="margin-left:0cm;">1202, manisha,  preader, 50000, TP</p>

			<p style="margin-left:0cm;">1203, kalil,    php dev, 30000, AC</p>

			<p style="margin-left:0cm;">1204, prasanth, php dev, 30000, AC</p>

			<p style="margin-left:0cm;">1205, kranthi,  admin,   20000, TP</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p><strong>导入关系表到HIVE</strong></p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">bin/sqoop import --connect jdbc:mysql://hdp-node-01:3306/test --username root --password root --table emp --hive-import --m 1</p>
			</td>
		</tr></tbody></table><p><strong>导入到HDFS指定目录</strong></p>

<p style="margin-left:0cm;">在导入表数据到HDFS使用Sqoop导入工具，我们可以指定目标目录。</p>

<p style="margin-left:0cm;">以下是指定目标目录选项的Sqoop导入命令的语法。</p>

<table border="1" cellspacing="0" style="width:473px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">--target-dir &lt;new or exist directory in HDFS&gt;</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">下面的命令是用来导入emp_add表数据到'/queryresult'目录。</p>

<table border="1" cellspacing="0" style="width:470px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">bin/sqoop import \</p>

			<p style="margin-left:0cm;">--connect jdbc:mysql://hdp-node-01:3306/test \</p>

			<p style="margin-left:0cm;">--username root \</p>

			<p style="margin-left:0cm;">--password root \</p>

			<p style="margin-left:0cm;">--target-dir /queryresult \</p>

			<p style="margin-left:0cm;">--table emp --m 1</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">下面的命令是用来验证 /queryresult 目录中 emp_add表导入的数据形式。</p>

<table border="1" cellspacing="0" style="width:480px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;"> $HADOOP_HOME/bin/hadoop fs -cat /queryresult/part-m-*</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">它会用逗号（，）分隔emp_add表的数据和字段。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">1201, 288A, vgiri,   jublee</p>

			<p style="margin-left:0cm;">1202, 108I, aoc,     sec-bad</p>

			<p style="margin-left:0cm;">1203, 144Z, pgutta,  hyd</p>

			<p style="margin-left:0cm;">1204, 78B,  oldcity, sec-bad</p>

			<p style="margin-left:0cm;">1205, 720C, hitech,  sec-bad</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p><strong>导入表数据子集</strong></p>

<p style="margin-left:0cm;">我们可以导入表的使用Sqoop导入工具，"where"子句的一个子集。它执行在各自的数据库服务器相应的SQL查询，并将结果存储在HDFS的目标目录。</p>

<p style="margin-left:0cm;">where子句的语法如下。</p>

<table border="1" cellspacing="0" style="width:487px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">--where &lt;condition&gt;</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">下面的命令用来导入emp_add表数据的子集。子集查询检索员工ID和地址，居住城市为：Secunderabad</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">bin/sqoop import \</p>

			<p style="margin-left:0cm;">--connect jdbc:mysql://hdp-node-01:3306/test \</p>

			<p style="margin-left:0cm;">--username root \</p>

			<p style="margin-left:0cm;">--password root \</p>

			<p style="margin-left:0cm;">--where "city ='sec-bad'" \</p>

			<p style="margin-left:0cm;">--target-dir /wherequery \</p>

			<p style="margin-left:0cm;">--table emp_add --m 1</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">下面的命令用来验证数据从emp_add表导入/wherequery目录</p>

<table border="1" cellspacing="0" style="width:485px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">$HADOOP_HOME/bin/hadoop fs -cat /wherequery/part-m-*</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">它用逗号（，）分隔 emp_add表数据和字段。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">1202, 108I, aoc, sec-bad</p>

			<p style="margin-left:0cm;">1204, 78B, oldcity, sec-bad</p>

			<p style="margin-left:0cm;">1205, 720C, hitech, sec-bad</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p><strong>增量导入</strong></p>

<p style="margin-left:0cm;">增量导入是仅导入新添加的表中的行的技术。</p>

<p style="margin-left:0cm;">它需要添加‘incremental’, ‘check-column’, 和 ‘last-value’选项来执行增量导入。</p>

<p style="margin-left:0cm;">下面的语法用于Sqoop导入命令增量选项。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">--incremental &lt;mode&gt;</p>

			<p style="margin-left:0cm;">--check-column &lt;column name&gt;</p>

			<p style="margin-left:0cm;">--last value &lt;last check column value&gt;</p>

			<p style="margin-left:0cm;"> </p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">假设新添加的数据转换成emp表如下：</p>

<p style="margin-left:0cm;">1206, satish p, grp des, 20000, GR</p>

<p style="margin-left:0cm;">下面的命令用于在EMP表执行增量导入。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">bin/sqoop import \</p>

			<p style="margin-left:0cm;">--connect jdbc:mysql://hdp-node-01:3306/test \</p>

			<p style="margin-left:0cm;">--username root \</p>

			<p style="margin-left:0cm;">--password root \</p>

			<p style="margin-left:0cm;">--table emp --m 1 \</p>

			<p style="margin-left:0cm;">--incremental append \</p>

			<p style="margin-left:0cm;">--check-column id \</p>

			<p style="margin-left:0cm;">--last-value 1205</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">以下命令用于从emp表导入HDFS emp/ 目录的数据验证。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">$ $HADOOP_HOME/bin/hadoop fs -cat /user/hadoop/emp/part-m-*</p>

			<p style="margin-left:0cm;">它用逗号（，）分隔 emp_add表数据和字段。</p>

			<p style="margin-left:0cm;">1201, gopal,    manager, 50000, TP</p>

			<p style="margin-left:0cm;">1202, manisha,  preader, 50000, TP</p>

			<p style="margin-left:0cm;">1203, kalil,    php dev, 30000, AC</p>

			<p style="margin-left:0cm;">1204, prasanth, php dev, 30000, AC</p>

			<p style="margin-left:0cm;">1205, kranthi,  admin,   20000, TP</p>

			<p style="margin-left:0cm;">1206, satish p, grp des, 20000, GR</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">下面的命令是从表emp 用来查看修改或新添加的行</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">$ $HADOOP_HOME/bin/hadoop fs -cat /emp/part-m-*1</p>

			<p style="margin-left:0cm;">这表示新添加的行用逗号（，）分隔emp表的字段。</p>

			<p style="margin-left:0cm;">1206, satish p, grp des, 20000, GR</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h2 style="margin-left:0cm;"><strong>3.5 Sqoop的数据导出</strong></h2>
	</li>
</ul><p style="margin-left:0cm;">将数据从HDFS导出到RDBMS数据库</p>

<p style="margin-left:0cm;">导出前，目标表必须存在于目标数据库中。</p>

<ol><li>默认操作是从将文件中的数据使用INSERT语句插入到表中</li>
	<li>更新模式下，是生成UPDATE语句更新表数据</li>
</ol><ul><li>
	<h3 style="margin-left:0cm;"><strong>语法</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">以下是export命令语法。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">$ sqoop export (generic-args) (export-args)</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>示例</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">数据是在HDFS 中“EMP/”目录的emp_data文件中。所述emp_data如下：</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">1201, gopal,     manager, 50000, TP</p>

			<p style="margin-left:0cm;">1202, manisha,   preader, 50000, TP</p>

			<p style="margin-left:0cm;">1203, kalil,     php dev, 30000, AC</p>

			<p style="margin-left:0cm;">1204, prasanth,  php dev, 30000, AC</p>

			<p style="margin-left:0cm;">1205, kranthi,   admin,   20000, TP</p>

			<p style="margin-left:0cm;">1206, satish p,  grp des, 20000, GR</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">1、首先需要手动创建mysql中的目标表</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">$ mysql</p>

			<p style="margin-left:0cm;">mysql&gt; USE db;</p>

			<p style="margin-left:0cm;">mysql&gt; CREATE TABLE employee (</p>

			<p style="margin-left:0cm;">   id INT NOT NULL PRIMARY KEY,</p>

			<p style="margin-left:0cm;">   name VARCHAR(20),</p>

			<p style="margin-left:0cm;">   deg VARCHAR(20),</p>

			<p style="margin-left:0cm;">   salary INT,</p>

			<p style="margin-left:0cm;">   dept VARCHAR(10));</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">2、然后执行导出命令</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">bin/sqoop export \</p>

			<p style="margin-left:0cm;">--connect jdbc:mysql://hdp-node-01:3306/test \</p>

			<p style="margin-left:0cm;">--username root \</p>

			<p style="margin-left:0cm;">--password root \</p>

			<p style="margin-left:0cm;">--table emp2 \</p>

			<p style="margin-left:0cm;">--export-dir /user/hadoop/emp/</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">3、验证表mysql命令行。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">mysql&gt;select * from employee;</p>

			<p style="margin-left:0cm;">如果给定的数据存储成功，那么可以找到数据在如下的employee表。</p>

			<p style="margin-left:0cm;">+------+--------------+-------------+-------------------+--------+</p>

			<p style="margin-left:0cm;">| Id   | Name         | Designation | Salary            | Dept   |</p>

			<p style="margin-left:0cm;">+------+--------------+-------------+-------------------+--------+</p>

			<p style="margin-left:0cm;">| 1201 | gopal        | manager     | 50000             | TP     |</p>

			<p style="margin-left:0cm;">| 1202 | manisha      | preader     | 50000             | TP     |</p>

			<p style="margin-left:0cm;">| 1203 | kalil        | php dev     | 30000             | AC     |</p>

			<p style="margin-left:0cm;">| 1204 | prasanth     | php dev     | 30000             | AC     |</p>

			<p style="margin-left:0cm;">| 1205 | kranthi      | admin       | 20000             | TP     |</p>

			<p style="margin-left:0cm;">| 1206 | satish p     | grp des     | 20000             | GR     |</p>

			<p style="margin-left:0cm;">+------+--------------+-------------+-------------------+--------+</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h2 style="margin-left:0cm;"><strong>3.6 Sqoop作业</strong></h2>
	</li>
</ul><p style="margin-left:0cm;"><em>注：Sqoop</em><em>作业——将事先定义好的数据导入导出任务按照指定流程运行</em></p>

<ul><li><strong>语法</strong></li>
</ul><p style="margin-left:0cm;">以下是创建Sqoop作业的语法。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">$ sqoop job (generic-args) (job-args)</p>

			<p style="margin-left:0cm;">   [-- [subtool-name] (subtool-args)]</p>

			<p style="margin-left:0cm;"> </p>

			<p style="margin-left:0cm;">$ sqoop-job (generic-args) (job-args)</p>

			<p style="margin-left:0cm;">   [-- [subtool-name] (subtool-args)]</p>

			<p style="margin-left:0cm;"> </p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li><strong>创建作业(--create)</strong></li>
</ul><p style="margin-left:0cm;">在这里，我们创建一个名为myjob，这可以从RDBMS表的数据导入到HDFS作业。</p>

<p style="margin-left:0cm;"> </p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">bin/sqoop job --create myimportjob -- import --connect jdbc:mysql://hdp-node-01:3306/test --username root --password root --table emp --m 1</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;">该命令创建了一个从db库的employee表导入到HDFS文件的作业。</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li><strong>验证作业 (--list)</strong></li>
</ul><p style="margin-left:0cm;"><strong>‘--list’ </strong>参数是用来验证保存的作业。下面的命令用来验证保存Sqoop作业的列表。</p>

<p style="margin-left:0cm;">$ sqoop job --list</p>

<p style="margin-left:0cm;">它显示了保存作业列表。</p>

<p style="margin-left:0cm;">Available jobs:</p>

<p style="margin-left:0cm;">   myjob</p>

<p style="margin-left:0cm;">检查作业(--show)</p>

<p style="margin-left:0cm;"><strong>‘--show’ </strong>参数用于检查或验证特定的工作，及其详细信息。以下命令和样本输出用来验证一个名为myjob的作业。</p>

<p style="margin-left:0cm;">$ sqoop job --show myjob</p>

<p style="margin-left:0cm;">它显示了工具和它们的选择，这是使用在myjob中作业情况。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">Job: myjob</p>

			<p style="margin-left:0cm;"> Tool: import Options:</p>

			<p style="margin-left:0cm;"> ----------------------------</p>

			<p style="margin-left:0cm;"> direct.import = true</p>

			<p style="margin-left:0cm;"> codegen.input.delimiters.record = 0</p>

			<p style="margin-left:0cm;"> hdfs.append.dir = false</p>

			<p style="margin-left:0cm;"> db.table = employee</p>

			<p style="margin-left:0cm;"> ...</p>

			<p style="margin-left:0cm;"> incremental.last.value = 1206</p>

			<p style="margin-left:0cm;"> ...</p>

			<p style="margin-left:0cm;"> </p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li><strong>执行作业 (--exec)</strong></li>
</ul><p style="margin-left:0cm;"><strong>‘--exec’ </strong>选项用于执行保存的作业。下面的命令用于执行保存的作业称为myjob。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">$ sqoop job --exec myjob</p>

			<p style="margin-left:0cm;">它会显示下面的输出。</p>

			<p style="margin-left:0cm;">10/08/19 13:08:45 INFO tool.CodeGenTool: Beginning code generation</p>

			<p style="margin-left:0cm;">...</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h2 style="margin-left:0cm;"><strong>3.7 Sqoop的原理</strong></h2>
	</li>
	<li>
	<h3 style="margin-left:0cm;"><strong>概述</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">Sqoop的原理其实就是将导入导出命令转化为mapreduce程序来执行，sqoop在接收到命令后，都要生成mapreduce程序</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">使用sqoop的代码生成工具可以方便查看到sqoop所生成的java代码，并可在此基础之上进行深入定制开发</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<ul><li>
	<h3 style="margin-left:0cm;"><strong>代码定制</strong></h3>
	</li>
</ul><p style="margin-left:0cm;">以下是Sqoop代码生成命令的语法：</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">$ sqoop-codegen (generic-args) (codegen-args)</p>

			<p style="margin-left:0cm;">$ sqoop-codegen (generic-args) (codegen-args)</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">示例：以USERDB数据库中的表emp来生成Java代码为例。</p>

<p style="margin-left:0cm;">下面的命令用来生成导入</p>

<table border="1" cellspacing="0" style="width:485px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">$ sqoop-codegen \</p>

			<p style="margin-left:0cm;">--import</p>

			<p style="margin-left:0cm;">--connect jdbc:mysql://localhost/userdb \</p>

			<p style="margin-left:0cm;">--username root \</p>

			<p style="margin-left:0cm;">--table emp</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">如果命令成功执行，那么它就会产生如下的输出。</p>

<table border="1" cellspacing="0"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">14/12/23 02:34:40 INFO sqoop.Sqoop: Running Sqoop version: 1.4.5</p>

			<p style="margin-left:0cm;">14/12/23 02:34:41 INFO tool.CodeGenTool: Beginning code generation</p>

			<p style="margin-left:0cm;">……………….</p>

			<p style="margin-left:0cm;">14/12/23 02:34:42 INFO orm.CompilationManager: HADOOP_MAPRED_HOME is /usr/local/hadoop</p>

			<p style="margin-left:0cm;">Note: /tmp/sqoop-hadoop/compile/9a300a1f94899df4a9b10f9935ed9f91/emp.java uses or overrides a deprecated API.</p>

			<p style="margin-left:0cm;">Note: Recompile with -Xlint:deprecation for details.</p>

			<p style="margin-left:0cm;">14/12/23 02:34:47 INFO orm.CompilationManager: Writing jar file: /tmp/sqoop-hadoop/compile/9a300a1f94899df4a9b10f9935ed9f91/emp.jar</p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;">验证: 查看输出目录下的文件</p>

<table border="1" cellspacing="0" style="width:542px;"><tbody><tr><td style="vertical-align:top;width:426.1pt;">
			<p style="margin-left:0cm;">$ cd /tmp/sqoop-hadoop/compile/9a300a1f94899df4a9b10f9935ed9f91/</p>

			<p style="margin-left:0cm;">$ ls</p>

			<p style="margin-left:0cm;">emp.class</p>

			<p style="margin-left:0cm;">emp.jar</p>

			<p style="margin-left:0cm;">emp.java</p>

			<p style="margin-left:0cm;"> </p>
			</td>
		</tr></tbody></table><p style="margin-left:0cm;">如果想做深入定制导出，则可修改上述代码文件</p>

<hr><p><a name="_msocom_1"></a></p>

<p style="margin-left:0cm;">Source 到 Channel 到 Sink之间传递数据的形式是Event事件；Event事件是一个数据流单元。</p>

<p style="margin-left:0cm;"> </p>

<p style="margin-left:0cm;"> </p>            </div>
                </div>