---
layout:     post
title:      kafka学习之路
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p>本文主要关注why--&gt;what----&gt;How</p>
<p><br></p>
<p><span style="font-size:32px;">1Why？为什么要学习kafka？</span></p>
<p>主要基于kafka的诸多应用：诸多大公司都在用如：淘宝、LinkedIn<br></p>
<p>a.kafka在我们进行消息处理的时候吞吐量大，及每秒钟转发数据量大，多大？</p>
<p><strong>Kafka每秒可以生产约25万消息（50 MB），每秒处理55万消息（110 MB）。</strong><br></p>
<p><br></p>
<p><span style="font-size:32px;">2.What?kafka是什么？</span></p>
<h2>kafka是一个分布式消息分发系统</h2>
<h2>kafka的工作原理【三个角色】</h2>
<p>不需要在内存中缓存数据，因为操作系统的文件系统足够强大</p>
<p>对于数据的CRUD</p>
<p>R：随机读写高效</p>
<p>D：到达一定的数据量之后或超过一定时间再删除</p>
<p>C：自会append</p>
<p>U:</p>
<p>    Kafka另一个独特的地方是将<span style="color:#FF0000;">消费者信息</span>保存在客户端而不是MQ服务器，这样服务器就不用记录消息的投递过程，每个客户端都自己知道自己下一次应该从什么地方什么位置读取消息，消息的投递过程也是采用客户端主动pull的模型，这样大大减轻了服务器的负担</p>
<p>   还强调减少数据的序列化和拷贝开销，它会将一些消息组织成Message Set做批量存储和发送，并且客户端在pull数据的时候，尽量以zero-copy的方式传输，利用sendfile(对应java里的FileChannel.transferTo/transferFrom)这样的高级IO函数来减少拷贝开销</p>
<p><br></p>
<h2>kafka的设计思想【框架】</h2>
<p><br></p>
<p><br></p>
<p><br></p>
<p><span style="font-size:32px;">3.How</span></p>
<p>kafka的使用场景</p>
<p>kafka编写步骤  <br></p>
            </div>
                </div>