---
layout:     post
title:      大数据(七) --Hadoop简介
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文版权归宋坤所有，转载请注明出处					https://blog.csdn.net/skisqibao/article/details/83064376				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-light">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p></p><div class="toc"><h3>Hadoop生态圈</h3><ul><li><a href="#What_is_Hadoop_2" rel="nofollow">What is Hadoop?</a></li><ul><li><a href="#Hadoop_4" rel="nofollow">Hadoop思想来源</a></li><li><a href="#Hadoop_11" rel="nofollow">Hadoop的历史</a></li></ul><li><a href="#_23" rel="nofollow">三大发行版本</a></li><li><a href="#Hadoop_29" rel="nofollow">Hadoop的优势</a></li><li><a href="#Hadoop_41" rel="nofollow">Hadoop的组成</a></li><ul><li><a href="#Hadoop12_43" rel="nofollow">Hadoop1.*和2.*的区别</a></li><li><a href="#Hadoop_54" rel="nofollow">Hadoop组成</a></li><ul><li><a href="#HDFS_56" rel="nofollow">HDFS</a></li><li><a href="#Yarn_70" rel="nofollow">Yarn</a></li><li><a href="#MapReduce_87" rel="nofollow">MapReduce</a></li></ul></ul><li><a href="#_96" rel="nofollow">大数据技术生态体系</a></li></ul></div><p></p>
<h1><a id="What_is_Hadoop_2"></a>What is Hadoop?</h1>
<h2><a id="Hadoop_4"></a>Hadoop思想来源</h2>
<p>  Google是Hadoop思想和技术的来源. 具体来说就是Hadoop的" 三驾马车" --Google 发布的三篇技术思想论文:</p>
<ul>
<li><em>The Google File System</em></li>
<li><em>MapReduce_Simplified Data Processing on Large Clusters</em></li>
<li><em>Bigtable_A Distributed Storage System for Structured Data</em></li>
</ul>
<h2><a id="Hadoop_11"></a>Hadoop的历史</h2>
<p>  Hadoop作者Doug Cutting , 他在Yahoo就职期间开发了Hadoop项目. 2003-2004年, Google公开GFS和MapReduce思想细节后, Doug Cutting等人以此为基础利用业余时间实现DFS和MapReduce机制. Hadoop名字的来源是Doug儿子的大象玩具.</p>
<p>  2005年Hadoop作为Lucene的子项目Nutch的一部分被正式引入Apache基金会. 06年MapReduce和Nutch Distributed File System(NDFS)被纳入Hadoop项目.</p>
<p>  至此, Hadoop作为一个<strong>分布式系统基础架构</strong>由Apache基金会所开发并以开源的形式提供给开发者. 主要用来解决海量数据的<strong>存储</strong>和<strong>计算处理</strong>.</p>
<p>  广义上来讲, Hadoop一般指Hadoop生态圈, 圈中有如下图众多的技术:<br>
<img src="https://img-blog.csdn.net/20181015210110339?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NraXNxaWJhbw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p>
<h1><a id="_23"></a>三大发行版本</h1>
<ol>
<li>Apache Hadoop: 原始版本, 适合初学者</li>
<li>Cloudera Hadoop: 适合大型互联网企业中的项目, 收费</li>
<li>Hortonworks Hadoop: 文档相对好点</li>
</ol>
<h1><a id="Hadoop_29"></a>Hadoop的优势</h1>
<ol>
<li>高可靠性<br>
底层维护多个数据副本, 即使某个节点故障, 数据也不会丢失.</li>
<li>高扩展性<br>
在集群间分配数据, 可以很轻松地扩展节点.</li>
<li>高效性<br>
在MR思想下, 实现并行处理, 加快处理速度, 提高效率.</li>
<li>高容错性<br>
能够自动将失败的任务重新分配.</li>
</ol>
<h1><a id="Hadoop_41"></a>Hadoop的组成</h1>
<h2><a id="Hadoop12_43"></a>Hadoop1.*和2.*的区别</h2>
<p>Hadoop1.*的组成<br>
<img src="https://img-blog.csdn.net/20181015235759906?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NraXNxaWJhbw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p>
<p>Hadoop2.*的组成<br>
<img src="https://img-blog.csdn.net/20181015235908386?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NraXNxaWJhbw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p>
<p>  从这两幅图中可以看出, 1.*的版本中, MapReduce除了负责计算之外, 还要对系统资源进行调度, 包括CPU, 内存, 磁盘等. 因此, MapReduce负责的功能太多太复杂, 容易出现问题, 耦合性较大.</p>
<p>  于是2.*版本中, 将资源调度模块从MapReduce中抽离, 让它成为单独的一个模块, 实现该模块功能的工具就是Yarn. Yarn的出现, 成功让MapReduce功能解耦, 更加模块化</p>
<h2><a id="Hadoop_54"></a>Hadoop组成</h2>
<h3><a id="HDFS_56"></a>HDFS</h3>
<ul>
<li>NameNode
<ul>
<li>接受客户端读写请求</li>
<li>管理元数据</li>
<li>管理DataNode</li>
</ul>
</li>
<li>DataNode
<ul>
<li>接受客户端读请求</li>
<li>存储源数据</li>
<li>向NameNode汇报心跳</li>
<li>构建PipeLine</li>
<li>管理本机上Block块的元数据</li>
</ul>
</li>
<li>SecondaryNameNode
<ul>
<li>持久化元数据</li>
</ul>
</li>
</ul>
<h3><a id="Yarn_70"></a>Yarn</h3>
<ul>
<li>ResourceManager
<ul>
<li>处理客户端请求</li>
<li>监控NodeManager</li>
<li>启动并监控ApplicationMaster</li>
<li>资源调度与分配</li>
</ul>
</li>
<li>NodeManager
<ul>
<li>管理单节点上的资源</li>
<li>处理来自RM的命令</li>
<li>处理来自ApplicationMaster的命令</li>
</ul>
</li>
<li>ApplicationMaster
<ul>
<li>辅助数据切分</li>
<li>申请程序资源并分配给内部任务</li>
<li>任务监控与容错</li>
</ul>
</li>
<li>Container
<ul>
<li>Yarn中的资源抽象, 它封装了某个节点上多维度资源, 例如: 内存, CPU, 磁盘, 网络等.</li>
</ul>
</li>
</ul>
<h3><a id="MapReduce_87"></a>MapReduce</h3>
<p>  MapReduce将计算分两个阶段, Map和Reduce.</p>
<ol>
<li>Map阶段并行处理输入数据;</li>
<li>Reduce阶段对Map结果进行汇总<br>
<img src="https://img-blog.csdn.net/20181016010933638?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NraXNxaWJhbw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></li>
</ol>
<h1><a id="_96"></a>大数据技术生态体系</h1>
<p><img src="https://img-blog.csdn.net/20181016012146618?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NraXNxaWJhbw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p>

            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>