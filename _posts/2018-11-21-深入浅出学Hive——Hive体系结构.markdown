---
layout:     post
title:      深入浅出学Hive——Hive体系结构
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<div style="border-width:0px;overflow:hidden;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;background-color:rgb(250,250,250);">
<p style="font-size:14px;line-height:1.5em;">
<span class="bold" style="font-weight:bold;line-height:1.5em;"></span></p>
<p style="font-size:14px;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;">
<span class="bold" style="font-weight:bold;line-height:1.5em;">目录：</span></p>
<p style="font-size:14px;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;">
<span style="color:rgb(0,94,167);"><span style="line-height:1.5em;"><a href="http://blog.csdn.net/guohecang/article/details/51576755" rel="nofollow">初始Hive</a></span></span></p>
<p style="font-size:14px;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;">
<span style="color:rgb(0,94,167);"><span style="line-height:1.5em;"><a href="http://blog.csdn.net/guohecang/article/details/51576829" rel="nofollow">Hive安装与配置</a></span></span></p>
<p style="font-size:14px;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;">
<span style="color:rgb(0,94,167);"><span style="line-height:1.5em;"><a href="http://blog.csdn.net/guohecang/article/details/51576891" rel="nofollow">Hive内建操作符与函数开发</a></span></span></p>
<p style="font-size:14px;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;">
<span style="color:rgb(0,94,167);"><span style="line-height:1.5em;"><a href="http://blog.csdn.net/guohecang/article/details/51576917" rel="nofollow">Hive JDBC</a></span></span></p>
<p style="font-size:14px;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;">
<a href="http://blog.csdn.net/guohecang/article/details/51576933" rel="nofollow">Hive参数</a><br></p>
<p style="font-size:14px;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;">
<span style="color:rgb(0,94,167);"><span style="line-height:1.5em;"><a href="http://blog.csdn.net/guohecang/article/details/51576957" rel="nofollow">Hive高级编程</a></span></span></p>
<p style="font-size:14px;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;">
<span style="color:rgb(0,94,167);"><span style="line-height:1.5em;"><a href="http://blog.csdn.net/guohecang/article/details/51576975" rel="nofollow">Hive QL</a></span></span></p>
<p style="font-size:14px;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;">
<span style="color:rgb(0,94,167);"><span style="line-height:1.5em;"><a href="http://blog.csdn.net/guohecang/article/details/51576993" rel="nofollow">Hive Shell基本操作</a></span></span></p>
<p style="font-size:14px;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;">
<a href="http://blog.csdn.net/guohecang/article/details/51577027" rel="nofollow">Hive优化</a><a href="http://blog.csdn.net/guohecang/article/details/51577027" rel="nofollow"><span style="color:rgb(0,94,167);"><span style="line-height:1.5em;"></span></span></a></p>
<p style="font-size:14px;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;">
<span style="color:rgb(0,94,167);"><span style="line-height:1.5em;"><a href="http://blog.csdn.net/guohecang/article/details/51577040" rel="nofollow">Hive体系结构</a></span></span></p>
<p style="font-size:14px;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;">
<span style="color:rgb(0,94,167);"><span style="line-height:1.5em;"><a href="http://blog.csdn.net/guohecang/article/details/51577052" rel="nofollow">Hive原理</a></span></span></p>
<p style="font-size:14px;line-height:1.5em;">
 </p>
<p style="font-size:14px;line-height:1.5em;">
<br></p>
</div>
<div style="border-width:0px;overflow:hidden;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;background-color:rgb(250,250,250);">
<br></div>
<div style="border-width:0px;overflow:hidden;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;background-color:rgb(250,250,250);">
<span class="bold" style="font-size:16px;font-weight:bold;">第一部分：概念</span> </div>
<div style="border-width:0px;overflow:hidden;font-family:verdana, arial, helvetica, sans-serif;line-height:21px;background-color:rgb(250,250,250);">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">概念</span></div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<div style="border-width:0px;overflow:hidden;">•用户接口：用户访问Hive的入口</div>
<div style="border-width:0px;overflow:hidden;">•元数据：Hive的用户信息与表的MetaData</div>
<div style="border-width:0px;overflow:hidden;">•解释器：分析翻译HQL的组件</div>
<div style="border-width:0px;overflow:hidden;">•编译器：编译HQL的组件</div>
<div style="border-width:0px;overflow:hidden;">•优化器：优化HQL的组件</div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<div style="border-width:0px;overflow:hidden;"><span class="bold" style="font-size:16px;font-weight:bold;">第二部分：Hive架构与基本组成</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">架构图</span></div>
</div>
<div style="border-width:0px;overflow:hidden;"><img src="http://sishuok.com/forum/upload/2012/10/23/28c50c50c7e176810a642f1cf88ea968__1.JPG" alt="" style="border-width:0px;border-style:none;"></div>
</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">基本组成</span></div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div style="border-width:0px;overflow:hidden;">•用户接口，包括 CLI，JDBC/ODBC，WebUI</div>
<div style="border-width:0px;overflow:hidden;">•元数据存储，通常是存储在关系数据库如 mysql, derby 中</div>
<div style="border-width:0px;overflow:hidden;">•解释器、编译器、优化器、执行器</div>
<div style="border-width:0px;overflow:hidden;">•Hadoop：用 HDFS 进行存储，利用 MapReduce 进行计算</div>
<div style="border-width:0px;overflow:hidden;"> </div>
</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">各组件的基本功能</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•用户接口主要有三个：CLI，JDBC/ODBC和 WebUI</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•CLI，即Shell命令行</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•JDBC/ODBC 是 Hive 的JAVA，与使用传统数据库JDBC的方式类似</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•WebGUI是通过浏览器访问 Hive</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•Hive 将元数据存储在数据库中，目前只支持 mysql、derby，下一版本会支持更多的数据库。Hive 中的元数据包括表的名字，表的列和分区及其属性，表的属性（是否为外部表等），表的数据所在目录等</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•解释器、编译器、优化器完成 HQL 查询语句从词法分析、语法分析、编译、优化以及查询计划的生成。生成的查询计划存储在 HDFS 中，并在随后有 MapReduce 调用执行</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•Hive 的数据存储在 HDFS 中，大部分的查询由 MapReduce 完成（包含 * 的查询，比如 select * from table 不会生成 MapRedcue 任务）</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" lang="en-us" style="font-weight:bold;" xml:lang="en-us">Metastore</span></div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•Metastore是系统目录(catalog)用于保存Hive中所存储的表的元数据（metadata）信息</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•Metastore是Hive被用作传统数据库解决方案（如oracle和db2）时区别其它类似系统的一个特征</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•Metastore包含如下的部分：</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•Database 是表（table）的名字空间。默认的数据库（database）名为‘default’</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•Table 表（table）的原数据包含信息有：列（list of columns）和它们的类型（types），拥有者（owner），存储空间（storage）和SerDei信息</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•Partition 每个分区（partition）都有自己的列（columns），SerDe和存储空间（storage）。这一特征将被用来支持Hive中的模式演变（schema evolution）</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span lang="en-us" xml:lang="en-us"><span><span class="bold">Compiler</span><br></span></span></div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div style="border-width:0px;overflow:hidden;">•Driver调用编译器（compiler）处理HiveQL字串，这些字串可能是一条DDL、DML或查询语句</div>
<div style="border-width:0px;overflow:hidden;">•编译器将字符串转化为策略（plan）</div>
<div style="border-width:0px;overflow:hidden;">•策略仅由元数据操作和HDFS操作组成，元数据操作只包含DDL语句，HDFS操作只包含LOAD语句</div>
<div style="border-width:0px;overflow:hidden;">•对插入和查询而言，策略由map-reduce任务中的具有方向的非循环图（directedacyclic graph，DAG）组成</div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-size:16px;font-weight:bold;"><span lang="en-us" style="font-size:12px;" xml:lang="en-us">第</span>三<span lang="en-us" style="font-size:12px;" xml:lang="en-us">部分：</span><span lang="en-us" style="font-size:12px;" xml:lang="en-us">Hive运行模式</span></span> </div>
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" lang="en-us" style="font-weight:bold;" xml:lang="en-us">Hive运行模式</span></div>
</div>
</div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•Hive的运行模式即任务的执行环境</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•分为本地与集群两种</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•我们可以通过mapred.job.tracker 来指明</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•设置方式</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•hive &gt; SET  mapred.job.tracker=local</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<div style="border-width:0px;overflow:hidden;"><span class="bold" style="font-size:16px;font-weight:bold;">第四部分：数据类型</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">原始数据类型</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•Integers</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
TINYINT - 1 byte</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
SMALLINT - 2 byte</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
INT - 4 byte</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
BIGINT - 8 byte</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•Boolean type</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
BOOLEAN - TRUE/FALSE</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•Floating point numbers</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
FLOAT –单精度</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
DOUBLE – 双精度</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•String type</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
STRING - sequence of characters in a specified character set</div>
<div class="O" style="border-width:0px;overflow:hidden;">
  </div>
</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">复杂数据类型</span></div>
</div>
</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div style="border-width:0px;overflow:hidden;">•Structs: 例子  {c INT; d INT}</div>
<div style="border-width:0px;overflow:hidden;">•Maps (key-value tuples):. 例子'group' -&gt; gid  M['group']</div>
<div style="border-width:0px;overflow:hidden;">•Arrays (indexable lists):  例子[‘1', ‘2', ‘3']</div>
<div style="border-width:0px;overflow:hidden;">•TIMESTAMP  0.8版本新加属性</div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<div style="border-width:0px;overflow:hidden;"><span class="bold" style="font-size:16px;font-weight:bold;">第五部分：Hive的元数据存储</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">存储方式与模式</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•Hive 将元数据存储在 数据库中</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•连接到数据库模式有三种</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•单用户模式</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•多用户模式</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•远程服务器模式</div>
<div class="O" style="border-width:0px;overflow:hidden;">
 
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">单用户模式</span></div>
</div>
</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<span>此模式连接到一个</span> <span lang="en-us" xml:lang="en-us">In-memory </span><span>的数据库</span> <span lang="en-us" xml:lang="en-us">Derby</span> <span>，一般用于</span> <span lang="en-us" xml:lang="en-us">Unit
 Test</span></div>
 <img src="http://sishuok.com/forum/upload/2012/10/23/edfa9cf7e030a15c6a908a2e28145707__2.JPG" alt="" style="border-width:0px;border-style:none;"></div>
</div>
</div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">多用户模式</span></div>
</div>
</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<span>通过网络连接到一个数据库中，是最经常使用到的模式</span></div>
<img src="http://sishuok.com/forum/upload/2012/10/23/d70fe76f6daf91f99abed2a43b4b0324__3.JPG" alt="" style="border-width:0px;border-style:none;"></div>
<div class="O" style="border-width:0px;overflow:hidden;">
 
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">远程服务器模式</span></div>
</div>
</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div style="border-width:0px;overflow:hidden;">•用于非 Java 客户端访问元数据库，在服务器端启动MetaStoreServer，客户端利用 Thrift 协议通过MetaStoreServer 访问元数据库</div>
<div style="border-width:0px;overflow:hidden;"><img src="http://sishuok.com/forum/upload/2012/10/23/c68da5c32b461d27f483e26653564ce0__4.JPG" alt="" style="border-width:0px;border-style:none;"></div>
<div style="border-width:0px;overflow:hidden;"> </div>
</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-size:16px;font-weight:bold;"><span lang="en-us" style="font-size:12px;" xml:lang="en-us">第</span>六<span lang="en-us" style="font-size:12px;" xml:lang="en-us">部分：</span><span lang="en-us" style="font-size:12px;" xml:lang="en-us">Hive的数据存储</span></span></div>
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" lang="en-us" style="font-weight:bold;" xml:lang="en-us">Hive数据存储的基本概念</span></div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div style="border-width:0px;overflow:hidden;">•Hive的数据存储是建立在Hadoop HDFS之上的</div>
<div style="border-width:0px;overflow:hidden;">•Hive没有专门的数据存储格式</div>
<div style="border-width:0px;overflow:hidden;">•存储结构主要包括：数据库、文件、表、视图</div>
<div style="border-width:0px;overflow:hidden;">•Hive默认可以直接加载文本文件，还支持sequence file 、RCFile</div>
<div style="border-width:0px;overflow:hidden;">•创建表时，我们直接告诉Hive数据的列分隔符与行分隔符，Hive即可解析数据</div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" lang="en-us" style="font-weight:bold;" xml:lang="en-us">Hive的数据模型-数据库</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•类似传统数据库的DataBase</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•在第三方数据库里实际是一张表</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•简单示例</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•命令行hive &gt; create database test_database;</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" lang="en-us" style="font-weight:bold;" xml:lang="en-us">Hive的数据模型-表</span></div>
</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<div style="border-width:0px;overflow:hidden;">•Table 内部表</div>
<div style="border-width:0px;overflow:hidden;">•Partition  分区表</div>
<div style="border-width:0px;overflow:hidden;">•External Table 外部表</div>
<div style="border-width:0px;overflow:hidden;">•Bucket  Table </div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">内部表</span></div>
</div>
</div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•与数据库中的 Table 在概念上是类似</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•每一个 Table 在 Hive 中都有一个相应的目录存储数据</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•例如，一个表 test，它在 HDFS 中的路径为：/ warehouse /test</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
• warehouse是在 hive-site.xml 中由 ${hive.metastore.warehouse.dir} 指定的数据仓库的目录</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•所有的 Table 数据（不包括 External Table）都保存在这个目录中。</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•删除表时，元数据与数据都会被删除</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">内部表简单示例</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•创建数据文件test_inner_table.txt</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•创建表</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•create table test_inner_table (key string)</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•加载数据</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•LOAD DATA LOCAL INPATH ‘filepath’ INTO TABLE test_inner_table</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•查看数据</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•select * from test_inner_table</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•select count(*) from test_inner_table</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•删除表 drop table test_inner_table</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">分区表</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•Partition 对应于数据库中的 Partition 列的密集索引</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•在 Hive 中，表中的一个 Partition 对应于表下的一个目录，所有的 Partition 的数据都存储在对应的目录中</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•例如：test表中包含 date 和 position 两个 Partition，则对应于 date = 20120801, position = zh 的 HDFS 子目录为：/ warehouse /test/date=20120801/ position =zh</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•对应于  = 20100801, position = US 的HDFS 子目录为；/ warehouse /xiaojun/date=20120801/ position =US</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">分区表简单示例</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•创建数据文件test_partition_table.txt</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•创建表</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•create table test_partition_table (key string) partitioned by (dt string)</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•加载数据</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•LOAD DATA INPATH ‘filepath’ INTO TABLE test_partition_table partition (dt=‘2006’)</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•查看数据</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•select * from test_partition_table</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•select count(*) from test_partition_table</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•删除表 drop table test_partition_table</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">外部表</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•指向已经在 HDFS 中存在的数据，可以创建 Partition</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•它和 内部表 在元数据的组织上是相同的，而实际数据的存储则有较大的差异</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•内部表 的创建过程和数据加载过程（这两个过程可以在同一个语句中完成），在加载数据的过程中，实际数据会被移动到数据仓库目录中；之后对数据对访问将会直接在数据仓库目录中完成。删除表时，表中的数据和元数据将会被同时删除</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
• 外部表 只有一个过程，加载数据和创建表同时完成，并不会移动到数据仓库目录中，只是与外部数据建立一个链接。当删除一个 外部表 时，仅删除该链接</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">外部表简单示例</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•创建数据文件test_external_table.txt</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•创建表</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•create external table test_external_table (key string)</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•加载数据</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•LOAD DATA INPATH ‘filepath’ INTO TABLE test_inner_table</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•查看数据</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•select * from test_external_table</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•select count(*) from test_external_table</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•删除表 drop table test_external_table</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;"><span lang="en-us" xml:lang="en-us">Bucket </span><span lang="en-us" xml:lang="en-us">Table</span></span></div>
<div class="O" style="border-width:0px;overflow:hidden;">
<div style="border-width:0px;overflow:hidden;">•可以将表的列通过Hash算法进一步分解成不同的文件存储</div>
<div style="border-width:0px;overflow:hidden;">•例如：将age列分散成20个文件，首先要对AGE进行Hash计算，对应为0的写入/warehouse/test/date=20120801/postion=zh/part-00000,对应为1的写入/warehouse/test/date=20120801/postion=zh/part-00001</div>
<div style="border-width:0px;overflow:hidden;">•如果想应用很多的Map任务这样是不错的选择</div>
<div style="border-width:0px;overflow:hidden;"><img src="http://sishuok.com/forum/upload/2012/10/23/927c28731e673d02a2b7abd1fbb895c7__5.JPG" alt="" style="border-width:0px;border-style:none;"></div>
</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;"><span lang="en-us" xml:lang="en-us">Bucket </span><span lang="en-us" xml:lang="en-us">Table</span>简单示例</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•创建数据文件test_bucket_table.txt</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•创建表</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•create table test_bucket_table (key string)</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
     clustered by (key) into 20 buckets</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•加载数据</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•LOAD DATA INPATH ‘filepath’ INTO TABLE test_bucket_table</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•查看数据</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•select * from test_bucket_table</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•set hive.enforce.bucketing = true;</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" lang="en-us" style="font-weight:bold;" xml:lang="en-us">Hive的数据模型-视图</span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•视图与传统数据库的视图类似</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•视图是只读的</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•视图基于的基本表，如果改变，指增加不会影响视图的呈现；如果删除，会出现问题</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•如果不指定视图的列，会根据select语句后的生成</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•示例</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•create view test_view as select * from test</div>
</div>
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-size:16px;font-weight:bold;"><span lang="en-us" style="font-size:12px;" xml:lang="en-us">第</span>七<span lang="en-us" style="font-size:12px;" xml:lang="en-us">部分：</span><span lang="en-us" style="font-size:12px;" xml:lang="en-us">HiveUI介绍</span></span></div>
<div class="O" style="border-width:0px;overflow:hidden;">
<span class="bold" style="font-weight:bold;">启动<span lang="en-us" xml:lang="en-us">UI</span></span></div>
<div style="border-width:0px;overflow:hidden;">
<div class="O" style="border-width:0px;overflow:hidden;">
•配置</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•hive-site.xml 添加</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
  &lt;property&gt;</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
       &lt;name&gt;hive.hwi.war.file&lt;/name&gt;</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
       &lt;value&gt;lib/hive-hwi-0.8.1.war&lt;/value&gt;</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
  &lt;/property&gt;</div>
<div class="O1" style="border-width:0px;overflow:hidden;">
•</div>
<div class="O" style="border-width:0px;overflow:hidden;">
•启动Hive的UI sh $HIVE_HOME/bin/hive --service hwi</div>
</div>
<div class="O" style="border-width:0px;overflow:hidden;">
转载请注明出处【 <a href="http://sishuok.com/forum/blogPost/list/0/6231.html" rel="nofollow" style="color:rgb(0,94,167);text-decoration:none;">http://sishuok.com/forum/blogPost/list/0/6231.html</a>】</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
            </div>
                </div>