---
layout:     post
title:      大数据技术之Hive（一）
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/a376712116/article/details/81044213				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p><strong>一 、Hive 基本概念</strong></p>

<p>1.1 什么是 Hive</p>

<p>　　Hive：由 Facebook 开源用于解决海量结构化日志的数据统计。</p>

<p>　　Hive 是基于 Hadoop 的一个<font color="red">数据仓库工具</font>，可以将<font color="red">结构化的数据文件映射为一张表</font>，并提供类 SQL 查询功能。</p>

<p>　　<font color="red">本质是：将 HQL 转化成 MapReduce 程序</font></p>

<p>　　1）Hive 处理的数据存储在 HDFS</p>

<p>　　2）Hive 分析数据底层的实现是 MapReduce</p>

<p>　　3）执行程序运行在 Yarn 上</p>

<p>1.2 Hive 的优缺点</p>

<p>　1.2.1 优点</p>

<p>　　1）操作接口采用类 SQL 语法，提供快速开发的能力（简单、容易上手）</p>

<p>　　2）避免了去写 MapReduce，减少开发人员的学习成本。</p>

<p>　　3）Hive 的执行延迟比较高，因此 Hive 常用于数据分析，对实时性要求不高的场合；</p>

<p>　　4）Hive 优势在于处理大数据，对于处理小数据没有优势，因为 Hive 的执行延迟比较高。</p>

<p>　　5）Hive 支持用户自定义函数，用户可以根据自己的需求来实现自己的函数。</p>

<p>　1.2.2 缺点</p>

<p>　　1）Hive 的 HQL 表达能力有限</p>

<p>　　（1）迭代式算法无法表达</p>

<p>　　（2）数据挖掘方面不擅长</p>

<p>　　2）Hive 的效率比较低</p>

<p>　　（1）Hive 自动生成的 MapReduce 作业，通常情况下不够智能化</p>

<p>　　（2）Hive 调优比较困难，粒度较粗 <br>
　　 <br>
1.3 Hive 架构原理 <br>
<img src="https://img-blog.csdn.net/20180714152711153?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzNzY3MTIxMTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述" title=""> <br>
如图中所示，Hive 通过给用户提供的一系列交互接口，接收到用户的指令(SQL)，使用</p>

<p>自己的 Driver，结合元数据(MetaStore)，将这些指令翻译成 MapReduce，提交到 Hadoop 中</p>

<p>执行，最后，将执行返回的结果输出到用户交互接口。</p>

<p>1）用户接口：Client</p>

<p>CLI（hive shell）、JDBC/ODBC(java 访问 hive)、WEBUI（浏览器访问 hive）</p>

<p>2）元数据：Metastore</p>

<p>元数据包括：表名、表所属的数据库（默认是 default）、表的拥有者、列/分区字段、表</p>

<p>的类型（是否是外部表）、表的数据所在目录等；</p>

<p><font color="red">默认存储在自带的 derby 数据库中，推荐使用 MySQL 存储 Metastore</font></p>

<p>3）Hadoop</p>

<p>使用 HDFS 进行存储，使用 MapReduce 进行计算。</p>

<p>4）驱动器：Driver</p>

<p>（1）解析器（SQL Parser）：将 SQL 字符串转换成抽象语法树 AST，这一步一般都用</p>

<p>第三方工具库完成，比如 antlr；对 AST 进行语法分析，比如表是否存在、字段是否存</p>

<p>在、SQL 语义是否有误。</p>

<p>（2）编译器（Physical Plan）：将 AST 编译生成逻辑执行计划。</p>

<p>（3）优化器（Query Optimizer）：对逻辑执行计划进行优化。</p>

<p>（4）执行器（Execution）：把逻辑执行计划转换成可以运行的物理计划。对于 Hive 来</p>

<p>说，就是 MR/Spark。</p>

<p>1.4 Hive 和数据库比较</p>

<p>由于 Hive 采用了类似   SQL 的查询语言 HQL(Hive  Query  Language) ，因此很容易将Hive 理解为数据库。其实从结构上来看，Hive 和数据库除了拥有类似的查询语言，再无类似之处。本文将从多个方面来阐述 Hive 和数据库的差异。数据库可以用在 Online 的应用中，但是 Hive 是为数据仓库而设计的，清楚这一点，有助于从应用角度理解 Hive 的特性。</p>

<p>1.4.1 查询语言</p>

<p>由于 SQL 被广泛的应用在数据仓库中，因此，专门针对 Hive 的特性设计了类 SQL 的</p>

<p>查询语言 HQL。熟悉 SQL 开发的开发者可以很方便的使用 Hive 进行开发。</p>

<p>1.4.2 数据存储位置</p>

<p>Hive 是建立在 Hadoop 之上的，所有 Hive 的数据都是存储在 HDFS 中的。而数据库则</p>

<p>可以将数据保存在块设备或者本地文件系统中。</p>

<p>1.4.3 数据更新</p>

<p>由于 Hive 是针对数据仓库应用设计的，而<font color="red">数据仓库的内容是读多写少的</font>。因此，<font color="red">Hive中不支持对数据的改写和添加，所有的数据都是在加载的时候确定好的。</font>而数据库中的数据通常是需要经常进行修改的，因此可以使用 INSERT INTO … VALUES 添加数据，使用   UPDATE … SET 修改数据。</p>

<p>1.4.4 索引</p>

<p>Hive 在加载数据的过程中不会对数据进行任何处理，甚至不会对数据进行扫描，因此</p>

<p>也没有对数据中的某些 Key 建立索引。Hive 要访问数据中满足条件的特定值时，需要暴力</p>

<p>扫描整个数据，因此访问延迟较高。由于 MapReduce 的引入， Hive 可以并行访问数据，因</p>

<p>此即使没有索引，对于大数据量的访问，Hive 仍然可以体现出优势。数据库中，通常会针</p>

<p>对一个或者几个列建立索引，因此对于少量的特定条件的数据的访问，数据库可以有很高的</p>

<p>效率，较低的延迟。由于数据的访问延迟较高，决定了 Hive 不适合在线数据查询。</p>

<p>1.4.5 执行</p>

<p>Hive 中大多数查询的执行是通过 Hadoop 提供的 MapReduce 来实现的。而数据库通常</p>

<p>有自己的执行引擎。</p>

<p>1.4.6 执行延迟</p>

<p>Hive 在查询数据的时候，由于没有索引，需要扫描整个表，因此延迟较高。另外一个</p>

<p>导致 Hive 执行延迟高的因素是 MapReduce 框架。由于 MapReduce 本身具有较高的延迟，</p>

<p>因此在利用 MapReduce 执行 Hive 查询时，也会有较高的延迟。相对的，数据库的执行延迟</p>

<p>较低。当然，这个低是有条件的，即数据规模较小，当数据规模大到超过数据库的处理能力</p>

<p>的时候，Hive 的并行计算显然能体现出优势。</p>

<p>1.4.7 可扩展性</p>

<p>由于 Hive 是建立在 Hadoop 之上的，因此 Hive 的可扩展性是和 Hadoop 的可扩展性是</p>

<p>一致的（世界上最大的 Hadoop 集群在 Yahoo!，2009 年的规模在 4000 台节点左右）。而数</p>

<p>据库由于 ACID 语义的严格限制，扩展行非常有限。目前最先进的并行数据库 Oracle 在理</p>

<p>论上的扩展能力也只有 100 台左右。</p>

<p>1.4.8 数据规模</p>

<p>由于 Hive 建立在集群上并可以利用 MapReduce 进行并行计算，因此可以支持很大规模</p>

<p>的数据；对应的，数据库可以支持的数据规模较小。</p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>