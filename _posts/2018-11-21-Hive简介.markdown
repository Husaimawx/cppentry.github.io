---
layout:     post
title:      Hive简介
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/LXChild/article/details/53010113				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h1 id="hive">Hive</h1>



<h2 id="什么是hive">什么是Hive</h2>

<ul>
<li>Hive是建立在Hadoop HDFS之上的<code>数据仓库</code>基础架构(开源)</li>
<li>Hive可以用来进行数据提取转化加载（ETL）</li>
<li>Hive定义了简单的类似SQL查询语言，成为HQL，它允许熟悉SQL的用户查询数据</li>
<li>Hive允许熟悉MapReduce开发者的开发自定义的mapper和reducer来处理内建的mapper和reducer无法完成的复杂的分析工作</li>
<li>Hive是SQL解释引擎，他将SQL语句转移成M/R Job，然后在Hadoop执行</li>
<li>Hive的表其实就是HDFS的目录/文件</li>
</ul>

<blockquote>
  <p>数据仓库就是数据库，也就是说我们可以用数据仓库来保存数据</p>
  
  <p>数据仓库是一个面向<code>主题</code>的、<code>集成</code>的<code>不可更新</code>的、随时间<code>不变化</code>的数据集合，它用于支持企业或组织的决策分析处理</p>
  
  <ol>
  <li><p><code>主题</code>是用户使用数据仓库进行决策时关心的重点方面</p></li>
  <li><p><code>集成</code>也就是说数据仓库中的数据来自分的的操作性的数据，我们把分散的操作性的数据从原来的数据中抽取出来进行加工处理，然后满足一定要求，这样就可以进入数据仓库，原来的数据可以来自传统的数据库，也可以来自文本文件…，我们把不同的数据集成起来就成了数据仓库</p></li>
  <li><p><code>不可更新</code>也就是说数据仓库主要是为了决策分析所提供数据，所以所涉及的操作主要指数据查询，我们一般不在数据仓库做删除和更新，因为数据仓库就是做查询操作，并且数据仓库中的数据不随时间推移产生变化</p></li>
  </ol>
</blockquote>



<h2 id="数据仓库的结构和建立过程">数据仓库的结构和建立过程</h2>

<ol>
<li>首先需要有数据源，可能来自于业务数据系统、文档资料、或其它数据</li>
<li>数据存储即管理，抽取（Extract）、转换（Transform）、装载（Load），抽取：把数据源中的数据按照一定方式独取出来然后进行转换，因为不同数据源格式可能不一样，不一定满足要求，所以需要按照一定规则进行转换，这样转换完的数据就可以存储在数据仓库</li>
<li>数据仓库引擎，包含有不同服务器，提供不同服务，</li>
<li>进行前端展示，例如数据查询、数据报表、数据分析、各类应用</li>
</ol>



<h2 id="oltp应用与olap">OLTP应用与OLAP</h2>

<p>OLTP(OnLine Transition Procession)联机事务处理，关注焦点是事务处理，例：银行转帐 <br>
OLAP(OnLine Analysis Processing)联机分析处理，最典型应用是商品推荐系统，基于历史数据进行分析挖掘然后提供给别的系统进行使用。主要面向查询，一般不进行更新或者删除或者插入操作，因为里面数据都属于历史数据</p>



<h2 id="数据仓库中的数据模型">数据仓库中的数据模型</h2>

<ol>
<li>星型模型 <br>
最基本的数据模型，是搭建数据仓库的模型 <br>
<img src="https://img-blog.csdn.net/20161102173626318" alt="星形模型" title=""></li>
<li>雪花模型 <br>
适用于更复杂场景 <br>
<img src="https://img-blog.csdn.net/20161102173739839" alt="雪花模型" title=""></li>
</ol>



<h2 id="hive的体系结构">Hive的体系结构</h2>

<ul>
<li>Hadoop <br>
<ul><li>用HDFS进行存储，利用MapReduce进行计算</li></ul></li>
<li>Hive的元数据 <br>
<ul><li>Hive将元数据存储在数据库中（metastore），支持mysql，derby等数据库</li>
<li>Hive中的元数据包括表的名字，表的咧和分区及其属性，表的属性（是否为外部表等），表的数据所在目录等 <br>
<img src="https://img-blog.csdn.net/20161102173920277" alt="体系结构" title=""></li></ul></li>
</ul>



<h2 id="一条hql语句如何在hive中进行查询">一条HQL语句如何在hive中进行查询</h2>

<ul>
<li>解释器、编译器、优化器完成HQL查询语句从词法分析、语法分析、编译、优化以及查询计划（Plan）的生成。生成的查寻计划存储在HDFS中，并在随后有MapReduce调用执行 <br>
<img src="https://img-blog.csdn.net/20161102173817836" alt="执行过程" title=""></li>
</ul>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>