---
layout:     post
title:      Spark学习系列一
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p><strong>1、Spark 是什么？</strong></p>

<p>     Spark是一个快速的处理大规模数据的通用工具。它是一个基于<strong>内存计算框架</strong></p>

<p><strong>     </strong>包含核心组件-Spark Core、交互式查询-Spark SQL、准实时流式计算-Spark Streaming、机器学习-             Spark MLlib、图计       算-Spark GraphX</p>

<p> </p>

<p><strong>2、Spark产生的背景是什么？</strong></p>

<p>     1）MapReduce局限性</p>

<p>      1、仅支持Map和Reduce两种操作</p>

<p>      2、MapReduce处理效率低：<br>
         (1) Map阶段会将中间结果写入磁盘， Reduce阶段会将运算结果写入HDFS，多个MR任务之间通过HDFS交换数据<br>
         (2) 任务调度和启动开销大<br>
         (3) MapReduce无法充分利用内存<br>
         (4) Map阶段和Reduce阶段都需要对运算结果进行排序</p>

<p>      3、MapReduce不适合批处理（如机器学习、 图计算等）， 交互式处理（如数据挖掘）和流式处理（如日志分析）等</p>

<p>      4、MapReduce编程不够灵活</p>

<p>   2）处理数据的技术框架太杂太多        </p>

<p>         批处理：MapReduce、Hive、Pig</p>

<p>         流式计算：Storm</p>

<p>         交互式计算：presto，Impala</p>

<p>         能不能有一个能集大成者，把数据计算处理的天下统一？不然各种技术框架混战，不利于业界快速发展，开发维护学习成             本高。这时候需要一种集大成者出现，那就是Spark。</p>

<p><strong>3、Spark框架长啥样？</strong></p>

<p><strong>    </strong><img alt="" class="has" height="205" src="https://img-blog.csdn.net/20180724215129724?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpSVQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="373"><br>
 </p>

<ul><li>Spark Core：包含Spark的基本功能；尤其是定义RDD的API、操作以及这两者上的动作。其他Spark的库都是构建在RDD和Spark Core之上的</li>
	<li>Spark SQL：提供通过Apache Hive的SQL变体Hive查询语言（HiveQL）与Spark进行交互的API。每个数据库表被当做一个RDD，Spark SQL查询被转换为Spark操作。</li>
	<li>Spark Streaming：对实时数据流进行处理和控制。Spark Streaming允许程序能够像普通RDD一样处理实时数据</li>
	<li>MLlib：一个常用机器学习算法库，算法被实现为对RDD的Spark操作。这个库包含可扩展的学习算法，比如分类、回归等需要对大量数据集进行迭代的操作。</li>
	<li>GraphX：控制图、并行图操作和计算的一组算法和工具的集合。GraphX扩展了RDD API，包含控制图、创建子图、访问路径上所有顶点的操作</li>
</ul><p><img alt="" class="has" height="286" src="https://img-blog.csdn.net/20180724215248441?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpSVQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="624"></p>

<p> </p>

<p> </p>

<p> </p>            </div>
                </div>