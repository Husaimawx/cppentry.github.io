---
layout:     post
title:      初识Flume
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p align="left"></p>
<p align="left"></p>
<p align="left"><strong><span style="font-size:14px;"><span style="color:#444444;">一、</span><span style="color:#444444;">flume</span><span style="color:#444444;">简介</span></span></strong></p>
<p align="left"><strong><span style="font-size:14px;"><span style="color:#444444;">Flume</span><span style="color:#444444;">是</span><span style="color:#444444;">Cloudera</span><span style="color:#444444;">提供的日志收集系统，</span><span style="color:#444444;">Flume</span><span style="color:#444444;">支持在日志系统中定制各类数据发送方，用于收集数据</span><span style="color:#444444;">;</span><span style="color:#444444;">同时，</span><span style="color:#444444;">Flume</span><span style="color:#444444;">提供对数据进行简单处理，并写到各种</span><span style="color:#444444;">storage</span><span style="color:#444444;">。</span><span style="color:#444444;">Flume</span><span style="color:#444444;">是一个分布式、可靠、和高可用的海量日志采集、聚合和传输的系统。</span></span></strong></p>
<span style="font-size:14px;"><img src="" alt=""><br></span>
<p align="left"></p>
<p align="left"><span style="font-size:14px;"><span style="color:#444444;">上图的</span><span style="color:#444444;">Flume</span><span style="color:#444444;">的</span><span style="color:#444444;">Architecture</span><span style="color:#444444;">，在</span><span style="color:#444444;">Flume</span><span style="color:#444444;">中，最重要的抽象是</span><span style="color:#444444;">data
 flow(</span><span style="color:#444444;">数据流</span><span style="color:#444444;">)</span><span style="color:#444444;">，</span><span style="color:#444444;">data flow</span><span style="color:#444444;">描述了数据从产生，传输、处理并最终写入目标的一条路径。在上图中，实线描述了</span><span style="color:#444444;">data
 flow</span><span style="color:#444444;">。</span></span></p>
<p align="left"><span style="font-size:14px;"><span style="color:#444444;">其中，</span><span style="color:#444444;">Agent</span><span style="color:#444444;">用于采集数据，</span><span style="color:#444444;">agent</span><span style="color:#444444;">是</span><span style="color:#444444;">flume</span><span style="color:#444444;">中产生数据流的地方，同时，</span><span style="color:#444444;">agent</span><span style="color:#444444;">会将产生的数据流传输到</span><span style="color:#444444;">collector</span><span style="color:#444444;">。对应的，</span><span style="color:#444444;">collector</span><span style="color:#444444;">用于对数据进行聚合，往往会产生一个更大的流。</span></span></p>
<p align="left"><span style="font-size:14px;"><span style="color:#444444;">Flume</span><span style="color:#444444;">提供了从</span><span style="color:#444444;">console(</span><span style="color:#444444;">控制台</span><span style="color:#444444;">)</span><span style="color:#444444;">、</span><span style="color:#444444;">RPC(Thrift-RPC)</span><span style="color:#444444;">、</span><span style="color:#444444;">text(</span><span style="color:#444444;">文件</span><span style="color:#444444;">)</span><span style="color:#444444;">、</span><span style="color:#444444;">tail(UNIX
 tail)</span><span style="color:#444444;">、</span><span style="color:#444444;">syslog(syslog</span><span style="color:#444444;">日志系统，支持</span><span style="color:#444444;">TCP</span><span style="color:#444444;">和</span><span style="color:#444444;">UDP</span><span style="color:#444444;">等</span><span style="color:#444444;">2</span><span style="color:#444444;">种模式</span><span style="color:#444444;">)</span><span style="color:#444444;">，</span><span style="color:#444444;">exec(</span><span style="color:#444444;">命令执行</span><span style="color:#444444;">)</span><span style="color:#444444;">等数据源上收集数据的能力。同时，</span><span style="color:#444444;">Flume</span><span style="color:#444444;">的数据接受方，可以是</span><span style="color:#444444;">console(</span><span style="color:#444444;">控制台</span><span style="color:#444444;">)</span><span style="color:#444444;">、</span><span style="color:#444444;">text(</span><span style="color:#444444;">文件</span><span style="color:#444444;">)</span><span style="color:#444444;">、</span><span style="color:#444444;">dfs(HDFS</span><span style="color:#444444;">文件</span><span style="color:#444444;">)</span><span style="color:#444444;">、</span><span style="color:#444444;">RPC(Thrift-RPC)</span><span style="color:#444444;">和</span><span style="color:#444444;">syslogTCP(TCPsyslog</span><span style="color:#444444;">日志系统</span><span style="color:#444444;">)</span><span style="color:#444444;">等。</span></span></p>
<p align="left"><span style="font-size:14px;"><span style="color:#444444;">　　其中，收集数据有</span><span style="color:#444444;">2</span><span style="color:#444444;">种主要工作模式，如下：</span></span></p>
<p align="left"><span style="font-size:14px;"><span style="color:#444444;">Push Sources</span><span style="color:#444444;">：外部系统会主动地将数据推送到</span><span style="color:#444444;">Flume</span><span style="color:#444444;">中，如</span><span style="color:#444444;">RPC</span><span style="color:#444444;">、</span><span style="color:#444444;">syslog</span><span style="color:#444444;">。</span></span></p>
<p align="left"><span style="font-size:14px;"><span style="color:#444444;">Polling Sources</span><span style="color:#444444;">：</span><span style="color:#444444;">Flume</span><span style="color:#444444;">到外部系统中获取数据，一般使用轮询的方式，如</span><span style="color:#444444;">text</span><span style="color:#444444;">和</span><span style="color:#444444;">exec</span><span style="color:#444444;">。</span></span></p>
<p align="left"><strong><span style="font-size:14px;"><span style="color:#444444;">　　注意，在</span><span style="color:#444444;">Flume</span><span style="color:#444444;">中，</span><span style="color:#444444;">agent</span><span style="color:#444444;">和</span><span style="color:#444444;">collector</span><span style="color:#444444;">对应，而</span><span style="color:#444444;">source</span><span style="color:#444444;">和</span><span style="color:#444444;">sink</span><span style="color:#444444;">对应。</span><span style="color:#444444;">Source</span><span style="color:#444444;">和</span><span style="color:#444444;">sink</span><span style="color:#444444;">强调发送、接受方的特性</span><span style="color:#444444;">(</span><span style="color:#444444;">如数据格式、编码等</span><span style="color:#444444;">)</span><span style="color:#444444;">，而</span><span style="color:#444444;">agent</span><span style="color:#444444;">和</span><span style="color:#444444;">collector</span><span style="color:#444444;">关注功能。</span></span></strong></p>
<span style="font-size:14px;"><span style="color:#444444;">Flume Master</span><span style="color:#444444;">用于管理数据流的配置，如下图。</span><br></span>
<p align="left"><span style="color:#444444;"><span style="font-size:14px;"><img src="" alt=""><br></span></span></p>
<p align="left"><span style="color:#444444;"><span style="font-size:14px;"></span></span></p>
<p align="left"><span style="color:#444444;">为了保证可扩展性，</span><span style="color:#444444;">Flume</span><span style="color:#444444;">采用了多</span><span style="color:#444444;">Master</span><span style="color:#444444;">的方式。为了保证配置数据的一致性，</span><span style="color:#444444;">Flume</span><span style="color:#444444;">引入了</span><span style="color:#444444;">ZooKeeper</span><span style="color:#444444;">，用于保存配置数据，</span><span style="color:#444444;">ZooKeeper</span><span style="color:#444444;">本身可保证配置数据的一致性和高可用，另外，在配置数据发生变化时，</span><span style="color:#444444;">ZooKeeper</span><span style="color:#444444;">可以通知</span><span style="color:#444444;">Flume
 Master</span><span style="color:#444444;">节点。</span></p>
<p align="left"><span style="color:#444444;">Flume Master</span><span style="color:#444444;">间使用</span><span style="color:#444444;">gossip</span><span style="color:#444444;">协议同步数据。</span></p>
<p align="left"><span style="color:#444444;">　　下面简要分析</span><span style="color:#444444;">Flume</span><span style="color:#444444;">如何支持</span><span style="color:#444444;">Reliability</span><span style="color:#444444;">、</span><span style="color:#444444;">Scalability</span><span style="color:#444444;">、</span><span style="color:#444444;">Manageability</span><span style="color:#444444;">和</span><span style="color:#444444;">Extensibility</span><span style="color:#444444;">。</span></p>
<p align="left"><span style="color:#444444;">Reliability</span><span style="color:#444444;">：</span><span style="color:#444444;">Flume</span><span style="color:#444444;">提供</span><span style="color:#444444;">3</span><span style="color:#444444;">中数据可靠性选项，包括</span><span style="color:#444444;">End-to-end</span><span style="color:#444444;">、</span><span style="color:#444444;">Store
 on failure</span><span style="color:#444444;">和</span><span style="color:#444444;">Best effort</span><span style="color:#444444;">。其中</span><span style="color:#444444;">End-to-end</span><span style="color:#444444;">使用了磁盘日志和接受端</span><span style="color:#444444;">Ack</span><span style="color:#444444;">的方式，保证</span><span style="color:#444444;">Flume</span><span style="color:#444444;">接受到的数据会最终到达目的。</span><span style="color:#444444;">Store
 on failure</span><span style="color:#444444;">在目的不可用的时候，数据会保持在本地硬盘。和</span><span style="color:#444444;">End-to-end</span><span style="color:#444444;">不同的是，如果是进程出现问题，</span><span style="color:#444444;">Store on failure</span><span style="color:#444444;">可能会丢失部分数据。</span><span style="color:#444444;">Best
 effort</span><span style="color:#444444;">不做任何</span><span style="color:#444444;">QoS</span><span style="color:#444444;">保证。</span></p>
<p align="left"><span style="color:#444444;">Scalability</span><span style="color:#444444;">：</span><span style="color:#444444;">Flume</span><span style="color:#444444;">的</span><span style="color:#444444;">3</span><span style="color:#444444;">大组件：</span><span style="color:#444444;">collector</span><span style="color:#444444;">、</span><span style="color:#444444;">master</span><span style="color:#444444;">和</span><span style="color:#444444;">storage
 tier</span><span style="color:#444444;">都是可伸缩的。需要注意的是，</span><span style="color:#444444;">Flume</span><span style="color:#444444;">中对事件的处理不需要带状态，它的</span><span style="color:#444444;">Scalability</span><span style="color:#444444;">可以很容易实现。</span></p>
<p align="left"><span style="color:#444444;">Manageability</span><span style="color:#444444;">：</span><span style="color:#444444;">Flume</span><span style="color:#444444;">利用</span><span style="color:#444444;">ZooKeeper</span><span style="color:#444444;">和</span><span style="color:#444444;">gossip</span><span style="color:#444444;">，保证配置数据的一致性、高可用。同时，多</span><span style="color:#444444;">Master</span><span style="color:#444444;">，保证</span><span style="color:#444444;">Master</span><span style="color:#444444;">可以管理大量的节点。</span></p>
<p align="left"><span style="color:#444444;">Extensibility</span><span style="color:#444444;">：基于</span><span style="color:#444444;">Java</span><span style="color:#444444;">，用户可以为</span><span style="color:#444444;">Flume</span><span style="color:#444444;">添加各种新的功能，如通过继承</span><span style="color:#444444;">Source</span><span style="color:#444444;">，用户可以实现自己的数据接入方式，实现</span><span style="color:#444444;">Sink</span><span style="color:#444444;">的子类，用户可以将数据写往特定目标，同时，通过</span><span style="color:#444444;">SinkDecorator</span><span style="color:#444444;">，用户可以对数据进行一定的预处理。</span></p>
<p align="center"><span style="color:#444444;"> </span><span style="color:#444444;">注：以上介绍来自：</span><span style="color:#444444;">http://caibinbupt.iteye.com/blog/765960</span><span style="color:#444444;">，更多了解请参考</span><span style="color:#444444;">Flume</span><span style="color:#444444;">主页：</span><span style="color:#444444;">https://github.com/cloudera/flume/</span></p>
<p align="left"><strong><span style="color:#444444;">二、为什么选择</span><span style="color:#444444;">flume</span></strong></p>
<p align="left"><span style="color:#444444;">目前可选的开源日志收集项目有如下这些：</span><span style="color:#444444;">facebook</span><span style="color:#444444;">的</span><span style="color:#444444;">scribe</span><span style="color:#444444;">，</span><span style="color:#444444;">apache</span><span style="color:#444444;">的</span><span style="color:#444444;">chukwa</span><span style="color:#444444;">，</span><span style="color:#444444;">linkedin</span><span style="color:#444444;">的</span><span style="color:#444444;">kafka</span><span style="color:#444444;">和</span><span style="color:#444444;">cloudera</span><span style="color:#444444;">的</span><span style="color:#444444;">flume</span><span style="color:#444444;">，注：</span><span style="color:#444444;">flume</span><span style="color:#444444;">正逐步迁移到</span><span style="color:#444444;">apache</span><span style="color:#444444;">下。其他项目的介绍课参考各项目主页</span><span style="color:#444444;">:</span></p>
<p align="left"><span style="color:#444444;">scribe</span><span style="color:#444444;">主页：</span><span style="color:#444444;">https://github.com/facebook/scribe</span></p>
<p align="left"><span style="color:#444444;">chukwa</span><span style="color:#444444;">主页：</span><span style="color:#444444;">http://incubator.apache.org/chukwa/</span></p>
<p align="left"><span style="color:#444444;">kafka</span><span style="color:#444444;">主页：</span><span style="color:#444444;">http://sna-projects.com/kafka/</span></p>
<span style="color:#444444;">在此参考网友绘制的对比图表：</span><br><p align="left"><span style="color:#444444;"><span style="color:#444444;"><span style="font-size:14px;"><img src="" alt=""><br></span></span></span></p>
<p align="left"><span style="color:#444444;"><span style="color:#444444;"><span style="font-size:14px;"></span></span></span></p>
<p align="center"><span style="color:#444444;">（图表来自：</span><span style="color:#444444;">http://dongxicheng.org/search-engine/log-systems/</span><span style="color:#444444;">）</span></p>
<p align="left"><span style="color:#444444;">从上图中可以看出</span><span style="color:#444444;">flume</span><span style="color:#444444;">作为开源的日志收集项目比较优秀，使用广泛，参考资料比较多。整体设计架构提供了强大的可扩展性和丰富的自带插件。</span></p>
<p> </p>
<h2><span style="color:#993300;"><a href="http://www.blogjava.net/paulwong/archive/2013/10/31/405860.html" rel="nofollow"><span style="color:#993300;">FLUME</span><span style="color:#993300;">日志收集</span></a></span></h2>
<h1><span style="color:#993300;"> </span></h1>
<h2><span style="color:#993300;">一、</span><span style="color:#993300;">FLUME</span><span style="color:#993300;">介绍</span></h2>
<p><span style="color:#666666;">Flume</span><span style="color:#666666;">是一个分布式、可靠、和<em><strong>高可用</strong></em></span>的海量日志聚合的系统，支持在系统中定制各类数据发送方，用于收集数据；同时，<span style="color:#666666;">Flume</span><span style="color:#666666;">提供对数据进行简单处理，并写到各种数据接受方（可定制）的能力。</span></p>
<h2><span style="color:#993300;">设计目标：</span></h2>
<p><strong><span style="color:#666666;">(1) </span><span style="color:#666666;">可靠性</span></strong></p>
<p><span style="color:#666666;">当节点出现故障时，日志能够被传送到其他节点上而不会丢失。</span><span style="color:#666666;">Flume</span><span style="color:#666666;">提供了三种级别的可靠性保障，从强到弱依次分别为：</span><span style="color:#888888;">end-to-end</span><span style="color:#666666;">（收到数据</span><span style="color:#666666;">agent</span><span style="color:#666666;">首先将</span><span style="color:#666666;">event</span><span style="color:#666666;">写到磁盘上，当数据传送成功后，再删除；如果数据发送失败，可以重新发送。），</span><span style="color:#888888;">Storeon
 failure</span><span style="color:#666666;">（这也是</span><span style="color:#666666;">scribe</span><span style="color:#666666;">采用的策略，当数据接收方</span><span style="color:#666666;">crash</span><span style="color:#666666;">时，将数据写到本地，待恢复后，继续发送），</span><span style="color:#888888;">Besteffort</span><span style="color:#666666;">（数据发送到接收方后，不会进行确认）。</span></p>
<p><strong><span style="color:#666666;">(2) </span><span style="color:#666666;">可扩展性</span></strong></p>
<p><span style="color:#666666;">Flume</span><span style="color:#666666;">采用了三层架构，分别为</span><span style="color:#888888;">agent</span><span style="color:#888888;">，</span><span style="color:#888888;">collector</span><span style="color:#888888;">和</span><span style="color:#888888;">storage</span><span style="color:#666666;">，每一层均可以水平扩展。其中，所有</span><span style="color:#666666;">agent</span><span style="color:#666666;">和</span><span style="color:#666666;">collector</span><span style="color:#666666;">由</span><span style="color:#666666;">master</span><span style="color:#666666;">统一管理，这使得系统容易监控和维护，且</span><span style="color:#666666;">master</span><span style="color:#666666;">允许有多个（使用</span><span style="color:#666666;">ZooKeeper</span><span style="color:#666666;">进行管理和负载均衡），这就避免了单点故障问题。</span></p>
<p><strong><span style="color:#666666;">(3) </span><span style="color:#666666;">可管理性</span></strong></p>
<p><span style="color:#888888;">所有</span><span style="color:#888888;">agent</span><span style="color:#888888;">和</span><span style="color:#888888;">colletor</span><span style="color:#888888;">由</span><span style="color:#888888;">master</span><span style="color:#888888;">统一管理</span><span style="color:#666666;">，这使得系统便于维护。多</span><span style="color:#666666;">master</span><span style="color:#666666;">情况，</span><span style="color:#666666;">Flume</span><span style="color:#666666;">利用</span><span style="color:#666666;">ZooKeeper</span><span style="color:#666666;">和</span><span style="color:#666666;">gossip</span><span style="color:#666666;">，保证动态配置数据的一致性。用户可以在</span><span style="color:#666666;">master</span><span style="color:#666666;">上查看各个数据源或者数据流执行情况，且可以对各个数据源配置和动态加载。</span><span style="color:#666666;">Flume</span><span style="color:#666666;">提供了</span><span style="color:#666666;">web
</span><span style="color:#666666;">和</span><span style="color:#666666;">shellscript command</span><span style="color:#666666;">两种形式对数据流进行管理。</span></p>
<p><strong><span style="color:#666666;">(4) </span><span style="color:#666666;">功能可扩展性</span></strong></p>
<p><span style="color:#666666;">用户可以根据需要添加自己的</span><span style="color:#666666;">agent</span><span style="color:#666666;">，</span><span style="color:#666666;">collector</span><span style="color:#666666;">或者</span><span style="color:#666666;">storage</span><span style="color:#666666;">。此外，</span><span style="color:#666666;">Flume</span><span style="color:#666666;">自带了很多组件，包括各种</span><span style="color:#666666;">agent</span><span style="color:#666666;">（</span><span style="color:#666666;">file</span><span style="color:#666666;">，</span><span style="color:#666666;">
 syslog</span><span style="color:#666666;">等），</span><span style="color:#666666;">collector</span><span style="color:#666666;">和</span><span style="color:#666666;">storage</span><span style="color:#666666;">（</span><span style="color:#666666;">file</span><span style="color:#666666;">，</span><span style="color:#666666;">HDFS</span><span style="color:#666666;">等）。</span></p>
<p><span style="color:#666666;"> </span></p>
<h2><span style="color:#993300;">二、</span><span style="color:#993300;">FLUME</span><span style="color:#993300;">架构</span></h2>
<span style="color:#666666;">flume</span><span style="color:#666666;">的逻辑架构：、</span><br><p align="left"><span style="color:#444444;"><span style="color:#444444;"><span style="color:#666666;"><span style="font-size:14px;"><img src="" alt=""><br></span></span></span></span></p>
<p align="left"><span style="color:#444444;"><span style="color:#444444;"><span style="color:#666666;"><span style="font-size:14px;"></span></span></span></span></p>
<p><span style="color:#666666;">正如前面提到的，</span><span style="color:#666666;">Flume</span><span style="color:#666666;">采用了<strong>分层架构：分别为</strong></span><strong><span style="color:#666666;">agent</span><span style="color:#666666;">，</span><span style="color:#666666;">collector</span><span style="color:#666666;">和</span><span style="color:#666666;">storage</span></strong><span style="color:#666666;">。其中，</span><span style="color:#666666;">agent</span><span style="color:#666666;">和</span><span style="color:#666666;">collector</span><span style="color:#666666;">均由两部分组成：</span><strong><span style="color:#888888;">source</span><span style="color:#888888;">和</span><span style="color:#888888;">sink</span><span style="color:#888888;">，</span><span style="color:#888888;">source</span><span style="color:#888888;">是数据来源，</span><span style="color:#888888;">sink</span><span style="color:#888888;">是数据去向</span></strong><span style="color:#666666;">。</span></p>
<p><strong><span style="color:#666666;">Flume</span><span style="color:#666666;">使用两个组件：</span><span style="color:#666666;">Master</span><span style="color:#666666;">和</span><span style="color:#666666;">Node</span><span style="color:#666666;">，</span><span style="color:#666666;">Node</span><span style="color:#666666;">根据在</span><span style="color:#666666;">Mastershell</span><span style="color:#666666;">或</span><span style="color:#666666;">web</span><span style="color:#666666;">中动态配置，决定其是作为</span><span style="color:#666666;">Agent</span><span style="color:#666666;">还是</span><span style="color:#666666;">Collector</span><span style="color:#666666;">。</span></strong></p>
<div>
<h3><strong><span style="color:#333333;">(1)agent</span></strong></h3>
</div>
<p><span style="color:#666666;">agent</span><span style="color:#666666;">的作用是将数据源的数据发送给</span><span style="color:#666666;">collector</span><span style="color:#666666;">。</span></p>
<p><span style="color:#666666;">Flume</span><span style="color:#666666;">自带了很多直接可用的数据源（</span><strong><span style="color:#666666;">source</span></strong><span style="color:#666666;">），如：</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">text(“filename”)</span><span style="color:#494949;">：将文件</span><span style="color:#494949;">filename</span><span style="color:#494949;">作为数据源，按行发送</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">tail(“filename”)</span><span style="color:#494949;">：探测</span><span style="color:#494949;">filename</span><span style="color:#494949;">新产生的数据，按行发送出去</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">fsyslogTcp(5140)</span><span style="color:#494949;">：监听</span><span style="color:#494949;">TCP</span><span style="color:#494949;">的</span><span style="color:#494949;">5140</span><span style="color:#494949;">端口，并且接收到的数据发送出去</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">tailDir("<em>dirname</em>"[,fileregex=".*"[, startFromEnd=false[, recurseDepth=0]]])</span><span style="color:#494949;">：监听目录中的文件末尾，使用正则去选定需要监听的文件（不包含目录），</span><span style="color:#494949;">recurseDepth</span><span style="color:#494949;">为递归监听其下子目录的深度</span></p>
<p><span style="color:#666666;">更多可参见这位朋友的整理：</span><span style="color:#666666;"><a href="http://www.cnblogs.com/zhangmiao-chp/archive/2011/05/18/2050465.html" rel="nofollow"><span style="color:#494949;">http://www.cnblogs.com/zhangmiao-chp/archive/2011/05/18/2050465.html</span></a></span></p>
<p><span style="color:#666666;">同时提供了很多</span><strong><span style="color:#666666;">sink</span></strong><span style="color:#666666;">，如：</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">console[("format")]
</span><span style="color:#494949;">：直接将将数据显示在</span><span style="color:#494949;">consolr</span><span style="color:#494949;">上</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">text(“txtfile”)</span><span style="color:#494949;">：将数据写到文件</span><span style="color:#494949;">txtfile</span><span style="color:#494949;">中</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">dfs(“dfsfile”)</span><span style="color:#494949;">：将数据写到</span><span style="color:#494949;">HDFS</span><span style="color:#494949;">上的</span><span style="color:#494949;">dfsfile</span><span style="color:#494949;">文件中</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">syslogTcp(“host”,port)</span><span style="color:#494949;">：将数据通过</span><span style="color:#494949;">TCP</span><span style="color:#494949;">传递给</span><span style="color:#494949;">host</span><span style="color:#494949;">节点</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">agentSink[("machine"[,port])]</span><span style="color:#494949;">：等价于</span><span style="color:#494949;">agentE2ESink</span><span style="color:#494949;">，如果省略，</span><span style="color:#494949;">machine</span><span style="color:#494949;">参数，默认使用</span><span style="color:#494949;">flume.collector.event.host</span><span style="color:#494949;">与</span><span style="color:#494949;">flume.collector.event.port</span><span style="color:#494949;">作为默认</span><span style="color:#494949;">collecotr</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">agentDFOSink[("machine"[,port])]</span><span style="color:#494949;">：本地热备</span><span style="color:#494949;">agent</span><span style="color:#494949;">，</span><span style="color:#494949;">agent</span><span style="color:#494949;">发现</span><span style="color:#494949;">collector</span><span style="color:#494949;">节点故障后，不断检查</span><span style="color:#494949;">collector</span><span style="color:#494949;">的存活状态以便重新发送</span><span style="color:#494949;">event</span><span style="color:#494949;">，在此间产生的数据将缓存到本地磁盘中</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">agentBESink[("machine"[,port])]</span><span style="color:#494949;">：不负责的</span><span style="color:#494949;">agent</span><span style="color:#494949;">，如果</span><span style="color:#494949;">collector</span><span style="color:#494949;">故障，将不做任何处理，它发送的数据也将被直接丢弃</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">agentE2EChain</span><span style="color:#494949;">：指定多个</span><span style="color:#494949;">collector</span><span style="color:#494949;">提高可用性。</span><span style="color:#494949;">当向主</span><span style="color:#494949;">collector</span><span style="color:#494949;">发送</span><span style="color:#494949;">event</span><span style="color:#494949;">失效后，转向第二个</span><span style="color:#494949;">collector</span><span style="color:#494949;">发送，当所有的</span><span style="color:#494949;">collector</span><span style="color:#494949;">失败后，它会非常执着的再来一遍</span></p>
<p><span style="color:#666666;">更多可参见这位朋友的整理：</span><span style="color:#666666;"><a href="http://www.cnblogs.com/zhangmiao-chp/archive/2011/05/18/2050472.html" rel="nofollow"><span style="color:#494949;">http://www.cnblogs.com/zhangmiao-chp/archive/2011/05/18/2050472.html</span></a></span></p>
<div>
<h3><strong><span style="color:#333333;">(2)collector</span></strong></h3>
</div>
<p><span style="color:#666666;">collector</span><span style="color:#666666;">的作用是将多个</span><span style="color:#666666;">agent</span><span style="color:#666666;">的数据汇总后，加载到</span><span style="color:#666666;">storage</span><span style="color:#666666;">中。</span></p>
<p><span style="color:#666666;">它的</span><span style="color:#666666;">source</span><span style="color:#666666;">和</span><span style="color:#666666;">sink</span><span style="color:#666666;">与</span><span style="color:#666666;">agent</span><span style="color:#666666;">类似。</span></p>
<p><span style="color:#666666;">数据源（</span><strong><span style="color:#666666;">source</span></strong><span style="color:#666666;">），如：</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">collectorSource[(<em>port</em>)]</span><span style="color:#494949;">：</span><span style="color:#494949;">Collector source</span><span style="color:#494949;">，监听端口汇聚数据</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">autoCollectorSource</span><span style="color:#494949;">：通过</span><span style="color:#494949;">master</span><span style="color:#494949;">协调物理节点自动汇聚数据</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">logicalSource</span><span style="color:#494949;">：逻辑</span><span style="color:#494949;">source</span><span style="color:#494949;">，由</span><span style="color:#494949;">master</span><span style="color:#494949;">分配端口并监听</span><span style="color:#494949;">rpcSink</span></p>
<p><strong><span style="color:#666666;">sink</span><span style="color:#666666;">，如：</span></strong></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">collectorSink("fsdir","fsfileprefix",rollmillis)</span><span style="color:#494949;">：</span><span style="color:#494949;">collectorSink</span><span style="color:#494949;">，数据通过</span><span style="color:#494949;">collector</span><span style="color:#494949;">汇聚之后发送到</span><span style="color:#494949;">hdfs,
 fsdir </span><span style="color:#494949;">是</span><span style="color:#494949;">hdfs</span><span style="color:#494949;">目录，</span><span style="color:#494949;">fsfileprefix</span><span style="color:#494949;">为文件前缀码</span></p>
<p align="left"><span style="color:#494949;">·        </span><span style="color:#494949;">customdfs("hdfspath"[,"format"])</span><span style="color:#494949;">：自定义格式</span><span style="color:#494949;">dfs</span></p>
<div>
<h3><strong><span style="color:#333333;">(3) </span></strong><span style="color:#333333;">storage</span></h3>
</div>
<p><span style="color:#666666;">storage</span><span style="color:#666666;">是存储系统，可以是一个普通</span><span style="color:#666666;">file</span><span style="color:#666666;">，也可以是</span><span style="color:#666666;">HDFS</span><span style="color:#666666;">，</span><span style="color:#666666;">HIVE</span><span style="color:#666666;">，</span><span style="color:#666666;">HBase</span><span style="color:#666666;">，分布式存储等。</span></p>
<div>
<h3><strong><span style="color:#333333;">(4) </span></strong><span style="color:#333333;">Master</span></h3>
</div>
<p><span style="color:#666666;">Master</span><span style="color:#666666;">是管理协调</span><span style="color:#666666;">agent</span><span style="color:#666666;">和</span><span style="color:#666666;">collector</span><span style="color:#666666;">的配置等信息，是</span><span style="color:#666666;">flume</span><span style="color:#666666;">集群的控制器。</span></p>
<p><span style="color:#666666;"> </span></p>
<span style="color:#666666;">在</span><span style="color:#666666;">Flume</span><span style="color:#666666;">中，最重要的抽象是</span><span style="color:#666666;">data flow</span><span style="color:#666666;">（数据流），</span><span style="color:#666666;">dataflow</span><span style="color:#666666;">描述了数据从产生，传输、处理并最终写入目标的一条路径。</span><br><p align="left"><span style="color:#444444;"><span style="color:#444444;"><span style="color:#666666;"><span style="color:#666666;"><span style="font-size:14px;"><img src="" alt=""><br></span></span></span></span></span></p>
<p align="left"><span style="color:#444444;"><span style="color:#444444;"><span style="color:#666666;"><span style="color:#666666;"></span></span></span></span></p>
<p align="left"><span style="font-size:14px;"><span style="color:#494949;">1.  </span><span style="color:#494949;">对于</span><span style="color:#494949;">agent</span><span style="color:#494949;">数据流配置就是从哪得到数据，把数据发送到哪个</span><span style="color:#494949;">collector</span><span style="color:#494949;">。</span></span></p>
<p align="left"><span style="font-size:14px;"><span style="color:#494949;">2.  </span><span style="color:#494949;">对于</span><span style="color:#494949;">collector</span><span style="color:#494949;">是接收</span><span style="color:#494949;">agent</span><span style="color:#494949;">发过来的数据，把数据发送到指定的目标机器上。</span></span></p>
<p><strong><span style="font-size:14px;"><span style="color:#666666;">注：</span><span style="color:#666666;">Flume</span><span style="color:#666666;">框架对</span><span style="color:#666666;">hadoop</span><span style="color:#666666;">和</span><span style="color:#666666;">zookeeper</span><span style="color:#666666;">的依赖只是在</span><span style="color:#666666;">jar</span><span style="color:#666666;">包上，并不要求</span><span style="color:#666666;">flume</span><span style="color:#666666;">启动时必须将</span><span style="color:#666666;">hadoop</span><span style="color:#666666;">和</span><span style="color:#666666;">zookeeper</span><span style="color:#666666;">服务也启动。</span></span></strong></p>
<p><span style="font-size:14px;"> </span></p>
<p><strong><span style="font-size:14px;">其他配置以及相关资料，可参见博客：</span></strong></p>
<p><strong><span style="font-size:14px;">http://blog.csdn.net/wulantian/article/details/46341135</span></strong></p>
<br>            </div>
                </div>