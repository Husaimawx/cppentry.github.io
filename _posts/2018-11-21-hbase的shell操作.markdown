---
layout:     post
title:      hbase的shell操作
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：					https://blog.csdn.net/JENREY/article/details/79746956				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <h3>1.进入 hbase</h3><p> <span style="color:#ff0000;">   hbase shell </span><br></p><p>在你安装的随意台服务器节点上，执行命令：hbase shell，会进入到你的 hbase shell 客户端[root@hadoop02 ~]# hbase shell<br></p><h3>2.帮助命令相关</h3><p>    <span style="color:#ff0000;">help</span> 获取所有命令提示</p><p>    <span style="color:#ff0000;">help "dml"</span> 获取一组命令的提示</p><p>    <span style="color:#ff0000;">help "put" </span>获取一个单独命令的提示帮助</p><h3>3.显示 hbase 中的表</h3><p>   <span style="color:#ff0000;"> list</span></p><p><span style="color:#ff0000;">    查看当前stu表的列簇的所有详细信息<br></span></p><p><span style="color:#ff0000;">    desc 'stu'<br></span></p><h3>4.退出 hbase shell 客户端</h3><p> <span style="color:#ff0000;">   exit </span><br></p><h3>5.创建表---create</h3><p>创建 user 表，包含 info、data 两个列簇</p><p>    <span style="color:#ff0000;">create 'user', 'info1', 'data1'</span></p><p><span style="color:#ff0000;">    create 'user', {NAME =&gt; 'info', VERSIONS =&gt; '3'}</span><br></p><h3>6.向表中插入信息---put</h3><p>向 user 表中插入信息，row key 为 rk0001，列簇 info 中添加 name 列标示符，值为 zhangsan</p><p>    put 'user', 'rk0001', 'info:name', 'zhangsan'<br></p><h3>7.获取信息---get</h3><p>获取 user 表中 row key 为 rk0001 的所有信息</p><p>    <span style="color:#ff0000;">get 'user', 'rk0001'</span></p><p>获取 user 表中 row key 为 rk0001，info 列簇的所有信息</p><p>    <span style="color:#ff0000;">get 'user', 'rk0001', 'info'</span></p><p>获取 user 表中 row key 为 rk0001，info 列簇的 name、age 列标示符的信息</p><p>   <span style="color:#ff0000;"> get 'user', 'rk0001', 'info:name', 'info:age'</span><br></p><p>获取 user 表中 row key 为 rk0001，info、data 列簇的信息</p><p>    <span style="color:#ff0000;">get 'user', 'rk0001', 'info', 'data'</span></p><p><span style="color:#ff0000;">    get 'user', 'rk0001', {COLUMN =&gt; ['info', 'data']}</span></p><p><span style="color:#ff0000;">    get 'user', 'rk0001', {COLUMN =&gt; ['info:name', 'data:pic']}</span><br></p><p>获取 user 表中 row key 为 rk0001，列簇为 info，版本号最新 5 个的信息</p><p>   <span style="color:#ff0000;"> get 'user', 'rk0001', {COLUMN =&gt; 'info', VERSIONS =&gt; 2}</span></p><p><span style="color:#ff0000;">    get 'user', 'rk0001', {COLUMN =&gt; 'info:name', VERSIONS =&gt; 5}</span></p><p><span style="color:#ff0000;">    get 'user', 'rk0001', {COLUMN =&gt; 'info:name', VERSIONS =&gt; 5, TIMERANGE =&gt;[1392368783980, 1392380169184]}</span><br></p><p>获取 user 表中 row key 为 rk0001，cell 的值为 zhangsan 的信息</p><p>    <span style="color:#ff0000;">get 'people', 'rk0001', {FILTER =&gt; "ValueFilter(=, 'binary:图片')"}</span><br></p><p>获取 user 表中 row key 为 rk0001，列标示符中含有 a 的信息</p><p>   <span style="color:#ff0000;"> get 'people', 'rk0001', {FILTER =&gt; "(QualifierFilter(=,'substring:a'))"}</span></p><h3>8.获取信息---scan</h3><p>查询 user 表中的所有信息</p><p>   <span style="color:#ff0000;"> scan 'user'</span></p><p>查询 user 表中列簇为 info 的信息</p><p>    <span style="color:#ff0000;">scan 'user', {COLUMNS =&gt; 'info'}</span></p><p><span style="color:#ff0000;">    scan 'user', {COLUMNS =&gt; 'info', RAW =&gt; true, VERSIONS =&gt; 5}</span></p><p><span style="color:#ff0000;">    scan 'persion', {COLUMNS =&gt; 'info', RAW =&gt; true, VERSIONS =&gt; 3}</span></p><p> Scan 时可以设置是否开启 Raw 模式，开启 Raw 模式会返回包括已添加删除标记但是未实际删除的数据。<br></p><p>查询 user 表中列簇为 info 和 data 的信息</p><p>   <span style="color:#ff0000;"> scan 'user', {COLUMNS =&gt; ['info', 'data']}</span></p><p><span style="color:#ff0000;">    scan 'user', {COLUMNS =&gt; ['info:name', 'data:pic']}</span></p><p>查询 user 表中列簇为 info、列标示符为 name 的信息</p><p>   <span style="color:#ff0000;"> scan 'user', {COLUMNS =&gt; 'info:name'}</span></p><p>查询 user 表中列簇为 info、列标示符为 name 的信息,并且版本最新的 5 个</p><p>   <span style="color:#ff0000;"> scan 'user', {COLUMNS =&gt; 'info:name', VERSIONS =&gt; 5}</span></p><p>查询 user 表中列簇为 info 和 data 且列标示符中含有 a 字符的信息</p><p>  <span style="color:#ff0000;">  scan 'user', {COLUMNS =&gt; ['info', 'data'], FILTER =&gt; "(QualifierFilter(=,'substring:a'))"}</span></p><p>查询 user 表中列簇为 info，rk 范围是[rk0001, rk0003)的数据</p><p>    <span style="color:#ff0000;">scan 'people', {COLUMNS =&gt; 'info', STARTROW =&gt; 'rk0001', ENDROW =&gt; 'rk0003'}</span></p><p>查询 user 表中 row key 以 rk 字符开头的</p><p>   <span style="color:#ff0000;"> scan 'user',{FILTER=&gt;"PrefixFilter('rk')"}</span></p><p>查询 user 表中指定范围的数据</p><p>    <span style="color:#ff0000;">scan 'user', {TIMERANGE =&gt; [1392368783980, 1392380169184]}</span><br></p><h3>9.删除数据---delete</h3><p>删除 user 表 row key 为 rk0001，列标示符为 info:name 的数据<br></p><p>   <span style="color:#ff0000;"> delete 'people', 'rk0001', 'info:name'</span></p><p>删除 user 表 row key 为 rk0001，列标示符为 info:name，timestamp 为 1392383705316 的数据</p><p>    <span style="color:#ff0000;">delete 'user', 'rk0001', 'info:name', 1392383705316</span><br></p><h3>10.清空表的数据---truncate</h3><p>清空 user 表中的数据<br></p><p>    <span style="color:#ff0000;">truncate 'people'</span><br></p><h3>11.修改表结构相关</h3><p>首先<strong>停用 user 表</strong>（新版本不用）---<strong><span style="font-size:18px;">disable</span></strong></p><p>    <span style="color:#ff0000;">disable 'user'</span></p><p><strong>添加</strong>两个<strong>列簇</strong> f1 和 f2----<strong><span style="font-size:18px;">alter</span></strong></p><p>    <span style="color:#ff0000;">alter 'people', NAME =&gt; 'f1'</span></p><p><span style="color:#ff0000;">    alter 'user', NAME =&gt; 'f2'</span></p><p><strong>启用表</strong>---<strong><span style="font-size:18px;">enable</span></strong></p><p>    <span style="color:#ff0000;">enable 'user'</span></p><p><strong>删除一个列簇：</strong></p><p>   <span style="color:#ff0000;"> disable 'user'(新版本不用)</span></p><p><span style="color:#ff0000;">    alter 'user', NAME =&gt; 'f1', METHOD =&gt; 'delete' 或 alter 'user', 'delete' =&gt; 'f1'</span><br></p><p>添加列簇 f1 同时删除列簇 f2</p><p>  <span style="color:#ff0000;">  alter 'user', {NAME =&gt; 'f1'}, {NAME =&gt; 'f2', METHOD =&gt; 'delete'}</span></p><p>将 user 表的 f1 列簇版本号改为 5</p><p>    <span style="color:#ff0000;">alter 'people', NAME =&gt; 'info', VERSIONS =&gt; 5</span><br></p><p>启用表</p><p>   <span style="color:#ff0000;"> enable 'user'</span></p><p>删除记录</p><p>    <span style="color:#ff0000;">delete 'person', 'rk0001', 'info:name'</span></p><p>删除字段</p><p>  <span style="color:#ff0000;">  delete 'person', 'rk0001', 'info:name'</span></p><p>删除表</p><p>    <span style="color:#ff0000;">disable 'user'</span></p><p><span style="color:#ff0000;">    drop 'user'</span><br></p><p><span style="color:#ff0000;"><img src="https://img-blog.csdn.net/20180329194936138?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pFTlJFWQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""><br></span></p><h3>12.过滤器</h3><p>get 'person', 'rk0001', {FILTER =&gt; "ValueFilter(=, 'binary:中国')"}</p><p>get 'person', 'rk0001', {FILTER =&gt; "(QualifierFilter(=,'substring:a'))"}<br></p><p>scan 'person', {COLUMNS =&gt; 'info:name'}<br></p><p>scan 'person', {COLUMNS =&gt; ['info', 'data'], FILTER =&gt; "(QualifierFilter(=,'substring:a'))"}<br></p><p>scan 'person', {COLUMNS =&gt; 'info', STARTROW =&gt; 'rk0001', ENDROW =&gt; 'rk0003'}<br></p><p>scan 'person', {COLUMNS =&gt; 'info', STARTROW =&gt; '20140201', ENDROW =&gt; '20140301'}<br></p><p>scan 'person', {COLUMNS =&gt; 'info:name', TIMERANGE =&gt; [1395978233636,1395987769587]}<br></p><p>alter 'person', NAME =&gt; 'ffff'<br></p><p>alter 'person', NAME =&gt; 'info', VERSIONS =&gt; 10<br></p><p>get 'user', 'rk0002', {COLUMN =&gt; ['info:name', 'data:pic']}<br></p><p></p>            </div>
                </div>