---
layout:     post
title:      复习总结01：Hadoop
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/u014253445/article/details/77718119				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
一、关于设置hdfs</div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
①获取hdfs文件系统</div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<div>
<div class="wiz-code-container" id="wiz_cm_1502506797332_9149">
<div class="CodeMirror CodeMirror-wrap cm-s-eclipse" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;background:rgb(245,245,245);">
<div style="overflow:hidden;width:3px;">
<textarea cols="22" rows="3"></textarea></div><div class="CodeMirror-scroll" style="overflow:hidden !important;"><div class="CodeMirror-sizer" style="border-right:30px solid transparent;min-height:54px;"><div><div class="CodeMirror-lines" style="min-height:1px;"><div><div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;"><pre style="border-width:0px;background:transparent;font-family:inherit;line-height:inherit;color:inherit;z-index:2;overflow:visible;"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;"><div></div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;"><div></div></div></div><div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;"></div><div style="z-index:1;"></div><div class="CodeMirror-code"><div class="CodeMirror-activeline"><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="z-index:4;width:30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="z-index:4;background:none !important;border:none !important;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">1</div></div><pre class="CodeMirror-line" style="border-width:0px;background:transparent;font-family:inherit;line-height:inherit;color:inherit;z-index:2;overflow:visible;"><span><span class="cm-variable">Configuration</span> <span class="cm-variable">configuration</span> <span class="cm-operator">=</span> <span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">new</span> <span class="cm-variable">Configuration</span>();</span></pre></div><div><div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">2</div></div><pre class="CodeMirror-line" style="border-width:0px;background:transparent;font-family:inherit;line-height:inherit;color:inherit;z-index:2;overflow:visible;"><span><span class="cm-variable">FileSystem</span> <span class="cm-variable">fSystem</span> <span class="cm-operator">=</span> <span class="cm-variable">fSystem</span> <span class="cm-operator">=</span> <span class="cm-variable">FileSystem</span>.<span class="cm-variable">get</span>(<span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">new</span> <span class="cm-variable">URI</span>(<span class="cm-string" style="color:rgb(42,0,255);">"hdfs://server:9000"</span>), <span class="cm-variable">configuration</span>, <span class="cm-string" style="color:rgb(42,0,255);">"hadoop"</span>);</span></pre></div></div></div></div></div></div><div style="width:1px;border-bottom:0px solid transparent;"></div><div class="CodeMirror-gutters" style="border-right:1px solid rgb(221,221,221);background-color:rgb(247,247,247);min-height:100%;z-index:3;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="display:inline-block;vertical-align:top;width:29px;"></div></div></div></div></div></div><pre style="background-color:rgb(255,255,255);font-family:Consolas;"><span style="font-family:'微软雅黑';">备注：</span><span style="color:rgb(255,0,0);font-family:'微软雅黑';">抛出异常Exception；直接操作hdfs上的文件，需要输入用户名，而提交Job等不需要输入用户名。</span></pre><pre style="background-color:rgb(255,255,255);font-family:Consolas;"><span style="color:rgb(255,0,0);"><span style="font-family:'微软雅黑';">或者</span><span style="color:rgb(0,0,0);font-family:'微软雅黑';"><span style="color:rgb(255,0,0);">Run Configuration 的Environment variables HADOOP_USER_NAME hadoop</span></span></span></pre>②单元测试</div><div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">@before  标识的函数 A----&gt;对某函数B进行单元测试前必须先执行的函数A</div><div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">@Test  被测试的函数 B</div><div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;"><br></div><div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;"><div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;"><span>二、运行模式</span></div><div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;"><span></span><div></div><div><br></div></div><div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;"><div><span style="font-family:Consolas;"><span style="font-family:'微软雅黑';">/***********设定本地测试模式 输入输出文件，，在本地或者集群*************/</span></span></div></div><div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;"></div><div class="wiz-code-container" id="wiz_cm_1502520727207_3182"><div class="CodeMirror CodeMirror-wrap cm-s-eclipse" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;background:rgb(245,245,245);"><div style="overflow:hidden;width:3px;"><textarea cols="22" rows="3"></textarea></div>
<div class="CodeMirror-scroll" style="overflow:hidden !important;">
<div class="CodeMirror-sizer" style="border-right:30px solid transparent;min-height:514px;">
<div>
<div class="CodeMirror-lines" style="min-height:1px;">
<div>
<div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;">
<pre></pre>
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;">
<div></div>
</div>
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;">
<div></div>
</div>
</div>
<div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;">
</div>
<div style="z-index:1;"></div>
<div class="CodeMirror-code">
<div class="CodeMirror-activeline">
<div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="z-index:4;width:30px;">
</div>
<div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
1</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">Configuration</span> <span class="cm-variable">conf</span> <span class="cm-operator">=</span> <span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">new</span> <span class="cm-variable">Configuration</span>();</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
2</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">Job</span> <span class="cm-variable">job</span> <span class="cm-operator">=</span> <span class="cm-variable">Job</span>.<span class="cm-variable">getInstance</span>(<span class="cm-variable">conf</span>);</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
3</div>
</div>
<pre class="CodeMirror-line"><span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
4</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">job</span>.<span class="cm-variable">setJarByClass</span>(<span class="cm-variable">WordCountDriver</span>.<span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">class</span>);</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
5</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">job</span>.<span class="cm-variable">setMapperClass</span>(<span class="cm-variable">WordCountMapper</span>.<span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">class</span>);</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
6</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">job</span>.<span class="cm-variable">setReducerClass</span>(<span class="cm-variable">WordCountReducer</span>.<span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">class</span>);</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
7</div>
</div>
<pre class="CodeMirror-line"><span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
8</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">job</span>.<span class="cm-variable">setMapOutputKeyClass</span>(<span class="cm-variable">Text</span>.<span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">class</span>);</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
9</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">job</span>.<span class="cm-variable">setMapOutputValueClass</span>(<span class="cm-variable">IntWritable</span>.<span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">class</span>);</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
10</div>
</div>
<pre class="CodeMirror-line"><span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
11</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">job</span>.<span class="cm-variable">setOutputKeyClass</span>(<span class="cm-variable">Text</span>.<span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">class</span>);</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
12</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">job</span>.<span class="cm-variable">setOutputValueClass</span>(<span class="cm-variable">IntWritable</span>.<span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">class</span>);</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
13</div>
</div>
<pre class="CodeMirror-line"><span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
14</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-comment" style="color:rgb(63,127,95);">//输入输出的文件都在本地，适合来测试代码可靠性</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
15</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">FileInputFormat</span>.<span class="cm-variable">setInputPaths</span>(<span class="cm-variable">job</span>, <span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">new</span> <span class="cm-variable">Path</span>(<span class="cm-string" style="color:rgb(42,0,255);">"d:/a.txt"</span>));   <span class="cm-comment" style="color:rgb(63,127,95);">//执行本地模式</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
16</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">FileOutputFormat</span>.<span class="cm-variable">setOutputPath</span>(<span class="cm-variable">job</span>, <span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">new</span> <span class="cm-variable">Path</span>(<span class="cm-string" style="color:rgb(42,0,255);">"d:/a_out"</span>));  <span class="cm-comment" style="color:rgb(63,127,95);">//路径必须是新的</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
17</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-comment" style="color:rgb(63,127,95);">//将上两句设置为以下两句即可 实现：输入输出的文件都在集群，在本地运行，实际中大文件传输耗损！不能发挥云计算的优点</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
18</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">FileInputFormat</span>.<span class="cm-variable">setInputPaths</span>(<span class="cm-variable">job</span>, <span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">new</span> <span class="cm-variable">Path</span>(<span class="cm-string" style="color:rgb(42,0,255);">"hdfs://server:9000/a.txt"</span>));</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
19</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">FileOutputFormat</span>.<span class="cm-variable">setOutputPath</span>(<span class="cm-variable">job</span>, <span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">new</span> <span class="cm-variable">Path</span>(<span class="cm-string" style="color:rgb(42,0,255);">"hdfs://server:9000/aaaa_out"</span>));</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
20</div>
</div>
<pre class="CodeMirror-line"><span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
21</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-type">boolean</span> <span class="cm-variable">res</span> <span class="cm-operator">=</span> <span class="cm-variable">job</span>.<span class="cm-variable">waitForCompletion</span>(<span class="cm-atom" style="color:rgb(34,17,153);">true</span>);</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
22</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">System</span>.<span class="cm-variable">exit</span>(<span class="cm-variable">res</span> <span class="cm-operator">?</span> <span class="cm-number" style="color:rgb(17,102,68);">0</span> : <span class="cm-number" style="color:rgb(17,102,68);">1</span>);</span></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div style="width:1px;border-bottom:0px solid transparent;">
</div>
<div class="CodeMirror-gutters" style="border-right:1px solid rgb(221,221,221);background-color:rgb(247,247,247);min-height:100%;z-index:3;">
<div class="CodeMirror-gutter CodeMirror-linenumbers" style="display:inline-block;vertical-align:top;width:29px;">
</div>
</div>
</div>
</div>
</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';">备注：本地运行时，可以不 设置Run Configuration 的Environment variables HADOOP_USER_NAME hadoop 也能正常运行。</span></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';">(即本地运行，用户可设置也可不设置)</span></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';">只是文件的user name 是本机电脑的</span><span style="font-family:'微软雅黑';">user_name 不是hadoop</span></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';"><img src="https://note.wiz.cn/wiz-resource/ac7d9dc4-5f9b-47ff-9799-766fc14154e0/8674dcc8-5f82-401a-96cb-518b618e80a3/index_files/e0408b18-a357-4454-b569-2c17ff22a637.png" alt="" style="border:0px;"></span>
<div></div>
</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';"><span>/***********设定集群运行模式 输入输出文件都在集群*************/</span><br></span></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';">方式A</span></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'宋体';font-family:'宋体';text-indent:21pt;"><span style="font-family:'微软雅黑';">将程序打成</span></span><span style="text-indent:21pt;font-family:'微软雅黑';">JAR</span><span style="font-family:'宋体';font-family:'宋体';text-indent:21pt;"><span style="font-family:'微软雅黑';">包，然后在集群的任意一个节点上用</span></span><span style="font-family:Calibri;text-indent:21pt;"><span style="font-family:'微软雅黑';">hadoop</span></span><span style="font-family:'宋体';font-family:'宋体';text-indent:21pt;"><span style="font-family:'微软雅黑';">命令启动<span> </span><span style="color:rgb(255,0,0);">推荐</span></span></span></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';text-indent:21pt;">$ hadoop jar wordcount.jar cn.itcast.bigdata.mrsimple.WordCountDriver inputpath outputpath</span></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';"><br></span></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';">方式B</span></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';">修改YarnRunner，并且将四个配置文件放在src下。在执行时也需要打包放到linux上。</span></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';">只是把控制台的消息打印在了windows的IDEA上，实际意义不大，放弃！</span></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';"><br></span></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';"><span><span style="color:rgb(255,0,0);">故总结运行模式：①本地来测试代码逻辑；②打包提交到集群模式运行</span></span></span></div>
</div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<br></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
三、Hadoop开发<span style="font-family:'微软雅黑';">MapReduce框架</span>用到的Java API</div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="color:inherit;line-height:28.8px;font-family:'微软雅黑';">①TestMapper类继承</span><span style="line-height:28.8px;font-family:'微软雅黑';color:rgb(255,0,255);">Mapper</span><span style="line-height:28.8px;font-family:Consolas;"><span><span style="font-family:'微软雅黑';color:rgb(255,0,255);">&lt;KEYIN, VALUEIN, KEYOUT, VALUEOUT&gt;{}</span></span></span><span style="color:inherit;line-height:28.8px;font-family:'微软雅黑';">类</span><br></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"></span></span></div>
<div class="wiz-code-container" id="wiz_cm_1502522561561_3890" style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<div class="CodeMirror CodeMirror-wrap cm-s-eclipse" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;background:rgb(245,245,245);">
<div style="overflow:hidden;width:3px;">
<textarea cols="22" rows="3"></textarea></div><div class="CodeMirror-scroll" style="overflow:hidden !important;"><div class="CodeMirror-sizer" style="border-right:30px solid transparent;min-height:123px;"><div><div class="CodeMirror-lines" style="min-height:1px;"><div><div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;"><pre style="border-width:0px;background:transparent;font-family:inherit;line-height:inherit;color:inherit;z-index:2;overflow:visible;"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;"><div></div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;"><div></div></div></div><div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;"></div><div style="z-index:1;"></div><div class="CodeMirror-code"><div class="CodeMirror-activeline"><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="z-index:4;width:30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="z-index:4;background:none !important;border:none !important;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">1</div></div><pre class="CodeMirror-line" style="border-width:0px;background:transparent;font-family:inherit;line-height:inherit;color:inherit;z-index:2;overflow:visible;"><span><span class="cm-variable">KEYIN</span>  :  <span class="cm-variable">LongWritable</span>   <span class="cm-comment" style="color:rgb(63,127,95);">//KEYIN: 默认情况下是mr框架所读到的一行文本的起始偏移量。但是在hadoop中有自己的更精简的序列化接口LongWritable(extends WritableComparable)</span></span></pre></div><div><div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">2</div></div><pre class="CodeMirror-line" style="border-width:0px;background:transparent;font-family:inherit;line-height:inherit;color:inherit;z-index:2;overflow:visible;"><span><span class="cm-variable">VALUEIN</span>  :  <span class="cm-variable">Text</span>    <span class="cm-comment" style="color:rgb(63,127,95);">//读取的一行数据String 原因同上故用Text</span></span></pre></div><div><div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">3</div></div><pre class="CodeMirror-line" style="border-width:0px;background:transparent;font-family:inherit;line-height:inherit;color:inherit;z-index:2;overflow:visible;"><span><span class="cm-variable">KEYOUT</span>   :  <span class="cm-variable">Text</span>    <span class="cm-comment" style="color:rgb(63,127,95);">//用户自定义输出的数据格式key    一般用Text满足序列化</span></span></pre></div><div><div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">4</div></div><pre class="CodeMirror-line" style="border-width:0px;background:transparent;font-family:inherit;line-height:inherit;color:inherit;z-index:2;overflow:visible;"><span><span class="cm-variable">VALUEOUT</span>  : <span class="cm-variable">IntWritable</span>   <span class="cm-comment" style="color:rgb(63,127,95);">//用户自定义输出的数据value   一般输出是个对象，算法中可能会用IntWritable(1);</span></span></pre></div></div></div></div></div></div><div style="width:1px;border-bottom:0px solid transparent;"></div><div class="CodeMirror-gutters" style="border-right:1px solid rgb(221,221,221);background-color:rgb(247,247,247);min-height:100%;z-index:3;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="display:inline-block;vertical-align:top;width:29px;"></div></div></div></div></div><div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;"><span style="line-height:28.8px;font-family:'微软雅黑';color:inherit;"><span><span>实现方法A：</span></span><span>protected void </span></span><span style="line-height:28.8px;font-family:'微软雅黑';">map</span><span style="line-height:28.8px;font-family:Consolas;"><span style="font-family:'微软雅黑';">(LongWritable </span><span style="color:rgb(106,62,62);"><span style="font-family:'微软雅黑';color:rgb(0,0,0);">key</span></span><span style="font-family:'微软雅黑';">, Text </span><span style="color:rgb(106,62,62);"><span style="font-family:'微软雅黑';color:rgb(0,0,0);">value</span></span><span style="font-family:'微软雅黑';">, Context </span><span style="color:rgb(106,62,62);"><span style="font-family:'微软雅黑';color:rgb(0,0,0);">context</span></span><span style="font-family:'微软雅黑';">) throw Exception{} </span></span><br></div><div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;"><span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><span></span></span></span><div><span style="color:rgb(63,95,191);font-family:Consolas;"><span style="font-family:'微软雅黑';color:rgb(0,0,0);">  //map阶段的业务逻辑就写在自定义的map()方法中，</span></span><span style="line-height:28.8px;">maptask会对每一行输入数据调用一次自定义的map()方法。</span></div></div><div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;"><span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><span>  context.write(<span style="color:rgb(255,0,0);">new Text(key)</span> ,<span style="color:rgb(255,0,0);">new IntWritable(value)</span>) 无参数时用<span style="color:rgb(255,0,255);"><span style="color:rgb(0,0,0);">nullWritable</span>。</span></span></span></span></div><div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;"><span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><span style="color:rgb(255,0,255);"><br></span></span></span></div><div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;"><span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><span style="color:rgb(255,0,255);"><span style="color:rgb(255,0,0);"><span style="color:rgb(0,0,0);">实现方法B：</span><span style="color:rgb(0,0,0);"><span>protected void </span></span><span style="color:rgb(0,0,0);">setup(Context context ,)throws Exception{}  <span style="color:rgb(255,0,0);">  <span style="color:rgb(0,0,0);"> //task启动的时候调用。</span></span></span></span><br></span></span></span></div><div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;"><div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;"><span style="font-family:'微软雅黑';"><span><span style="color:rgb(255,0,255);"><span style="color:rgb(255,0,0);"><span style="color:rgb(0,0,0);">实现方法C：</span><span style="color:rgb(0,0,0);"><span>protected void clean</span></span><span style="color:rgb(0,0,0);">up(Context context ,)throws Exception{}  <span>//</span><span style="color:rgb(255,0,0);"><span></span><span style="color:rgb(0,0,0);">task结束的时候调用。</span></span></span></span><br></span></span></span></div><br><br></div><div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;"><span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><span><span>② </span>TextReducer类继承<span style="font-family:Consolas;"><span style="font-family:'微软雅黑';"> Reducer&lt;KEYIN,VALUEIN,</span><span style="font-family:'微软雅黑';">KEYOUT</span><span style="font-family:'微软雅黑';">,VALUEOUT&gt; {}类</span></span></span></span></span></div><div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;"><span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><span></span></span></span><div><span style="color:rgb(63,95,191);font-family:Consolas;line-height:28.8px;"></span></div><div class="wiz-code-container" id="wiz_cm_1502522914782_2384"><div class="CodeMirror CodeMirror-wrap cm-s-eclipse" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;background:rgb(245,245,245);"><div style="overflow:hidden;width:3px;"><textarea cols="22" rows="3"></textarea></div>
<div class="CodeMirror-scroll" style="overflow:hidden !important;">
<div class="CodeMirror-sizer" style="border-right:30px solid transparent;min-height:64px;">
<div>
<div class="CodeMirror-lines" style="min-height:1px;">
<div>
<div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;">
<pre></pre>
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;">
<div></div>
</div>
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;">
<div></div>
</div>
</div>
<div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;">
</div>
<div style="z-index:1;"></div>
<div class="CodeMirror-code">
<div class="CodeMirror-activeline">
<div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="z-index:4;width:30px;">
</div>
<div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
1</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-variable">KEYIN</span>, <span class="cm-variable">VALUEIN</span> <span class="cm-variable">：</span>   <span class="cm-comment" style="color:rgb(63,127,95);">//对应  mapper输出的KEYOUT,VALUEOUT类型对应</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
2</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-variable">KEYOUT</span>, <span class="cm-variable">VALUEOUT</span> <span class="cm-variable">：</span>  <span class="cm-comment" style="color:rgb(63,127,95);">//是自定义reduce逻辑处理结果的输出数据类型一般是&lt;Text,Bean&gt;</span></span></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div style="width:1px;border-bottom:0px solid transparent;">
</div>
<div class="CodeMirror-gutters" style="border-right:1px solid rgb(221,221,221);background-color:rgb(247,247,247);min-height:100%;z-index:3;">
<div class="CodeMirror-gutter CodeMirror-linenumbers" style="display:inline-block;vertical-align:top;width:29px;">
</div>
</div>
</div>
</div>
</div>
</div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="color:inherit;line-height:28.8px;font-family:'微软雅黑';">实现方法A：protected void </span><span style="color:inherit;line-height:28.8px;font-family:'微软雅黑';">reduce(Text </span><span style="line-height:28.8px;font-family:Consolas;color:rgb(106,62,62);"><span style="font-family:'微软雅黑';color:rgb(0,0,0);">key</span></span><span style="color:inherit;line-height:28.8px;font-family:'微软雅黑';">, Iterable&lt;IntWritable&gt; </span><span style="line-height:28.8px;font-family:Consolas;color:rgb(106,62,62);"><span style="font-family:'微软雅黑';color:rgb(0,0,0);">values</span></span><span style="color:inherit;line-height:28.8px;font-family:'微软雅黑';">, Context </span><span style="line-height:28.8px;font-family:Consolas;color:rgb(106,62,62);"><span style="font-family:'微软雅黑';color:rgb(0,0,0);">context</span></span><span style="color:inherit;line-height:28.8px;font-family:'微软雅黑';">) </span><span style="line-height:28.8px;font-family:Consolas;color:rgb(127,0,85);"><span style="font-family:'微软雅黑';color:rgb(0,0,0);">throws </span></span><span style="color:inherit;line-height:28.8px;font-family:'微软雅黑';">Exception {}类</span><br></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="line-height:28.8px;font-family:'微软雅黑';">  //按照key分组，确定reduceTask的个数。每个reduceTask都会执行此自定义的reduce()方法，对values进行迭代</span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="color:rgb(63,95,191);font-family:Consolas;line-height:28.8px;"><span style="font-family:'微软雅黑';color:rgb(0,0,0);">  //如果key来传过来的是对象, 每个对象都是不一样的, 所以每个对象都调用一次reduce方法。</span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="color:rgb(63,95,191);font-family:Consolas;line-height:28.8px;"><span style="font-family:'微软雅黑';color:rgb(0,0,0);"></span></span>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<span style="font-family:'微软雅黑';"><span><span style="color:rgb(255,0,255);"><span style="color:rgb(255,0,0);"><span style="color:rgb(0,0,0);">实现方法B：</span><span style="color:rgb(0,0,0);"><span>protected
 void </span></span><span style="color:rgb(0,0,0);">setup(Context context ,)throws Exception{} <span style="color:rgb(255,0,0);"><span></span><span style="color:rgb(0,0,0);">//task启动的时候调用。</span></span></span></span><br></span></span></span></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<div><span style="font-family:'微软雅黑';"><span><span style="color:rgb(255,0,255);"><span style="color:rgb(255,0,0);"><span style="color:rgb(0,0,0);">实现方法C：</span><span style="color:rgb(0,0,0);"><span>protected
 void clean</span></span><span style="color:rgb(0,0,0);">up(Context context ,)throws Exception{} <span>//</span><span style="color:rgb(255,0,0);"><span></span><span style="color:rgb(0,0,0);">task结束的时候调用。</span></span></span></span><br></span></span></span></div>
</div>
<br>
③TextDriver类 执行main方法&lt;完成九行设置，两行IO，两行等待结束&gt;</div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="color:rgb(63,95,191);font-family:Consolas;line-height:28.8px;"><span style="font-family:'微软雅黑';color:rgb(0,0,0);"><br></span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
……………………………………………………以上是标准MR程序的设计规范，以下补充一些常用的API…………………………………………………………………………</div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<br></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';">扩展API</span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;">①String[] values=value.toString().split("\t");//将读取的第一行数据，按照字符串里面内容分片.</span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><span><span>数据表格：可将多重数据存在字符串中，然后</span><span style="color:rgb(255,0,255);">再次利用split(",")方法取出各数据</span><span>。</span></span></span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;">判断读入的字符串是否非空         StringUtils.isNotEmpty(line)</span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><span><span>检测</span><span style="color:rgb(255,0,255);"><span style="color:rgb(0,0,0);">字符串相同与否用</span>       .equals();</span></span></span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><span>将字符串中的数字转变成int型         </span><span style="font-family:Consolas;"><span style="font-family:'微软雅黑';color:rgb(255,0,255);">Integer.parseInt(</span><span style="color:rgb(106,62,62);"><span style="font-family:'微软雅黑';color:rgb(255,0,255);">fields</span></span><span style="font-family:'微软雅黑';color:rgb(255,0,255);">[0])</span></span></span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><span><span>②StringBuffer：起到String没有的功能      </span><span style="color:rgb(255,0,255);">stringBuffer.append(variable).append(",");</span></span></span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;">③Text，</span></span><span style="font-family:'微软雅黑';line-height:28.8px;"><span><span>IntWritable，LongWritable.  </span><span style="color:rgb(255,0,255);">new
 Text("A")</span><span>;   new </span></span></span><span style="font-family:'微软雅黑';line-height:28.8px;">IntWritable(1);   new </span><span style="font-family:'微软雅黑';line-height:28.8px;">LongWritable();</span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><span>④Iterable&lt;T&gt;接口，Iterator&lt;T&gt; iterator();用在reduce()方法直接写出结果的情况。</span><span style="color:rgb(106,62,62);font-family:Consolas;"><span style="font-family:'微软雅黑';">context</span><span><span style="font-family:'微软雅黑';">.write(</span></span><span style="font-family:'微软雅黑';">values</span><span><span style="font-family:'微软雅黑';">.</span><span style="font-family:'微软雅黑';">iterator</span><span style="font-family:'微软雅黑';">().next(), </span></span><span style="font-family:'微软雅黑';">bean</span><span><span style="font-family:'微软雅黑';">);</span></span></span></span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><span><span><span>⑤</span><span>在处理切片时，通过文件名区别读入的切片</span></span></span></span></span>
<div><span style="font-family:Consolas;"><span style="font-family:'微软雅黑';">FileSplit </span><span style="color:rgb(106,62,62);"><span style="font-family:'微软雅黑';color:rgb(0,0,0);">inputSplit</span></span><span style="font-family:'微软雅黑';"> = (FileSplit) </span><span style="color:rgb(106,62,62);"><span style="font-family:'微软雅黑';color:rgb(0,0,0);">context</span></span><span style="font-family:'微软雅黑';">.getInputSplit();//获得输入切片</span></span></div>
<span style="font-family:Consolas;"><span style="font-family:'微软雅黑';">String </span><span style="color:rgb(106,62,62);"><span style="font-family:'微软雅黑';color:rgb(0,0,0);">fileName</span></span><span style="font-family:'微软雅黑';"> = </span><span style="color:rgb(106,62,62);"><span style="font-family:'微软雅黑';color:rgb(0,0,0);">inputSplit</span></span><span style="font-family:'微软雅黑';">.getPath().getName();//获得切片的源文件名</span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;">⑥遍历values： for(String value : values);</span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="line-height:28.8px;font-family:'微软雅黑';color:inherit;">⑦<span style="color:rgb(255,0,0);">partitioner&lt;key ,value&gt;抽象类</span>。继承后重写i</span><span style="line-height:28.8px;color:rgb(127,0,85);font-family:Consolas;"><span style="color:rgb(0,0,0);font-family:'微软雅黑';">nt</span><span><span style="font-family:'微软雅黑';"> getPartition(KEY </span><span style="color:rgb(106,62,62);"><span style="color:rgb(0,0,0);font-family:'微软雅黑';">key</span></span><span style="font-family:'微软雅黑';">, VALUE </span><span style="color:rgb(106,62,62);"><span style="color:rgb(0,0,0);font-family:'微软雅黑';">value</span></span><span style="font-family:'微软雅黑';">, </span></span><span style="color:rgb(0,0,0);font-family:'微软雅黑';">int</span><span><span style="font-family:'微软雅黑';"> </span><span style="color:rgb(106,62,62);"><span style="color:rgb(0,0,0);font-family:'微软雅黑';">numPartitions</span></span><span style="font-family:'微软雅黑';">);实现该方法，自定义某(k,v)对对应的reduceTask。</span></span></span><br></div>
<div class="wiz-code-container" id="wiz_cm_1502524567830_1664" style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<div class="CodeMirror CodeMirror-wrap cm-s-eclipse" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;background:rgb(245,245,245);">
<div style="overflow:hidden;width:3px;">
<textarea cols="22" rows="3"></textarea></div><div class="CodeMirror-scroll" style="overflow:hidden !important;"><div class="CodeMirror-sizer" style="border-right:30px solid transparent;min-height:100px;"><div><div class="CodeMirror-lines" style="min-height:1px;"><div><div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;"><pre style="border-width:0px;background:transparent;font-family:inherit;line-height:inherit;color:inherit;z-index:2;overflow:visible;"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;"><div></div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;"><div></div></div></div><div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;"></div><div style="z-index:1;"></div><div class="CodeMirror-code"><div class="CodeMirror-activeline"><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="z-index:4;width:30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="z-index:4;background:none !important;border:none !important;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">1</div></div><pre class="CodeMirror-line" style="border-width:0px;background:transparent;font-family:inherit;line-height:inherit;color:inherit;z-index:2;overflow:visible;"><span><span class="cm-comment" style="color:rgb(63,127,95);">// 指定我们自定义的数据分区器</span></span></pre></div><div><div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">2</div></div><pre class="CodeMirror-line" style="border-width:0px;background:transparent;font-family:inherit;line-height:inherit;color:inherit;z-index:2;overflow:visible;"><span><span class="cm-variable">job</span>.<span class="cm-variable">setPartitionerClass</span>(<span class="cm-variable">ProvincePartitioner</span>.<span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">class</span>);</span></pre></div><div><div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">3</div></div><pre class="CodeMirror-line" style="border-width:0px;background:transparent;font-family:inherit;line-height:inherit;color:inherit;z-index:2;overflow:visible;"><span><span class="cm-comment" style="color:rgb(63,127,95);">// 同时指定相应“分区”数量的reducetask</span></span></pre></div><div><div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">4</div></div><pre class="CodeMirror-line" style="border-width:0px;background:transparent;font-family:inherit;line-height:inherit;color:inherit;z-index:2;overflow:visible;"><span><span class="cm-variable">job</span>.<span class="cm-variable">setNumReduceTasks</span>(<span class="cm-number" style="color:rgb(17,102,68);">5</span>);</span></pre></div></div></div></div></div></div><div style="width:1px;border-bottom:0px solid transparent;"></div><div class="CodeMirror-gutters" style="border-right:1px solid rgb(221,221,221);background-color:rgb(247,247,247);min-height:100%;z-index:3;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="display:inline-block;vertical-align:top;width:29px;"></div></div></div></div></div><div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">构建ProvincePartitioner.class 继承Partitioner 实现字段匹配分类</div><div class="wiz-code-container" id="wiz_cm_1502524742268_1345" style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;"><div class="CodeMirror CodeMirror-wrap cm-s-eclipse" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;background:rgb(245,245,245);"><div style="overflow:hidden;width:3px;"><textarea cols="22" rows="3"></textarea></div>
<div class="CodeMirror-scroll" style="overflow:hidden !important;">
<div class="CodeMirror-sizer" style="border-right:30px solid transparent;min-height:307px;">
<div>
<div class="CodeMirror-lines" style="min-height:1px;">
<div>
<div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;">
<pre></pre>
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;">
<div></div>
</div>
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;">
<div></div>
</div>
</div>
<div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;">
</div>
<div style="z-index:1;"></div>
<div class="CodeMirror-code">
<div class="CodeMirror-activeline">
<div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="z-index:4;width:30px;">
</div>
<div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
1</div>
</div>
<pre class="CodeMirror-line"><span>   <span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">public</span> <span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">static</span> <span class="cm-variable">HashMap</span><span class="cm-operator">&lt;</span><span class="cm-type">String</span>, <span class="cm-type">Integer</span><span class="cm-operator">&gt;</span> <span class="cm-variable">proviceDict</span> <span class="cm-operator">=</span> <span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">new</span> <span class="cm-variable">HashMap</span><span class="cm-operator">&lt;</span><span class="cm-type">String</span>, <span class="cm-type">Integer</span><span class="cm-operator">&gt;</span>();</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
2</div>
</div>
<pre class="CodeMirror-line"><span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
3</div>
</div>
<pre class="CodeMirror-line"><span>    <span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">static</span> {</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
4</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">proviceDict</span>.<span class="cm-variable">put</span>(<span class="cm-string" style="color:rgb(42,0,255);">"136"</span>, <span class="cm-number" style="color:rgb(17,102,68);">0</span>);</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
5</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">proviceDict</span>.<span class="cm-variable">put</span>(<span class="cm-string" style="color:rgb(42,0,255);">"137"</span>, <span class="cm-number" style="color:rgb(17,102,68);">1</span>);</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
6</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">proviceDict</span>.<span class="cm-variable">put</span>(<span class="cm-string" style="color:rgb(42,0,255);">"138"</span>, <span class="cm-number" style="color:rgb(17,102,68);">2</span>);</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
7</div>
</div>
<pre class="CodeMirror-line"><span>        <span class="cm-variable">proviceDict</span>.<span class="cm-variable">put</span>(<span class="cm-string" style="color:rgb(42,0,255);">"139"</span>, <span class="cm-number" style="color:rgb(17,102,68);">3</span>);</span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
8</div>
</div>
<pre class="CodeMirror-line"><span>    }    </span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
9</div>
</div>
<pre class="CodeMirror-line"><span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
10</div>
</div>
<pre class="CodeMirror-line"><span>    <span class="cm-type">String</span> <span class="cm-variable">prefix</span> <span class="cm-operator">=</span> <span class="cm-variable">key</span>.<span class="cm-variable">toString</span>().<span class="cm-variable">substring</span>(<span class="cm-number" style="color:rgb(17,102,68);">0</span>, <span class="cm-number" style="color:rgb(17,102,68);">3</span>);  <span class="cm-comment" style="color:rgb(63,127,95);">//根据字段，区分ID</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
11</div>
</div>
<pre class="CodeMirror-line"><span>    <span class="cm-type">Integer</span> <span class="cm-variable">provinceId</span> <span class="cm-operator">=</span> <span class="cm-variable">proviceDict</span>.<span class="cm-variable">get</span>(<span class="cm-variable">prefix</span>);    <span class="cm-comment" style="color:rgb(63,127,95);">//获取ID</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
12</div>
</div>
<pre class="CodeMirror-line"><span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
13</div>
</div>
<pre class="CodeMirror-line"><span>    <span class="cm-keyword" style="line-height:1em;font-weight:bold;color:rgb(127,0,85);">return</span> (<span class="cm-variable">provinceId</span> <span class="cm-operator">==</span> <span class="cm-atom" style="color:rgb(34,17,153);">null</span>) <span class="cm-operator">?</span> <span class="cm-number" style="color:rgb(17,102,68);">4</span> : <span class="cm-variable">provinceId</span>;    <span class="cm-comment" style="color:rgb(63,127,95);">//返回ID</span></span></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div style="width:1px;border-bottom:0px solid transparent;">
</div>
<div class="CodeMirror-gutters" style="border-right:1px solid rgb(221,221,221);background-color:rgb(247,247,247);min-height:100%;z-index:3;">
<div class="CodeMirror-gutter CodeMirror-linenumbers" style="display:inline-block;vertical-align:top;width:29px;">
</div>
</div>
</div>
</div>
</div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><br></span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<br></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><span>四、关于Map等集合：大数据处理中的(k,v)对，Java一定会用到Map。</span></span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<div>Map用于保存具有映射关系的数据，因此Map集合里保存着两组值，<span>K-V，</span>Key不能重复。<span style="line-height:1.6;">元素的Key索引</span><span style="line-height:1.6;">从Map里取出该元素</span></div>
<div><span>Map里：</span><span style="color:rgb(255,0,0);">所有Key放在一起来看==&gt;一个Set集合。Value放在一起==&gt;一个List</span><span>。即 Map&lt;Set , List&gt;.</span></div>
<div><span>Map接口下有HashMap、LinkedHashMap、SortedMap、TreeMap、EnumMap。</span></div>
<div></div>
<div class="wiz-code-container" id="wiz_cm_1502531751845_2300">
<div class="CodeMirror CodeMirror-wrap cm-s-eclipse" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;background:rgb(245,245,245);">
<div style="overflow:hidden;width:3px;">
<textarea cols="22" rows="3"></textarea></div>
<div class="CodeMirror-scroll" style="overflow:hidden !important;">
<div class="CodeMirror-sizer" style="border-right:30px solid transparent;min-height:445px;">
<div>
<div class="CodeMirror-lines" style="min-height:1px;">
<div>
<div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;">
<div></div>
</div>
</div>
<div class="CodeMirror-measure" style="width:661.2px;overflow:hidden;visibility:hidden;">
</div>
<div style="z-index:1;"></div>
<div class="CodeMirror-code">
<div class="CodeMirror-activeline">
<div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="z-index:4;width:30px;">
</div>
<div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
1</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-variable">Map常用方法：</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
2</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-type">void</span> <span class="cm-def" style="color:rgb(0,0,255);">clear</span>();    <span class="cm-comment" style="color:rgb(63,127,95);">//删除该Map对象的所有key-value对。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
3</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-type">boolean</span> <span class="cm-def" style="color:rgb(0,0,255);">containsKey</span>(<span class="cm-type">Object</span> <span class="cm-variable">key</span>);       <span class="cm-comment" style="color:rgb(63,127,95);">//查询Map中是否包含指定的key，如果包含则返回true。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
4</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-type">boolean</span> <span class="cm-def" style="color:rgb(0,0,255);">containsValue</span>(<span class="cm-variable">Obejct</span>,<span class="cm-variable">value</span>);        <span class="cm-comment" style="color:rgb(63,127,95);">//查询Map中是否包含一个或多个Value，如果包含则返回true。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
5</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-variable">Set</span> <span class="cm-def" style="color:rgb(0,0,255);">entrySet</span>();<span class="cm-variable">返回Map中包含的key</span><span class="cm-operator">-</span><span class="cm-variable">value对所组成的Set集合，每个集合元素都是Map</span>.<span class="cm-variable">Entry对象。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
6</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-type">Object</span> <span class="cm-def" style="color:rgb(0,0,255);">get</span>(<span class="cm-type">Object</span> <span class="cm-variable">key</span>);<span class="cm-variable">返回指定key所对应的value，如果此Map中不包含该key，则返回null。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
7</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-type">boolean</span> <span class="cm-def" style="color:rgb(0,0,255);">isEmpty</span>();<span class="cm-variable">查询该Map是否为空。若空为true。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
8</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-variable">Set</span> <span class="cm-def" style="color:rgb(0,0,255);">keySet</span>();    <span class="cm-comment" style="color:rgb(63,127,95);">//返回该Map中所有key组成的Set集合。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
9</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-type">Object</span> <span class="cm-def" style="color:rgb(0,0,255);">put</span>(<span class="cm-type">Object</span> <span class="cm-variable">key</span>,<span class="cm-type">Object</span> <span class="cm-variable">value</span>);     <span class="cm-comment" style="color:rgb(63,127,95);">//添加一个key-value对。如果有则覆盖。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
10</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-type">void</span> <span class="cm-def" style="color:rgb(0,0,255);">putAll</span>(<span class="cm-variable">Map</span> <span class="cm-variable">m</span>);      <span class="cm-comment" style="color:rgb(63,127,95);">//将m中的key-value对复制到本Map中。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
11</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-type">Object</span> <span class="cm-def" style="color:rgb(0,0,255);">remove</span>(<span class="cm-type">Object</span> <span class="cm-variable">key</span>);      <span class="cm-comment" style="color:rgb(63,127,95);">//删除指定key所对应的key-value对，返回被删除key所关联的value,如果没有则返回null。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
12</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-type">boolean</span> <span class="cm-def" style="color:rgb(0,0,255);">remove</span>(<span class="cm-type">Object</span> <span class="cm-variable">key</span>,<span class="cm-type">Object</span> <span class="cm-variable">value</span>);     <span class="cm-comment" style="color:rgb(63,127,95);">//删除指定k-v对。成功删除则返回true，否则为false。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
13</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-type">int</span> <span class="cm-def" style="color:rgb(0,0,255);">size</span>();       <span class="cm-comment" style="color:rgb(63,127,95);">//返回该Map里的k-v对的个数。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
14</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-variable">Collection</span> <span class="cm-def" style="color:rgb(0,0,255);">values</span>();        <span class="cm-comment" style="color:rgb(63,127,95);">//返回该Map里所有value组成的Collection。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
15</div>
</div>
<pre class="CodeMirror-line"><span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
16</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-variable">Map内部类Entry，该类封装了k</span><span class="cm-operator">-</span><span class="cm-variable">v对，Entry包含三个方法：</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
17</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-type">Object</span> <span class="cm-def" style="color:rgb(0,0,255);">getKey</span>();<span class="cm-variable">返回该Entry里包含的key值。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
18</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-type">Object</span> <span class="cm-def" style="color:rgb(0,0,255);">getValue</span>();<span class="cm-variable">返回该Entry里包含的value值。</span></span></pre>
</div>
<div>
<div class="CodeMirror-gutter-wrapper" style="z-index:4;background:none !important;border:none !important;">
<div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="min-width:20px;text-align:center;color:rgb(153,153,153);z-index:4;width:21px;">
19</div>
</div>
<pre class="CodeMirror-line"><span><span class="cm-type">Object</span> <span class="cm-def" style="color:rgb(0,0,255);">setValue</span>(<span class="cm-variable">V</span> <span class="cm-variable">value</span>);<span class="cm-variable">设置Entry里包含的value值，并返回新设置的value。</span></span></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div style="width:1px;border-bottom:0px solid transparent;">
</div>
<div class="CodeMirror-gutters" style="border-right:1px solid rgb(221,221,221);background-color:rgb(247,247,247);min-height:100%;z-index:3;">
<div class="CodeMirror-gutter CodeMirror-linenumbers" style="display:inline-block;vertical-align:top;width:29px;">
</div>
</div>
</div>
</div>
</div>
</div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;"><br></span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="font-family:'微软雅黑';"><span style="line-height:28.8px;">五、关于MapReduce编程的整理与总结</span></span></div>
<div style="font-family:Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;font-size:16px;">
<span style="line-height:28.8px;"><span style="font-family:'微软雅黑';"></span></span>
<div>mapreduce在编程的时候，基本上一个固化的模式，没有太多可灵活改变的地方，除了以下几处：</div>
<div><span>1、输入数据接口：InputFormat   ---&gt;     FileInputFormat(文件类型数据读取的通用抽象类)  DBInputFormat （数据库数据读取的通用抽象类）</span></div>
<div><span>   默认使用的实现类是： TextInputFormat     job.setInputFormatClass(TextInputFormat.class)</span></div>
<div><span>   TextInputFormat的功能逻辑是：一次读一行文本，然后将该行的起始偏移量作为key，行内容作为value返回</span></div>
<div><span>   </span></div>
<div><span>2、逻辑处理接口： Mapper  </span></div>
<div><span>   完全需要用户自己去实现其中  map()   setup()   clean()   </span></div>
<div><span>   </span></div>
<div><span>3、map输出的结果在shuffle阶段会被partition以及sort，此处有两个接口可自定义：</span></div>
<div><span style="line-height:28.8px;">Partitioner</span><span style="line-height:28.8px;">有默认实现 HashPartitioner，逻辑是  根据key和numReduces来返回一个分区号； key.hashCode()&amp;Integer.MAXVALUE % numReduces。</span><span style="line-height:28.8px;">通常情况下，用默认的这个HashPartitioner就可以，如果业务上有特别的需求，可以自定义</span></div>
<div><span style="line-height:28.8px;"><span style="color:rgb(255,0,255);">Comparable</span></span><span style="line-height:28.8px;"><span style="color:rgb(255,0,255);">当我们用自定义的对象作为key来输出时，就必须要实现WritableComparable接口，override其中的compareTo()方法</span></span></div>
<div><br></div>
<div><span>4、reduce端的数据分组比较接口 ： Groupingcomparator </span><span style="line-height:28.8px;">reduceTask拿到输入数据（一个partition的所有数据）后，首先需要对数据进行分组，其分组的默认原则是key相同，然后对每一组kv数据调用一次reduce()方法，并且将这一组kv中的第一个kv的key作为参数传给reduce的key，将这一组数据的value的迭代器传给reduce()的values参数。</span></div>
<div><span style="line-height:28.8px;">利用上述这个机制，我们可以实现一个高效的分组取最大值的逻辑：</span><span style="line-height:28.8px;">自定义一个bean对象用来封装我们的数据，然后改写其compareTo方法产生倒序排序的效果，</span><span style="line-height:28.8px;">然后自定义一个Groupingcomparator，将bean对象的分组逻辑改成按照我们的业务分组id来分组（比如订单号）</span><span style="line-height:28.8px;">这样，我们要取的最大值就是reduce()方法中传进来key</span></div>
<div><br></div>
<div><span>5、逻辑处理接口：Reducer</span><span style="line-height:28.8px;">完全需要用户自己去实现其中  reduce()   setup()   clean()   </span></div>
<div><br></div>
<div><span>6、输出数据接口： OutputFormat  ---&gt; 有一系列子类  FileOutputformat  DBoutputFormat  .....</span><span style="line-height:28.8px;">默认实现类是TextOutputFormat，功能逻辑是：  将每一个KV对向目标文本文件中输出为一行</span></div>
<div><br></div>
<div><br></div>
<div><br></div>
<div>六、MR框架编程要点：
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
详见eclipse的Test模板包</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
手机号的流量数据分析：</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<br></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
①从hdfs上获取文件的手机号及其流量统计的数据</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
②输出结果按照流量大小排序</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
③输出结果按照省份分割数据到不同的文件</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<br></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
一、项目分析：<br></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
①对hdfs上的数据格式分析，确定（k,v）手机号来做key；上下行数据量构成对象做value。</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
②构造对象Bean，成员变量及其方法。</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
③编写Mapper和Reducer类及方法</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<br></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
1、完成Bean的对象构造</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
①根据对象特点，完善其成员变量以及其get(),set()方法；</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
②因为要使用context.write(k,v)所以对象要实现Writable的接口；实现后即可以被写</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
③实现String toString();方法。</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
备注：如果作为对象的模板学会 修改成员变量；</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<br></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
2、编写Mapper类（在TestMR类中写静态mapper类）</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
①：继承Mapper确定输入输出的数据格式；</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
②：读取一行内容，用空格"\t"或者某些标识切割一行数据，获取内容存储在字符串数组中；</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
③：数据解析后构造对象，写入context。</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<br></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
3、编写Reducer类（在TestMR类中写静态reducer类）</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
①确定输入输出kv对与Mapper输出的kv对格式相同；</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
②按照key完成Values的遍历，迭代等操作；</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
③输出结果文件，注意输出的对象的定义，最后封装对象输出。</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<br></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
4、编写Driver类（一般在TestMR类中写main方法实现）</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
①设定Job；</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
②完成一系列的设置，类，输入输出格式，文件路径；</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
③提交Job，检测。</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<br></div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
5、提交Job，进行云计算</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
①打包jar，sftp提交到host上；</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
②执行 hadoop jar Test.jar test.TestMR</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
③执行 hadoop fs -cat /output/part-r-00000 读取结果文件</div>
<div style="font-family:'微软雅黑', Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;">
<br></div>
<br></div>
<div><br></div>
<div><br></div>
<div><br></div>
<div><br></div>
<div><br></div>
</div>
            </div>
                </div>