---
layout:     post
title:      HBase数据导入的几种操作
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/scgaliguodong123_/article/details/46771929				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>数据导入有如下几种方式： <br>
1．利用HBase提供的ImportTsv将csv文件导入到HBase <br>
2．利用HBase提供的completebulkload将数据导入到HBase <br>
3．利用HBase提供的Import将数据导入到HBase</p>



<h3 id="利用importtsv将csv文件导入到hbase"><strong>利用ImportTsv将csv文件导入到HBase</strong></h3>

<p>命令：</p>



<pre class="prettyprint"><code class=" hljs avrasm">格式：hbase [类] [分隔符] [行键，列族] [表] [导入文件]
bin/hbase  org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.mapreduce</span><span class="hljs-preprocessor">.ImportTsv</span>  -Dimporttsv<span class="hljs-preprocessor">.separator</span>=<span class="hljs-string">","</span> 
-Dimporttsv<span class="hljs-preprocessor">.columns</span>=HBASE_ROW_KEY,cf hbase-tb1-<span class="hljs-number">001</span> /simple<span class="hljs-preprocessor">.csv</span></code></pre>

<p>simple.csv内容如下：</p>

<pre class="prettyprint"><code class=" hljs bash"><span class="hljs-number">1</span>,<span class="hljs-string">"Tony"</span>
<span class="hljs-number">2</span>,<span class="hljs-string">"Ivy"</span>
<span class="hljs-number">3</span>,<span class="hljs-string">"Tom"</span>
<span class="hljs-number">4</span>,<span class="hljs-string">"Spark"</span>
<span class="hljs-number">5</span>,<span class="hljs-string">"Storm"</span></code></pre>

<p><strong>eg:</strong></p>

<pre class="prettyprint"><code class=" hljs cs">创建文件
[root@hadoop1 datamove]<span class="hljs-preprocessor"># cat simple.csv</span>
<span class="hljs-number">1</span>,<span class="hljs-string">"Tony"</span>
<span class="hljs-number">2</span>,<span class="hljs-string">"Ivy"</span>
<span class="hljs-number">3</span>,<span class="hljs-string">"Tom"</span>
<span class="hljs-number">4</span>,<span class="hljs-string">"Spark"</span>
<span class="hljs-number">5</span>,<span class="hljs-string">"Storm"</span>


上传文件
[root@hadoop1 datamove]<span class="hljs-preprocessor"># hdfs dfs -put simple.csv /liguodong</span>
[root@hadoop1 datamove]<span class="hljs-preprocessor"># hdfs dfs -ls /liguodong</span>
Found <span class="hljs-number">5</span> items
-rw-r--r--   <span class="hljs-number">3</span> root supergroup         <span class="hljs-number">45</span> <span class="hljs-number">2015</span>-<span class="hljs-number">07</span>-<span class="hljs-number">06</span> <span class="hljs-number">11</span>:<span class="hljs-number">13</span> /liguodong/simple.csv

创建表
hbase(main):<span class="hljs-number">001</span>:<span class="hljs-number">0</span>&gt; create <span class="hljs-string">'hbase-tb1-001'</span>,<span class="hljs-string">'cf'</span>
<span class="hljs-number">0</span> row(s) <span class="hljs-keyword">in</span> <span class="hljs-number">3.1120</span> seconds

=&gt; Hbase::Table - hbase-tb1-<span class="hljs-number">001</span>


执行mapreduce
[root@hadoop1 datamove]<span class="hljs-preprocessor"># hbase  org.apache.hadoop.hbase.mapreduce.ImportTsv  -Dimporttsv.separator="," </span>
-Dimporttsv.columns=HBASE_ROW_KEY,cf hbase-tb1-<span class="hljs-number">001</span> /liguodong/simple.csv


查看是否成功导入
hbase(main):<span class="hljs-number">003</span>:<span class="hljs-number">0</span>&gt; scan <span class="hljs-string">'hbase-tb1-001'</span>
ROW                  COLUMN+CELL
 <span class="hljs-number">1</span>                   column=cf:, timestamp=<span class="hljs-number">1436152834178</span>, <span class="hljs-keyword">value</span>=<span class="hljs-string">"Tony"</span>
 <span class="hljs-number">2</span>                   column=cf:, timestamp=<span class="hljs-number">1436152834178</span>, <span class="hljs-keyword">value</span>=<span class="hljs-string">"Ivy"</span>
 <span class="hljs-number">3</span>                   column=cf:, timestamp=<span class="hljs-number">1436152834178</span>, <span class="hljs-keyword">value</span>=<span class="hljs-string">"Tom"</span>
 <span class="hljs-number">4</span>                   column=cf:, timestamp=<span class="hljs-number">1436152834178</span>, <span class="hljs-keyword">value</span>=<span class="hljs-string">"Spark"</span>
 <span class="hljs-number">5</span>                   column=cf:, timestamp=<span class="hljs-number">1436152834178</span>, <span class="hljs-keyword">value</span>=<span class="hljs-string">"Storm"</span>
<span class="hljs-number">5</span> row(s) <span class="hljs-keyword">in</span> <span class="hljs-number">0.1490</span> seconds</code></pre>



<h3 id="利用completebulkload将数据导入到hbase"><strong>利用completebulkload将数据导入到HBase</strong></h3>

<p>HBase支持bulkload的入库方式，它是利用hbase的数据信息按照特定格式存储在hdfs内这一原理，直接在HDFS中生成持久化的HFile数据格式文件，然后上传至合适位置，即完成巨量数据快速入库的办法。配和mapreduce完成，高效便捷，而且不占用region资源，增添负载，在大数据量写入时，能极大的提高写入效率，并降低对HBase节点的写入压力。 <br>
通过使用先生成HFile，然后再BulkLoad到HBase的方式来替代之前直接调用HTableOutputFormat的方法有如下的好处： <br>
1、消除了对HBase集群的插入压力 <br>
2、提高了Job的运行速度，降低了Job的执行时间</p>

<p>利用completebulkload将数据导入到HBase <br>
1、先通过lmportTsv生成HFile <br>
<strong>命令：</strong></p>

<pre class="prettyprint"><code class=" hljs avrasm">hbase [类] [分隔符] [输出存储路径] [行键,列族] [表] [导入原始数据文件]
bin/hbase org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.hadoop</span><span class="hljs-preprocessor">.hbase</span><span class="hljs-preprocessor">.mapreduce</span><span class="hljs-preprocessor">.ImportTsv</span> -Dimporttsv<span class="hljs-preprocessor">.separator</span>=<span class="hljs-string">","</span> -Dimporttsv<span class="hljs-preprocessor">.bulk</span><span class="hljs-preprocessor">.output</span>=/hfile_tmp 
-Dimporttsv<span class="hljs-preprocessor">.columns</span>=HBASE_ROW_KEY,cf hbase-tbl-<span class="hljs-number">002</span> /simple<span class="hljs-preprocessor">.csv</span></code></pre>

<p>2、通过completebulkload将数据导入表hbase-tbl-002 <br>
<strong>命令：</strong></p>

<pre class="prettyprint"><code class=" hljs lasso">hadoop jar lib/hbase<span class="hljs-attribute">-server</span><span class="hljs-subst">-</span><span class="hljs-number">0.96</span><span class="hljs-number">.0</span><span class="hljs-built_in">.</span>jar completebulkload
 /hfile_tmp hbase<span class="hljs-attribute">-tbl</span><span class="hljs-subst">-</span><span class="hljs-number">002</span></code></pre>

<p><strong>eg:</strong></p>

<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop1</span> datamove]<span class="hljs-comment"># hbase org.apache.hadoop.hbase.mapreduce.ImportTsv -Dimporttsv.separator="," </span>
-<span class="hljs-constant">Dimporttsv</span>.bulk.output=<span class="hljs-regexp">/liguodong/hfile</span>_tmp -<span class="hljs-constant">Dimporttsv</span>.columns=<span class="hljs-constant">HBASE_ROW_KEY</span>,cf hbase-tbl-<span class="hljs-number">002</span> /liguodong/simple.csv

以上的指令，它会主动创建表hbase-tbl-<span class="hljs-number">002</span>和文件夹hfile_tmp。
[root<span class="hljs-variable">@hadoop1</span> datamove]<span class="hljs-comment"># hdfs dfs -ls /liguodong</span>
drwxr-xr-x   - root supergroup          <span class="hljs-number">0</span> <span class="hljs-number">2015</span>-<span class="hljs-number">07</span>-<span class="hljs-number">06</span> <span class="hljs-number">11</span><span class="hljs-symbol">:</span><span class="hljs-number">54</span> /liguodong/hfile_tmp

[root<span class="hljs-variable">@hadoop1</span> datamove]<span class="hljs-comment"># hdfs dfs -ls -R  /liguodong/hfile_tmp</span>
-rw-r--r--   <span class="hljs-number">3</span> root supergroup          <span class="hljs-number">0</span> <span class="hljs-number">2015</span>-<span class="hljs-number">07</span>-<span class="hljs-number">06</span> <span class="hljs-number">11</span><span class="hljs-symbol">:</span><span class="hljs-number">54</span> /liguodong/hfile_tmp/_SUCCESS
drwxr-xr-x   - root supergroup          <span class="hljs-number">0</span> <span class="hljs-number">2015</span>-<span class="hljs-number">07</span>-<span class="hljs-number">06</span> <span class="hljs-number">11</span><span class="hljs-symbol">:</span><span class="hljs-number">54</span> /liguodong/hfile_tmp/cf
-rw-r--r--   <span class="hljs-number">3</span> root supergroup       <span class="hljs-number">1196</span> <span class="hljs-number">2015</span>-<span class="hljs-number">07</span>-<span class="hljs-number">06</span> <span class="hljs-number">11</span><span class="hljs-symbol">:</span><span class="hljs-number">54</span> /liguodong/hfile_tmp/cf/e20e3fe899de47a88ca476e05da2c9d7

hbase(main)<span class="hljs-symbol">:</span><span class="hljs-number">00</span>8<span class="hljs-symbol">:</span><span class="hljs-number">0</span>&gt; scan <span class="hljs-string">'hbase-tbl-002'</span>
<span class="hljs-constant">ROW</span>                  <span class="hljs-constant">COLUMN</span>+<span class="hljs-constant">CELL</span>
<span class="hljs-number">0</span> row(s) <span class="hljs-keyword">in</span> <span class="hljs-number">0</span>.<span class="hljs-number">0310</span> seconds


将数据导入表hbase-tbl-<span class="hljs-number">002</span>
[root<span class="hljs-variable">@hadoop1</span> datamove]<span class="hljs-comment"># hadoop jar /opt/cloudera/parcels/CDH/lib/hbase/hbase-server-0.98.6-cdh5.3.4.jar completebulkload </span>
/liguodong/hfile_tmp hbase-tbl-<span class="hljs-number">002</span>
</code></pre>

<h3 id="利用import将数据导入到hbase"><strong>利用Import将数据导入到HBase</strong></h3>

<p>1、HBase export工具导出的数据的格式是sequence file。 <br>
比如，在执行完命令<code>bin/hbase org.apache.hadoop.hbase.mapreduce.Export hbase-tbl-002 /test-output</code>后，hbase会启动一个MapReduce作业，作业完成后会在hdfs上面会生成sequence file格式的数据文件。 <br>
2、对于这类Sequence file格式的数据文件，HBase是可以通过Import工具直接将它导入到HBase的表里面的。 <br>
执行命令: <br>
<code>bin/hbase org.apache.hadoop.hbase.mapreduce.Import hbase-tbl-003  /test-output</code> <br>
随后hbase会启动一个MapReduce作业，然后表test会成功入数据。</p>

<pre class="prettyprint"><code class=" hljs cs">导出到hdfs
[root@hadoop1 lib]<span class="hljs-preprocessor"># hbase org.apache.hadoop.hbase.mapreduce.Export hbase-tb1-001 /liguodong/test-output</span>


创建新表
hbase(main):<span class="hljs-number">010</span>:<span class="hljs-number">0</span>&gt; create <span class="hljs-string">'hbase-tb1-003'</span>,<span class="hljs-string">'cf'</span>
<span class="hljs-number">0</span> row(s) <span class="hljs-keyword">in</span> <span class="hljs-number">0.4290</span> seconds

=&gt; Hbase::Table - hbase-tb1-<span class="hljs-number">003</span>

导入到hbase
[root@hadoop1 lib]<span class="hljs-preprocessor"># hbase org.apache.hadoop.hbase.mapreduce.Import hbase-tb1-003 /liguodong/test-output</span>


验证
hbase(main):<span class="hljs-number">011</span>:<span class="hljs-number">0</span>&gt; scan <span class="hljs-string">'hbase-tb1-003'</span>
ROW                  COLUMN+CELL
 <span class="hljs-number">1</span>                   column=cf:, timestamp=<span class="hljs-number">1436152834178</span>, <span class="hljs-keyword">value</span>=<span class="hljs-string">"Tony"</span>
 <span class="hljs-number">2</span>                   column=cf:, timestamp=<span class="hljs-number">1436152834178</span>, <span class="hljs-keyword">value</span>=<span class="hljs-string">"Ivy"</span>
 <span class="hljs-number">3</span>                   column=cf:, timestamp=<span class="hljs-number">1436152834178</span>, <span class="hljs-keyword">value</span>=<span class="hljs-string">"Tom"</span>
 <span class="hljs-number">4</span>                   column=cf:, timestamp=<span class="hljs-number">1436152834178</span>, <span class="hljs-keyword">value</span>=<span class="hljs-string">"Spark"</span>
 <span class="hljs-number">5</span>                   column=cf:, timestamp=<span class="hljs-number">1436152834178</span>, <span class="hljs-keyword">value</span>=<span class="hljs-string">"Storm"</span>
<span class="hljs-number">5</span> row(s) <span class="hljs-keyword">in</span> <span class="hljs-number">0.0580</span> seconds
</code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>