---
layout:     post
title:      Spark概述-------学习笔记
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p><strong>Spark特点：</strong></p><p><strong>运行速度快：</strong>使用DAG执行引擎以支持循环数据流与内存计算；</p><p><strong>容易使用：</strong>支持使用Scala、Java、Python和R语言进行编程，可以通过Spark Shell进行交互式编程 </p><strong>通用性：S</strong>park提供了完整而强大的技术栈，<strong>（基于内存计算spark core)，</strong>包括SQL查询、流式计算<strong>(spark straming)</strong>、机器学习<strong>(spark MLlib)</strong>和图算法组件<strong>(spark graphX)；<br>运行模式多样：</strong>可运行于独立的集群模式中，可运行于Hadoop中，也可运行于Amazon EC2等云环境中，并且可以访问HDFS、Cassandra、HBase、Hive等多种数据源 ；<p><br></p><p><strong>Scala特点：</strong></p><p>高并发，支持函数式编程；</p><p>语法简洁，提供优雅的API；</p><p>兼容java，支持Python、R等 ；</p><p>提供REPL（Read-Eval-Print Loop）,交互式解释器）；</p><p><strong>Hadoop缺点：</strong></p><p>表达有限：Map和Reduce函数的高度化简）</p><p>IO开销大：中间结果写磁盘；</p><p>高延时：任务间衔接涉及IO开销；</p><p>同步等待；</p><p><strong>spark优点：</strong></p><p>提供多种数据操作类型；</p><p>提供内存计算，优势迭代计算；</p><p>基于DAG的任务调度执行机制；</p><p><strong>三种类型：</strong></p><p>批处理：数十分钟到数小时之间；MapReduce；</p><p>交互式查询：数十秒到数分钟之间；Impala；</p><p>流处理：数百毫秒到数秒之间；Storm；</p><p><strong>缺点：</strong></p><p>无法无缝共享；</p><p>维护成本高；</p><p>难以统一协调和分配资源；</p><p><img src="https://img-blog.csdn.net/20180323114151542?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1BlaXhpblll/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""><br></p><p><br></p>            </div>
                </div>