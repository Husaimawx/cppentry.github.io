---
layout:     post
title:      Hadoop版本
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h2 id="1-hadoop-10">（1） Hadoop 1.0</h2>

<p>第一代hadoop，由分布式存储系统HDFS和分布式计算框架MapReduce组成，其中，HDFS由一个NameNode和多个DataNode组成，MapReduce由一个JobTracker和多个TaskTracker组成，对应Hadoop版本为Hadoop 1.x和0.21.X，0.22.x。</p>



<h2 id="2-hadoop-20">（2） Hadoop 2.0</h2>

<p>第二代Hadoop，为克服Hadoop 1.0中HDFS和MapReduce存在的各种问题而提出的。</p>

<p><strong>针对Hadoop 1.0中的单NameNode制约HDFS的扩展性问题，提出了HDFS Federation，它让多个NameNode分管不同的目录进而实现访问隔离和横向扩展；</strong></p>

<p><strong>针对Hadoop 1.0中的MapReduce在扩展性和多框架支持方面的不足，提出了全新的资源管理框架YARN(Yet Another Resource Negotiator)，它将JobTracker中的资源管理和作业控制功能分开，分别由组件ResourceManager和ApplicationMaster实现</strong>，其中，ResourceManager负责所有应用程序的资源分配，而ApplicationMaster仅负责管理一个应用程序。对应Hadoop版本为Hadoop 0.23.x和2.x。</p>



<h2 id="3-mapreduce-10或者mrv1mapreduce-version-1">（3） MapReduce 1.0或者MRv1（MapReduce version 1）</h2>

<p>第一代MapReduce计算框架，它由两部分组成：编程模型（programming model）和运行时环境（runtime environment）。</p>

<p><strong>它的基本编程模型是将问题抽象成Map和Reduce两个阶段</strong>，其中Map阶段将输入数据解析成key/value，迭代调用map()函数处理后，再以key/value的形式输出到本地目录，而Reduce阶段则将key相同的value进行规约处理，并将最终结果写到HDFS上。</p>

<p><strong>它的运行时环境由两类服务组成：JobTracker和TaskTracker</strong>，其中，JobTracker负责资源管理和所有作业的控制，而TaskTracker负责接收来自JobTracker的命令并执行它。</p>



<h2 id="4mapreduce-20或者mrv2mapreduce-version-2">（4）MapReduce 2.0或者MRv2（MapReduce version 2）</h2>

<p>MapReduce 2.0或者MRv2具有与MRv1相同的编程模型，唯一不同的是运行时环境。MRv2是在MRv1基础上经加工之后，运行于资源管理框架YARN之上的MRv1，它不再由JobTracker和TaskTracker组成，而是变为一个作业控制进程ApplicationMaster，且ApplicationMaster仅负责一个作业的管理，至于资源的管理，则由YARN完成。</p>

<p>简而言之，<strong>MRv1是一个独立的离线计算框架，而MRv2则是运行于YARN之上的MRv1。</strong></p>



<h2 id="5hadoop-mapreduce一个离线计算框架">（5）Hadoop-MapReduce（一个离线计算框架）</h2>

<p>Hadoop是google分布式计算框架MapReduce与分布式存储系统GFS的开源实现，由分布式计算框架MapReduce和分布式存储系统HDFS（Hadoop Distributed File System）组成，具有高容错性，高扩展性和编程接口简单等特点，现已被大部分互联网公司采用。</p>

<h2 id="6hadoop-yarnhadoop-20的一个分支实际上是一个资源管理系统">（6）Hadoop-YARN(Hadoop 2.0的一个分支，实际上是一个资源管理系统)</h2>

<p>YARN是Hadoop的一个子项目（与MapReduce并列），它实际上是一个资源统一管理系统，可以在上面运行各种计算框架（包括MapReduce、Spark、Storm、MPI等）。</p>

<hr>



<h2 id="总结">总结</h2>

<p>当前Hadoop版本比较混乱，让很多用户不知所措。实际上，当前Hadoop只有两个版本：Hadoop 1.0和Hadoop 2.0。</p>

<p><strong>其中，Hadoop 1.0由一个分布式文件系统HDFS和一个离线计算框架MapReduce组成</strong>；</p>

<p><strong>而Hadoop 2.0则包含一个支持NameNode横向扩展的HDFS，一个资源管理系统YARN和一个运行在YARN上的离线计算框架MapReduce。</strong></p>

<p>相比于Hadoop 1.0，Hadoop 2.0功能更加强大，且具有更好的扩展性、性能，并支持多种计算框架。</p>

<p>从开源角度看，YARN的提出，从一定程度上弱化了多计算框架的优劣之争。YARN是在Hadoop MapReduce基础上演化而来的，在MapReduce时代，很多人批评MapReduce不适合迭代计算和流失计算，于是出现了Spark和Storm等计算框架，而这些系统的开发者则在自己的网站上或者论文里与MapReduce对比，鼓吹自己的系统多么先进高效，而出现了YARN之后，则形势变得明朗：MapReduce只是运行在YARN之上的一类应用程序抽象，Spark和Storm本质上也是，他们只是针对不同类型的应用开发的，没有优劣之别，各有所长，合并共处，而且，今后所有计算框架的开发，不出意外的话，也应是在YARN之上。这样，一个以YARN为底层资源管理平台，多种计算框架运行于其上的生态系统诞生了。</p>

<hr>

<h2 id="framework-on-yarn">FrameWork On YARN</h2>

<p>运行在YARN上的框架，包括MapReduce-On-YARN, Spark-On-YARN, Storm-On-YARN和Tez-On-YARN。</p>

<p>（1）MapReduce-On-YARN：YARN上的离线计算；</p>

<p>（2）Spark-On-YARN：YARN上的内存计算；</p>

<p>（3）Storm-On-YARN：YARN上的实时/流式计算；</p>

<p>（4）Tez-On-YARN：YARN上的DAG计算</p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>