---
layout:     post
title:      hive相关操作
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h3 id="hive相关操作">hive相关操作</h3>

<p>学习了尚学堂的hive视频，做如下笔记。主要是hive中的建表，插入，函数相关的知识。</p>

<p>一、表数据</p>

<p>以下为人员信息表数据包含四个字段，分别为id、name、likes、address <br>
- 1，xiaoming,book-tv-football,beijing:haidian-tianjin:wuqing <br>
- 2，sunjian,tv-football,xian:gaoxin-tianjin:wuqing <br>
- 3，liuyang,book-code-football,henan:xinxiang-liaoning:dalian</p>

<p>二、DDL  几种方式创建表</p>

<ul>
<li>1、创建内部表 <br>
hive中数据类型比较丰富，如下有数组类型和键值对的map类型，上面数据字段之间以‘，’分隔，likes字段以‘-’分隔为数组样式，address字段为键值对形式（键‘：’值）。所以如下建表请注意这些分隔方式</li>
</ul>

<pre class="prettyprint"><code class=" hljs cpp">create table psn1(
id <span class="hljs-keyword">int</span>,
name <span class="hljs-built_in">string</span>,
likes <span class="hljs-stl_container"><span class="hljs-built_in">array</span>&lt;<span class="hljs-built_in">string</span>&gt;</span>,
address <span class="hljs-stl_container"><span class="hljs-built_in">map</span>&lt;<span class="hljs-built_in">string</span>,<span class="hljs-built_in">string</span>&gt;</span>
)
row format delimited
fields terminated by <span class="hljs-string">','</span>
collection items terminated by <span class="hljs-string">'-'</span>
<span class="hljs-built_in">map</span> keys terminated by <span class="hljs-string">':'</span>;</code></pre>

<ul>
<li>2、创建外部表</li>
</ul>

<pre class="prettyprint"><code class=" hljs lasso">create table psn2(
id int,
name <span class="hljs-built_in">string</span>,
likes <span class="hljs-built_in">array</span><span class="hljs-subst">&lt;</span><span class="hljs-built_in">string</span><span class="hljs-subst">&gt;</span>,
address <span class="hljs-built_in">map</span><span class="hljs-subst">&lt;</span><span class="hljs-built_in">string</span>,<span class="hljs-built_in">string</span><span class="hljs-subst">&gt;</span>
)
row format delimited
fields terminated <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>
collection items terminated <span class="hljs-keyword">by</span> <span class="hljs-string">'-'</span>
<span class="hljs-built_in">map</span> keys terminated <span class="hljs-keyword">by</span> <span class="hljs-string">':'</span>
location <span class="hljs-string">'/usr/psn2'</span>;</code></pre>

<ul>
<li>3、创建表3(根据其他表，创建中间表时使用)</li>
</ul>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> psn3
<span class="hljs-keyword">as</span>
<span class="hljs-keyword">select</span> id,name,likes,address <span class="hljs-keyword">from</span> psn1;</span></code></pre>

<ul>
<li>4、创建表4(创建psn1的表结构)</li>
</ul>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> psn4 <span class="hljs-keyword">like</span> psn1;</span></code></pre>

<ul>
<li>5、分区 <br>
创建表（加分区）例 按性别分区 分区字段不能使列名 <br>
装载数据时，按分区分别存储 <br>
（应用：日志文件过大就可以采用时间分区）</li>
</ul>



<pre class="prettyprint"><code class=" hljs cpp">create table psn5(
id <span class="hljs-keyword">int</span>,
name <span class="hljs-built_in">string</span>,
likes <span class="hljs-stl_container"><span class="hljs-built_in">array</span>&lt;<span class="hljs-built_in">string</span>&gt;</span>,
address <span class="hljs-stl_container"><span class="hljs-built_in">map</span>&lt;<span class="hljs-built_in">string</span>,<span class="hljs-built_in">string</span>&gt;</span>
)
partitioned by (sex <span class="hljs-built_in">string</span>)
row format delimited
fields terminated by <span class="hljs-string">','</span>
collection items terminated by <span class="hljs-string">'-'</span>
<span class="hljs-built_in">map</span> keys terminated by <span class="hljs-string">':'</span>;</code></pre>

<p>指定分区字段</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">load</span> data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'/root/data'</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> psn5 partition (sex=<span class="hljs-string">'boy'</span>);</span>
<span class="hljs-operator"><span class="hljs-keyword">load</span> data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'/root/data'</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> psn5 partition (sex=<span class="hljs-string">'girl'</span>);</span></code></pre>

<p>按分区查询</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> psn5 <span class="hljs-keyword">where</span> sex=<span class="hljs-string">'boy'</span>;</span></code></pre>

<p>添加分区</p>



<pre class="prettyprint"><code class=" hljs lua">alert <span class="hljs-built_in">table</span> psn5 partition (sex=<span class="hljs-string">'qita'</span>);</code></pre>

<p>删除分区(会删除分区的数据)</p>



<pre class="prettyprint"><code class=" hljs sql">alert table psn5 <span class="hljs-operator"><span class="hljs-keyword">drop</span> partition (sex=<span class="hljs-string">'qita'</span>);</span></code></pre>

<p>当分区字段定义了多个时（定义时分区字段有顺序，有层次结构） <br>
 ，载入数据要将多个分区字段都写清楚。</p>

<ul>
<li>6、hive中有正则表达式方式来清洗数据</li>
</ul>



<pre class="prettyprint"><code class=" hljs vbnet">CREATE TABLE apachelog (
  host <span class="hljs-built_in">STRING</span>,
  identity <span class="hljs-built_in">STRING</span>,
  user <span class="hljs-built_in">STRING</span>,
  time <span class="hljs-built_in">STRING</span>,
  request <span class="hljs-built_in">STRING</span>,
  status <span class="hljs-built_in">STRING</span>,
  size <span class="hljs-built_in">STRING</span>,
  referer <span class="hljs-built_in">STRING</span>,
  agent <span class="hljs-built_in">STRING</span>)
ROW FORMAT SERDE <span class="hljs-comment">'org.apache.hadoop.hive.serde2.RegexSerDe'</span>
<span class="hljs-keyword">WITH</span> SERDEPROPERTIES (
  <span class="hljs-string">"input.regex"</span> = <span class="hljs-string">"([^]*) ([^]*) ([^]*) (-|\\[^\\]*\\]) ([^ \"</span>]*|\<span class="hljs-string">"[^\"</span>]*\<span class="hljs-string">") (-|[0-9]*) (-|[0-9]*)(?: ([^ \"</span>]*|\<span class="hljs-string">".*\"</span>) ([^ \<span class="hljs-string">"]*|\"</span>.*\<span class="hljs-string">"))?"</span>
)
STORED <span class="hljs-keyword">AS</span> TEXTFILE;</code></pre>

<p>三、DML</p>

<ul>
<li>1、插入数据load方式 <br>
（load方式用的最多，不需要转为mr操作） <br>
加载本地数据（将本地文件上传到hdfs,在放到表的文件夹）</li>
</ul>

<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">load</span> data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'本地路径'</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> psn1;</span></code></pre>

<p>加载hdfs数据（移动hdfs的文件到表的文件夹）</p>

<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">load</span> data inpath <span class="hljs-string">'hdfs路径'</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> psn1;</span></code></pre>

<ul>
<li>2、(一般做分析psn1存储到结果表psn2)用下面方式</li>
</ul>



<pre class="prettyprint"><code class=" hljs sql">from psn1 pvs
<span class="hljs-operator"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> psn2
<span class="hljs-keyword">select</span> pvs.id,pvs.name,psv.likes,psv.address;</span></code></pre>

<ul>
<li>3、insert into （转换为mr执行，效率低一般不会使用）</li>
</ul>

<p>四、hive中的函数</p>

<ul>
<li>1、关系运算符  （A=B、…）</li>
<li>2、算数运算符 A+B、A%B、…</li>
<li>3、复杂类型函数 A[n]、A[key]、…</li>
<li><p>4、内置表生成函数（UDTF）（太多了，列出几个链接） <br>
官网： <br>
<a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF" rel="nofollow">https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF</a> <br>
博客园（中文）： <br>
<a href="https://www.cnblogs.com/MOBIN/p/5618747.html" rel="nofollow">https://www.cnblogs.com/MOBIN/p/5618747.html</a> <br>
易佰教程：  <br>
<a href="http://www.yiibai.com/hive/hive_built_in_functions.html" rel="nofollow">http://www.yiibai.com/hive/hive_built_in_functions.html</a></p></li>
<li><p>5、也可以自己写函数，上传到服务器。</p></li>
</ul>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>