---
layout:     post
title:      Hive入门教程
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/ch717828/article/details/48879867				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p style="font-size:14px;line-height:26px;color:#FFFFFF;font-family:'宋体', Calibri;background-color:rgb(128,128,128);">
什么是Hive</p>
<div><span style="line-height:28.8px;"></span>
<p class="p1"><span class="s1"><span style="font-size:14px;">(1)Hive是基于Hadoop之上的数据仓库</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">(2)Hives是建立在Hadoop HDFS上的数据库仓库基础架构</span></span></p>
<p class="p1"><span style="line-height:28.8px;"><span style="font-size:14px;">(3)Hive可以用来进行数据提取转换加载(ETL)</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">(4)Hive定义了简单的类似SQL查询语言，称为HQL它允许熟悉SQL的用户查询数据</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">(5)Hive允许熟悉MapReduce开发者的开发自定义的mapper和reducer来处理内建的mapper和reducer无法完成的复杂的分析工作</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">(6)Hive是SQL解析引擎，他将SQL语言转移成M/R Job然后在Hadoop执行</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">(7)Hive的表其实就是HDFS的目录/文件</span></span></p>
<p style="font-size:14px;line-height:26px;color:#FFFFFF;font-family:'宋体', Calibri;background-color:rgb(128,128,128);">
什么是数据仓库</p>
<div><span style="line-height:28.8px;"></span>
<p class="p1"><span class="s1"><span style="font-size:14px;">数据仓库是一个面向主题的、集成的、不可更新的、随时间不变化的数据集合，它用于支持企业或组织的决策分析处理</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"></span></span></p>
<p style="font-size:14px;line-height:26px;color:#FFFFFF;font-family:'宋体', Calibri;background-color:rgb(128,128,128);">
数据仓库的结构和建立过程</p>
<div><span style="line-height:28.8px;"><img src="https://img-blog.csdn.net/20151003191514734?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></span></div>
<div><span style="line-height:28.8px;"></span>
<p style="font-size:14px;line-height:26px;color:#FFFFFF;font-family:'宋体', Calibri;background-color:rgb(128,128,128);">
数据仓库模型</p>
<div><span style="line-height:28.8px;"></span>
<p class="p1"><span class="s1"><span style="font-size:14px;">（1）星型模型</span></span></p>
<img src="https://img-blog.csdn.net/20151003191620142?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></div>
<div><span style="line-height:28.8px;"><br></span></div>
<p class="p1"><span class="s1">（<span style="font-size:14px;">2）雪花模型（基于星型模型发展起来）</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><img src="https://img-blog.csdn.net/20151003192140932?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></span></span></p>
<br></div>
<div><span style="line-height:28.8px;"></span>
<p style="font-size:14px;line-height:26px;color:#FFFFFF;font-family:'宋体', Calibri;background-color:rgb(128,128,128);">
Hive的体系结构</p>
<div><span style="line-height:28.8px;"></span>
<p class="p1"><span class="s1"><span style="font-size:14px;">（1）Hive的元数据</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">hive将元数据存储在数据库中（metastore）,支持mysql、derby等</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">hive中的元数据包括表的名字，表的列和分区及其属性，表的属性（是否为外部表等），表的数据所在目录等</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><img src="https://img-blog.csdn.net/20151003194239992?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><br></span></span></p>
</div>
<p class="p1"><span class="s1"><span style="font-size:14px;">(2)HQL的执行过程</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">解释器、编译器、优化器完成HQL查询语句从词法分析、语法分析、编译、优化以及查询计划的生成。生成的查询计划存储在HDFS中，并在随后有MapReduce调用执行</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><img src="https://img-blog.csdn.net/20151003194309341?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">(3)Hive体系结构</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><img src="https://img-blog.csdn.net/20151003192222498?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></span></span></p>
<br></div>
<p style="font-size:14px;line-height:26px;color:#FFFFFF;font-family:'宋体', Calibri;background-color:rgb(128,128,128);">
Hive的安装</p>
<div>
<p class="p1"><span class="s1"><span style="font-size:14px;">(1)下载  <a href="http://hive.apache.org/downloads.html" rel="nofollow">
<span class="s2">hive.apache.org/downloads.html</span></a></span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">(2)安装</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">嵌入模式：</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span>元熟悉信息被存储在Hive自带的Derby数据库中</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span>只允许创建一个连接</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span>多用于Demo</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">本地模式：</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span>元数据信息被存储在MySQL数据库中</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span>MySQL数据库与Hive运行在同一台物理机器上</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span>多用于开发和测试</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">远程模式：</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span>Hive与Mysql安装在不同的操作系统上</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">(3) 将hive命令添加到path路径 </span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">   vi ~/.bash_prifile</span></span></p>
<img src="https://img-blog.csdn.net/20151003193754396?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></div>
<div><span style="line-height:28.8px;"></span></div>
<br><p class="p1"><span class="s1"><span style="font-size:14px;"></span></span></p>
<p class="p1"><span class="s1">source </span>~/.bash_profile</p>
<p class="p1"><span class="s1"><span style="font-size:14px;"> 添加完成后，在任何目录下执行 hive命令，hive会自动添加metastore_db目录，该目录用来保存元信息</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"></span></span></p>
<p class="p2"><span class="s1">（4）hive远程模式的安装</span></p>
<p class="p2"><span class="s1"><span></span>1.将数据库驱动jar包加入到hive的lib目录下</span></p>
<p class="p2"><span class="s1">    2.进入 hive的 conf目录，进行配置</span></p>
<p class="p2"><span class="s1">      vi hive-site.xml</span></p>
<img src="https://img-blog.csdn.net/20151003193926749?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br><p class="p1"><span class="s1"><span style="font-size:14px;"></span></span></p>
<p class="p1"><span class="s1"> 3.启动hive  </span></p>
<p class="p1"><span class="s1"><span></span>启动成功后， 配置的mysql数据库会创建一些表来保存元信息。（此时元信息表为空，因为还未创建表）</span></p>
<p class="p1"><span class="s1">   4. 创建表 </span></p>
<p class="p1"><span class="s1"><span></span>create table test1(tid int, tname string);</span></p>
<p class="p1"><span class="s1"><span></span>此时表信息会被添加到mysql的元信息表中</span></p>
<p class="p1"><span class="s1"></span></p>
<p class="p1"><span class="s1">（5）Hive的启动方式</span></p>
<p class="p1"><span class="s1"><span></span>CLI(命令行)方式</span></p>
<p class="p1"><span class="s1"><span></span>启动：hive</span></p>
<p class="p1"><span class="s1"><span></span>清屏：Ctrl+L 或者 ！clear</span></p>
<p class="p1"><span class="s1"><span></span>查看数据仓库中的表：show tables;</span></p>
<p class="p1"><span class="s1"><span></span>查看数据仓库中内置的函数：show functions;</span></p>
<p class="p1"><span class="s1"><span></span>查看表结构：desc 表名</span></p>
<p class="p1"><span class="s1"><span></span>查看HDFS上的文件： dfs -ls 目录</span></p>
<p class="p1"><span class="s1"><span></span>执行操作系统的命令： !命令</span></p>
<p class="p1"><span class="s1"><span></span>执行HQL语句： select *** from ****</span></p>
<p class="p1"><span class="s1"><span></span>执行SQL的脚本：source SQL文件</span></p>
<p class="p1"><span class="s1"><span></span>进行hive的静默模式（不打印调试信息，只打印结果）:hive -S</span></p>
<p class="p2"><span class="s1"></span></p>
<p class="p1"><span class="s1">   Web界面方式</span></p>
<p class="p1"><span class="s1"><span></span>端口号:999</span></p>
<p class="p1"><span class="s1"><span></span>启动方式：#hive —service hwi </span></p>
<p class="p1"><span class="s1"><span></span>通过浏览器访问:http://&lt;IP地址&gt;:9999/hwi</span></p>
<p class="p1"><span class="s1"><span></span>若报错没有war包，则需要下载源码并打包war包，并修改配置文件再启动。同时需要复制jdk的lib目录下的tools.jar 到hive的lib目录。</span></p>
<p class="p1"><span class="s1">   远程服务启动方式</span></p>
<p class="p1"><span class="s1"><span></span>端口号：10000</span></p>
<p class="p1"><span class="s1"><span></span>启动方式：hive —service hiveserver</span></p>
<p class="p1"><span class="s1"><span></span>以JDBC或ODBC的程序登录到hive中操作数据时，必须选用远程服务启动方式</span></p>
<br><p style="font-size:14px;line-height:26px;color:#FFFFFF;font-family:'宋体', Calibri;background-color:rgb(128,128,128);">
Hive的数据类型</p>
<div><br></div>
<div>
<p class="p1"><span class="s1"><span style="font-size:14px;">(1)基本数据类型</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>-tinyint/smallint/int/bigint :整数类型</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>-float/double: 浮点数类型</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>-boolean:布尔类型</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>-string:字符串类型</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>-varchar(20):字符串，最长为20</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>-char(20):字符串，长度为20</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">  (2)复杂数据类型</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－Array:数组类型，由一系列相同数据类型的元素组成</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－Map:集合类型，包含key-&gt;value键值对</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－Struct:结构类型 ，可以包含不同数据类型的元素，这些元素可以通过“点语法”的方式来<span></span><span></span>得到所需要的元素</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">  (3)时间类型</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－Date:从Hive0.12.0开始支持</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－Timestamp:从Hive0.8.0开始支持</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"></span></span></p>
<p style="font-size:14px;line-height:26px;color:#FFFFFF;font-family:'宋体', Calibri;background-color:rgb(128,128,128);">
Hive的数据存储</p>
<div></div>
<p class="p1"><span class="s1">（1）内部表</span></p>
<p class="p1"><span class="s1"><span></span>－与数据库中的Table在概念上是类似的</span></p>
<p class="p1"><span class="s1"><span></span>－每一个Table在Hive中都有一个相应的目录存储数据</span></p>
<p class="p1"><span class="s1"><span></span>－所有的Table数据（不包括External Table）都保存在这个目录中</span></p>
<p class="p1"><span class="s1"><span></span>－删除表时，元数据与数据都会被删除</span></p>
<p class="p1"><span class="s1">  例：</span></p>
<p class="p1"><span class="s1"><span></span>1.create table t1(tid int,tname string, age int); --默认存储在 '/user/<span></span>hive/warehouse'</span></p>
<p class="p1"><span class="s1"><span></span>2.指定存储目录：create table t2(tid int,tname string,age int) location<span></span>'/mytable/hive/t2';</span></p>
<p class="p1"><span class="s1"><span></span>3.指定分隔符：create table t1(tid int,tname string, age int) row<span></span><span></span>format delimited fields terminated by ',';</span></p>
<p class="p1"><span class="s1"><span></span>4.使用查询语句创建新表：create table t4 as select * from sample_data;</span></p>
<p class="p1"><span class="s1"><span></span>5.查看t4表的文件：hdfs dfs -cat /user/hive/warehouse/t4/000000_0</span></p>
<p class="p1"><span class="s1"><span></span>6.create table t5</span></p>
<p class="p1"><span class="s1"><span></span>row format delimited fields terminated by ',' as select * from<span></span><span></span>sample_data;</span></p>
<p class="p1"><span class="s1"><span></span>7.alter table t1 add columns(english int);</span></p>
<p class="p1"><span class="s1"><span></span>8.查看表结构：desc t1;</span></p>
<p class="p1"><span class="s1"><span></span>9.drop table t1</span></p>
<p class="p1"><span class="s1">（2）分区表</span></p>
<p class="p1"><span class="s1"><span></span>－Partition对应数据库的Partition列的密集索引</span></p>
<p class="p1"><span class="s1"><span></span>－在Hive中，表中的一个Partition对应于表下的一个目录，所有的Partition的数据都存储在对应的目录中</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1">例：<br><span></span>1.创建分区表：create table partition_table(sid int,sname string)</span></p>
<p class="p1"><span class="s1"><span></span>partitioned by (gender string)</span></p>
<p class="p1"><span class="s1"><span></span>row format delimited fields terminated by ',';</span></p>
<p class="p1"><span class="s1"><span></span>2.插入数据：insert into table partition_table partition(gender='M')<span></span><span></span>select sid,sname from sample_data where gender=‘M’;</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1">分区表可提高查询效率。</span></p>
<p class="p1"><span class="s1">使用explain查询SQL语句的执行计划：</span></p>
<p class="p1"><span class="s1">explain select * from sample_data where gender='M';</span></p>
<p class="p1"><span class="s1">explain select * from partition_table where gender=‘M';</span></p>
<p class="p1"><span class="s1">（3）外部表</span></p>
<p class="p1"><span class="s1"><span></span>－只想已经在HDFS中存在的数据，可以创建Partition</span></p>
<p class="p1"><span class="s1"><span></span>－它和内部表在元数据的组织上是相同的，而实际数据的存储则有较大的差异</span></p>
<p class="p1"><span class="s1"><span></span>－外部表只有一个过程，加载数据和创建表同时完成，并不会移动到数据仓库目录中，知识与外部数据建立一个链接。当删除一个外部表时，仅删除该链接。</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1">例：</span></p>
<p class="p1"><span class="s1"><span></span>1.创建外部表：create external table external_student(sid int,sname<span></span><span></span>string,age int)</span></p>
<p class="p1"><span class="s1"><span></span>row format delimited fields terminated by ','</span></p>
<p class="p1"><span class="s1"><span></span>location '/input';</span></p>
<p class="p1"><span class="s1"><span></span>2.查询数据：select * from external_student;</span></p>
<p class="p1"><span class="s1">（4）桶表</span></p>
<p class="p1"><span class="s1"><span></span>－桶表时对数据进行哈希取值，然后放到不同文件中</span></p>
<p class="p1"><span class="s1">例：</span></p>
<p class="p1"><span class="s1"><span></span>创建桶表：create table bucket_table(sid int,sname string,age int)</span></p>
<p class="p1"><span class="s1"><span></span>clustered by(name) into 5 buckets;</span></p>
<p class="p1"><span class="s1">（5）视图</span></p>
<p class="p1"><span class="s1"><span></span>－视图是一种虚表，是一个逻辑概念；可以跨越多张表</span></p>
<p class="p1"><span class="s1"><span></span>－视图建立在已有表的基础上，视图赖以建立的这些表称为基表</span></p>
<p class="p1"><span class="s1"><span></span>－视图可以简化复杂的查询</span></p>
<p class="p1"><span class="s1">例：</span></p>
<p class="p1"><span class="s1"><span></span>create view empinfo as</span></p>
<p class="p1"><span class="s1"><span></span>select e.empno,e.ename, e.sal,e.sal*12 annlsal,d.dname from emp<span></span><span></span>e,dept d where e.deptno=d.deptno;</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p style="font-size:14px;line-height:26px;color:#FFFFFF;font-family:'宋体', Calibri;background-color:rgb(128,128,128);">
Hive的数据导入</p>
<div><br></div>
<div style="font-family:Arial;font-size:14px;line-height:26px;"></div>
<p class="p1"><span class="s1"><span style="font-size:14px;">1）使用load语句</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>load data [local] inpath 'filepath' [overwrite]</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>into table tablename [partition (partcol1=val1,partcol2=val2…)]</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"> 例：将/root/data下的所有数据文件导入t3表中，并且覆盖原来的数据</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>load data local inpath '/root/data/' overwrite into table t3; </span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>将HDFS中 /input/student01.txt 导入到t3</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>load data inpath '/input/student01.txt' overwrite into table t3;</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>将数据导入分区表</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>load data local inpath '/root/data/data1.txt' into table<span></span><span></span><span></span>partition_table partition(gender=‘M');</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">（2）使用Sqoop实现数据的导入</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>需要下载和安装Sqoop</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"> 例子：<img src="https://img-blog.csdn.net/20151005190036815?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"></span></span></p>
<p style="font-size:14px;line-height:26px;color:#FFFFFF;font-family:'宋体', Calibri;background-color:rgb(128,128,128);">
Hive的数据查询</p>
<div>
<p class="p1"><span class="s1">（1）简单查询</span></p>
<img src="https://img-blog.csdn.net/20151005190444321?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></div>
<br><p class="p1"><span class="s1"></span></p>
<p class="p2"><span class="s1"><span style="font-size:14px;">Hive的Fetch Task功能开启后，简单查询将不会进行mapreduce操作。</span></span></p>
<p class="p2"><span class="s1"><span style="font-size:14px;">Fetch Task配置方式有以下3种：</span></span></p>
<p class="p2"><span class="s1"><span style="font-size:14px;">1.set hive.fetch.task.conversion=more;</span></span></p>
<p class="p2"><span class="s1"><span style="font-size:14px;">2.hive --hiveconf hive.fetch.task.conversion=more</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">（2）过滤和排序</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><img src="https://img-blog.csdn.net/20151005190559180?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></span></span></p>
<br><img src="https://img-blog.csdn.net/20151005190647343?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></div>
<div>
<p class="p1"><span class="s1">（<span style="font-size:14px;">3）Hive的函数</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>1.内置函数</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－数学函数：round、ceil、floor</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－字符函数：lower、upper、length、concat、substr、trim、lpad、rpad</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－收集函数：size</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－转换函数：cast</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－日期函数：to_date、year、month、day、weekofyear、datediff、date_add、<span></span><span></span><span></span>date_sub</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－条件函数：coalesce、case...when...</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span><span></span>  例：</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span><span></span><span></span>select ename, job, sal,</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span><span></span><span></span>case job when 'PRESIDENT' then sal+1000</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span><span></span><span></span>when 'MANAGER' then sal+800</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span><span></span><span></span>else sal+400</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span><span></span><span></span>end</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span><span></span><span></span><span></span>from emp;</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－聚合函数：count、sum、min、max、avg</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－表生成函数：explode</span></span></p>
<p class="p2"><span class="s1"><span style="font-size:14px;"></span></span></p>
<p class="p2"><span class="s1"><span style="font-size:14px;"></span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">(4)Hive的表连接</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－等值连接（若连接条件是=）</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－不等值连接（不是＝）</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－外连接</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>－自连接</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;">(5)Hive子查询</span></span></p>
<p class="p1"><span class="s1"><span style="font-size:14px;"><span></span>-hive只支持from和where字句中的子查询</span></span></p>
</div>
<p style="font-size:14px;line-height:26px;color:#FFFFFF;font-family:'宋体', Calibri;background-color:rgb(128,128,128);">
Hive的命令分为以下几类：</p>
<div>
<p class="p1"><span class="s1">－进入与退出Hive交互，比如：hive、quit、exit</span></p>
<p class="p1"><span class="s1">－参数设置：set、reset</span></p>
<p class="p1"><span class="s1">－资源文件管理：add、list、delete</span></p>
<p class="p1"><span class="s1">－执行shell命令：!Cmd</span></p>
<p class="p1"><span class="s1">－Hdfs文件操作： dfs-ls、dfs-cat</span></p>
<p class="p1"><span class="s1">－HiveQL:&lt;query string&gt;</span></p>
<p class="p1"><span class="s1">－执行外部文件：source FILE、compile’&lt;groovy string&gt;’ AS GROOVY NAMED &lt;name&gt;</span></p>
<br></div>
<div><span style="line-height:28.8px;"></span></div>
<br><br></div>
<br></div>
            </div>
                </div>