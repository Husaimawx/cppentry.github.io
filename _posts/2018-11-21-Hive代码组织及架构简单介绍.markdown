---
layout:     post
title:      Hive代码组织及架构简单介绍
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<div class="BlogAbstracts">
<div class="BlogTags">转:<a href="http://my.oschina.net/u/1243452/blog/173716" rel="nofollow">http://my.oschina.net/u/1243452/blog/173716</a></div>
<div class="BlogTags"> </div>
<div class="BlogTags"><a class="tag" href="http://www.oschina.net/search?scope=blog&amp;q=hive" rel="nofollow" style="color:rgb(62,109,142);line-height:2.4;font-size:8pt;text-decoration:none;border-right-color:rgb(127,159,182);border-bottom-color:rgb(62,109,142);border-right-width:1px;border-bottom-width:1px;border-right-style:solid;border-bottom-style:solid;background-color:rgb(224,234,241);">hive</a><span> </span><a class="tag" href="http://www.oschina.net/search?scope=blog&amp;q=%E6%BA%90%E7%A0%81" rel="nofollow" style="color:rgb(62,109,142);line-height:2.4;font-size:8pt;text-decoration:none;border-right-color:rgb(127,159,182);border-bottom-color:rgb(62,109,142);border-right-width:1px;border-bottom-width:1px;border-right-style:solid;border-bottom-style:solid;background-color:rgb(224,234,241);">源码</a></div>
</div>
<br><div class="BlogAnchor">
<p style="color:rgb(21,162,48);font-size:18px;"><em title="点击收起目录" class="corner" id="AnchorContentToggle" style="background:rgb(92,194,111);color:rgb(255,255,255);line-height:20px;font-size:13px;font-style:normal;font-weight:normal;display:inline-block;">目录[-]</em></p>
<div class="AnchorContent" id="AnchorContent">

<a href="http://my.oschina.net/u/1243452/blog/173716#OSC_h3_1" rel="nofollow" style="color:rgb(68,102,187);text-decoration:none;">hive三个主要组件</a>
<a href="http://my.oschina.net/u/1243452/blog/173716#OSC_h3_2" rel="nofollow" style="color:rgb(68,102,187);text-decoration:none;">其他组件</a>
<a href="http://my.oschina.net/u/1243452/blog/173716#OSC_h3_3" rel="nofollow" style="color:rgb(68,102,187);text-decoration:none;">hive辅助组件</a>
<a href="http://my.oschina.net/u/1243452/blog/173716#OSC_h2_4" rel="nofollow" style="color:rgb(68,102,187);text-decoration:none;"> Query Processor(hive核心，执行引擎)</a>
<a href="http://my.oschina.net/u/1243452/blog/173716#OSC_h2_5" rel="nofollow" style="color:rgb(68,102,187);text-decoration:none;">Compiler流程</a>
<a href="http://my.oschina.net/u/1243452/blog/173716#OSC_h2_6" rel="nofollow" style="color:rgb(68,102,187);text-decoration:none;">附带hive执行流程图</a>
<a href="http://my.oschina.net/u/1243452/blog/173716#OSC_h2_7" rel="nofollow" style="color:rgb(68,102,187);text-decoration:none;">参考文献</a></div>
</div>
<div class="BlogContent"><span id="OSC_h3_1"></span>
<h3 style="line-height:28.79px;font-size:16px;font-weight:600;">
<strong style="font-style:normal;font-weight:600;">hive三个主要组件</strong></h3>
<p>Serialzers/Deserialzers(trunk/serde)     此组件允许用户自己开发自定义序列化、反序列化文件解析器，hive自身也内置了一些序列化解析类。<br>
MetaStore(trunk/metastore)     此组件是hive的元数据服务器，用来存放数据仓库中所有表和分区的信息,hive元数据建表sql、升级sql脚本都存放在此目录下。<br>
Query Processor(trunk/ql)     此组件用于解析sql生成map/reduce作业，并按照先后顺序执行他们（hive核心包，熟读此包，可了解hive执行流程核心）。</p>
<span id="OSC_h3_2"></span>
<h3 style="line-height:28.79px;font-size:16px;font-weight:600;">
<a name="Hive%E4%BB%A3%E7%A0%81%E7%BB%84%E7%BB%87%E5%8F%8A%E6%9E%B6%E6%9E%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D-%E5%85%B6%E4%BB%96%E7%BB%84%E4%BB%B6" style="color:rgb(255,131,115);font-size:12px;"></a>其他组件</h3>
<p>Command Line Interface(trunk/cli)     此组件用于处理命令行提交作业。<br>
Hive Server(trunk/service)     此组件所有对外api接口的服务端(通过thrift实现)，可用于其他客户端与hive交互，比如jdbc。   <br>
Common(trunk/common)     hive基础代码库，hive各个组件信息的传递也是有此包HiveConf类来管理。<br>
Ant Utilities(trunk/ant)     此组件包含一些ant任务需要的基础代码<br>
Scripts(trunk/bin)     此组件包涵hive里的所有脚本，包括hive CLI的脚本。</p>
<span id="OSC_h3_3"></span>
<h3 style="line-height:28.79px;font-size:16px;font-weight:600;">
<a name="Hive%E4%BB%A3%E7%A0%81%E7%BB%84%E7%BB%87%E5%8F%8A%E6%9E%B6%E6%9E%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D-hive%E8%BE%85%E5%8A%A9%E7%BB%84%E4%BB%B6" style="color:rgb(255,131,115);font-size:12px;"></a>hive辅助组件</h3>
<p>trunk/conf     此目录包涵hive配置文件hive-default.xml、hive-site.xml<br>
trunk/data     hive测试所用数据<br>
trunk/ivy     管理hive跟hadoop各个版本之间的依赖<br>
trunk/lib     hive运行期间依赖的jar<br>
trunk/testlibs     用于构建单元测试</p>
<span id="OSC_h2_4"></span>
<h2 style="line-height:36px;font-size:20px;font-weight:600;">
<a name="Hive%E4%BB%A3%E7%A0%81%E7%BB%84%E7%BB%87%E5%8F%8A%E6%9E%B6%E6%9E%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D-%26nbsp%3BQueryProcessor%28hive%E6%A0%B8%E5%BF%83%EF%BC%8C%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E%29" style="color:rgb(255,131,115);font-size:12px;"></a> Query
 Processor(hive核心，执行引擎)</h2>
<p>Parse and SemanticAnalysis(ql/parse)     此组件主要用于编译sql-&gt;Abstract Syntax Trees抽象语法树-&gt;QB-&gt;Logical Plan-&gt;Physical Plan(hive 0.11多表join count(distinct)就在此步骤出错)</p>
<p>Optimizer (ql/optimizer)     基于规则，优化hive作业（not 基于cost），ColumnPruner：列裁剪，Predicate PushDown：谓词下推：将过滤操作推至TableScanOperator之后</p>
<p>Plan Components(ql/plan)     封装内置信息，用于compiler (Parser, SemanticAnalysis and Optimizer) 之间信息传递</p>
<p>MetaData Layer (ql/metadata) 连接hive元数据仓库，获得hive表、分区、列详细信息，用于编译sql语句</p>
<p>Map/Reduce Execution Engine (ql/exec)     执行提交的map/reduce作业</p>
<p>Hadoop Record Readers     hive提交hadoop作业时，文件输入输出工具</p>
<p>Hive Function Framework (ql/udf)     看名字就知道，hive内置udf</p>
<span id="OSC_h2_5"></span>
<h2 style="line-height:36px;font-size:20px;font-weight:600;">
<a name="Hive%E4%BB%A3%E7%A0%81%E7%BB%84%E7%BB%87%E5%8F%8A%E6%9E%B6%E6%9E%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D-Compiler%E6%B5%81%E7%A8%8B" style="color:rgb(255,131,115);font-size:12px;"></a>Compiler流程</h2>
<ol style="line-height:22.5px;list-style-type:decimal;"><li>parse，语义分析， 通过antlr解析生成抽象语法树 Driver.compile()</li><li>sa，类型检查与语义分析 SemanticAnalyzer.doPhase1Ctx()  。。。列名是否存在</li><li>lpg，logic plan generator，查询块到逻辑操作数，SemanticAnalyzer.genPlan()。。。什么cube、rollup操作树都在这一步完工</li><li>lpo，logic plan optimizer，逻辑计划优化，SemanticAnalyzer.optimizer()。。。列剪辑、谓语下推、分区剪辑等等</li><li>ppg，physical plan generator，生成物理执行计划，SemanticAnalyzer.genMapRedTasks()</li><li>ppo，physical plan optimizer，物理执行优化，PhysicalOptimizer.optimize()</li></ol><p>hive多表join count(distinct)异常，是因为步骤3 lpg生成的逻辑执行计划有bug</p>
<span id="OSC_h2_6"></span>
<h2 style="line-height:36px;font-size:20px;font-weight:600;">
<a name="Hive%E4%BB%A3%E7%A0%81%E7%BB%84%E7%BB%87%E5%8F%8A%E6%9E%B6%E6%9E%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D-%E9%99%84%E5%B8%A6hive%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%9B%BE" style="color:rgb(255,131,115);font-size:12px;"></a>附带hive执行流程图</h2>
<p>Driver类是hive最重要的类，了解其run、compile、execute方法，就清楚hive的核心。 </p>
<p><a href="http://static.oschina.net/uploads/space/2013/1103/133843_LXhb_1243452.png" rel="nofollow" style="color:rgb(255,131,115);font-size:12px;"><img alt="" src="http://static.oschina.net/uploads/space/2013/1103/133843_LXhb_1243452.png" style="background:rgb(244,247,249);border:1px solid rgb(221,221,221);"></a></p>
<span id="OSC_h2_7"></span>
<h2 style="line-height:36px;font-size:20px;font-weight:600;">
<a name="Hive%E4%BB%A3%E7%A0%81%E7%BB%84%E7%BB%87%E5%8F%8A%E6%9E%B6%E6%9E%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D-%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE" style="color:rgb(255,131,115);font-size:12px;"></a>参考文献</h2>
<p>hive源码解析：<a href="http://blog.csdn.net/lpxuan151009/article/details/7956518" rel="nofollow" style="color:rgb(255,131,115);font-size:12px;">http://blog.csdn.net/lpxuan151009/article/details/7956518</a></p>
<p>hive编译解析：<a href="http://blog.csdn.net/lalaguozhe/article/details/9339679" rel="nofollow" style="color:rgb(255,131,115);font-size:12px;">http://blog.csdn.net/lalaguozhe/article/details/9339679</a></p>
<p>hive开发者指南：<a href="https://cwiki.apache.org/confluence/display/Hive/DeveloperGuide" rel="nofollow" style="color:rgb(255,131,115);font-size:12px;">https://cwiki.apache.org/confluence/display/Hive/DeveloperGuide</a></p>
<p>hive svn地址：<a href="http://svn.apache.org/repos/asf/hive/" rel="nofollow" style="color:rgb(255,131,115);font-size:12px;">http://svn.apache.org/repos/asf/hive/</a></p>
</div>
            </div>
                </div>