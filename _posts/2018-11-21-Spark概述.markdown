---
layout:     post
title:      Spark概述
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/siegecat/article/details/52467767				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h1 id="spark概述">Spark概述</h1>



<h2 id="spark特点">Spark特点</h2>

<ul>
<li>内存计算</li>
<li>中间处理数据也放在内存中，减少磁盘I/O</li>
<li>支持复杂查询：包括filter、SQL查询、流式查询等</li>
<li>支持实时流处理（Hadoop只能离线处理）</li>
<li>迭代计算</li>
</ul>



<h2 id="spark应用框架">Spark应用框架</h2>



<h3 id="spark-streaming">Spark Streaming</h3>



<h3 id="tachyon">Tachyon</h3>

<p>过去，Spark的计算功能和内存管理都是在JVM中，导致JVM负载较高，且JVM崩溃后数据会丢失。 <br>
Tachyon的目的是分离Spark的计算功能和内存管理功能，使内存管理脱离JVM，专门设计Tachyon在JVM外管理内存数据。这解决了Spark在数据共享、缓存数据丢失情况下的效率较低的问题，还减少了JVM因数据量过多而导致的大量GC操作，提高了Spark效率。</p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>