---
layout:     post
title:      hdfs
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h1><strong><span style="color:#ff0000;"><br></span></strong></h1>
<h1><strong><span style="color:#ff0000;">注：</span></strong></h1>
<p>1，代码测试通过，只需要在main方法换成自己的路径即可</p>
<p>2，本demo 借鉴和优化残剑的博客，特此表示感谢。 http://www.cnblogs.com/liuling/p/2013-6-17-01.html  </p>
<p>2，本demo解决抛出io流中的异常，可以指定访问用户。本demo用的是hadoop用户</p>
<p>在代码中可以搜到，可以在文件服务器上赋予权限</p>
<p><br></p>
<p><br></p>
<p><br></p>
<p><br></p>
<p>package com.hadoop;</p>
<br><br>
import java.io.IOException;<br>
import java.io.InputStream;<br>
import java.net.URI;<br>
import java.net.URISyntaxException;<br><br><br>
import org.apache.hadoop.conf.Configuration;<br>
import org.apache.hadoop.fs.FSDataOutputStream;<br>
import org.apache.hadoop.fs.FileStatus;<br>
import org.apache.hadoop.fs.FileSystem;<br>
import org.apache.hadoop.fs.Path;<br>
import org.apache.hadoop.io.IOUtils;<br><br><br><br><br>
public class HdfsTest {<br><span></span><br><span></span><br><span></span><br><span></span><br><span></span>public static FileSystem conf(String path) throws URISyntaxException, IOException, InterruptedException{<br><span></span><br><span></span>Configuration conf = new Configuration();<br>
        URI uri = new URI(path);<br>
        FileSystem fs = FileSystem.get(uri, conf, "hadoop");<br><span></span>return fs;<br><span></span>}<br>
    <br>
    //创建新文件<br>
    public static void createFile(String dst , byte[] contents) throws IOException, URISyntaxException, InterruptedException {<br><br><br>
        <span></span>Path dstPath = new Path(dst); //目标路径<br>
        <span></span>FSDataOutputStream outputStream = conf(dst).create(dstPath);<br>
        <span></span>outputStream.write(contents);<br>
        <span></span>outputStream.close();<br><span></span>conf(dst).close();<br><br><br>
        //打开一个输出流<br>
        System.out.println("文件创建成功！");<br>
    }<br>
    <br>
    //上传本地文件<br>
    public static void uploadFile(String src,String dst) throws IOException, URISyntaxException, InterruptedException{<br>
        Path srcPath = new Path(src); //原路径<br>
        Path dstPath = new Path(dst); //目标路径<br>
        //调用文件系统的文件复制函数,前面参数是指是否删除原文件，true为删除，默认为false<br>
        conf(dst).copyFromLocalFile(false,srcPath, dstPath);<br>
        <br>
        System.out.println("------------list files------------"+"\n");<br>
        FileStatus [] fileStatus = conf(dst).listStatus(dstPath);<br>
        for (FileStatus file : fileStatus) <br>
        {<br>
            System.out.println(file.getPath());<br>
        }<br>
        conf(dst).close();<br>
    }<br>
    <br>
    //文件重命名<br>
    public static void rename(String oldName,String newName) throws IOException, URISyntaxException, InterruptedException{<br>
        Path oldPath = new Path(oldName);<br>
        Path newPath = new Path(newName);<br><br><br>
        boolean isok = conf(oldName).rename(oldPath, newPath);<br>
        if(isok){<br>
            System.out.println("rename ok!");<br>
        }else{<br>
            System.out.println("rename failure");<br>
        }<br>
        conf(oldName).close();<br>
    }<br>
    //删除文件<br>
    public static void delete(String filePath) throws IOException, URISyntaxException, InterruptedException{<br>
    <span></span><br>
        Path path = new Path(filePath);<br>
        boolean isok = conf(filePath).deleteOnExit(path);<br>
        if(isok){<br>
            System.out.println("delete ok!");<br>
        }else{<br>
            System.out.println("delete failure");<br>
        }<br>
        conf(filePath).close();<br>
    }<br>
    <br>
    //创建目录<br>
    public static void mkdir(String path) throws IOException, URISyntaxException, InterruptedException{<br>
        Path srcPath = new Path(path);<br>
        boolean isok = conf(path).mkdirs(srcPath);<br>
        if(isok){<br>
            System.out.println("create dir ok!");<br>
        }else{<br>
            System.out.println("create dir failure");<br>
        }<br>
        conf(path).close();<br>
    }<br>
    <br>
    //读取文件的内容<br>
    public static void readFile(String filePath) throws IOException, URISyntaxException, InterruptedException{<br><br><br>
        Path srcPath = new Path(filePath);<br>
        InputStream in = null;<br>
        try {<br>
            in = conf(filePath).open(srcPath);<br>
            IOUtils.copyBytes(in, System.out, 4096, false); //复制到标准输出流<br>
       } finally {<br>
           IOUtils.closeStream(in);<br>
       }<br>
   }<br>
   <br>
   <br>
   public static void main(String[] args) throws Exception {<br>
       //测试上传文件<br>
       //uploadFile("D:\\c1.txt", "hdfs://10.15.0.55:49000/lexue");<br>
       //测试创建文件<br>
       byte[] contents =  "hello world 世界你好\n".getBytes();<br>
       createFile("hdfs://10.15.0.55:49000/lexue/111111.txt",contents);<br>
       //测试重命名<br>
       //rename("hdfs://10.15.0.55:49000/lexue/刘红军nb.txt", "hdfs://10.15.0.55:49000/lexue/刘红军111.txt");<br>
       //测试删除文件<br>
       //delete("hdfs://10.15.0.55:49000/lexue/刘红军111.txt"); //使用相对路径<br>
       //delete("hdfs://10.15.0.55:49000/lexue");    //删除目录<br>
       //测试新建目录<br>
       //mkdir("hdfs://10.15.0.55:49000/lexue");<br>
       //测试读取文件<br>
       //readFile("hdfs://10.15.0.55:49000/lexue/111111.txt");<br>
   }<br><br><br>
}
            </div>
                </div>