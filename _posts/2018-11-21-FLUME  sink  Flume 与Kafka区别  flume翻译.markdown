---
layout:     post
title:      FLUME  sink  Flume 与Kafka区别  flume翻译
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：作者：韩亚飞_yue31313_韩梦飞沙 QQ:313134555 					https://blog.csdn.net/yue31313/article/details/79855438				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p align="left" style="background:#F6F8FA;"></p><p><br></p><p align="left"></p><p style="background-color:#FFFFFF;">FLUME</p><p style="background-color:#FFFFFF;">是一个<span style="color:#333333;background:#FFFFFF;">海量</span>日志收集系统。</p><p style="background-color:#FFFFFF;">Flume提供了从console（控制台）、RPC（Thrift-RPC）、text（文件）、tail（UNIX tail）、syslog（syslog日志系统），支持TCP和UDP等2种模式），exec（命令执行）等数据源上收集数据的能力。</p><p style="background-color:#FFFFFF;"> </p><p style="background-color:#FFFFFF;">Flume可以将应用产生的数据存储到任何集中存储器中，比如HDFS,HBase</p><p style="background-color:#FFFFFF;"> </p><p style="background-color:#FFFFFF;">Flume的结构</p><p style="background-color:#FFFFFF;"><span style="color:#333333;background:#FFFFFF;">Agent</span><span style="color:#333333;background:#FFFFFF;">主要由</span><span style="color:#333333;background:#FFFFFF;">:source</span><span style="color:#333333;background:#FFFFFF;">（源）</span><span style="color:#333333;background:#FFFFFF;">,channel</span><span style="color:#333333;background:#FFFFFF;">（渠道）</span><span style="color:#333333;background:#FFFFFF;">,sink</span><span style="color:#333333;background:#FFFFFF;">（洗涤槽</span><span style="color:#333333;background:#FFFFFF;">;</span><span style="color:#333333;background:#FFFFFF;">）三个组件组成</span><span style="color:#333333;background:#FFFFFF;">.</span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;background:#FFFFFF;"> </span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;background:#FFFFFF;">sink</span></p><table border="0" cellspacing="0" cellpadding="0" style="background-color:#FFFFFF;"><tbody><tr><td valign="top"><p><span style="color:#333333;">水池</span><span style="color:#333333;">; </span><span style="color:#333333;">洗涤槽</span><span style="color:#333333;">; </span><span style="color:#333333;">污水坑</span><span style="color:#333333;">;</span></p></td> </tr></tbody></table><p style="background-color:#FFFFFF;"><span style="color:#333333;">淹没</span><span style="color:#333333;">; </span><span style="color:#333333;">下落</span><span style="color:#333333;">;</span>   </p><p style="background-color:#FFFFFF;"> </p><p style="background-color:#FFFFFF;"><span style="color:#333333;">Source:</span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;">从数据发生器接收数据</span><span style="color:#333333;">,</span><span style="color:#333333;">并将接收的数据以</span><span style="color:#333333;">Flume</span><span style="color:#333333;">的</span><span style="color:#333333;">event</span><span style="color:#333333;">格式传递给一个或者多个通道</span><span style="color:#333333;">channal,Flume</span><span style="color:#333333;">提供多种数据接收的方式</span><span style="color:#333333;">,</span><span style="color:#333333;">比如</span><span style="color:#333333;">Avro,Thrift,twitter1%</span><span style="color:#333333;">等</span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;">Channel:</span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;">channal</span><span style="color:#333333;">是一种短暂的存储容器</span><span style="color:#333333;">,</span><span style="color:#333333;">它将从</span><span style="color:#333333;">source</span><span style="color:#333333;">处接收到的</span><span style="color:#333333;">event</span><span style="color:#333333;">格式的数据缓存起来</span><span style="color:#333333;">,</span><span style="color:#333333;">直到它们被</span><span style="color:#333333;">sinks</span><span style="color:#333333;">消费掉</span><span style="color:#333333;">,</span><span style="color:#333333;">它在</span><span style="color:#333333;">source</span><span style="color:#333333;">和</span><span style="color:#333333;">sink</span><span style="color:#333333;">间起着一共桥梁的作用</span><span style="color:#333333;">,channal</span><span style="color:#333333;">是一个完整的事务</span><span style="color:#333333;">,</span><span style="color:#333333;">这一点保证了数据在收发的时候的一致性</span><span style="color:#333333;">. </span><span style="color:#333333;">并且它可以和任意数量的</span><span style="color:#333333;">source</span><span style="color:#333333;">和</span><span style="color:#333333;">sink</span><span style="color:#333333;">链接</span><span style="color:#333333;">. </span><span style="color:#333333;">支持的类型有</span><span style="color:#333333;">: JDBC channel , File System channel , Memort channel</span><span style="color:#333333;">等</span><span style="color:#333333;">.</span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;">sink:</span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;">sink</span><span style="color:#333333;">将数据存储到集中存储器比如</span><span style="color:#333333;">Hbase</span><span style="color:#333333;">和</span><span style="color:#333333;">HDFS,</span><span style="color:#333333;">它从</span><span style="color:#333333;">channals</span><span style="color:#333333;">消费数据</span><span style="color:#333333;">(events)</span><span style="color:#333333;">并将其传递给目标地</span><span style="color:#333333;">. </span><span style="color:#333333;">目标地可能是另一个</span><span style="color:#333333;">sink,</span><span style="color:#333333;">也可能</span><span style="color:#333333;">HDFS,HBase.</span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;">==</span></p><p></p><h1 class="postTitle" style="background-color:rgb(255,255,255);color:rgb(51,51,51);font-weight:400;line-height:1.8;font-family:Verdana, Arial, Helvetica, sans-serif;"><a class="postTitle2" href="http://www.cnblogs.com/ibyte/p/5830715.html" rel="nofollow" style="color:rgb(51,51,51);">Flume 与Kafka区别</a></h1><div class="clear" style="background-color:rgb(255,255,255);color:rgb(125,139,141);clear:both;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;"></div><div class="postBody" style="font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;"><div class="blogpost-body" style="line-height:1.8;"><p style="background-color:rgb(255,255,255);"><span style="color:#333333;">　　　今天开会讨论日志处理</span><span style="color:#ff0000;">为什么要同时使用Flume和Kafka</span><span style="color:#333333;">，是否可以只用Kafka 不使用Flume？当时想到的就</span><span style="color:#ff6600;">只用Flume的接口多</span><span style="color:#333333;">，</span><span style="color:#ff6600;">不管是输入接口(socket 和 文件)以及输出接口(Kafka/HDFS/HBase等)。</span></p><p><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);">　　　考虑单一应用场景，从简化系统的角度考虑，在满足应用需求的情况下可能只使用一个比较好。但是考虑到现有系统业务发展，为了后面的灵活扩展，在先用系统设计时留有一定的扩展性感觉更重要，可能</span><span style="color:rgb(51,51,51);background-color:rgb(255,102,0);">使用Flume+kafka架构相对只使用Kafka会多占用1-2台机器做Flume日志采集</span><span style="background-color:rgb(255,255,255);"><span style="color:#333333;">，但是</span><span style="color:#ff6600;">为了方便以后日志数据处理方式的扩展，可以采用Flume+kafka架构</span><span style="color:#333333;">。</span></span></p><p><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);">　　Flume ：管道 ----个人认为比较</span><span style="background-color:rgb(204,102,0);"><span style="color:#ffffff;">适合有多个生产者场景，或者有写入Hbase、HDFS和kafka需求的场景</span></span><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);">。</span></p><p style="color:rgb(51,51,51);"><span style="background-color:rgb(255,255,255);">　　Kafka ：消息队列-----由于</span><span style="background-color:rgb(255,102,102);">Kafka是Pull模式，因此适合有多个消费者的场景。</span></p><p style="background-color:rgb(255,255,255);color:rgb(51,51,51);">　　目前应用场景，一台日志转发机负责产生日志。后端需要通过Strom消费日志信息，建议可以设置成log--&gt;Kafka-&gt;Strom.如果以后有写入Hbase或者HDFS的需求可以，在Kafka后面再接上Strom，或者在日志转发机上直接日志落地，由Flume去读取日志消息。</p></div></div><p style="background-color:#FFFFFF;"><span style="color:#333333;">==</span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;"></span></p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">关于Flume 的 一些核心概念：</p><table class="table table-bordered" style="border-spacing:0px;border:1px solid #C0C0C0;color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:rgb(255,255,255);width:535px;"><tbody><tr><td style="border-color:#C0C0C0;border-collapse:collapse;">组件名称    </td><td style="border-color:#C0C0C0;border-collapse:collapse;">功能介绍</td></tr><tr><td style="border-color:#C0C0C0;border-collapse:collapse;">Agent代理</td><td style="border-color:#C0C0C0;border-collapse:collapse;">使用JVM 运行Flume。每台机器运行一个agent，但是可以在一个agent中包含多个sources和sinks。</td></tr><tr><td style="border-color:#C0C0C0;border-collapse:collapse;">Client客户端</td><td style="border-color:#C0C0C0;border-collapse:collapse;">生产数据，运行在一个独立的线程。</td></tr><tr><td style="border-color:#C0C0C0;border-collapse:collapse;">Source源</td><td style="border-color:#C0C0C0;border-collapse:collapse;">从Client收集数据，传递给Channel。</td></tr><tr><td style="border-color:#C0C0C0;border-collapse:collapse;">Sink接收器</td><td style="border-color:#C0C0C0;border-collapse:collapse;">从Channel收集数据，进行相关操作，运行在一个独立线程。</td></tr><tr><td style="border-color:#C0C0C0;border-collapse:collapse;">Channel通道</td><td style="border-color:#C0C0C0;border-collapse:collapse;">连接 sources 和 sinks ，这个有点像一个队列。</td></tr><tr><td style="border-color:#C0C0C0;border-collapse:collapse;">Events事件</td><td style="border-color:#C0C0C0;border-collapse:collapse;">传输的基本数据负载。</td></tr></tbody></table><br><p style="background-color:#FFFFFF;"><span style="color:#333333;"><br></span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;"><br></span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;"><br></span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;"><br></span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;"><br></span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;"><br></span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;"><br></span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;">--</span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;">flume翻译<br></span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;">水槽    <span class="op_dict3_font14 op_dict3_gap_small"></span><span class="op_dict3_font16 op_dict3_gap_small">[flu:m]</span></span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;"><span class="op_dict3_font16 op_dict3_gap_small">--</span></span></p><p style="background-color:#FFFFFF;"><span style="color:#333333;"><span class="op_dict3_font16 op_dict3_gap_small"></span></span></p><h1 class="postTitle" style="font-size:18.2px;border-bottom:1px solid rgb(153,153,153);line-height:2em;width:690.4px;clear:both;color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;text-align:left;background-color:rgb(255,255,255);"><a class="postTitle2" href="http://www.cnblogs.com/cnmenglang/p/6550427.html" rel="nofollow" style="color:rgb(51,153,0);">Flume+kafka 整合</a></h1><br><p style="background-color:#FFFFFF;"><span style="color:#333333;"><span class="op_dict3_font16 op_dict3_gap_small"></span></span></p><h5 style="font-size:12px;color:rgb(51,51,51);font-family:Verdana, Arial, Helvetica, sans-serif;text-align:left;background-color:rgb(255,255,255);">flume安装目录conf下新建kafka.properties文件，启动时也应当用此配置文件作为参数启动。下面看具体内容：</h5><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><img src="https://images2015.cnblogs.com/blog/941878/201703/941878-20170314192548729-668233427.png" alt="" width="524" height="134" style="border:0px;"></p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">1. kafka.properties：</p><div class="cnblogs_Highlighter sh-gutter" style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><div><div class="syntaxhighlighter csharp" style="width:683.4px;font-size:1em;"><table border="0" cellpadding="0" cellspacing="0" style="border-spacing:0px;border:1px solid #C0C0C0;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><tbody style="background:none;line-height:1.1em;vertical-align:baseline;min-height:auto;"><tr style="background:none;border-top:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><td class="gutter" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;width:35px;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;color:rgb(175,175,175);"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">1</div><div class="line number2 index1 alt1" style="background-image:none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">2</div><div class="line number3 index2 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">3</div><div class="line number4 index3 alt1" style="background-image:none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">4</div><div class="line number5 index4 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">5</div><div class="line number6 index5 alt1" style="background-image:none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">6</div><div class="line number7 index6 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">7</div><div class="line number8 index7 alt1" style="background-image:none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">8</div><div class="line number9 index8 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">9</div><div class="line number10 index9 alt1" style="background-image:none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">10</div><div class="line number11 index10 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">11</div><div class="line number12 index11 alt1" style="background-image:none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">12</div><div class="line number13 index12 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">13</div><div class="line number14 index13 alt1" style="background-image:none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">14</div><div class="line number15 index14 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">15</div><div class="line number16 index15 alt1" style="background-image:none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">16</div><div class="line number17 index16 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">17</div><div class="line number18 index17 alt1" style="background-image:none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">18</div><div class="line number19 index18 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">19</div><div class="line number20 index19 alt1" style="background-image:none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">20</div><div class="line number21 index20 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">21</div></td><td class="code" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><div style="background:none;border:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.sources = s1                                                                                                                  </code></div><div class="line number2 index1 alt1" style="background-image:none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.channels = c1                                                                                                                 </code></div><div class="line number3 index2 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.sinks = k1                                                                                                                    </code></div><div class="line number4 index3 alt1" style="background-image:none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp spaces" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;">                                                                                                                                     </code> </div><div class="line number5 index4 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.sources.s1.type=exec                                                                                                          </code></div><div class="line number6 index5 alt1" style="background-image:none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.sources.s1.command=tail -F /tmp/logs/kafka.log                                                                                </code></div><div class="line number7 index6 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.sources.s1.channels=c1                                                                                                        </code></div><div class="line number8 index7 alt1" style="background-image:none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.channels.c1.type=memory                                                                                                       </code></div><div class="line number9 index8 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.channels.c1.capacity=10000                                                                                                    </code></div><div class="line number10 index9 alt1" style="background-image:none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.channels.c1.transactionCapacity=100                                                                                           </code></div><div class="line number11 index10 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp spaces" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;">                                                                                                                                     </code> </div><div class="line number12 index11 alt1" style="background-image:none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp preprocessor" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:#808080;">#设置Kafka接收器                                                                                                                    </code></div><div class="line number13 index12 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.sinks.k1.type= org.apache.flume.sink.kafka.KafkaSink                                                                          </code></div><div class="line number14 index13 alt1" style="background-image:none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp preprocessor" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:#808080;">#设置Kafka的broker地址和端口号                                                                                                      </code></div><div class="line number15 index14 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.sinks.k1.brokerList=master:9092                                                                                               </code></div><div class="line number16 index15 alt1" style="background-image:none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp preprocessor" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:#808080;">#设置Kafka的Topic                                                                                                                   </code></div><div class="line number17 index16 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.sinks.k1.topic=kafkatest                                                                                                      </code></div><div class="line number18 index17 alt1" style="background-image:none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp preprocessor" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:#808080;">#设置序列化方式                                                                                                                     </code></div><div class="line number19 index18 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.sinks.k1.serializer.</code><code class="csharp keyword" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,255);">class</code><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">=kafka.serializer.StringEncoder                                                                      </code></div><div class="line number20 index19 alt1" style="background-image:none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp spaces" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;">                                                                                                                                     </code> </div><div class="line number21 index20 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">agent.sinks.k1.channel=c1    </code></div></div></td></tr></tbody></table></div></div></div><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">关于配置文件中注意3点：</p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">　　a.  agent.sources.s1.command=tail -F /tmp/logs/kafka.log   </p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">　　b.  agent.sinks.k1.brokerList=master:9092</p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><span><span>　　</span></span>c . agent.sinks.k1.topic=kafkatest </p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">2.很明显，由配置文件可以了解到:</p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">　　a.我们需要在/tmp/logs下建一个kafka.log的文件，且向文件中输出内容（下面会说到）;</p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">　　b.flume连接到kafka的地址是 master:9092，注意不要配置出错了；</p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">　　c.flume会将采集后的内容输出到Kafka topic 为kafkatest上，所以我们启动zk（zookeeper）,kafka后需要打开一个终端消费topic kafkatest的内容。这样就可以看到flume与kafka之间玩起来了~~</p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">具体操作：</p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">　　a.在/tmp/logs下建立空文件kafka.log。在mfz 用户目录下新建脚本kafkaoutput.sh(一定要给予可执行权限)，用来向kafka.log输入内容: kafka_test***</p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><img src="https://images2015.cnblogs.com/blog/941878/201703/941878-20170314193343338-400410854.png" alt="" width="445" height="97" style="border:0px;">　　</p><div class="cnblogs_Highlighter sh-gutter" style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><div><div class="syntaxhighlighter csharp" style="width:683.4px;font-size:1em;"><table border="0" cellpadding="0" cellspacing="0" style="border-spacing:0px;border:1px solid #C0C0C0;width:683.2px;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><tbody style="background:none;line-height:1.1em;vertical-align:baseline;min-height:auto;"><tr style="background:none;border-top:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><td class="gutter" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;width:35px;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;color:rgb(175,175,175);"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">1</div><div class="line number2 index1 alt1" style="background-image:none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">2</div><div class="line number3 index2 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">3</div></td><td class="code" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><div style="background:none;border:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp keyword" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,255);">for</code><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">((i=0;i&lt;=1000;i++));</code></div><div class="line number2 index1 alt1" style="background-image:none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp keyword" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,255);">do</code> <code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">echo </code><code class="csharp string" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:#0000FF;">"kafka_test-"</code><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">+$i&gt;&gt;/tmp/logs/kafka.log;</code></div><div class="line number3 index2 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">done</code></div></div></td></tr></tbody></table></div></div></div><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">　　b. 在kafka安装目录下执行如下命令，启动zk,kafka 。</p><div style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><div class="syntaxhighlighter csharp" style="width:683.4px;font-size:1em;"><table border="0" cellpadding="0" cellspacing="0" style="border-spacing:0px;border:1px solid #C0C0C0;width:683.2px;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><tbody style="background:none;line-height:1.1em;vertical-align:baseline;min-height:auto;"><tr style="background:none;border-top:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><td class="gutter" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;width:35px;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;color:rgb(175,175,175);"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">1</div></td><td class="code" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><div style="background:none;border:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">bin/zookeeper-server-start.sh -daemon config/zookeeper.properties &amp;</code></div></div></td></tr></tbody></table></div></div><div class="cnblogs_Highlighter sh-gutter" style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><div><div class="syntaxhighlighter csharp" style="width:683.4px;font-size:1em;"><table border="0" cellpadding="0" cellspacing="0" style="border-spacing:0px;border:1px solid #C0C0C0;width:683.2px;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><tbody style="background:none;line-height:1.1em;vertical-align:baseline;min-height:auto;"><tr style="background:none;border-top:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><td class="gutter" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;width:35px;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;color:rgb(175,175,175);"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">1</div></td><td class="code" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><div style="background:none;border:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">bin/kafka-server-start.sh -daemon config/server.properties &amp;</code></div></div></td></tr></tbody></table></div></div></div><p><span style="color:#333333;"><span class="op_dict3_font16 op_dict3_gap_small"><span style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">c.新增Topic kafkatest</span></span></span></p><p><span style="color:#333333;"><span class="op_dict3_font16 op_dict3_gap_small"><span style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><span style="color:rgb(0,0,0);font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;text-align:left;background-color:rgb(244,244,244);">bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic kafkatest </span></span></span></span></p><p><span style="color:#333333;"><span class="op_dict3_font16 op_dict3_gap_small"><span style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><span style="color:rgb(0,0,0);font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;text-align:left;background-color:rgb(244,244,244);"></span></span></span></span></p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">　d.打开新终端，在kafka安装目录下执行如下命令，生成对topic kafkatest 的消费</p><div class="cnblogs_code" style="background-color:rgb(245,245,245);border:1px solid rgb(204,204,204);color:rgb(0,0,0);text-align:left;font-family:'Courier New';font-size:12px;"><p>bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic kafkatest --from-beginning --zookeeper master</p></div><p style="background-color:#FFFFFF;"></p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">e.启动flume</p><div class="cnblogs_Highlighter sh-gutter" style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><div><div class="syntaxhighlighter csharp" style="width:683.4px;font-size:1em;"><table border="0" cellpadding="0" cellspacing="0" style="border-spacing:0px;border:1px solid #C0C0C0;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><tbody style="background:none;line-height:1.1em;vertical-align:baseline;min-height:auto;"><tr style="background:none;border-top:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><td class="gutter" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;width:35px;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;color:rgb(175,175,175);"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">1</div></td><td class="code" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><div style="background:none;border:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">bin/flume-ng agent --conf-file  conf/kafka.properties -c conf/ --name agent -Dflume.root.logger=DEBUG,console</code></div></div></td></tr></tbody></table></div></div></div><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">　  d.执行kafkaoutput.sh脚本（注意观察kafka.log内容及消费终端接收到的内容）</p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><img src="https://images2015.cnblogs.com/blog/941878/201703/941878-20170314194201932-1979407228.png" alt="" width="342" height="31" style="border:0px;"></p><p style="font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"></p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><img src="https://images2015.cnblogs.com/blog/941878/201703/941878-20170314194259807-557526480.png" alt="" width="562" height="527" style="border:0px;"></p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">　　e.查看新终端消费信息</p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><img src="https://images2015.cnblogs.com/blog/941878/201703/941878-20170314200044526-1978609142.png" alt="" width="491" height="696" style="border:0px;"></p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">整体流程如图：</p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><img src="https://images2015.cnblogs.com/blog/941878/201703/941878-20170314200331323-1662254710.png" alt="" style="border:0px;"></p><p style="color:rgb(0,0,0);">==</p><p style="color:rgb(0,0,0);"><a href="https://blog.csdn.net/Trigl/article/details/70237981" rel="nofollow" style="color:rgb(0,0,0);font-family:'microsoft yahei';font-size:18px;font-weight:bold;background-color:rgb(255,255,255);"> 使用Flume+Kafka+SparkStreaming进行实时日志分析</a></p><p style="color:rgb(0,0,0);"><br></p><p></p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">每个公司想要进行数据分析或数据挖掘，收集日志、ETL都是第一步的，今天就讲一下如何实时地（准实时，每分钟分析一次）收集日志，处理日志，把处理后的记录存入Hive中，并附上完整实战代码</p><h1 style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><a style="color:rgb(12,137,207);"></a>1. 整体架构</h1><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">思考一下，正常情况下我们会如何收集并分析日志呢？</p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">首先，业务日志会通过Nginx（或者其他方式，我们是使用Nginx写入日志）每分钟写入到磁盘中，现在我们想要使用Spark分析日志，就需要先将磁盘中的文件上传到HDFS上，然后Spark处理，最后存入Hive表中，如图所示：</p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><img src="https://img-blog.csdn.net/20170518173937190?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvVHJpZ2w=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="" style="border:none;"></p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">我们之前就是使用这种方式每天分析一次日志，但是这样有几个缺点：</p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">首先我们的日志是通过Nginx每分钟存成一个文件，这样一天的文件数很多，不利于后续的分析任务，所以先要把一天的所有日志文件合并起来</p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">合并起来以后需要把该文件从磁盘传到Hdfs上，但是我们的日志服务器并不在Hadoop集群内，所以没办法直接传到Hdfs上，需要首先把文件从日志服务器传输到Hadoop集群所在的服务器，然后再上传到Hdfs</p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">最后也是最重要的，滞后一天分析数据已经不能满足我们新的业务需求了，最好能控制在一个小时的滞后时间</p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">可以看出来我们以前收集分析日志的方式还是比较原始的，而且比较耗时，很多时间浪费在了网络传输上面，如果日志量大的话还有丢失数据的可能性，所以在此基础上改进了一下架构：</p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><img src="https://img-blog.csdn.net/20170518175830889?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvVHJpZ2w=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="" style="border:none;"></p><p style="font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><span style="color:#000000;">整个过程就是，</span><span style="color:#ff6666;">Flume会实时监控写入日志的磁盘，只要有新的日志写入，Flume就会将日志以消息的形式传递给Kafka，然后Spark Streaming实时消费消息传入Hive</span></p><p style="font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><span style="color:rgb(0,0,0);">那么Flume是什么呢，它为什么可以监控一个磁盘文件呢？简而言之，</span><span style="color:#ff6666;">Flume是用来收集、汇聚并且移动大量日志文件的开源框架，所以很适合这种实时收集日志并且传递日志的场景</span></p><p style="font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><span style="color:#ff6666;">Kafka是一个消息系统，Flume收集的日志可以移动到Kafka消息队列中，然后就可以被多处消费了，而且可以保证不丢失数据</span></p><p style="font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><span style="color:#33cc00;">通过这套架构，收集到的日志可以及时被Flume发现传到Kafka，通过Kafka我们可以把日志用到各个地方，同一份日志可以存入Hdfs中，也可以离线进行分析，还可以实时计算，而且可以保证安全性，基本可以达到实时的要求</span></p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">整个流程已经清晰了，下面各个突破，我们开始动手实现整套系统</p><h1 style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><a style="color:rgb(12,137,207);"></a>2. 实战演练</h1><h2 style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><a style="color:rgb(12,137,207);"></a>2.1 安装Kafka</h2><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">下载安装Kafka以及一些基本命令请传送到这里：<a href="http://blog.csdn.net/trigl/article/details/72581735" rel="nofollow" style="color:rgb(12,137,207);"> Kafka安装与简介</a></p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">安装好以后新建名为launcher_click的topic：</p><pre class="prettyprint" style="color:rgb(0,0,0);font-size:14px;line-height:22px;"><code class="hljs brainfuck has-numbering"><span class="hljs-comment">bin/kafka</span><span class="hljs-literal">-</span><span class="hljs-comment">topics</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">create</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">zookeeper</span> <span class="hljs-comment">hxf:2181</span><span class="hljs-string">,</span><span class="hljs-comment">cfg:2181</span><span class="hljs-string">,</span><span class="hljs-comment">jqs:2181</span><span class="hljs-string">,</span><span class="hljs-comment">jxf:2181</span><span class="hljs-string">,</span><span class="hljs-comment">sxtb:2181</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">replication</span><span class="hljs-literal">-</span><span class="hljs-comment">factor</span> <span class="hljs-comment">2</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">partitions</span> <span class="hljs-comment">2</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">topic</span> <span class="hljs-comment">launcher_click</span></code></pre><ul class="pre-numbering" style="border-right:1px solid rgb(221,221,221);"><li>1</li></ul><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">查看一下该topic：</p><pre class="prettyprint" style="color:rgb(0,0,0);font-size:14px;line-height:22px;"><code class="hljs brainfuck has-numbering"><span class="hljs-comment">bin/kafka</span><span class="hljs-literal">-</span><span class="hljs-comment">topics</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">describe</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">zookeeper</span> <span class="hljs-comment">hxf:2181</span><span class="hljs-string">,</span><span class="hljs-comment">cfg:2181</span><span class="hljs-string">,</span><span class="hljs-comment">jqs:2181</span><span class="hljs-string">,</span><span class="hljs-comment">jxf:2181</span><span class="hljs-string">,</span><span class="hljs-comment">sxtb:2181</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">topic</span> <span class="hljs-comment">launcher_click</span></code></pre><ul class="pre-numbering" style="border-right:1px solid rgb(221,221,221);"><li>1</li></ul><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><img src="https://img-blog.csdn.net/20170524141002525?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvVHJpZ2w=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="" style="border:none;"></p><h2 style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><a style="color:rgb(12,137,207);"></a>2.2 安装Flume</h2><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">1、下载解压</p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">下载地址： <a href="https://flume.apache.org/download.html" rel="nofollow" style="color:rgb(12,137,207);">https://flume.apache.org/download.html</a> <br>注意进入下载地址页面，使用清华大学的那个地址，否则会很慢</p><pre class="prettyprint" style="color:rgb(0,0,0);font-size:14px;line-height:22px;"><code class="hljs avrasm has-numbering">wget http://apache<span class="hljs-preprocessor">.fayea</span><span class="hljs-preprocessor">.com</span>/flume/<span class="hljs-number">1.7</span><span class="hljs-number">.0</span>/apache-flume-<span class="hljs-number">1.7</span><span class="hljs-number">.0</span>-bin<span class="hljs-preprocessor">.tar</span><span class="hljs-preprocessor">.gz</span>
tar -xvf apache-flume-<span class="hljs-number">1.7</span><span class="hljs-number">.0</span>-bin<span class="hljs-preprocessor">.tar</span><span class="hljs-preprocessor">.gz</span></code></pre><ul class="pre-numbering" style="border-right:1px solid rgb(221,221,221);"><li>1</li><li>2</li></ul><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">2、修改配置文件</p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">进入flume目录，修改conf/flume-env.sh</p><pre class="prettyprint" style="color:rgb(0,0,0);font-size:14px;line-height:22px;"><code class="hljs cmake has-numbering"><span class="hljs-keyword">export</span> JAVA_HOME=/data/<span class="hljs-keyword">install</span>/jdk
<span class="hljs-keyword">export</span> JAVA_OPTS=<span class="hljs-string">"-Xms1000m -Xmx2000m -Dcom.sun.management.jmxremote"</span></code></pre><ul class="pre-numbering" style="border-right:1px solid rgb(221,221,221);"><li>1</li><li>2</li></ul><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">添加配置文件：conf/flume_launcherclick.conf</p><pre class="prettyprint" style="color:rgb(0,0,0);font-size:14px;line-height:22px;"><code class="hljs avrasm has-numbering"><span class="hljs-preprocessor"># logser可以看做是flume服务的名称，每个flume都由sources、channels和sinks三部分组成</span>
<span class="hljs-preprocessor"># sources可以看做是数据源头、channels是中间转存的渠道、sinks是数据后面的去向</span>
logser<span class="hljs-preprocessor">.sources</span> = src_launcherclick
logser<span class="hljs-preprocessor">.sinks</span> = kfk_launcherclick
logser<span class="hljs-preprocessor">.channels</span> = ch_launcherclick

<span class="hljs-preprocessor"># source</span>
<span class="hljs-preprocessor"># 源头类型是TAILDIR，就可以实时监控以追加形式写入文件的日志</span>
logser<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.src</span>_launcherclick<span class="hljs-preprocessor">.type</span> = TAILDIR
<span class="hljs-preprocessor"># positionFile记录所有监控的文件信息</span>
logser<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.src</span>_launcherclick<span class="hljs-preprocessor">.positionFile</span> = /data/install/flume/position/launcherclick/taildir_position<span class="hljs-preprocessor">.json</span>
<span class="hljs-preprocessor"># 监控的文件组</span>
logser<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.src</span>_launcherclick<span class="hljs-preprocessor">.filegroups</span> = f1
<span class="hljs-preprocessor"># 文件组包含的具体文件，也就是我们监控的文件</span>
logser<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.src</span>_launcherclick<span class="hljs-preprocessor">.filegroups</span><span class="hljs-preprocessor">.f</span>1 = /data/launcher/stat_app/.*

<span class="hljs-preprocessor"># interceptor</span>
<span class="hljs-preprocessor"># 写kafka的topic即可</span>
logser<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.src</span>_launcherclick<span class="hljs-preprocessor">.interceptors</span> = i1 i2
logser<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.src</span>_launcherclick<span class="hljs-preprocessor">.interceptors</span><span class="hljs-preprocessor">.i</span>1<span class="hljs-preprocessor">.type</span>=static
logser<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.src</span>_launcherclick<span class="hljs-preprocessor">.interceptors</span><span class="hljs-preprocessor">.i</span>1<span class="hljs-preprocessor">.key</span> = type
logser<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.src</span>_launcherclick<span class="hljs-preprocessor">.interceptors</span><span class="hljs-preprocessor">.i</span>1<span class="hljs-preprocessor">.value</span> = launcher_click
logser<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.src</span>_launcherclick<span class="hljs-preprocessor">.interceptors</span><span class="hljs-preprocessor">.i</span>2<span class="hljs-preprocessor">.type</span>=static
logser<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.src</span>_launcherclick<span class="hljs-preprocessor">.interceptors</span><span class="hljs-preprocessor">.i</span>2<span class="hljs-preprocessor">.key</span> = topic
logser<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.src</span>_launcherclick<span class="hljs-preprocessor">.interceptors</span><span class="hljs-preprocessor">.i</span>2<span class="hljs-preprocessor">.value</span> = launcher_click

<span class="hljs-preprocessor"># channel</span>
logser<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.ch</span>_launcherclick<span class="hljs-preprocessor">.type</span> = memory
logser<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.ch</span>_launcherclick<span class="hljs-preprocessor">.capacity</span> = <span class="hljs-number">10000</span>
logser<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.ch</span>_launcherclick<span class="hljs-preprocessor">.transactionCapacity</span> = <span class="hljs-number">1000</span>

<span class="hljs-preprocessor"># kfk sink</span>
<span class="hljs-preprocessor"># 指定sink类型是Kafka，说明日志最后要发送到Kafka</span>
logser<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.kfk</span>_launcherclick<span class="hljs-preprocessor">.type</span> = org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.flume</span><span class="hljs-preprocessor">.sink</span><span class="hljs-preprocessor">.kafka</span><span class="hljs-preprocessor">.KafkaSink</span>
<span class="hljs-preprocessor"># Kafka broker</span>
logser<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.kfk</span>_launcherclick<span class="hljs-preprocessor">.brokerList</span> = <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.80</span>:<span class="hljs-number">9092</span>,<span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.140</span>:<span class="hljs-number">9092</span>

<span class="hljs-preprocessor"># Bind the source and sink to the channel</span>
logser<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.src</span>_launcherclick<span class="hljs-preprocessor">.channels</span> = ch_launcherclick
logser<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.kfk</span>_launcherclick<span class="hljs-preprocessor">.channel</span> = ch_launcherclick</code></pre><ul class="pre-numbering" style="border-right:1px solid rgb(221,221,221);"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li><li>7</li><li>8</li><li>9</li><li>10</li><li>11</li><li>12</li><li>13</li><li>14</li><li>15</li><li>16</li><li>17</li><li>18</li><li>19</li><li>20</li><li>21</li><li>22</li><li>23</li><li>24</li><li>25</li><li>26</li><li>27</li><li>28</li><li>29</li><li>30</li><li>31</li><li>32</li><li>33</li><li>34</li><li>35</li><li>36</li><li>37</li><li>38</li><li>39</li><li>40</li></ul><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">3、启动</p><pre class="prettyprint" style="color:rgb(0,0,0);font-size:14px;line-height:22px;"><code class="hljs avrasm has-numbering">nohup bin/flume-ng agent --conf conf/ --conf-file conf/flume_launcherclick<span class="hljs-preprocessor">.conf</span> --name logser -Dflume<span class="hljs-preprocessor">.root</span><span class="hljs-preprocessor">.logger</span>=INFO,console &gt;&gt; logs/flume_launcherclick<span class="hljs-preprocessor">.log</span> &amp;</code></pre><ul class="pre-numbering" style="border-right:1px solid rgb(221,221,221);"><li>1</li></ul><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">此时Kafka和Flume都已经启动了，从配置可以看到Flume的监控文件是/data/launcher/stat_app/.*，所以只要该目录下文件内容有增加就会发送到Kafka，大家可以自己追加一些测试日志到这个目录的文件下，然后开一个Kafka Consumer看一下Kafka是否接收到消息，这里我们完成SparkStreaming以后再看测试结果</p><h2 style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><a style="color:rgb(12,137,207);"></a>2.3 SparkStreaming编程</h2><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">SparkStreaming是Spark用来处理实时流的，能够实时到秒级，我们这里不需要这么实时，是每分钟执行一次日志分析程序，主要代码如下：</p><pre class="prettyprint" style="color:rgb(0,0,0);font-size:14px;line-height:22px;"><code class="hljs javascript has-numbering">  def main(args: <span class="hljs-built_in">Array</span>[<span class="hljs-built_in">String</span>]) {

    Logger.getLogger(<span class="hljs-string">"org.apache.spark"</span>).setLevel(Level.WARN)
    System.setProperty(<span class="hljs-string">"spark.serializer"</span>, <span class="hljs-string">"org.apache.spark.serializer.KryoSerializer"</span>)
    val sparkConf = <span class="hljs-keyword">new</span> SparkConf().setAppName(<span class="hljs-string">"LauncherStreaming"</span>)

    <span class="hljs-comment">//每60秒一个批次</span>
    val ssc = <span class="hljs-keyword">new</span> StreamingContext(sparkConf, Seconds(<span class="hljs-number">60</span>))

    <span class="hljs-comment">// 从Kafka中读取数据</span>
    val kafkaStream = KafkaUtils.createStream(
      ssc,
      <span class="hljs-string">"hxf:2181,cfg:2181,jqs:2181,jxf:2181,sxtb:2181"</span>, <span class="hljs-comment">// Kafka集群使用的zookeeper</span>
      <span class="hljs-string">"launcher-streaming"</span>, <span class="hljs-comment">// 该消费者使用的group.id</span>
      Map[<span class="hljs-built_in">String</span>, Int](<span class="hljs-string">"launcher_click"</span> -&gt; <span class="hljs-number">0</span>, <span class="hljs-string">"launcher_click"</span> -&gt; <span class="hljs-number">1</span>), <span class="hljs-comment">// 日志在Kafka中的topic及其分区</span>
      StorageLevel.MEMORY_AND_DISK_SER).map(_._2) <span class="hljs-comment">// 获取日志内容</span>

    kafkaStream.foreachRDD((rdd: RDD[<span class="hljs-built_in">String</span>], time: Time) =&gt; {
      val result = rdd.map(log =&gt; parseLog(log)) <span class="hljs-comment">// 分析处理原始日志</span>
        .filter(t =&gt; StringUtils.isNotBlank(t._1) &amp;&amp; StringUtils.isNotBlank(t._2))
      <span class="hljs-comment">// 存入hdfs</span>
      result.saveAsHadoopFile(HDFS_DIR, classOf[<span class="hljs-built_in">String</span>], classOf[<span class="hljs-built_in">String</span>], classOf[LauncherMultipleTextOutputFormat[<span class="hljs-built_in">String</span>, <span class="hljs-built_in">String</span>]])
    })

    ssc.start()
    <span class="hljs-comment">// 等待实时流</span>
    ssc.awaitTermination()
  }</code></pre><ul class="pre-numbering" style="border-right:1px solid rgb(221,221,221);"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li><li>7</li><li>8</li><li>9</li><li>10</li><li>11</li><li>12</li><li>13</li><li>14</li><li>15</li><li>16</li><li>17</li><li>18</li><li>19</li><li>20</li><li>21</li><li>22</li><li>23</li><li>24</li><li>25</li><li>26</li><li>27</li><li>28</li></ul><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">篇目有限，完整代码访问我的github：<em><a href="https://github.com/Trigl/SparkLearning/blob/master/src/main/scala/com/trigl/spark/streaming/LauncherStreaming.scala" rel="nofollow" style="color:rgb(12,137,207);">https://github.com/Trigl/SparkLearning/blob/master/src/main/scala/com/trigl/spark/streaming/LauncherStreaming.scala</a></em></p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">然后打包上传到master运行：</p><pre class="prettyprint" style="color:rgb(0,0,0);font-size:14px;line-height:22px;"><code class="hljs ruby has-numbering">nohup /data/install/spark-<span class="hljs-number">2.0</span>.<span class="hljs-number">0</span>-bin-hadoop2.<span class="hljs-number">7</span>/bin/spark-submit  --master <span class="hljs-symbol">spark:</span>/<span class="hljs-regexp">/hxf:7077  --executor-memory 1G --total-executor-cores 4   --class com.analysis.main.LauncherStreaming --jars /home</span><span class="hljs-regexp">/hadoop/jar</span><span class="hljs-regexp">/kafka-clients-0.10.0.0.jar,/home</span><span class="hljs-regexp">/hadoop/jar</span><span class="hljs-regexp">/metrics-core-2.2.0.jar,/home</span><span class="hljs-regexp">/hadoop/jar</span><span class="hljs-regexp">/zkclient-0.3.jar,/home</span><span class="hljs-regexp">/hadoop/jar</span><span class="hljs-regexp">/spark-streaming-kafka-0-8_2.11-2.0.0.jar,/home</span><span class="hljs-regexp">/hadoop/jar</span><span class="hljs-regexp">/kafka_2.11-0.8.2.1.jar  /home</span><span class="hljs-regexp">/hadoop/jar</span><span class="hljs-regexp">/SparkLearning.jar  &gt;&gt; /home</span><span class="hljs-regexp">/hadoop/logs</span><span class="hljs-regexp">/LauncherDM.log &amp;</span></code></pre><ul class="pre-numbering" style="border-right:1px solid rgb(221,221,221);"><li>1</li></ul><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">然后开始测试，往Flume监控目录/data/launcher/stat_app/.*写日志，原始日志内容类似下面这样：</p><pre class="prettyprint" style="color:rgb(0,0,0);font-size:14px;line-height:22px;"><code class="hljs perl has-numbering"><span class="hljs-number">118.120</span>.<span class="hljs-number">102.3</span>|<span class="hljs-number">1495608541.238</span>|UEsDBBQACAgIACB2uEoAAAAAAAAAAAAAAAABAAAAMGWUbW7bMAyGb6NfnUFRFEWhJ+gBdgBZVjpjjp04brMAO<span class="hljs-variable">*yY2DKa9Y</span>+B1+DnQ1LCztoITgK4wPGHfNUhmKGUPOn3DyP<span class="hljs-variable">*zdOxSWM3T33XXMqy9OP7xXTZiTC1xlL0HgMEi</span>+BfHoooBEGKr3fPpYy5jMse4Xzupus4TKkrs4kZOhI51CgWWKxsUQBRPMDr1<span class="hljs-variable">*w5Hcuc0LiUEFBwdXQxAARXHb3</span>+QXlOfzya0uZWOGwlEwBDwLD5oJBVFHsEEPF2U0EUToyr8k4tg9v8AkRrIcKmxGsU2eqQIM45dKuKFICo5oveEqOjh2JAIITImyIJqBk3JS4qh7Wby<span class="hljs-variable">*TroxnL9ZKHXrsyWeBQoMXaEgXUKh6mOQ1l7NLc</span><span class="hljs-variable">*Hwz8aDpAtndLFJEetkVc6S9V</span><span class="hljs-variable">*bg</span>+RFiKMvnTv6ahuGUTmWexqEfi3Elezx0botJrCCQn5jfCzWaqaUOqNpFYO23ckYl5GOlx4rLQuUllh27SsjZyLQTUn4K+<span class="hljs-number">3</span>uVczlOi+<span class="hljs-number">7</span>uuMzTYLoibeIspk71DtKuJC+<span class="hljs-number">7</span>T5qXPg9lLddaZs6+Lolnj7ANW0dBGKOn72m3cbQJI2Kq4<span class="hljs-variable">*C6Xhz9E5Pzeeg</span><span class="hljs-variable">*i2l1IAJtpReILNq6DY4peFjHeO5vffPZd2UyejEJ28Puo0sI</span><span class="hljs-variable">*2</span><span class="hljs-variable">*5ojvhfNcquWomFMVp02Pz</span>++M6Nach3e6XR5wOlrdSg4T7RkgtQAuC6HYl2sc62i6dUq<span class="hljs-variable">*om</span>+HWjvdHAPSk8hYkegHraxC8PwPons73XZeozDfXmaRzzzaD2XI4fX0QX<span class="hljs-variable">*8BUEsHCKeftc48AgAAmQQAAA</span>==</code></pre><ul class="pre-numbering" style="border-right:1px solid rgb(221,221,221);"><li>1</li></ul><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">查看HDFS的对应目录是否有内容：</p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><img src="https://img-blog.csdn.net/20170524145206940?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvVHJpZ2w=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="" style="border:none;"></p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">HDFS存储的分析后的日志内容如下：</p><pre class="prettyprint" style="color:rgb(0,0,0);font-size:14px;line-height:22px;"><code class="hljs lisp has-numbering"><span class="hljs-number">99000945863664</span><span class="hljs-comment">;864698037273329|119.176.140.248|1495594615129|2017-05-24 10:56:55|xiaomi|redmi4x|com.jingdong.app.mall&amp;0ae359b6&amp;1495534579412&amp;1;com.autonavi.minimap&amp;279f562f&amp;1495534597934,1495534616627&amp;2;com.android.contacts&amp;91586932&amp;1495538267103,1495540527138,1495576834653,1495583404117,1495591231535&amp;5</span></code></pre><ul class="pre-numbering" style="border-right:1px solid rgb(221,221,221);"><li>1</li></ul><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">SparkStreaming任务状态如下：</p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"><img src="https://img-blog.csdn.net/20170524145340469?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvVHJpZ2w=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="" style="border:none;"></p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">可以看到的确是每分钟执行一次</p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);">==</p><p style="color:rgb(0,0,0);font-family:'-apple-system', 'SF UI Text', Arial, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif, SimHei, SimSun;background-color:rgb(255,255,255);"></p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);">相关文章：</p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><a class="postTitle2" href="http://www.cnblogs.com/cnmenglang/p/6520166.html" rel="nofollow" style="color:#000000;text-decoration:underline;">大数据系列之Kafka安装</a> </p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><a class="postTitle2" href="http://www.cnblogs.com/cnmenglang/p/6544081.html" rel="nofollow" style="color:#000000;text-decoration:underline;">大数据系列之Flume--几种不同的Sources</a></p><p style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><a class="postTitle2" href="http://www.cnblogs.com/cnmenglang/p/6543927.html" rel="nofollow" style="color:#000000;text-decoration:underline;">大数据系列之Flume+HDFS</a></p><p style="background-color:#FFFFFF;"><span style="color:#333333;"><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);">==</span><br></span></p><span style="background-color:#FFFFFF;color:rgb(51,51,51);"></span><div><div style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><div class="syntaxhighlighter csharp" style="width:683.4px;font-size:1em;"><table border="0" cellpadding="0" cellspacing="0" style="border-spacing:0px;border:1px solid #C0C0C0;width:683.2px;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><tbody style="background:none;line-height:1.1em;vertical-align:baseline;min-height:auto;"><tr style="background:none;border-top:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><td class="gutter" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;width:35px;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;color:rgb(175,175,175);"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">1</div></td><td class="code" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><div style="background:none;border:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">bin/zookeeper-server-start.sh -daemon config/zookeeper.properties &amp;</code></div></div></td></tr></tbody></table></div></div><div class="cnblogs_Highlighter sh-gutter" style="color:rgb(0,0,0);font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;text-align:left;background-color:rgb(255,255,255);"><div><div class="syntaxhighlighter csharp" style="width:683.4px;font-size:1em;"><table border="0" cellpadding="0" cellspacing="0" style="border-spacing:0px;border:1px solid #C0C0C0;width:683.2px;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><tbody style="background:none;line-height:1.1em;vertical-align:baseline;min-height:auto;"><tr style="background:none;border-top:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><td class="gutter" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;width:35px;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;color:rgb(175,175,175);"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border-width:0px 2px 0px 0px;border-right-style:solid;border-right-color:rgb(108,226,108);line-height:1.8em;text-align:right;vertical-align:baseline;min-height:auto;">1</div></td><td class="code" style="border-color:#C0C0C0;border-collapse:collapse;background:none;line-height:1.1em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;font-size:12px;min-height:auto;"><div style="background:none;border:0px;line-height:1.1em;vertical-align:baseline;min-height:auto;"><div class="line number1 index0 alt2" style="background:rgb(244,244,244) none;border:0px;line-height:1.8em;vertical-align:baseline;min-height:auto;"><code class="csharp plain" style="background:none;border:0px;line-height:1.8em;vertical-align:baseline;font-family:Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;min-height:auto;color:rgb(0,0,0);">bin/kafka-server-start.sh -daemon config/server.properties &amp;</code></div></div></td></tr></tbody></table></div></div></div></div>            </div>
                </div>