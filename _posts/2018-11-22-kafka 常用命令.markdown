---
layout:     post
title:      kafka 常用命令
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p>Kafka</p>

<p> </p>

<p>解压，进入kafka目录下的bin目录</p>

<p> </p>

<p>启动zk</p>

<p>nohup ./zookeeper-server-start.sh ../config/zookeeper.properties &amp;</p>

<p>nohup ./bin/zookeeper-server-start.sh ./config/zookeeper.properties &amp;</p>

<p> </p>

<p>启动kafka</p>

<p>nohup ./kafka-server-start.sh ../config/server.properties &amp;</p>

<p>nohup ./bin/kafka-server-start.sh ./config/server.properties &amp;</p>

<p> </p>

<p>创建topic</p>

<p>./kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test</p>

<p>或</p>

<p>./kafka-topics.sh --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test2 --create</p>

<p> </p>

<p>列出topic</p>

<p>./kafka-topics.sh --list --zookeeper localhost:2181</p>

<p>或</p>

<p>./kafka-topic --zookeeper localhost:2181 --list</p>

<p> </p>

<p>启动生产者并发送消息</p>

<p>./kafka-console-producer.sh --broker-list localhost:9092 --topic zyl</p>

<p>输入消息</p>

<p>nihao</p>

<p>china</p>

<p> </p>

<p>另外开个终端，启动消费者接受消息</p>

<p>./kafka-console-consumer.sh --zookeeper localhost:2181 --topic zyl --from-beginning</p>

<p>可以接受到</p>

<p>nihao</p>

<p>china</p>

<p> </p>

<p> </p>

<p>另外开个终端，可以看到有4个进程（分别为zk、kafka、控制台消费者、控制台生产者）</p>

<p>[root<a href="http://my.oschina.net/test2" rel="nofollow">@aa</a> bin]# jps | grep -v Jps</p>

<p>9802 QuorumPeerMain</p>

<p>10392 Kafka</p>

<p>10956 ConsoleConsumer</p>

<p>10887 ConsoleProducer</p>

<p> </p>

<p> </p>

<p>使用集群3个节点（多个节点也同理,加上之前的，我一共弄了4个节点）</p>

<p>拷贝并修改配置文件</p>

<p>cp server.properties server1.properties</p>

<p>cp server.properties server2.properties</p>

<p>cp server.properties server3.properties</p>

<p> </p>

<p>nohup ./kafka-server-start.sh ../config/server1.properties &amp;</p>

<p>nohup ./kafka-server-start.sh ../config/server2.properties &amp;</p>

<p>nohup ./kafka-server-start.sh ../config/server3.properties &amp;</p>

<p> </p>

<p>[root<a href="http://my.oschina.net/test2" rel="nofollow">@aa</a> bin]# ./kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 1 --topic my-replicated-topic（注意，指定的是3）</p>

<p>Created topic "my-replicated-topic".</p>

<p>[root<a href="http://my.oschina.net/test2" rel="nofollow">@aa</a> bin]# ./kafka-topics.sh --describe --zookeeper localhost:2181 --topic my-replicated-topic</p>

<p>Topic:my-replicated-topic PartitionCount:1 ReplicationFactor:3 Configs:</p>

<p>Topic: my-replicated-topic Partition: 0 Leader: 2 Replicas: 2,3,0 Isr: 2,3,0</p>

<p> </p>

<p> </p>

<p>[root<a href="http://my.oschina.net/test2" rel="nofollow">@aa</a> bin]# ./kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 4 --partitions 1 --topic my-replicated-topic</p>

<p>Error while executing topic command Topic "my-replicated-topic" already exists.</p>

<p>kafka.common.TopicExistsException: Topic "my-replicated-topic" already exists.</p>

<p>at kafka.admin.AdminUtils$.createOrUpdateTopicPartitionAssignmentPathInZK(AdminUtils.scala:171)</p>

<p>at kafka.admin.AdminUtils$.createTopic(AdminUtils.scala:156)</p>

<p>at kafka.admin.TopicCommand$.createTopic(TopicCommand.scala:86)</p>

<p>at kafka.admin.TopicCommand$.main(TopicCommand.scala:50)</p>

<p>at kafka.admin.TopicCommand.main(TopicCommand.scala)</p>

<p> </p>

<p>[root<a href="http://my.oschina.net/test2" rel="nofollow">@aa</a> bin]# ./kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 4 --partitions 1 --topic my-replicated-topic2</p>

<p>Created topic "my-replicated-topic2".</p>

<p>[root@aa bin]# ./kafka-topics.sh --describe --zookeeper localhost:2181 --topic my-replicated-topic2</p>

<p>Topic:my-replicated-topic2 PartitionCount:1 ReplicationFactor:4 Configs:</p>

<p>Topic: my-replicated-topic2 Partition: 0 Leader: 1 Replicas: 1,2,3,0 Isr: 1,2,3,0</p>

<p> </p>

<p> </p>

<p>[root@aa bin]# ./kafka-topics.sh --describe --zookeeper localhost:2181 --topic zyl</p>

<p>Topic:zyl PartitionCount:1 ReplicationFactor:1 Configs:</p>

<p>Topic: zyl Partition: 0 Leader: 0 Replicas: 0 Isr: 0</p>

<p> </p>

<p> </p>

<p> </p>

<p>启动生产者并发送消息</p>

<p>./kafka-console-producer.sh --broker-list localhost:9092 --topic my-replicated-topic</p>

<p> </p>

<p>另外开个终端，启动消费者接受消息</p>

<p>./kafka-console-consumer.sh --zookeeper localhost:2181 --from-beginning --topic my-replicated-topic</p>

<p> </p>

<p> </p>

<p>另外开个终端，可以看到有9个进程（分别为1个zk、4个kafka、2个控制台消费者、2个控制台生产者）</p>

<p>[root@aa ~]# jps | grep -v Jps</p>

<p>9802 QuorumPeerMain</p>

<p>10392 Kafka</p>

<p>11547 Kafka</p>

<p>12007 ConsoleProducer</p>

<p>10956 ConsoleConsumer</p>

<p>10887 ConsoleProducer</p>

<p>11469 Kafka</p>

<p>12054 ConsoleConsumer</p>

<p>11710 Kafka</p>

<p> </p>

<p> </p>

<p>查看单独的进程：</p>

<p>ps -ef | grep server.properties | grep -v grep</p>

<p>ps -ef | grep "server1.properties" | grep -v grep</p>

<p> </p>

<p> </p>

<p>测试leader</p>

<p>杀掉进程，然后--describe查看</p>

<p>[root@aaa bin]# ./kafka-topics.sh --describe --zookeeper localhost:2181 --topic my-replicated-topic</p>

<p>Topic:my-replicated-topic PartitionCount:1 ReplicationFactor:3 Configs:</p>

<p>Topic: my-replicated-topic Partition: 0 Leader: 2 Replicas: 2,3,0 Isr: 2,3,0</p>

<p>可以看到leader是2.</p>

<p> </p>

<p> [root@aa bin]# ./kafka-topics.sh --describe --zookeeper localhost:2181 --topic my-replicated-topic2</p>

<p>Topic:my-replicated-topic2 PartitionCount:1 ReplicationFactor:4 Configs:</p>

<p>Topic: my-replicated-topic2 Partition: 0 Leader: 1 Replicas: 1,2,3,0 Isr: 1,2,3,0</p>

<p>可以看到leader是2.</p>

<p> </p>

<p>[root@aa bin]# ps -ef | grep server1.properties | grep -v grep</p>

<p> </p>

<p> </p>

<p> </p>

<p>杀掉某个kafka进程</p>

<p>kill -9 11469</p>

<p> </p>

<p> </p>

<p> </p>

<p> ./kafka-topics.sh --describe --zookeeper localhost:2181 --topic my-replicated-topic2</p>

<p>Topic:my-replicated-topic2 PartitionCount:1 ReplicationFactor:4 Configs:</p>

<p>Topic: my-replicated-topic2 Partition: 0 Leader: 2 Replicas: 1,2,3,0 Isr: 2,3,0</p>

<p>[root@aa bin]# ./kafka-topics.sh --describe --zookeeper localhost:2181 --topic my-replicated-topic</p>

<p>Topic:my-replicated-topic PartitionCount:1 ReplicationFactor:3 Configs:</p>

<p>Topic: my-replicated-topic Partition: 0 Leader: 2 Replicas: 2,3,0 Isr: 2,3,0</p>

<p>可以看到my-replicated-topic2的leader变成了2。</p>

<p> </p>

<p>问题：</p>

<p>1.zookeeper-shell.sh如何使用</p>

<p>2.能不能通过kafka-server-stop.sh停止某个kafka呢</p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p> </p>

<p>Command must include exactly one action: --list, --describe, --create or --alter</p>

<p>Option                                  Description</p>

<p>------                                  -----------</p>

<p>--alter                                 Alter the configuration for the topic.</p>

<p>--config &lt;name=value&gt;                   A topic configuration override for the</p>

<p>                                          topic being created or altered.</p>

<p>--create                                Create a new topic.</p>

<p>--deleteConfig &lt;name&gt;                   A topic configuration override to be</p>

<p>                                          removed for an existing topic</p>

<p>--describe                              List details for the given topics.</p>

<p>--help                                  Print usage information.</p>

<p>--list                                  List all available topics.</p>

<p>--partitions &lt;Integer: # of partitions&gt; The number of partitions for the topic</p>

<p>                                          being created or altered (WARNING:</p>

<p>                                          If partitions are increased for a</p>

<p>                                          topic that has a key, the partition</p>

<p>                                          logic or ordering of the messages</p>

<p>                                          will be affected</p>

<p>--replica-assignment                    A list of manual partition-to-broker</p>

<p>  &lt;broker_id_for_part1_replica1 :         assignments for the topic being</p>

<p>  broker_id_for_part1_replica2 ,          created or altered.</p>

<p>  broker_id_for_part2_replica1 :</p>

<p>  broker_id_for_part2_replica2 , ...&gt;</p>

<p>--replication-factor &lt;Integer:          The replication factor for each</p>

<p>  replication factor&gt;                     partition in the topic being created.</p>

<p>--topic &lt;topic&gt;                         The topic to be create, alter or</p>

<p>                                          describe. Can also accept a regular</p>

<p>                                          expression except for --create option</p>

<p>--topics-with-overrides                 if set when describing topics, only</p>

<p>                                          show topics that have overridden</p>

<p>                                          configs</p>

<p>--unavailable-partitions                if set when describing topics, only</p>

<p>                                          show partitions whose leader is not</p>

<p>                                          available</p>

<p>--under-replicated-partitions           if set when describing topics, only</p>

<p>                                          show under replicated partitions</p>

<p>--zookeeper &lt;urls&gt;                      REQUIRED: The connection string for</p>

<p>                                          the zookeeper connection in the form</p>

<p>                                          host:port. Multiple URLS can be</p>

<p>                                          given to allow fail-over.</p>            </div>
                </div>