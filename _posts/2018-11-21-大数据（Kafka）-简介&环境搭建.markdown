---
layout:     post
title:      大数据（Kafka）-简介&环境搭建
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/zhangdong2012/article/details/80303728				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h1 id="简介">简介</h1>

<p>kafka是一个分布式的基于生产者消费者的消息体系，具有高吞吐/低延时/高可用等特点，在异构系统集成/系统结偶/流处理/削峰等方面被广泛应用（结偶/异步/并行）</p>



<h1 id="kafka核心组件">Kafka核心组件</h1>

<p><img src="https://img-blog.csdn.net/20180513221017828?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW5nZG9uZzIwMTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述" title=""> <br>
Broker：一个Kafka实例 <br>
Topic：数据的逻辑集合 <br>
Producer：消息生产者 <br>
Consumer：消息消费者 <br>
Zookeeper：kafka集群的协调中心</p>



<h1 id="搭建kafka集群">搭建Kafka集群</h1>

<p>1）规划节点：node01，node02，node03 <br>
2）下载kafka安装包 <br>
        下载地址<a href="http://kafka.apache.org/downloads" rel="nofollow">http://kafka.apache.org/downloads</a>，选择Kafka版本 <br>
3）解压安装包到/home/hadoop/application/kafka目录下</p>



<pre class="prettyprint"><code class=" hljs avrasm">        &gt;tar -xzvf kafka<span class="hljs-preprocessor">.tgz</span></code></pre>

<p>4）创建软链接 ln -s /home/hadoop/application/kafka /usr/local/kafka <br>
5）修改配置文件kafka-home/config/server.properties</p>



<pre class="prettyprint"><code class=" hljs avrasm">        <span class="hljs-preprocessor">#每个borker的id是唯一的，多个broker要设置不同的id</span>
        broker<span class="hljs-preprocessor">.id</span>=<span class="hljs-number">0</span>
        <span class="hljs-preprocessor">#访问端口号</span>
        port=<span class="hljs-number">9092</span>
        <span class="hljs-preprocessor">#访问地址</span>
        host<span class="hljs-preprocessor">.name</span>=node01
        <span class="hljs-preprocessor">#允许删除topic</span>
        delete<span class="hljs-preprocessor">.topic</span><span class="hljs-preprocessor">.enable</span>=true
        <span class="hljs-preprocessor">#The number of threads handling network requests</span>
        num<span class="hljs-preprocessor">.network</span><span class="hljs-preprocessor">.threads</span>=<span class="hljs-number">3</span>
        <span class="hljs-preprocessor">#The number of threads doing disk I/O</span>
        num<span class="hljs-preprocessor">.io</span><span class="hljs-preprocessor">.threads</span>=<span class="hljs-number">8</span>
        <span class="hljs-preprocessor">#The send buffer (SO_SNDBUF) used by the socket server</span>
        socket<span class="hljs-preprocessor">.send</span><span class="hljs-preprocessor">.buffer</span><span class="hljs-preprocessor">.bytes</span>=<span class="hljs-number">102400</span>
        <span class="hljs-preprocessor">#The receive buffer (SO_RCVBUF) used by the socket server</span>
        socket<span class="hljs-preprocessor">.receive</span><span class="hljs-preprocessor">.buffer</span><span class="hljs-preprocessor">.bytes</span>=<span class="hljs-number">102400</span>
        <span class="hljs-preprocessor">#The maximum size of a request that the socket server will accept (protection against OOM)</span>
        socket<span class="hljs-preprocessor">.request</span><span class="hljs-preprocessor">.max</span><span class="hljs-preprocessor">.bytes</span>=<span class="hljs-number">104857600</span>
        <span class="hljs-preprocessor">#存储数据路径，默认是在/tmp目录下，需要修改</span>
        log<span class="hljs-preprocessor">.dirs</span>=/home/hadoop/application/kafka/data
        <span class="hljs-preprocessor">#创建topic默认分区数</span>
        num<span class="hljs-preprocessor">.partitions</span>=<span class="hljs-number">1</span>
        num<span class="hljs-preprocessor">.recovery</span><span class="hljs-preprocessor">.threads</span><span class="hljs-preprocessor">.per</span><span class="hljs-preprocessor">.data</span><span class="hljs-preprocessor">.dir</span>=<span class="hljs-number">1</span>
        <span class="hljs-preprocessor">#数据保存时间，默认7天，单位小时</span>
        log<span class="hljs-preprocessor">.retention</span><span class="hljs-preprocessor">.hours</span>=<span class="hljs-number">168</span>
        log<span class="hljs-preprocessor">.segment</span><span class="hljs-preprocessor">.bytes</span>=<span class="hljs-number">1073741824</span>
        log<span class="hljs-preprocessor">.retention</span><span class="hljs-preprocessor">.check</span><span class="hljs-preprocessor">.interval</span><span class="hljs-preprocessor">.ms</span>=<span class="hljs-number">300000</span>
        <span class="hljs-preprocessor">#zookeeper地址，多个地址用逗号隔开</span>
        zookeeper<span class="hljs-preprocessor">.connect</span>=node01:<span class="hljs-number">2181</span>,node02:<span class="hljs-number">2181</span>,node03:<span class="hljs-number">2181</span>
        <span class="hljs-preprocessor"># Timeout in ms for connecting to zookeeper</span>
        zookeeper<span class="hljs-preprocessor">.connection</span><span class="hljs-preprocessor">.timeout</span><span class="hljs-preprocessor">.ms</span>=<span class="hljs-number">6000</span></code></pre>

<p>6）创建数据存储目录/home/hadoop/application/kafka/data <br>
7）拷贝到node02和node03节点</p>



<pre class="prettyprint"><code class=" hljs ruby">        scp -r /home/hadoop/application/kafka  hadoop<span class="hljs-variable">@node02</span><span class="hljs-symbol">:~/application/kafka</span>
        scp -r /home/hadoop/application/kafka  hadoop<span class="hljs-variable">@node02</span><span class="hljs-symbol">:~/application/kafka</span></code></pre>

<p>8）在node02和node03上创建软连接，参考4） <br>
9）修改node02和node03配置文件到broker.id为1，2，节点名称为node02,node03 <br>
10）启动各个broker节点的server</p>



<pre class="prettyprint"><code class=" hljs axapta">        nohup /home/hadoop/application/kafka/bin/kafka-<span class="hljs-keyword">server</span>-start.sh ../config/<span class="hljs-keyword">server</span>/properties &amp;</code></pre>



<h1 id="常用命令">常用命令</h1>



<h6 id="创建topic">创建topic</h6>



<pre class="prettyprint"><code class=" hljs lasso">kafka<span class="hljs-attribute">-topics</span><span class="hljs-built_in">.</span>sh <span class="hljs-subst">--</span>create <span class="hljs-attribute">-zookeeper</span> node01:<span class="hljs-number">2181</span> <span class="hljs-attribute">-replication</span><span class="hljs-attribute">-factor</span> <span class="hljs-number">2</span> <span class="hljs-attribute">-partitions</span> <span class="hljs-number">3</span> <span class="hljs-subst">--</span>topic demo</code></pre>



<h6 id="topic列表">topic列表</h6>



<pre class="prettyprint"><code class=" hljs brainfuck"><span class="hljs-comment">kafka</span><span class="hljs-literal">-</span><span class="hljs-comment">topics</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">list</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">zookeeper</span> <span class="hljs-comment">node01:2181</span></code></pre>



<h6 id="topic详情">topic详情</h6>



<pre class="prettyprint"><code class=" hljs brainfuck"><span class="hljs-comment">kafka</span><span class="hljs-literal">-</span><span class="hljs-comment">topics</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">describe</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">zookeeper</span> <span class="hljs-comment">node01:2181</span></code></pre>



<h6 id="修改topic分区">修改topic分区</h6>



<pre class="prettyprint"><code class=" hljs brainfuck"><span class="hljs-comment">kafka</span><span class="hljs-literal">-</span><span class="hljs-comment">topics</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">alter</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">zookeeper</span> <span class="hljs-comment">node01:2181</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">topic</span> <span class="hljs-comment">demo</span> <span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">partitions</span> <span class="hljs-comment">5</span></code></pre>



<h6 id="console生产者消费者">console生产者/消费者</h6>



<pre class="prettyprint"><code class=" hljs lasso">kafka<span class="hljs-attribute">-console</span><span class="hljs-attribute">-consumer</span><span class="hljs-built_in">.</span>sh <span class="hljs-subst">--</span>zookeeper node01:<span class="hljs-number">2181</span> <span class="hljs-subst">--</span>from<span class="hljs-attribute">-beginning</span> <span class="hljs-subst">--</span>topic demo

kafka<span class="hljs-attribute">-console</span><span class="hljs-attribute">-producer</span><span class="hljs-built_in">.</span>sh <span class="hljs-subst">--</span>broker<span class="hljs-attribute">-list</span> node01:<span class="hljs-number">9092</span>,ndoe02:<span class="hljs-number">9092</span>,node03:<span class="hljs-number">9092</span> <span class="hljs-subst">--</span>topic demo</code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>