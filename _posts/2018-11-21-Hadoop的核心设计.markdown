---
layout:     post
title:      Hadoop的核心设计
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<center style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
<img src="http://www.cuug.com.cn/uploadfile/2016-07/12456280473.jpg" alt="" style="border:0px;"></center>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
 </p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
<strong>HDFS</strong></p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
HDFS是一个高度容错性的分布式文件系统，可以被广泛的部署于廉价的PC之上。它以流式访问模式访问应用程序的数据，这大大提高了整个系统的数据吞吐量，因而非常适合用于具有超大数据集的应用程序中。</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
HDFS的架构如下图所示。HDFS架构采用主从架构(master/slave)。一个典型的HDFS集群包含一个NameNode节点和多个DataNode节点。NameNode节点负责整个HDFS文件系统中的文件的元数据保管和管理，集群中通常只有一台机器上运行NameNode实例，DataNode节点保存文件中的数据，集群中的机器分别运行一个DataNode实例。在HDFS中，NameNode节点被称为名称节点，DataNode节点被称为数据节点。DataNode节点通过心跳机制与NameNode节点进行定时的通信。</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
 </p>
<center style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
<img src="http://www.cuug.com.cn/uploadfile/2016-07/12456284082.jpg" alt="" style="border:0px;"></center>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
 </p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
<strong>NameNode</strong></p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
可以看作是分布式文件系统中的管理者，存储文件系统的meta-data，主要负责管理文件系统的命名空间，集群配置信息，存储块的复制。</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
<strong>DataNode</strong></p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
是文件存储的基本单元。它存储文件块在本地文件系统中，保存了文件块的meta-data，同时周期性的发送所有存在的文件块的报告给NameNode。</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
<strong>Client</strong></p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
就是需要获取分布式文件系统文件的应用程序。</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
下面来看看在HDFS上如何进行文件的读/写操作：</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
 </p>
<center style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
<img src="http://www.cuug.com.cn/uploadfile/2016-07/12456287651.jpg" alt="" style="border:0px;"></center>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
 </p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
文件写入：</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
1. Client向NameNode发起文件写入的请求</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
2. NameNode根据文件大小和文件块配置情况，返回给Client它所管理部分DataNode的信息。</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
3. Client将文件划分为多个文件块，根据DataNode的地址信息，按顺序写入到每一个DataNode块中。</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
 </p>
<center style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
<img src="http://www.cuug.com.cn/uploadfile/2016-07/12456290795.jpg" alt="" style="border:0px;"></center>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
 </p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
文件读取：</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
1. Client向NameNode发起文件读取的请求</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
2. NameNode返回文件存储的DataNode的信息。</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
3. Client读取文件信息。</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
<strong>MapReduce</strong></p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
MapReduce是一种编程模型，用于大规模数据集的并行运算。Map(映射)和Reduce(化简)，采用分而治之思想，先把任务分发到集群多个节点上，并行计算，然后再把计算结果合并，从而得到最终计算结果。多节点计算，所涉及的任务调度、负载均衡、容错处理等，都由MapReduce框架完成，不需要编程人员关心这些内容。</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
下图是一个MapReduce的处理过程：</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
 </p>
<center style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
<img src="http://www.cuug.com.cn/uploadfile/2016-07/12456294952.jpg" alt="" style="border:0px;"></center>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
 </p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
用户提交任务给JobTracer，JobTracer把对应的用户程序中的Map操作和Reduce操作映射至TaskTracer节点中;输入模块负责把输入数据分成小数据块，然后把它们传给Map节点;Map节点得到每一个key/value对，处理后产生一个或多个key/value对，然后写入文件;Reduce节点获取临时文件中的数据，对带有相同key的数据进行迭代计算，然后把终结果写入文件。</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
如果这样解释还是太抽象，可以通过下面一个具体的处理过程来理解：(WordCount实例)</p>
<center style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
<img src="http://www.cuug.com.cn/uploadfile/2016-07/12456298561.jpg" alt="" style="border:0px;"></center>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
　　Hadoop的核心是MapReduce，而MapReduce的核心又在于map和reduce函数。它们是交给用户实现的，这两个函数定义了任务本身。</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
 </p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
map函数：接受一个键值对(key-value pair)(例如上图中的Splitting结果)，产生一组中间键值对(例如上图中Mapping后的结果)。Map/Reduce框架会将map函数产生的中间键值对里键相同的值传递给一个reduce函数。</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
reduce函数：接受一个键，以及相关的一组值(例如上图中Shuffling后的结果)，将这组值进行合并产生一组规模更小的值(通常只有一个或零个值)(例如上图中Reduce后的结果)</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
但是，Map/Reduce并不是万能的，适用于Map/Reduce计算有先提条件：</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
①待处理的数据集可以分解成许多小的数据集;</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
②而且每一个小数据集都可以完全并行地进行处理;</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
若不满足以上两条中的任意一条，则不适合使用Map/Reduce模式;</p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
<br></p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
<br></p>
<p style="font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;">
来源：<a href="http://www.cuug.com.cn/" rel="nofollow">CUUG官网</a></p>
            </div>
                </div>