---
layout:     post
title:      Hive实战
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，出处为 http://blog.csdn.net/silentwolfyh					https://blog.csdn.net/silentwolfyh/article/details/71439372				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h2 id="目录">目录：</h2>



<h3 id="一hive是什么">一、Hive是什么</h3>



<h3 id="二hive与关系数据库的区别">二、Hive与关系数据库的区别</h3>



<h3 id="三hive架构介绍">三、Hive架构介绍</h3>



<h3 id="四hive的实战操作">四、Hive的实战操作</h3>



<h4 id="1-hive的启动">       1)   HIVE的启动</h4>



<h4 id="2-hive创建数据库">       2)   Hive创建数据库</h4>



<h4 id="3-hive删除数据库">       3)   Hive删除数据库</h4>



<h4 id="4-创建hive表添加数据">       4)   创建HIVE表添加数据</h4>



<h4 id="5-hive的分区">       5)   HIVE的分区</h4>



<h4 id="6-hive条件查询">       6)   HIVE条件查询</h4>



<h4 id="7-udf函数">       7)   UDF函数</h4>



<h4 id="8-删除hive表">       8)   删除HIVE表</h4>



<h4 id="9-查询结果保存到本地">       9)   查询结果保存到本地</h4>



<h4 id="10-hive的常用命令">       10)  Hive的常用命令</h4>



<h2 id="title">————————————————————————————————————————</h2>



<h3 id="一hive是什么-1">一、Hive是什么</h3>

<p>       <font color="#ff0000">Hive是基于Hadoop的一个数据仓库工具，可以将结构化的数据文件映射为一张数据库表，并提供完整的sql查询功能，可以将sql语句转换为MapReduce任务进行运行。</font>其优点是学习成本低，可以通过类SQL语句快速实现简单的MapReduce统计，不必开发专门的MapReduce应用，十分适合数据仓库的统计分析。 <br>
       Hive是建立在 Hadoop 上的数据仓库基础构架。它提供了一系列的工具，可以用来进行数据提取转化加载（ETL），这是一种可以存储、查询和分析存储在 Hadoop 中的大规模数据的机制。<font color="#ff0000">Hive 定义了简单的类 SQL 查询语言，称为 HQL</font>，它允许熟悉 SQL 的用户查询数据。同时，这个语言也允许熟悉 MapReduce 开发者的开发自定义的 mapper 和 reducer 来处理内建的 mapper 和 reducer 无法完成的复杂的分析工作。</p>



<h3 id="二hive与关系数据库的区别-1">二、Hive与关系数据库的区别</h3>

<p>       1)  hive和关系数据库存储文件的系统不同，hive使用的是hadoop的HDFS（hadoop的分布式文件系统），关系数据库则是服务器本地的文件系统； <br>
       2)  hive使用的计算模型是mapreduce，而关系数据库则是自己设计的计算模型； <br>
       3)  关系数据库都是为实时查询的业务进行设计的，而hive则是为海量数据做数据挖掘设计的，实时性很差；实时性的区别导致hive的应用场景和关系数据库有很大的不同； <br>
       4)  Hive很容易扩展自己的存储能力和计算能力，这个是继承hadoop的，而关系数据库在这个方面要比hive差很多。</p>



<h3 id="三hive架构介绍-1">三、Hive架构介绍</h3>

<p><img src="https://img-blog.csdn.net/20170509094027901?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""> <br>
       Hive的体系结构可以分为以下几部分： <br>
       （1）用户接口主要有三个：CLI，Client 和 WUI。其中最常用的是CLI，Cli启动的时候，会同时启动一个Hive副本。Client是Hive的客户端，用户连接至Hive Server。在启动 Client模式的时候，需要指出Hive Server所在节点，并且在该节点启动Hive Server。 WUI是通过浏览器访问Hive。 <br>
       （2）Hive将元数据存储在数据库中，如mysql、derby。<font color="#ff0000">Hive中的元数据包括表的名字，表的列和分区及其属性，表的属性（是否为外部表等），表的数据所在目录等。</font> <br>
       （3）解释器、编译器、优化器完成HQL查询语句从词法分析、语法分析、编译、优化以及查询计划的生成。生成的查询计划存储在HDFS中，并在随后有MapReduce调用执行。 <br>
       （4）<font color="#ff0000">Hive的数据存储在HDFS中</font>，大部分的查询、计算由MapReduce完成（包含<em>的查询，比如select </em> from tbl不会生成MapRedcue任务）。 <br>
Hive将元数据存储在RDBMS中，</p>



<h3 id="四hive的实战操作-1">四、Hive的实战操作</h3>



<h4 id="1-hive的启动-1">       1)   HIVE的启动</h4>



<pre class="prettyprint"><code class=" hljs ruby">[root<span class="hljs-variable">@hadoop11</span> bin]<span class="hljs-comment"># ls</span>
beeline  ext  hive  hive-config.sh  hiveserver2  metatool  schematool
[root<span class="hljs-variable">@hadoop11</span> bin]<span class="hljs-comment"># pwd</span>
/usr/app/hive-<span class="hljs-number">0</span>.<span class="hljs-number">12.0</span>/bin
[root<span class="hljs-variable">@hadoop11</span> bin]<span class="hljs-comment"># sh /usr/app/hive-0.12.0/bin/hive</span></code></pre>



<h4 id="2-hive创建数据库-1">       2)   Hive创建数据库</h4>

<p>       Hive是一种数据库技术，可以定义数据库和表来分析结构化数据。主题结构化数据分析是以表方式存储数据，并通过查询来分析。本章介绍如何创建Hive 数据库。配置单元包含一个名为 default 默认的数据库。 <br>
       CREATE DATABASE语句 <br>
       创建数据库是用来创建数据库在Hive中语句。在Hive数据库是一个命名空间或表的集合。此语法声明如下：</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">DATABASE</span>|<span class="hljs-keyword">SCHEMA</span> [<span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span>]&lt;<span class="hljs-keyword">database</span> name&gt;</span></code></pre>

<p>       在这里，IF NOT EXISTS是一个可选子句，通知用户已经存在相同名称的数据库。可以使用SCHEMA 在DATABASE的这个命令。下面的查询执行创建一个名为userdb数据库：</p>



<pre class="prettyprint"><code class=" hljs oxygene">hive&gt; <span class="hljs-keyword">CREATE</span> DATABASE [<span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> EXISTS] userdb;
hive&gt; <span class="hljs-keyword">CREATE</span> DATABASE userdb;</code></pre>

<p>       下面的查询用于验证数据库列表：</p>



<pre class="prettyprint"><code class=" hljs vhdl">hive&gt;SHOW DATABASES;
<span class="hljs-keyword">default</span>
userdb
hive&gt; <span class="hljs-keyword">use</span> <span class="hljs-keyword">default</span>;
OK
<span class="hljs-typename">Time</span> taken: <span class="hljs-number">0.114</span> seconds
hive&gt; show tables;
OK
people
test
<span class="hljs-typename">Time</span> taken: <span class="hljs-number">0.404</span> seconds, Fetched: <span class="hljs-number">2</span> row(s)
hive&gt;
</code></pre>



<h4 id="3-hive删除数据库-1">       3)   Hive删除数据库</h4>

<p>DROP DATABASE语句 <br>
DROP DATABASE是删除所有的表并删除数据库的语句。它的语法如下：</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">DATABASE</span> StatementDROP (<span class="hljs-keyword">DATABASE</span>|<span class="hljs-keyword">SCHEMA</span>) [<span class="hljs-keyword">IF</span> <span class="hljs-keyword">EXISTS</span>] database_name 
[<span class="hljs-keyword">RESTRICT</span>|<span class="hljs-keyword">CASCADE</span>];</span></code></pre>

<p>下面的查询用于删除数据库。假设要删除的数据库名称为userdb。</p>



<pre class="prettyprint"><code class=" hljs ruleslanguage">hive&gt; DROP DATABASE <span class="hljs-keyword">IF</span> EXISTS userdb;</code></pre>

<p>以下是使用CASCADE查询删除数据库。这意味着要全部删除相应的表在删除数据库之前。</p>



<pre class="prettyprint"><code class=" hljs ruleslanguage">hive&gt; DROP DATABASE <span class="hljs-keyword">IF</span> EXISTS userdb CASCADE;</code></pre>

<p>以下使用SCHEMA查询删除数据库。</p>



<pre class="prettyprint"><code class=" hljs ">hive&gt; DROP SCHEMA userdb;</code></pre>



<h4 id="4-创建hive表添加数据-1">       4)   创建HIVE表添加数据</h4>

<p><img src="https://img-blog.csdn.net/20170509094555231?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>

<table>
<thead>
<tr>
  <th align="left">people01.txt</th>
  <th align="left">people02.txt</th>
</tr>
</thead>
<tbody><tr>
  <td align="left">1,man,zhangliao</td>
  <td align="left">1,women,baibing</td>
</tr>
<tr>
  <td align="left">2,man,caocao</td>
  <td align="left">2,women,hangxue</td>
</tr>
<tr>
  <td align="left">3,man,simayi</td>
  <td align="left">3,women,ganwei</td>
</tr>
<tr>
  <td align="left">4,man,zhugeliang</td>
  <td align="left">4,women,jingtian</td>
</tr>
<tr>
  <td align="left">5,man,simayi</td>
  <td align="left">5,women,liushishi</td>
</tr>
</tbody></table>




<pre class="prettyprint"><code class=" hljs perl">hadoop fs -<span class="hljs-keyword">mkdir</span> /usr/yuhui/hive
hadoop fs -<span class="hljs-keyword">mkdir</span> /usr/yuhui/hive/<span class="hljs-number">20170309</span>
hadoop fs -<span class="hljs-keyword">mkdir</span> /usr/yuhui/hive/<span class="hljs-number">20170309</span>/<span class="hljs-number">00</span>
hadoop fs -<span class="hljs-keyword">mkdir</span> /usr/yuhui/hive/<span class="hljs-number">20170310</span>
hadoop fs -<span class="hljs-keyword">mkdir</span> /usr/yuhui/hive/<span class="hljs-number">20170310</span>/<span class="hljs-number">00</span></code></pre>

<p><img src="https://img-blog.csdn.net/20170509094841178?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>

<p><img src="https://img-blog.csdn.net/20170509094848342?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>

<p><img src="https://img-blog.csdn.net/20170509094855373?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>



<h4 id="5-hive的分区-1">       5)   HIVE的分区</h4>



<pre class="prettyprint"><code class=" hljs oxygene"><span class="hljs-comment">//添加数据到HDFS</span>
[root@hadoop11 data]# hadoop fs -put people01.txt /usr/yuhui/hive/<span class="hljs-number">20170309</span>/<span class="hljs-number">00</span>/
[root@hadoop11 data]# hadoop fs -put people02.txt /usr/yuhui/hive/<span class="hljs-number">20170310</span>/<span class="hljs-number">00</span>/

<span class="hljs-comment">//建立hive和Hdfs的外部关联表</span>
hive&gt; <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">EXTERNAL</span> TABLE people(id int,sex string,name string) partitioned <span class="hljs-keyword">by</span> (logdate string,hour string) row format delimited fields terminated <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;

hive&gt; show tables;
hive&gt; <span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> people;

<span class="hljs-comment">//追加数据</span>
hive&gt; ALTER TABLE people <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> EXISTS PARTITION(logdate=<span class="hljs-number">20170309</span>,hour=<span class="hljs-number">00</span>)LOCATION
<span class="hljs-string">'/usr/yuhui/hive/20170309/00'</span>; 

hive&gt; ALTER TABLE people <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">NOT</span> EXISTS PARTITION(logdate=<span class="hljs-number">20170310</span>,hour=<span class="hljs-number">00</span>)LOCATION
<span class="hljs-string">'/usr/yuhui/hive/20170310/00'</span>; </code></pre>

<p><img src="https://img-blog.csdn.net/20170509095025062?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>



<h4 id="6-hive条件查询-1">       6)   HIVE条件查询</h4>

<p>查分区不用【引号】</p>



<pre class="prettyprint"><code class=" hljs cs">hive&gt; <span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> people <span class="hljs-keyword">where</span> logdate=<span class="hljs-number">20170310</span>;
OK
<span class="hljs-number">1</span>   women   baibing <span class="hljs-number">20170310</span>    <span class="hljs-number">00</span>
<span class="hljs-number">2</span>   women   hangxue <span class="hljs-number">20170310</span>    <span class="hljs-number">00</span>
<span class="hljs-number">3</span>   women   ganwei  <span class="hljs-number">20170310</span>    <span class="hljs-number">00</span>
<span class="hljs-number">4</span>   women   jingtian    <span class="hljs-number">20170310</span>    <span class="hljs-number">00</span>
<span class="hljs-number">5</span>   women   liushishi   <span class="hljs-number">20170310</span>    <span class="hljs-number">00</span>
Time taken: <span class="hljs-number">0.64</span> seconds, Fetched: <span class="hljs-number">5</span> row(s)
</code></pre>

<p>查条件用【引号】</p>

<p><img src="https://img-blog.csdn.net/20170509095205485?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>



<h4 id="7-udf函数-1">       7)   UDF函数</h4>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">package</span> cn.orcale.com.bigdata.hive;

<span class="hljs-keyword">import</span> org.apache.hadoop.hive.ql.exec.UDF;

<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">helloUDF</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">UDF</span> {</span>

    <span class="hljs-keyword">public</span> String <span class="hljs-title">evaluate</span>(String sex , String name) {

        <span class="hljs-keyword">try</span> {

             <span class="hljs-keyword">if</span>(sex.equals(<span class="hljs-string">"man"</span>)){
                 <span class="hljs-keyword">return</span> sex +<span class="hljs-string">"  ===&gt;  "</span>+ name;
             }

             <span class="hljs-keyword">return</span> sex +<span class="hljs-string">"  ===&gt;  "</span>+ name;

            } 
        <span class="hljs-keyword">catch</span> (Exception e) {
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;
            }
        }

} 

<span class="hljs-comment">//ADD JAR helloUDF.jar; </span>
<span class="hljs-comment">//create temporary function helloworld as 'cn.orcale.com.bigdata.hive.helloUDF';</span>
<span class="hljs-comment">//select helloworld(people.sex, people.name) from people ;</span>
</code></pre>

<p><img src="https://img-blog.csdn.net/20170509095243684?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>



<h4 id="8-删除hive表-1">       8)   删除HIVE表</h4>



<pre class="prettyprint"><code class=" hljs rust">hive&gt; <span class="hljs-keyword">drop</span> table people;
OK
Time taken: <span class="hljs-number">1.593</span> seconds
hive&gt; SHOW TABLES;
OK
test
</code></pre>



<h4 id="9-查询结果保存到本地-1">       9)   查询结果保存到本地</h4>



<pre class="prettyprint"><code class=" hljs ruleslanguage">hive&gt; INSERT OVERWRITE LOCAL DIRECTORY <span class="hljs-string">'/root/data/hivedata'</span> <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> people;</code></pre>

<p><img src="https://img-blog.csdn.net/20170509095334048?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>

<p><img src="https://img-blog.csdn.net/20170509095342126?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2lsZW50d29sZnlo/font/5a6L5L2T/fontsize/400/fill/I0ZGMDAwMA==/dissolve/70/gravity/Center" alt="这里写图片描述" title=""></p>



<h4 id="10-hive的常用命令-1">       10)  Hive的常用命令</h4>



<pre class="prettyprint"><code class=" hljs oxygene">创建新表 
hive&gt; <span class="hljs-keyword">CREATE</span> TABLE t_hive (a int, b int, c int) ROW FORMAT DELIMITED FIELDS TERMINATED <span class="hljs-keyword">BY</span> ‘\t’;
导入数据t_hive.txt到t_hive表 
hive&gt; LOAD DATA LOCAL INPATH ‘/home/cos/demo/t_hive.txt’ OVERWRITE <span class="hljs-keyword">INTO</span> TABLE t_hive ;
正则匹配表名 
hive&gt;show tables ‘t‘;
增加一个字段 
hive&gt; ALTER TABLE t_hive <span class="hljs-keyword">ADD</span> COLUMNS (new_col String);
重命令表名 
hive&gt; ALTER TABLE t_hive RENAME <span class="hljs-keyword">TO</span> t_hadoop;
从HDFS加载数据 
hive&gt; LOAD DATA INPATH ‘/user/hive/warehouse/t_hive/t_hive.txt’ OVERWRITE <span class="hljs-keyword">INTO</span> TABLE t_hive2;

从其他表导入数据 
hive&gt; INSERT OVERWRITE TABLE t_hive2 <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> t_hive ;
创建表并从其他表导入数据 
hive&gt; <span class="hljs-keyword">CREATE</span> TABLE t_hive <span class="hljs-keyword">AS</span> <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> t_hive2 ;
仅复制表结构不导数据 
hive&gt; <span class="hljs-keyword">CREATE</span> TABLE t_hive3 LIKE t_hive;
通过Hive导出到本地文件系统 
hive&gt; INSERT OVERWRITE LOCAL DIRECTORY ‘/tmp/t_hive’ <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> t_hive;
Hive查询HiveQL 
<span class="hljs-keyword">from</span> ( <span class="hljs-keyword">select</span> b,c <span class="hljs-keyword">as</span> c2 <span class="hljs-keyword">from</span> t_hive) t <span class="hljs-keyword">select</span> t.b, t.c2 limit <span class="hljs-number">2</span>; 
<span class="hljs-keyword">select</span> b,c <span class="hljs-keyword">from</span> t_hive limit <span class="hljs-number">2</span>;
</code></pre>

<p>       <font size="5" color="#ff0000" face="黑体">如果您喜欢我写的博文，读后觉得收获很大，不妨小额赞助我一下，让我有动力继续写出高质量的博文，感谢您的赞赏！！！</font> <br>
</p><center><img src="https://img-blog.csdn.net/20170607081951153" width="180" height="180"></center><p></p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>