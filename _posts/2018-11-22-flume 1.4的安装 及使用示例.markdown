---
layout:     post
title:      flume 1.4的安装 及使用示例
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="font-family:Tahoma;">在进行使用示例说明之前，先请大家先明确flume中的Source和Sink以及Channel的概念。</span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="font-family:Tahoma;"><span style="font-family:'Microsoft YaHei';">flume-ng是flume的新版本的意思，其中“ng”意为new generate(新一代)，目前来说，flume 1.4（也就是flume-ng）是最新的版本。</span><br></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="background-color:rgb(51,255,51);"><span><span style="font-family:Tahoma;">一、flume介绍</span></span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="font-family:Tahoma;">flume是个日志收集系统，这个日志收集系统由一个或多个agent（代理）构成，每个agent由三部分构成：Source、Channel、Sink，如下图：</span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;text-align:center;">
<span style="font-family:Tahoma;"><img src="https://img-blog.csdn.net/20131210133508812?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1X3h1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:none;"><br></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;text-align:center;">
<span style="font-family:Tahoma;">agent结构图</span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-family:Tahoma;">source为水源，是aent获取数据的入口；</span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-family:Tahoma;">channel为管道，是数据（由resource获得）流动的通道，主要作用是用来传输和存储数据；</span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-family:Tahoma;">sink为水槽，用来接收channel传入的数据并将数据输出到指定地方。</span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-family:Tahoma;">大家可以把agent看作一个水管，source就是水管的入口，sink就是水管的出口，把数据当作水来看，数据流也就意味着水流。数据由source获得流经channel，最后传给sink。下图演示了一个完整的agent流程，由webserver获取数据，数据经channel流向sink，最后由sink将数据存储在hdfs里面。</span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-family:Tahoma;"><br></span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;text-align:center;">
<span style="font-family:Tahoma;"><img src="https://img-blog.csdn.net/20131210135113515?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1X3h1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" width="600" height="243" alt="" style="border:none;"><br></span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-family:Tahoma;">上面说到了一个flume系统可以由一个或多个agent组成，多个agent只要做一些简单的配置就可以串在一起，比如将两个agent（foo、bar）串在一起工作，只要将bar的source（入口）接在foo的sink（出口）上就可以了。如下图：</span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;text-align:center;">
<span style="font-family:Tahoma;"><img src="https://img-blog.csdn.net/20131210140143078?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1X3h1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:none;"><br></span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-family:Tahoma;">再看看下图，下图是将4个agent串在一起，agent1、agent2和agent3都是获取web服务器的数据，然后将各自获得到的数据统一地发送给agent4，最后由agent4将收集到的数据存储在hdfs里面。怎么样，agent的使用是不是很灵活，扩展性也很高，就行拼图一样，想怎么拼就怎么拼。</span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;text-align:center;">
<span style="font-family:Tahoma;"><img src="https://img-blog.csdn.net/20131210140639718?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1X3h1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:none;"><br></span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-family:Tahoma;">其实在1个agent里面，对source、channel、sink的个数是无限制的，可以有多个，只要他们能够正确匹配就行。请看下图，这个例子中source获取到的数据被分发给了3个channel，其中sink1将数据输出到hdfs里面，sink2将数据作为jms输出。</span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;text-align:center;">
<span style="font-family:Tahoma;"><img src="https://img-blog.csdn.net/20131210141516031?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1X3h1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:none;"><br></span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-family:Tahoma;"><br></span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-family:Tahoma;"><br></span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-family:Tahoma;">agent本质上是一个jvm进程，agent各组件间的工作是通过event事件来触发和协调的。使用agent时候，我们需要在agent的配置文件中设置好配置信息，source、channel、sink都有各自不同的配置选项。<br></span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;">
<span style="font-family:Tahoma;"><br></span></div>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;">
<span style="background-color:rgb(51,255,51);"><span><span style="font-family:Tahoma;">二、flume使用示例</span></span></span></div>
<span style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;background-color:rgb(51,255,255);"><span style="font-family:Tahoma;"><span>1.通过avro-client客户端向agent发送数据，并打印在屏幕上（也就是输出至日志中）：</span></span></span><span style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;"></span>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="background-color:rgb(255,255,51);"><span style="font-family:Tahoma;">注意：</span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="color:rgb(102,0,204);"><span style="font-family:Tahoma;">a.本文中，以$FLUME代表flume的安装目录。</span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="color:rgb(102,0,204);"><span style="font-family:Tahoma;">b.本文中的每个使用示例的配置文件名称皆为：source_sourceType-sink_sinkType.properties。</span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="color:rgb(102,0,204);"><span style="font-family:Tahoma;">其中，sourceType表示source的类型，sinkType表示sink的类型。</span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="color:rgb(102,0,204);"><span style="font-family:Tahoma;">比如，配置文件source_avro-sink_filerole.properties表示此例中的source类型为avro,sink的类型为filerole，即接收avro客户端传来的数据并将数据输出值本地文件。</span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="color:rgb(102,0,204);"><span style="font-family:Tahoma;">c.本文中的channel的类型默认为memory，意为将数据存储至内存。</span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="font-family:Tahoma;"><br></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="background-color:rgb(255,153,255);"><span style="font-family:Tahoma;">(1).在$FLUME目录下新建目录test,并在test目录下新建文件source_avro-sink_logger.properties，文件内容如下：</span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<div class="dp-highlighter bg_java" style="font-family:Consolas, 'Courier New', Courier, mono, serif;background-color:rgb(231,229,220);width:693px;overflow:auto;color:rgb(54,46,43);line-height:26px;">
<div class="bar">
<div class="tools" style="font-size:9px;line-height:normal;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:#C0C0C0;background-color:rgb(248,248,248);border-left-width:3px;border-left-style:solid;border-left-color:rgb(108,226,108);">
<span>[java]</span> <a href="http://blog.csdn.net/zhu_xun/article/details/17242819#" rel="nofollow" class="ViewSource" title="view plain" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;">view
 plain</a><a href="http://blog.csdn.net/zhu_xun/article/details/17242819#" rel="nofollow" class="CopyToClipboard" title="copy" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;">copy</a><a href="https://code.csdn.net/snippets/106246" rel="nofollow" title="在CODE上查看代码片" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;"><img src="https://code.csdn.net/assets/CODE_ico.png" width="12" height="12" alt="在CODE上查看代码片" style="border:none;"></a><a href="https://code.csdn.net/snippets/106246/fork" rel="nofollow" title="派生到我的代码片" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;"><img src="https://code.csdn.net/assets/ico_fork.svg" width="12" height="12" alt="派生到我的代码片" style="border:none;"></a>
<div style="width:18px;z-index:99;">
</div>
</div>
</div>
<ol start="1" class="dp-j" style="font-size:1.2em;line-height:18px;border:none;background-color:rgb(255,255,255);color:rgb(92,92,92);"><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;"><span style="border:none;background-color:inherit;">&lt;span style=</span><span class="string" style="border:none;color:#0000FF;background-color:inherit;">"font-family:Tahoma;font-size:14px;"</span><span style="border:none;background-color:inherit;">&gt;#为agent的各个组件命名  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#本例中，agent的名称为<span class="string" style="border:none;color:#0000FF;background-color:inherit;">"a1"</span><span style="border:none;background-color:inherit;">   </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources = r1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks = k1  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels = c1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#source配置信息  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#r1的type为avro表示该source接收的数据协议为avro,且接收数据由avro客户端事件驱动  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#（也就是说resource要通过avro-cliet向其发送数据）  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.type = avro  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.bind = localhost  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.port = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">44444</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#sink配置信息  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;"># type为logger意将数据输出至日志中(也就是打印在屏幕上)  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.type = logger  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#channel配置信息  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#type为memory意将数据存储至内存中  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.type = memory  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.capacity = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">1000</span><span style="border:none;background-color:inherit;">  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.transactionCapacity = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">100</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#将source和sink绑定至该channel上  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.channels = c1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.channel = c1&lt;/span&gt;  </span></li></ol></div>
<span style="color:rgb(54,46,43);font-size:14px;line-height:26px;font-family:Tahoma;"><br></span><span style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;"></span>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<span style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;background-color:rgb(255,153,255);"><span style="font-family:Tahoma;">(2).生成测试源数据：</span></span><span style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;"></span>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="font-family:Tahoma;">新建文件file01.txt，并向其中写入如下数据;</span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="font-family:Tahoma;"><span style="color:rgb(51,102,255);"><span style="font-size:10px;">hello world 1<br>
hello world 2<br>
hello world 3<br>
hello world 4<br>
hello world 5<br>
hello world 6<br>
hello world 7<br>
hello world 8<br>
hello world 9<br>
hello world 10</span></span><br><span style="background-color:rgb(255,153,255);">(3)启动agent代理：</span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="color:rgb(255,0,0);"><span style="font-family:Tahoma;">flume-ng agent -n a1 -f source_avro-sink_logger.properties<br></span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="background-color:rgb(255,153,255);"><span style="font-family:Tahoma;">(4). 启动avro-client客户端向agent代理发送数据：</span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="font-family:Tahoma;"><span style="color:rgb(255,0,0);">flume-ng avro-client -H localhost -p 44444 -F file01</span><br></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="font-family:Tahoma;"><span style="background-color:rgb(255,255,0);">注：</span>启动avro-client客户端要重新开一个会话框</span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="background-color:rgb(255,153,255);"><span style="font-family:Tahoma;">(5).这是可以看到aent的输出信息：</span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;text-align:center;">
<span style="font-family:Tahoma;"><img src="https://img-blog.csdn.net/20131210145658546?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1X3h1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" width="700" height="311" alt="" style="border:none;"><br></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="background-color:rgb(51,255,255);"><span style="font-family:Tahoma;"><span>2.通过avro-client客户端向agent发送数据，并将数据输出至本地文件中：</span></span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="font-family:Tahoma;"></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="background-color:rgb(255,153,255);"><span style="font-family:Tahoma;">(1).在$FLUME目录下新建目录test,并在test目录下新建文件source_avro-sink_filerole.properties，文件内容如下：</span></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<div class="dp-highlighter bg_java" style="font-family:Consolas, 'Courier New', Courier, mono, serif;background-color:rgb(231,229,220);width:693px;overflow:auto;color:rgb(54,46,43);line-height:26px;">
<div class="bar">
<div class="tools" style="font-size:9px;line-height:normal;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:#C0C0C0;background-color:rgb(248,248,248);border-left-width:3px;border-left-style:solid;border-left-color:rgb(108,226,108);">
<span>[java]</span> <a href="http://blog.csdn.net/zhu_xun/article/details/17242819#" rel="nofollow" class="ViewSource" title="view plain" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;">view
 plain</a><a href="http://blog.csdn.net/zhu_xun/article/details/17242819#" rel="nofollow" class="CopyToClipboard" title="copy" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;">copy</a><a href="https://code.csdn.net/snippets/106246" rel="nofollow" title="在CODE上查看代码片" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;"><img src="https://code.csdn.net/assets/CODE_ico.png" width="12" height="12" alt="在CODE上查看代码片" style="border:none;"></a><a href="https://code.csdn.net/snippets/106246/fork" rel="nofollow" title="派生到我的代码片" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;"><img src="https://code.csdn.net/assets/ico_fork.svg" width="12" height="12" alt="派生到我的代码片" style="border:none;"></a>
<div style="width:18px;z-index:99;">
</div>
</div>
</div>
<ol start="1" class="dp-j" style="font-size:1.2em;line-height:18px;border:none;background-color:rgb(255,255,255);color:rgb(92,92,92);"><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;"><span style="border:none;background-color:inherit;">&lt;span style=</span><span class="string" style="border:none;color:#0000FF;background-color:inherit;">"font-family:Tahoma;font-size:14px;"</span><span style="border:none;background-color:inherit;">&gt;#为agent的各个组件命名  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#本例中，agent的名称为<span class="string" style="border:none;color:#0000FF;background-color:inherit;">"a1"</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources = r1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks = k1  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels = c1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#source配置信息  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#r1的type为avro表示该source接收的数据协议为avro,且接收数据由avro客户端事件驱动  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#（也就是说resource要通过avro-cliet向其发送数据）  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.type = avroa1.sources.r1.bind = localhosta1.sources.r1.port = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">44444</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#sink配置信息  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#<span class="string" style="border:none;color:#0000FF;background-color:inherit;">"file_roll"</span><span style="border:none;background-color:inherit;">表示将数据存入本地文件系统  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.type = file_roll  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#指定数据存放目录  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.sink.directory = $FLUME/test/result  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#设置滚动时间(即每隔一段你设置的时间，系统会生成一个新的文件存放数据  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#(如果不指定，系统会默认生成N个文件，将数据分别存入N个文件中)，  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#为<span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">0</span><span style="border:none;background-color:inherit;">时表示只有一个文件存放数据)  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.sink.rollInterval = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">0</span><span style="border:none;background-color:inherit;">   </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#channel配置信息  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#type为memory意将数据存储至内存中  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.type = memory  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.capacity = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">1000</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.transactionCapacity = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">100</span><span style="border:none;background-color:inherit;">  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#将source和sink绑定至该channel上  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.channels= c1  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.channel = c1&lt;/span&gt;  </span></li></ol></div>
<span style="color:rgb(54,46,43);font-size:14px;line-height:26px;font-family:Tahoma;">同时在$FLUME/test下新建目录result，用来存放agent写入的数据。<br><span style="background-color:rgb(255,153,255);">(2).生成测试源数据：</span><br>
同上<br><span style="background-color:rgb(255,153,255);">(3)启动agent代理：</span><br><span style="color:rgb(255,0,0);">flume-ng agent -n a1 -f source_avro-sink_filerole.properties</span><br><span style="background-color:rgb(255,153,255);">(4). 启动avro-client客户端向agent代理发送数据</span>：<br><span style="color:rgb(255,0,0);">flume-ng avro-client -H localhost -p 44444 -F file01</span><br>
注：启动avro-client客户端要重新开一个会话框<br><span style="background-color:rgb(255,153,255);">(5)进入$FLUME/test/result目录：</span><br>
  这是可以看到新生成的文件"1386378213670-1"，这是打开文件看到内容如下：<br></span><span style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;"></span>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;text-align:center;">
<span style="font-family:Tahoma;"><img src="https://img-blog.csdn.net/20131210160111578?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1X3h1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:none;"></span></div>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="font-family:Tahoma;"><span style="background-color:rgb(51,255,255);"><span>3.通过avro-client客户端向agent发送数据，并将数据输出至hdfs中：</span></span><br><span style="background-color:rgb(255,153,255);">(1).在$FLUME目录下新建目录test,并在test目录下新建文件source_avro-sink_hdfs.properties，文件内容如下：</span><br></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<div class="dp-highlighter bg_java" style="font-family:Consolas, 'Courier New', Courier, mono, serif;background-color:rgb(231,229,220);width:693px;overflow:auto;color:rgb(54,46,43);line-height:26px;">
<div class="bar">
<div class="tools" style="font-size:9px;line-height:normal;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:#C0C0C0;background-color:rgb(248,248,248);border-left-width:3px;border-left-style:solid;border-left-color:rgb(108,226,108);">
<span>[java]</span> <a href="http://blog.csdn.net/zhu_xun/article/details/17242819#" rel="nofollow" class="ViewSource" title="view plain" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;">view
 plain</a><a href="http://blog.csdn.net/zhu_xun/article/details/17242819#" rel="nofollow" class="CopyToClipboard" title="copy" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;">copy</a><a href="https://code.csdn.net/snippets/106246" rel="nofollow" title="在CODE上查看代码片" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;"><img src="https://code.csdn.net/assets/CODE_ico.png" width="12" height="12" alt="在CODE上查看代码片" style="border:none;"></a><a href="https://code.csdn.net/snippets/106246/fork" rel="nofollow" title="派生到我的代码片" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;"><img src="https://code.csdn.net/assets/ico_fork.svg" width="12" height="12" alt="派生到我的代码片" style="border:none;"></a>
<div style="width:18px;z-index:99;">
</div>
</div>
</div>
<ol start="1" class="dp-j" style="font-size:1.2em;line-height:18px;border:none;background-color:rgb(255,255,255);color:rgb(92,92,92);"><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;"><span style="border:none;background-color:inherit;">&lt;span style=</span><span class="string" style="border:none;color:#0000FF;background-color:inherit;">"font-family:Tahoma;font-size:14px;"</span><span style="border:none;background-color:inherit;">&gt;#为agent的各个组件命名  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#本例中，agent的名称为<span class="string" style="border:none;color:#0000FF;background-color:inherit;">"a1"</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources = r1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks = k1  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels = c1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#source配置信息  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#r1的type为avro表示该source接收的数据协议为avro,且接收数据由avro客户端事件驱动  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#（也就是说resource要通过avro-cliet向其发送数据）  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.type = avro  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.bind = localhost  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.port = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">44444</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#加入时间戳拦截器，要不运行时会报异常  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.interceptors = i1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.interceptors.i1.type = timestamp  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#sink配置信息  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#type为<span class="string" style="border:none;color:#0000FF;background-color:inherit;">"hdfs"</span><span style="border:none;background-color:inherit;">表示将数据存入分布式文件系统(hdfs)  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.type = hdfs  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.channel = c1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.hdfs.path = /flume/events/%y-%m-%d/%H%M/%S  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.hdfs.filePrefix = events-  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#a1.sinks.k1.hdfs.round = <span class="keyword" style="border:none;color:rgb(0,102,153);background-color:inherit;font-weight:bold;">true</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#a1.sinks.k1.hdfs.roundValue = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">0</span><span style="border:none;background-color:inherit;">  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#a1.sinks.k1.hdfs.roundUnit = minute  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#a1.sinks.k1.hdfs.srollSize = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">4000000</span><span style="border:none;background-color:inherit;">  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#a1.sinks.k1.hdfs.rollCount = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">0</span><span style="border:none;background-color:inherit;">    </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.hdfs.writeFormat = Text  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.hdfs.fileType = DataStream  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#a1.sinks.k1.hdfs.batchSize = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">10</span><span style="border:none;background-color:inherit;">  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#channel配置信息  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#type为memory意将数据存储至内存中  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.type = memory  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.capacity = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">1000</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.transactionCapacity = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">100</span><span style="border:none;background-color:inherit;">  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#将source和sink绑定至该channel上  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.channels = c1  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.channel = c1&lt;/span&gt;  </span></li></ol></div>
<span style="color:rgb(54,46,43);font-size:14px;line-height:26px;font-family:Tahoma;"><span style="background-color:rgb(255,153,255);">(2).生成测试源数据：</span><br>
同上<br><span style="background-color:rgb(255,153,255);">(3).启动hadoop环境</span><br>
启动hadoop：<span style="color:rgb(255,0,0);">start-all.sh</span><br>
删除output目录：<span style="color:rgb(255,0,0);">hadoop fs -rmr output</span><br>
为了防止hadoop的安全性问题，可以把hadoop的安全模式关闭掉：hadoop dfsadmin -safemode leave<br><span style="background-color:rgb(255,153,255);">(4)启动agent代理：</span><br><span style="color:rgb(255,0,0);">flume-ng agent -n a1 -f source_avro-sink_hdfs.properties</span><br><span style="background-color:rgb(255,153,255);">(5). 启动avro-client客户端向agent代理发送数据：</span><br><span style="color:rgb(255,0,0);">flume-ng avro-client -H localhost -p 44444 -F file01</span><br>
注：启动avro-client客户端要重新开一个会话框<br><span style="background-color:rgb(255,153,255);">(6)进入hadoop的output目录：</span><br><span style="color:rgb(255,0,0);">hadoop fs -cat /flume/events/13-12-07/1220/58/events-.1386390061690</span><br>
可以看到输出如下：<br></span><span style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;"></span>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;text-align:center;">
<span style="font-family:Tahoma;"><img src="https://img-blog.csdn.net/20131210163421328?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1X3h1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" width="700" height="241" alt="" style="border:none;"></span></div>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="font-family:Tahoma;"><span style="background-color:rgb(255,255,51);">注：</span>在进入hdfs目录下查看文件时，agent在hdfs里创建的目录和文件名和我上面输入的会不一样，自己注意辨别。<br><span style="background-color:rgb(51,255,255);"><span>4.将两个agent串起来：</span></span><br>
这个示例是将agent01和agent02串起来工作的，agent01获取数据后向agent02输入。<br><span style="background-color:rgb(255,153,255);">(1).在$FLUME目录下新建目录test,并在test目录下新建文件agent01.properties和agent02.properties，文件内容如下：</span><br>
 agent01.properties内容如下:<br></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<div class="dp-highlighter bg_java" style="font-family:Consolas, 'Courier New', Courier, mono, serif;background-color:rgb(231,229,220);width:693px;overflow:auto;color:rgb(54,46,43);line-height:26px;">
<div class="bar">
<div class="tools" style="font-size:9px;line-height:normal;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:#C0C0C0;background-color:rgb(248,248,248);border-left-width:3px;border-left-style:solid;border-left-color:rgb(108,226,108);">
<span>[java]</span> <a href="http://blog.csdn.net/zhu_xun/article/details/17242819#" rel="nofollow" class="ViewSource" title="view plain" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;">view
 plain</a><a href="http://blog.csdn.net/zhu_xun/article/details/17242819#" rel="nofollow" class="CopyToClipboard" title="copy" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;">copy</a><a href="https://code.csdn.net/snippets/106246" rel="nofollow" title="在CODE上查看代码片" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;"><img src="https://code.csdn.net/assets/CODE_ico.png" width="12" height="12" alt="在CODE上查看代码片" style="border:none;"></a><a href="https://code.csdn.net/snippets/106246/fork" rel="nofollow" title="派生到我的代码片" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;"><img src="https://code.csdn.net/assets/ico_fork.svg" width="12" height="12" alt="派生到我的代码片" style="border:none;"></a>
<div style="width:18px;z-index:99;">
</div>
</div>
</div>
<ol start="1" class="dp-j" style="font-size:1.2em;line-height:18px;border:none;background-color:rgb(255,255,255);color:rgb(92,92,92);"><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;"><span style="border:none;background-color:inherit;">&lt;span style=</span><span class="string" style="border:none;color:#0000FF;background-color:inherit;">"font-family:Tahoma;font-size:14px;"</span><span style="border:none;background-color:inherit;">&gt;#为agent的各个组件命名  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#本例中，agent的名称为<span class="string" style="border:none;color:#0000FF;background-color:inherit;">"a1"</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources = r1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks = k1  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels = c1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#source配置信息  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#r1的type为avro表示该source接收的数据协议为avro,且接收数据由avro客户端事件驱动  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#（也就是说resource要通过avro-cliet向其发送数据）  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.type = avro  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.bind = localhost  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.port = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">44444</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;"># Describe the sink  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#a1.sinks.k1.type = logger  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#sink配置信息  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#k1的type为avro表示该sink将通过avro-client客户端以avro协议通过<span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">5555</span><span style="border:none;background-color:inherit;">端口发送数据  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.type = avro  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.hostname = localhost  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.port = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">55555</span><span style="border:none;background-color:inherit;">  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#channel配置信息  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#type为memory意将数据存储至内存中  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.type = memory  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.capacity = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">1000</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.transactionCapacity = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">100</span><span style="border:none;background-color:inherit;">  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#将source和sink绑定至该channel上  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.channels = c1  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.channel = c1&lt;/span&gt;  </span></li></ol></div>
<span style="color:rgb(54,46,43);font-size:14px;line-height:26px;font-family:Tahoma;">agent02.properties内容如下：<br></span>
<div class="dp-highlighter bg_java" style="font-family:Consolas, 'Courier New', Courier, mono, serif;background-color:rgb(231,229,220);width:693px;overflow:auto;color:rgb(54,46,43);line-height:26px;">
<div class="bar">
<div class="tools" style="font-size:9px;line-height:normal;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:#C0C0C0;background-color:rgb(248,248,248);border-left-width:3px;border-left-style:solid;border-left-color:rgb(108,226,108);">
<span>[java]</span> <a href="http://blog.csdn.net/zhu_xun/article/details/17242819#" rel="nofollow" class="ViewSource" title="view plain" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;">view
 plain</a><a href="http://blog.csdn.net/zhu_xun/article/details/17242819#" rel="nofollow" class="CopyToClipboard" title="copy" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;text-indent:-2000px;">copy</a><a href="https://code.csdn.net/snippets/106246" rel="nofollow" title="在CODE上查看代码片" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;"><img src="https://code.csdn.net/assets/CODE_ico.png" width="12" height="12" alt="在CODE上查看代码片" style="border:none;"></a><a href="https://code.csdn.net/snippets/106246/fork" rel="nofollow" title="派生到我的代码片" style="color:rgb(160,160,160);text-decoration:none;background-color:inherit;border:none;font-size:9px;display:inline-block;width:16px;"><img src="https://code.csdn.net/assets/ico_fork.svg" width="12" height="12" alt="派生到我的代码片" style="border:none;"></a>
<div style="width:18px;z-index:99;">
</div>
</div>
</div>
<ol start="1" class="dp-j" style="font-size:1.2em;line-height:18px;border:none;background-color:rgb(255,255,255);color:rgb(92,92,92);"><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;"><span style="border:none;background-color:inherit;">&lt;span style=</span><span class="string" style="border:none;color:#0000FF;background-color:inherit;">"font-family:Tahoma;font-size:14px;"</span><span style="border:none;background-color:inherit;">&gt;#为agent的各个组件命名  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#本例中，agent的名称为<span class="string" style="border:none;color:#0000FF;background-color:inherit;">"a2"</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a2.sources = r1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a2.sinks = k1  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a2.channels = c1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#source配置信息  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#r1的type为avro表示该source接收的数据协议为avro,且接收数据由avro客户端事件驱动  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#（也就是说resource要通过avro-cliet向其发送数据）  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.type = avro  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.bind = localhost  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.port = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">55555</span><span style="border:none;background-color:inherit;">   </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#sink配置信息  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#type为<span class="string" style="border:none;color:#0000FF;background-color:inherit;">"file_roll"</span><span style="border:none;background-color:inherit;">表示将数据存入本地文件系统  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.type = file_roll  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#指定数据存放目录  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.sink.directory = $FLUME/test/log  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#设置滚动时间(即每隔一段你设置的时间，系统会生成一个新的文件存放数据  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#(如果不指定，系统会默认生成N个文件，将数据分别存入N个文件中)，  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#为<span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">0</span><span style="border:none;background-color:inherit;">时表示只有一个文件存放数据)  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#a2.sinks.k1.sink.rollInterval = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">0</span><span style="border:none;background-color:inherit;">   </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">#channel配置信息  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#type为memory意将数据存储至内存中  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.type = memory  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.capacity = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">1000</span><span style="border:none;background-color:inherit;">  </span></span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.channels.c1.transactionCapacity = <span class="number" style="border:none;color:rgb(192,0,0);background-color:inherit;">100</span><span style="border:none;background-color:inherit;">  </span></span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">#将source和sink绑定至该channel上  </span></li><li class="alt" style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;color:inherit;">
<span style="border:none;color:#000000;background-color:inherit;">a1.sources.r1.channels = c1  </span></li><li style="border-style:none none none solid;border-left-width:3px;border-left-color:rgb(108,226,108);list-style:outside;background-color:rgb(248,248,248);">
<span style="border:none;color:#000000;background-color:inherit;">a1.sinks.k1.channel = c1&lt;/span&gt;  </span></li></ol></div>
<span style="color:rgb(54,46,43);font-size:14px;line-height:26px;font-family:Tahoma;"><span style="background-color:rgb(255,153,255);">(2).生成测试源数据：</span><br>
同上<br><span style="background-color:rgb(255,153,255);">(3).启动agent代理：</span><br>
  先启动agent02：<span style="color:rgb(255,0,0);">flume-ng agent -n a2 -f agent02.properties </span><br>
  再启动agent01：<span style="color:rgb(255,0,0);">flume-ng agent -n a1 -f agent01.properties </span><br><span style="background-color:rgb(255,255,102);">注意：</span>要注意启动顺序，先启动agent02，在启动agent01，要分别在不同的窗口启动<br><span style="background-color:rgb(255,153,255);">(4). 启动avro-client客户端向agent01代理发送数据：</span><br>
flume-ng avro-client -H localhost -p 44444 -F file01<br><span style="background-color:rgb(255,255,51);">注：</span>启动avro-client客户端要重新开一个会话框<br><span style="background-color:rgb(255,153,255);">(5)进入$FLUME/test/result目录：</span><br>
  这是可以看到新生成的文件"1386378213670-1"，这是打开文件看到内容如下：<br></span><span style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;"></span>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<div style="color:rgb(54,46,43);font-family:Arial;font-size:14px;line-height:26px;text-align:center;">
<span style="font-family:Tahoma;"><img src="https://img-blog.csdn.net/20131210160111578?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1X3h1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" style="border:none;"></span></div>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
</p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="font-family:Tahoma;"><span><span>未完待续。。。。。。</span></span><br></span></p>
<p style="font-size:14px;line-height:26px;color:rgb(54,46,43);font-family:Arial;">
<span style="font-family:Tahoma;">关于flume-ng的详细介绍和使用说明，希望大家去参考它的官方网址：http://flume.apache.org/FlumeUserGuide.html，在这里我只是做一下简单的使用示例介绍。</span></p>
            </div>
                </div>