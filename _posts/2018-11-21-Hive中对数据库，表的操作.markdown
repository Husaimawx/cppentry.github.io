---
layout:     post
title:      Hive中对数据库，表的操作
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>在应用Hive之前，首先搭建Hive环境，关于Hive的搭建 参考之前的搭建文档</p>

<p><a href="http://blog.csdn.net/liulihui1988/article/details/74351532" rel="nofollow" target="_blank">http://blog.csdn.net/liulihui1988/article/details/74351532</a> </p>



<h2 id="hive官方应用文档">Hive官方应用文档</h2>

<p><a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual" rel="nofollow" target="_blank">https://cwiki.apache.org/confluence/display/Hive/LanguageManual</a></p>



<h2 id="数据定义语言-ddl">数据定义语言 DDL</h2>

<p><img src="https://img-blog.csdn.net/20170705104142001?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1bGlodWkxOTg4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>

<p>1、Create Database</p>

<p>Hive中数据库的创建和关系型数据库类似，用create datebase创建</p>

<pre><code>CREATE (DATABASE|SCHEMA) [IF NOT EXISTS] database_name  
</code></pre>

<p>hive 中的操作</p>

<pre><code>hive&gt; create database hive  
</code></pre>

<p><img src="https://img-blog.csdn.net/20170705110325071?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1bGlodWkxOTg4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""> </p>

<p>2、Drop Database</p>

<pre><code>DROP (DATABASE|SCHEMA) [IF EXISTS] database_name [RESTRICT|CASCADE];
</code></pre>

<p>3、Alter Database</p>

<pre><code>ALTER (DATABASE|SCHEMA) database_name SET DBPROPERTIES (property_name=property_value, ...)
</code></pre>

<p>4、Use Database</p>

<pre><code>USE database_name;
USE DEFAULT;    
</code></pre>



<h2 id="createdroptruncate-table">Create/Drop/Truncate Table</h2>

<p>Hive中创建表，和关系型数据库中的创建表类似，Hive中表的字段<strong>应该</strong>和原始文件中的格式一致，原始文件存在HSFS上</p>

<p>1、create table</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_emp(
id <span class="hljs-keyword">int</span>,
name string,
age <span class="hljs-keyword">int</span>,
dept_name string
)
<span class="hljs-keyword">ROW</span> FORMAT DELIMITED
FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">','</span></span></code></pre>

<p>备注：FIELDS TERMINATED BY ‘,’ 表示原始文件中的格式使用 ‘,’ 隔开的</p>



<h2 id="测试-创建一个empdata文件导入temp表中">测试 创建一个emp_data文件，导入t_emp表中</h2>

<p><img src="https://img-blog.csdn.net/20170705114509144?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1bGlodWkxOTg4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>



<h2 id="hive数据的导入">Hive数据的导入</h2>

<p>Hive不做任何转换,数据加载到表中。加载操作目前纯复制/移动操作,实际上进入Hive位置对应表。</p>



<pre class="prettyprint"><code class=" hljs r">LOAD DATA [LOCAL] INPATH <span class="hljs-string">'filepath'</span> [OVERWRITE] INTO TABLE tablename [PARTITION (partcol1=val1, partcol2=val2 <span class="hljs-keyword">...</span>)]</code></pre>

<p>备注：[LOCAL] 本地文件，’filepath’ 路径</p>



<h1 id="测试数据导入表temp中">测试数据导入表t_emp中</h1>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">load</span> data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'/root/emp_data'</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> t_emp;</span></code></pre>

<p><img src="https://img-blog.csdn.net/20170705135147775?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1bGlodWkxOTg4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>



<h2 id="这时候我们查看hadoop-hdfs-的工作目录发现自动生成temp文件">这时候我们查看Hadoop HDFS 的工作目录发现自动生成t_emp文件</h2>

<p>/user/hive/warehouse/t_emp，Hive导入数据到t_emp表，(hadoop 环境变量)自动找到Hadoop HDFS 工作目录并且创建了工作目录</p>

<p><img src="https://img-blog.csdn.net/20170705142027724?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1bGlodWkxOTg4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>



<h2 id="执行-select-语句查询统计">执行 select 语句查询统计</h2>



<pre class="prettyprint"><code class=" hljs cs">hive&gt; <span class="hljs-keyword">select</span> count(*) <span class="hljs-keyword">from</span> t_emp <span class="hljs-keyword">where</span> dept_name = <span class="hljs-string">'销售部'</span> <span class="hljs-keyword">group</span> by dept_name;</code></pre>

<p>Hadoop job information Mapreduce 执行结果</p>

<p><img src="https://img-blog.csdn.net/20170705140945123?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGl1bGlodWkxOTg4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title=""></p>



<h2 id="数据操作语言-dml">数据操作语言 DML</h2>

<p>1、文件加载到表（本地导入）</p>

<p>Hive不做任何转换,数据加载到表中。加载操作目前纯复制/移动操作,实际上进入Hive位置对应表</p>

<pre class="prettyprint"><code class=" hljs r">LOAD DATA [LOCAL] INPATH <span class="hljs-string">'filepath'</span> [OVERWRITE] INTO TABLE tablename [PARTITION (partcol1=val1, partcol2=val2 <span class="hljs-keyword">...</span>)]</code></pre>

<ul>
<li>Hive从某个表导出到HDFS指定路径</li>
</ul>



<pre class="prettyprint"><code class=" hljs bash"><span class="hljs-keyword">export</span> table t_emp to <span class="hljs-string">'/usr/input/emp.txt'</span>;</code></pre>

<p>2、插入数据到Hive表中</p>

<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> students (name <span class="hljs-keyword">VARCHAR</span>(<span class="hljs-number">64</span>), age <span class="hljs-keyword">INT</span>, gpa <span class="hljs-keyword">DECIMAL</span>(<span class="hljs-number">3</span>, <span class="hljs-number">2</span>))
  CLUSTERED <span class="hljs-keyword">BY</span> (age) <span class="hljs-keyword">INTO</span> <span class="hljs-number">2</span> BUCKETS STORED <span class="hljs-keyword">AS</span> ORC;</span>

<span class="hljs-operator"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">TABLE</span> students
  <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">'fred flintstone'</span>, <span class="hljs-number">35</span>, <span class="hljs-number">1.28</span>), (<span class="hljs-string">'barney rubble'</span>, <span class="hljs-number">32</span>, <span class="hljs-number">2.32</span>);</span></code></pre>

<p>3、更新Hive表数据</p>



<pre class="prettyprint"><code class=" hljs r">UPDATE tablename SET column = value [, column = value <span class="hljs-keyword">...</span>] [WHERE expression]</code></pre>

<p>4、删除Hive表数据</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> tablename [<span class="hljs-keyword">WHERE</span> expression]</span></code></pre>

<p>5、查询插入Hive数据表dept_count (无分区)</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> dept_count(
    dname string,
    num <span class="hljs-keyword">int</span>
);</span>


<span class="hljs-operator"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> dept_count <span class="hljs-keyword">select</span> dept_name,<span class="hljs-aggregate">count</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">from</span> t_emp <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> dept_name;</span>  </code></pre>

<p>6、查询插入Hive数据表dept_count (有分区)</p>



<pre class="prettyprint"><code class=" hljs sql"><span class="hljs-operator"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> dept_count_1(
    num <span class="hljs-keyword">int</span>
) partitioned <span class="hljs-keyword">by</span> (dname string);</span>


<span class="hljs-operator"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> dept_count_1 partition (dname = <span class="hljs-string">'销售部'</span>) <span class="hljs-keyword">select</span> <span class="hljs-aggregate">count</span>(*) <span class="hljs-keyword">from</span> t_emp <span class="hljs-keyword">where</span> dept_name = <span class="hljs-string">'销售部'</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> dept_name;</span>

</code></pre>



<h2 id="详细-见官方文档">详细 见官方文档</h2>

<p><a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual" rel="nofollow" target="_blank">https://cwiki.apache.org/confluence/display/Hive/LanguageManual</a></p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>