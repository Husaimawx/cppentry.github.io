---
layout:     post
title:      spark的task调度器(一)
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/u014393917/article/details/50619140				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<h1>SPARK<span style="font-family:SimSun;">的调度器</span></h1>
<p style="background:rgb(255,255,255);"><span style="color:#000000;background:rgb(255,255,255);">spark的调度器在SparkContext初始化时,通过生成TaskSchedulerImpl实例时根据配置生成,可配置的调度器包含FIFO/FAIR两种调度器.</span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;background:rgb(255,255,255);">如果是FAIR调度器时,这个调度器的子调度器可以是FAIR或者FIFO,<br></span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;background:rgb(255,255,255);">具体采用的是先进先出调度还是公平调度通过进行</span><span style="background:rgb(255,255,255);">spark.scheduler.mode</span><span style="color:#000000;background:rgb(255,255,255);">配置,默认是先进先出调用.</span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;background:rgb(255,255,255);">在TaskSchedulerImpl实例生成时,<br></span></p>
<p style="background:rgb(255,255,255);"><span style="background:rgb(255,255,255);">private val </span><span style="background:rgb(255,255,255);">schedulingModeConf </span><span style="color:#000000;background:rgb(255,255,255);">= </span><span style="background:rgb(255,255,255);">conf</span><span style="color:#000000;background:rgb(255,255,255);">.get(</span><span style="background:rgb(255,255,255);">"spark.scheduler.mode"</span><span style="color:#cc7832;background:rgb(255,255,255);">, </span><span style="background:rgb(255,255,255);">"FIFO"</span><span style="color:#000000;background:rgb(255,255,255);">)</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="background:rgb(255,255,255);">val </span><span style="background:rgb(255,255,255);">schedulingMode</span><span style="color:#000000;background:rgb(255,255,255);">: </span><span style="color:#20999d;background:rgb(255,255,255);">SchedulingMode </span><span style="color:#000000;background:rgb(255,255,255);">= </span><span style="background:rgb(255,255,255);">try </span><span style="color:#000000;background:rgb(255,255,255);">{</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">  SchedulingMode.withName(</span><span style="background:rgb(255,255,255);">schedulingModeConf</span><span style="color:#000000;background:rgb(255,255,255);">.toUpperCase)</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">} </span><span style="background:rgb(255,255,255);">catch </span><span style="color:#000000;background:rgb(255,255,255);">{</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">  </span><span style="background:rgb(255,255,255);">case </span><span style="background:rgb(255,255,255);">e</span><span style="color:#000000;background:rgb(255,255,255);">: java.util.NoSuchElementException =&gt;</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">    </span><span style="background:rgb(255,255,255);">throw new </span><span style="color:#000000;background:rgb(255,255,255);">SparkException(</span><span style="background:rgb(255,255,255);">s"Unrecognized spark.scheduler.mode: </span></p>
<p style="background:rgb(255,255,255);"><span style="background:rgb(255,255,255);">       </span><span style="background:rgb(255,255,255);">$</span><span style="background:rgb(255,255,255);">schedulingModeConf</span><span style="background:rgb(255,255,255);">"</span><span style="color:#000000;background:rgb(255,255,255);">)</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">}</span></p>
<p style="background:rgb(255,255,255);"><br></p>
<p style="background:rgb(255,255,255);"><span style="background:rgb(255,255,255);">def </span><span style="color:#000000;background:rgb(255,255,255);">initialize(backend: SchedulerBackend) {</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">  </span><span style="background:rgb(255,255,255);">this</span><span style="color:#000000;background:rgb(255,255,255);">.</span><span style="background:rgb(255,255,255);">backend </span><span style="color:#000000;background:rgb(255,255,255);">= backend</span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;background:rgb(255,255,255);">初始的rootPool的minShare与weight都为0,如果是FIFO时,rootPool就是调度器使用的队列本身,如果是FAIR时,rootPool中一定包含有子的Pool实例.<br></span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;background:rgb(255,255,255);"></span><span style="color:#000000;background:rgb(255,255,255);"> 
</span><span style="color:#808080;background:rgb(255,255,255);">// temporarily set rootPool name to empty</span><span style="color:#808080;background:rgb(255,255,255);"><br></span><span style="color:#808080;background:rgb(255,255,255);">  </span><span style="background:rgb(255,255,255);">rootPool </span><span style="color:#000000;background:rgb(255,255,255);">= </span><span style="background:rgb(255,255,255);">new </span><span style="color:#000000;background:rgb(255,255,255);">Pool(</span><span style="background:rgb(255,255,255);">""</span><span style="color:#cc7832;background:rgb(255,255,255);">, </span><span style="background:rgb(255,255,255);">schedulingMode</span><span style="color:#cc7832;background:rgb(255,255,255);">, </span><span style="background:rgb(255,255,255);">0</span><span style="color:#cc7832;background:rgb(255,255,255);">, </span><span style="background:rgb(255,255,255);">0</span><span style="color:#000000;background:rgb(255,255,255);">)</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">  </span><span style="background:rgb(255,255,255);">schedulableBuilder </span><span style="color:#000000;background:rgb(255,255,255);">= {</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">    </span><span style="background:rgb(255,255,255);">schedulingMode </span><span style="background:rgb(255,255,255);">match </span><span style="color:#000000;background:rgb(255,255,255);">{</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">      </span><span style="background:rgb(255,255,255);">case </span><span style="color:#000000;background:rgb(255,255,255);">SchedulingMode.</span><span style="background:rgb(255,255,255);">FIFO </span><span style="color:#000000;background:rgb(255,255,255);">=&gt;</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">        </span><span style="background:rgb(255,255,255);">new </span><span style="color:#000000;background:rgb(255,255,255);">FIFOSchedulableBuilder(</span><span style="background:rgb(255,255,255);">rootPool</span><span style="color:#000000;background:rgb(255,255,255);">)</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">      </span><span style="background:rgb(255,255,255);">case </span><span style="color:#000000;background:rgb(255,255,255);">SchedulingMode.</span><span style="background:rgb(255,255,255);">FAIR </span><span style="color:#000000;background:rgb(255,255,255);">=&gt;</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">        </span><span style="background:rgb(255,255,255);">new </span><span style="color:#000000;background:rgb(255,255,255);">FairSchedulableBuilder(</span><span style="background:rgb(255,255,255);">rootPool</span><span style="color:#cc7832;background:rgb(255,255,255);">, </span><span style="background:rgb(255,255,255);">conf</span><span style="color:#000000;background:rgb(255,255,255);">)</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">    }</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">  }</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">  </span><span style="background:rgb(255,255,255);">schedulableBuilder</span><span style="color:#000000;background:rgb(255,255,255);">.buildPools()</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">}</span></p>
<p>在对一个<span style="font-family:'Times New Roman';">taskSet(</span><span style="font-family:SimSun;">也就是一个</span><span style="font-family:'Times New Roman';">stage</span><span style="font-family:SimSun;">执行</span><span style="font-family:'Times New Roman';">submit</span><span style="font-family:SimSun;">时</span><span style="font-family:'Times New Roman';">),</span><span style="font-family:SimSun;">通过调用</span><span style="font-family:'Times New Roman';">TaskSchedulerImpl</span><span style="font-family:SimSun;">中的</span><span style="font-family:'Times New Roman';">submitTasks</span><span style="font-family:SimSun;">时</span><span style="font-family:'Times New Roman';">,</span><span style="font-family:SimSun;">会调用对应的调用器的</span><span style="font-family:'Times New Roman';">addTaskSetManager</span><span style="font-family:SimSun;">函数</span><span style="font-family:'Times New Roman';">.</span></p>
<p>上面生成的<span style="font-family:'Times New Roman';">Pool</span><span style="font-family:SimSun;">实例中</span><span style="font-family:'Times New Roman';">,</span><span style="font-family:SimSun;">针对不同的调度器</span><span style="font-family:'Times New Roman';">,</span><span style="font-family:SimSun;">生成的调度算法</span><span style="font-family:'Times New Roman';">:</span></p>
<p style="background:rgb(255,255,255);"><span style="background:rgb(255,255,255);">var </span><span style="background:rgb(255,255,255);">taskSetSchedulingAlgorithm</span><span style="color:#000000;background:rgb(255,255,255);">: SchedulingAlgorithm = {</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">  schedulingMode </span><span style="background:rgb(255,255,255);">match </span><span style="color:#000000;background:rgb(255,255,255);">{</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">    </span><span style="background:rgb(255,255,255);">case </span><span style="color:#000000;background:rgb(255,255,255);">SchedulingMode.</span><span style="background:rgb(255,255,255);">FAIR </span><span style="color:#000000;background:rgb(255,255,255);">=&gt;</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">      </span><span style="background:rgb(255,255,255);">new </span><span style="color:#000000;background:rgb(255,255,255);">FairSchedulingAlgorithm()</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">    </span><span style="background:rgb(255,255,255);">case </span><span style="color:#000000;background:rgb(255,255,255);">SchedulingMode.</span><span style="background:rgb(255,255,255);">FIFO </span><span style="color:#000000;background:rgb(255,255,255);">=&gt;</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">      </span><span style="background:rgb(255,255,255);">new </span><span style="color:#000000;background:rgb(255,255,255);">FIFOSchedulingAlgorithm()</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">  }</span><span style="color:#000000;background:rgb(255,255,255);"><br></span><span style="color:#000000;background:rgb(255,255,255);">}</span></p>
<p style="background:rgb(255,255,255);">后面的文章中会根据fifo与fair两种不同的调度算法进行分析.<br></p>
            </div>
                </div>