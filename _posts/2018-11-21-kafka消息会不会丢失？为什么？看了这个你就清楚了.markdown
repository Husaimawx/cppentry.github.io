---
layout:     post
title:      kafka消息会不会丢失？为什么？看了这个你就清楚了
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<div class="article-title">
<h2>kafka消息会不会丢失？为什么？看了这个你就清楚了</h2>
</div>
<div class="article-desc clearfix">
<div class="author-icon"><br>
</div>
</div>
<p>消息发送方式</p>
<p>想清楚Kafka发送的消息是否丢失，需要先了解Kafka消息的发送方式。</p>
<p>Kafka消息发送分同步(sync)、异步(async)两种方式</p>
<p>默认是使用同步方式，可通过producer.type属性进行配置；</p>
<p>Kafka保证消息被安全生产，有三个选项分别是0,1,-1</p>
<p>通过request.required.acks属性进行配置：</p>
<p>0代表：不进行消息接收是否成功的确认(默认值)；</p>
<p>1代表：当Leader副本接收成功后，返回接收成功确认信息；</p>
<p>-1代表：当Leader和Follower副本都接收成功后，返回接收成功确认信息；</p>
<p>六种发送场景</p>
<p>两个维度相交，生成六种情况，如下图：</p>
<div class="img-container"><br>
</div>
<div class="img-container"><img src="https://img-blog.csdn.net/20180424092923405" alt=""><br>
</div>
<p>消息丢失的场景</p>
<p>网络异常</p>
<p>acks设置为0时，不和Kafka集群进行消息接受确认，当网络发生异常等情况时，存在消息丢失的可能；</p>
<p>客户端异常</p>
<p>异步发送时，消息并没有直接发送至Kafka集群，而是在Client端按一定规则缓存并批量发送。在这期间，如果客户端发生死机等情况，都会导致消息的丢失；</p>
<p>缓冲区满了</p>
<p>异步发送时，Client端缓存的消息超出了缓冲池的大小，也存在消息丢失的可能；</p>
<p>Leader副本异常</p>
<p>acks设置为1时，Leader副本接收成功，Kafka集群就返回成功确认信息，而Follower副本可能还在同步。这时Leader副本突然出现异常，新Leader副本(原Follower副本)未能和其保持一致，就会出现消息丢失的情况；</p>
<p>以上就是消息丢失的几种情况，在日常应用中，我们需要结合自身的应用场景来选择不同的配置。</p>
<p>想要更高的吞吐量就设置：异步、ack=0；想要不丢失消息数据就选：同步、ack=-1策略</p>
<p>附：Kafka备份策略，不理解的可以看我的另一篇文章《Kafka消息的备份策略》</p>
<div class="img-container"><img src="https://img-blog.csdn.net/20180424093014736" alt=""><br>
</div>
一个全栈程序猿的经验分享，大家觉得有收获的请在评论中给个鼓励，不足之处也请多多指出；最后预祝大家开心永在，感谢您的关注
            </div>
                </div>