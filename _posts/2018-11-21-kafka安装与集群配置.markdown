---
layout:     post
title:      kafka安装与集群配置
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p><strong>kafka简介</strong> <br>
Kafka 是一款分布式消息发布和订阅系统，具有高性能、高吞吐量的特点而被广泛应用与大数据传输场景。使用Scala语言进行编写，提供了与JMS规范类似的特性，但是编写上并不是jms实现。kafka中只有topic的概念，没有队列。</p>

<p><strong>kafka的应用场景</strong> <br>
kafka 具有高吞吐量、具有分区特性、副本机制及容错性的优点(kafka 每秒可以处理几十万消息)，让 kafka 成为了一个很好的大规模消息处理应用的解决方案。 <br>
1.分布式系统的日志收集。分布式系统通常一个服务部署多个实例，并且有多个服务类型，单纯查看log日志在问题出现时很难定位，因此可以把日志通过一个统一的方式收集起来，统一查看。</p>

<p>2.用户行为跟踪。 kafka 可以用于跟踪用户浏览页面、搜索及其他行为。通过发布-订阅模式实时记录到对应的 topic 中，通过后端大数据平台接入处理分析，并做更进一步的实时处理和监控</p>

<p><strong>典型的kafka集群结构</strong> <br>
<img src="https://img-blog.csdn.net/20180813223009940?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIwNTk3NzI3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述" title=""> <br>
以上是一个kafka集群的简单架构，多个broker通过zookeeper进行协同工作，多个producer向broker发送消息，多个消费者主动向broker拉取消息，这里跟别的activeMQ不一样的是kafka消费者主动拉取消息，activeMQ最终实现都是broker推送消息到消费者的本地内存。</p>

<p><strong>安装kafka</strong> <br>
1.<a href="http://kafka.apache.org/" rel="nofollow">http://kafka.apache.org/</a> 下载最新版的kafka压缩包 <br>
2.tar -xvzf xxxx解压缩，安装完成</p>

<p><strong>启动kafka以及集群配置</strong> <br>
在启动kafka之前，进入/config目录下，编辑server.properties文件，修改如下提示到的配置：</p>

<pre class="prettyprint"><code class=" hljs vala">
<span class="hljs-preprocessor"># The id of the broker. This must be set to a unique integer for each broker.</span>
<span class="hljs-preprocessor">#brokerid，集群中唯一的brokerid</span>
broker.id=<span class="hljs-number">0</span>


<span class="hljs-preprocessor"># The address the socket server listens on. It will get the value returned from </span>
<span class="hljs-preprocessor"># java.net.InetAddress.getCanonicalHostName() if not configured.</span>
<span class="hljs-preprocessor">#   FORMAT:</span>
<span class="hljs-preprocessor">#     listeners = listener_name://host_name:port</span>
<span class="hljs-preprocessor">#   EXAMPLE:</span>
<span class="hljs-preprocessor">#     listeners = PLAINTEXT://your.host.name:9092</span>
<span class="hljs-preprocessor">#配置listeners为本机的ip</span>
listeners=PLAINTEXT:<span class="hljs-comment">//192.168.0.15:9092</span>

<span class="hljs-preprocessor"># A comma separated list of directories under which to store log files</span>
<span class="hljs-preprocessor">#选择配置kafka日志存储地址，也是消息持久化地址</span>
log.dirs=/tmp/kafka-logs

<span class="hljs-preprocessor">############################# Zookeeper #############################</span>

<span class="hljs-preprocessor"># Zookeeper connection string (see zookeeper docs for details).</span>
<span class="hljs-preprocessor"># This is a comma separated host:port pairs, each corresponding to a zk</span>
<span class="hljs-preprocessor"># server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".</span>
<span class="hljs-preprocessor"># You can also append an optional chroot string to the urls to specify the</span>
<span class="hljs-preprocessor"># root directory for all kafka znodes.</span>
<span class="hljs-preprocessor">#配置zookeeper连接地址</span>
zookeeper.connect=<span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.15</span>:<span class="hljs-number">2181</span>

<span class="hljs-preprocessor"># Timeout in ms for connecting to zookeeper</span>
zookeeper.connection.timeout.ms=<span class="hljs-number">6000</span></code></pre>

<p>上面是单机配置，如果需要集群，那么就要在另一台broker上面进行配置另一个brokerId，同时连接到同样的zookeeper集群地址。</p>

<p>启动方式： <br>
1.启动zookeeper集群 <br>
2.进入kafka bin目录，./kafka-server-start.sh ../config/server.properties 指定配置文件启动kafkabroker，启动成功</p>

<p><strong>怎么利用bin里面的脚本进行简单操作？</strong></p>

<p>其实所有基本操作都可以在官网上面找到。。 <br>
创建一个名字为test的topic <br>
bin/kafka-topics.sh –create –zookeeper 192.168.0.15:2181 –replication-factor 1 –partitions 1 –topic test <br>
查看topic列表 <br>
bin/kafka-topics.sh –list –zookeeper 192.168.0.15:2181</p>

<p>其他什么的操作都可以在<a href="http://kafka.apache.org/quickstart#quickstart_send" rel="nofollow">kafka官网-&gt;开始上手kafka</a>找到，命令里面的参数暂时不介绍，后续另外介绍。</p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>