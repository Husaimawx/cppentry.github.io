---
layout:     post
title:      Hadoop基础教程-第12章 Hive：进阶（12.1 内置函数）（草稿）
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，欢迎转载。					https://blog.csdn.net/chengyuqiang/article/details/77434658				</div>
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h2 id="第12章-hive进阶">第12章 Hive：进阶</h2>



<h2 id="121-内置函数">12.1 内置函数</h2>

<hr>

<p>为了方便测试Hive的内置函数，需要构造一个类似于Oracle的dual虚表</p>



<pre class="prettyprint"><code class=" hljs cs">hive&gt; create table dual(<span class="hljs-keyword">value</span> <span class="hljs-keyword">string</span>);
OK
Time taken: <span class="hljs-number">0.117</span> seconds
hive&gt;</code></pre>



<pre class="prettyprint"><code class=" hljs vhdl">hive&gt; insert into dual values(<span class="hljs-string">"test"</span>);
WARNING: Hive-<span class="hljs-keyword">on</span>-MR <span class="hljs-keyword">is</span> deprecated <span class="hljs-keyword">in</span> Hive <span class="hljs-number">2</span> <span class="hljs-keyword">and</span> may <span class="hljs-keyword">not</span> be available <span class="hljs-keyword">in</span> the future versions. Consider using a different execution engine (i.e. spark, tez) <span class="hljs-keyword">or</span> using Hive <span class="hljs-number">1.</span>X releases.
Query ID = root_20170820093018_106fdbe1-<span class="hljs-number">3</span>d77-<span class="hljs-number">4</span>fbb-b200-<span class="hljs-number">3</span>b3d56007858
Total jobs = <span class="hljs-number">3</span>
Launching Job <span class="hljs-number">1</span> <span class="hljs-keyword">out</span> <span class="hljs-keyword">of</span> <span class="hljs-number">3</span>
Number <span class="hljs-keyword">of</span> reduce tasks <span class="hljs-keyword">is</span> set <span class="hljs-keyword">to</span> <span class="hljs-number">0</span> since there<span class="hljs-attribute">'s</span> no reduce operator
Starting Job = job_1503220733636_0016, Tracking URL = http://node1:<span class="hljs-number">8088</span>/proxy/application_1503220733636_0016/
Kill Command = /opt/hadoop-<span class="hljs-number">2.7</span><span class="hljs-number">.3</span>/bin/hadoop job  -kill job_1503220733636_0016
Hadoop job information <span class="hljs-keyword">for</span> Stage-<span class="hljs-number">1</span>: number <span class="hljs-keyword">of</span> mappers: <span class="hljs-number">1</span>; number <span class="hljs-keyword">of</span> reducers: <span class="hljs-number">0</span>
<span class="hljs-number">2017</span>-<span class="hljs-number">08</span>-<span class="hljs-number">20</span> <span class="hljs-number">09</span>:<span class="hljs-number">30</span>:<span class="hljs-number">34</span>,<span class="hljs-number">522</span> Stage-<span class="hljs-number">1</span> <span class="hljs-keyword">map</span> = <span class="hljs-number">0</span>%,  reduce = <span class="hljs-number">0</span>%
<span class="hljs-number">2017</span>-<span class="hljs-number">08</span>-<span class="hljs-number">20</span> <span class="hljs-number">09</span>:<span class="hljs-number">30</span>:<span class="hljs-number">44</span>,<span class="hljs-number">205</span> Stage-<span class="hljs-number">1</span> <span class="hljs-keyword">map</span> = <span class="hljs-number">100</span>%,  reduce = <span class="hljs-number">0</span>%, Cumulative CPU <span class="hljs-number">1.76</span> sec
MapReduce Total cumulative CPU <span class="hljs-typename">time</span>: <span class="hljs-number">1</span> seconds <span class="hljs-number">760</span> msec
Ended Job = job_1503220733636_0016
Stage-<span class="hljs-number">4</span> <span class="hljs-keyword">is</span> selected by condition resolver.
Stage-<span class="hljs-number">3</span> <span class="hljs-keyword">is</span> filtered <span class="hljs-keyword">out</span> by condition resolver.
Stage-<span class="hljs-number">5</span> <span class="hljs-keyword">is</span> filtered <span class="hljs-keyword">out</span> by condition resolver.
Moving data <span class="hljs-keyword">to</span> directory hdfs://cetc/user/hive/warehouse/dual/.hive-staging_hive_2017-<span class="hljs-number">08</span>-<span class="hljs-number">20</span>_09-<span class="hljs-number">30</span>-<span class="hljs-number">18</span>_395_4589036656384871958-<span class="hljs-number">1</span>/-ext-<span class="hljs-number">10000</span>
Loading data <span class="hljs-keyword">to</span> table <span class="hljs-keyword">default</span>.dual
MapReduce Jobs Launched: 
Stage-Stage-<span class="hljs-number">1</span>: <span class="hljs-keyword">Map</span>: <span class="hljs-number">1</span>   Cumulative CPU: <span class="hljs-number">1.76</span> sec   HDFS Read: <span class="hljs-number">3674</span> HDFS Write: <span class="hljs-number">73</span> SUCCESS
Total MapReduce CPU <span class="hljs-typename">Time</span> Spent: <span class="hljs-number">1</span> seconds <span class="hljs-number">760</span> msec
OK
<span class="hljs-typename">Time</span> taken: <span class="hljs-number">28.658</span> seconds
hive&gt;</code></pre>



<pre class="prettyprint"><code class=" hljs cs">hive&gt; <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>+<span class="hljs-number">1</span> <span class="hljs-keyword">from</span> dual;
OK
<span class="hljs-number">2</span>
Time taken: <span class="hljs-number">0.176</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt; <span class="hljs-keyword">select</span> <span class="hljs-number">7</span>%<span class="hljs-number">3</span> <span class="hljs-keyword">from</span> dual;
OK
<span class="hljs-number">1</span>
Time taken: <span class="hljs-number">0.212</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt;</code></pre>



<h3 id="1211-标准函数">12.1.1 标准函数</h3>

<p><strong>(1)日期函数</strong></p>



<pre class="prettyprint"><code class=" hljs cs">hive&gt; <span class="hljs-keyword">select</span> to_date(<span class="hljs-string">'2016-08-31 08:30:00'</span>) <span class="hljs-keyword">from</span> dual;
OK
<span class="hljs-number">2016</span>-<span class="hljs-number">08</span>-<span class="hljs-number">31</span>
Time taken: <span class="hljs-number">0.129</span> seconds, Fetched: <span class="hljs-number">1</span> row(s) 
hive&gt; <span class="hljs-keyword">select</span> year(<span class="hljs-string">'2016-08-31 08:30:00'</span>) <span class="hljs-keyword">from</span> dual;
OK
<span class="hljs-number">2016</span>
Time taken: <span class="hljs-number">0.207</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt; <span class="hljs-keyword">select</span> month(<span class="hljs-string">'2016-08-31 08:30:00'</span>) <span class="hljs-keyword">from</span> dual;
OK
<span class="hljs-number">8</span>
Time taken: <span class="hljs-number">0.156</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt; </code></pre>

<p><strong>(2)数学函数</strong></p>



<pre class="prettyprint"><code class=" hljs vbscript">hive&gt; <span class="hljs-keyword">select</span> sqrt(<span class="hljs-number">2</span>) from dual;
OK
<span class="hljs-number">1.4142135623730951</span>
<span class="hljs-built_in">Time</span> taken: <span class="hljs-number">0.17</span> seconds, Fetched: <span class="hljs-number">1</span> row(s) 
hive&gt; <span class="hljs-keyword">select</span> <span class="hljs-built_in">abs</span>(-<span class="hljs-number">11</span>) from dual;
OK
<span class="hljs-number">11</span>
<span class="hljs-built_in">Time</span> taken: <span class="hljs-number">0.167</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt; <span class="hljs-keyword">select</span> floor(<span class="hljs-number">3.56</span>) from dual;
OK
<span class="hljs-number">3</span>
<span class="hljs-built_in">Time</span> taken: <span class="hljs-number">0.134</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt; <span class="hljs-keyword">select</span> ceil(<span class="hljs-number">3.123</span>) from dual;
OK
<span class="hljs-number">4</span>
<span class="hljs-built_in">Time</span> taken: <span class="hljs-number">0.131</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt; <span class="hljs-keyword">select</span> <span class="hljs-built_in">round</span>(<span class="hljs-number">3.23456</span>) from dual;
OK
<span class="hljs-number">3.0</span>
<span class="hljs-built_in">Time</span> taken: <span class="hljs-number">0.138</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt; <span class="hljs-keyword">select</span> <span class="hljs-built_in">round</span>(<span class="hljs-number">3.23456</span>,<span class="hljs-number">3</span>) from dual;
OK
<span class="hljs-number">3.235</span>
<span class="hljs-built_in">Time</span> taken: <span class="hljs-number">0.291</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt;</code></pre>

<p><strong>(3)字符串函数</strong></p>



<pre class="prettyprint"><code class=" hljs oxygene">hive&gt; <span class="hljs-keyword">select</span> length(<span class="hljs-string">'hadoop'</span>) <span class="hljs-keyword">from</span> dual;
OK
<span class="hljs-number">6</span>
Time taken: <span class="hljs-number">0.28</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt; <span class="hljs-keyword">select</span> <span class="hljs-keyword">reverse</span>(<span class="hljs-string">'hadoop'</span>) <span class="hljs-keyword">from</span> dual;
OK
poodah
Time taken: <span class="hljs-number">0.257</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt; <span class="hljs-keyword">select</span> substr(<span class="hljs-string">'hadoop'</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">from</span> dual;
OK
adoop
Time taken: <span class="hljs-number">0.221</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt; <span class="hljs-keyword">select</span> trim(<span class="hljs-string">' hadoop  '</span>) <span class="hljs-keyword">from</span> dual;
OK
hadoop
Time taken: <span class="hljs-number">0.267</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt;</code></pre>



<h3 id="1212-聚合函数">12.1.2 聚合函数</h3>



<pre class="prettyprint"><code class=" hljs oxygene">hive&gt; <span class="hljs-keyword">select</span> count(<span class="hljs-number">1</span>) <span class="hljs-keyword">from</span> emp;
WARNING: Hive-<span class="hljs-keyword">on</span>-MR <span class="hljs-keyword">is</span> <span class="hljs-keyword">deprecated</span> <span class="hljs-keyword">in</span> Hive <span class="hljs-number">2</span> <span class="hljs-keyword">and</span> may <span class="hljs-keyword">not</span> be available <span class="hljs-keyword">in</span> the <span class="hljs-keyword">future</span> versions. Consider <span class="hljs-keyword">using</span> a different execution engine (i.e. spark, tez) <span class="hljs-keyword">or</span> <span class="hljs-keyword">using</span> Hive <span class="hljs-number">1</span>.X releases.
Query ID = root_20170824100247_a5b82db6-<span class="hljs-number">3</span>a76-<span class="hljs-number">41</span>bb-<span class="hljs-number">9</span>f33-<span class="hljs-number">1</span>c23c06209da
Total jobs = <span class="hljs-number">1</span>
Launching Job <span class="hljs-number">1</span> <span class="hljs-keyword">out</span> <span class="hljs-keyword">of</span> <span class="hljs-number">1</span>
Number <span class="hljs-keyword">of</span> reduce tasks determined at compile time: <span class="hljs-number">1</span>
<span class="hljs-keyword">In</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">to</span> change the average load <span class="hljs-keyword">for</span> a reducer (<span class="hljs-keyword">in</span> bytes):
  <span class="hljs-keyword">set</span> hive.exec.reducers.bytes.per.reducer=&lt;number&gt;
<span class="hljs-keyword">In</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">to</span> limit the maximum number <span class="hljs-keyword">of</span> reducers:
  <span class="hljs-keyword">set</span> hive.exec.reducers.max=&lt;number&gt;
<span class="hljs-keyword">In</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">set</span> a constant number <span class="hljs-keyword">of</span> reducers:
  <span class="hljs-keyword">set</span> mapreduce.job.reduces=&lt;number&gt;
Starting Job = job_1503582553611_0003, Tracking URL = http:<span class="hljs-comment">//node1:8088/proxy/application_1503582553611_0003/</span>
Kill Command = /opt/hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">3</span>/bin/hadoop job  -kill job_1503582553611_0003
Hadoop job information <span class="hljs-keyword">for</span> Stage-<span class="hljs-number">1</span>: number <span class="hljs-keyword">of</span> mappers: <span class="hljs-number">1</span>; number <span class="hljs-keyword">of</span> reducers: <span class="hljs-number">1</span>
<span class="hljs-number">2017</span>-<span class="hljs-number">08</span>-<span class="hljs-number">24</span> <span class="hljs-number">10</span>:<span class="hljs-number">03</span>:<span class="hljs-number">07</span>,<span class="hljs-number">501</span> Stage-<span class="hljs-number">1</span> map = <span class="hljs-number">0</span>%,  reduce = <span class="hljs-number">0</span>%
<span class="hljs-number">2017</span>-<span class="hljs-number">08</span>-<span class="hljs-number">24</span> <span class="hljs-number">10</span>:<span class="hljs-number">03</span>:<span class="hljs-number">21</span>,<span class="hljs-number">721</span> Stage-<span class="hljs-number">1</span> map = <span class="hljs-number">100</span>%,  reduce = <span class="hljs-number">0</span>%, Cumulative CPU <span class="hljs-number">3.49</span> sec
<span class="hljs-number">2017</span>-<span class="hljs-number">08</span>-<span class="hljs-number">24</span> <span class="hljs-number">10</span>:<span class="hljs-number">03</span>:<span class="hljs-number">33</span>,<span class="hljs-number">482</span> Stage-<span class="hljs-number">1</span> map = <span class="hljs-number">100</span>%,  reduce = <span class="hljs-number">100</span>%, Cumulative CPU <span class="hljs-number">5.88</span> sec
MapReduce Total cumulative CPU time: <span class="hljs-number">5</span> seconds <span class="hljs-number">880</span> msec
Ended Job = job_1503582553611_0003
MapReduce Jobs Launched: 
Stage-Stage-<span class="hljs-number">1</span>: Map: <span class="hljs-number">1</span>  Reduce: <span class="hljs-number">1</span>   Cumulative CPU: <span class="hljs-number">5.88</span> sec   HDFS <span class="hljs-keyword">Read</span>: <span class="hljs-number">9088</span> HDFS <span class="hljs-keyword">Write</span>: <span class="hljs-number">102</span> SUCCESS
Total MapReduce CPU Time Spent: <span class="hljs-number">5</span> seconds <span class="hljs-number">880</span> msec
OK
<span class="hljs-number">13</span>
Time taken: <span class="hljs-number">47.277</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt;</code></pre>

<pre class="prettyprint"><code class=" hljs oxygene">hive&gt; <span class="hljs-keyword">select</span> avg(sal) <span class="hljs-keyword">from</span> emp;
WARNING: Hive-<span class="hljs-keyword">on</span>-MR <span class="hljs-keyword">is</span> <span class="hljs-keyword">deprecated</span> <span class="hljs-keyword">in</span> Hive <span class="hljs-number">2</span> <span class="hljs-keyword">and</span> may <span class="hljs-keyword">not</span> be available <span class="hljs-keyword">in</span> the <span class="hljs-keyword">future</span> versions. Consider <span class="hljs-keyword">using</span> a different execution engine (i.e. spark, tez) <span class="hljs-keyword">or</span> <span class="hljs-keyword">using</span> Hive <span class="hljs-number">1</span>.X releases.
Query ID = root_20170824095107_1f447d4c-f008-<span class="hljs-number">491</span>d-<span class="hljs-number">8537</span>-<span class="hljs-number">00</span>fc4a0d45ea
Total jobs = <span class="hljs-number">1</span>
Launching Job <span class="hljs-number">1</span> <span class="hljs-keyword">out</span> <span class="hljs-keyword">of</span> <span class="hljs-number">1</span>
Number <span class="hljs-keyword">of</span> reduce tasks determined at compile time: <span class="hljs-number">1</span>
<span class="hljs-keyword">In</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">to</span> change the average load <span class="hljs-keyword">for</span> a reducer (<span class="hljs-keyword">in</span> bytes):
  <span class="hljs-keyword">set</span> hive.exec.reducers.bytes.per.reducer=&lt;number&gt;
<span class="hljs-keyword">In</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">to</span> limit the maximum number <span class="hljs-keyword">of</span> reducers:
  <span class="hljs-keyword">set</span> hive.exec.reducers.max=&lt;number&gt;
<span class="hljs-keyword">In</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">set</span> a constant number <span class="hljs-keyword">of</span> reducers:
  <span class="hljs-keyword">set</span> mapreduce.job.reduces=&lt;number&gt;
Starting Job = job_1503582553611_0001, Tracking URL = http:<span class="hljs-comment">//node1:8088/proxy/application_1503582553611_0001/</span>
Kill Command = /opt/hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">3</span>/bin/hadoop job  -kill job_1503582553611_0001
Hadoop job information <span class="hljs-keyword">for</span> Stage-<span class="hljs-number">1</span>: number <span class="hljs-keyword">of</span> mappers: <span class="hljs-number">1</span>; number <span class="hljs-keyword">of</span> reducers: <span class="hljs-number">1</span>
<span class="hljs-number">2017</span>-<span class="hljs-number">08</span>-<span class="hljs-number">24</span> <span class="hljs-number">09</span>:<span class="hljs-number">51</span>:<span class="hljs-number">36</span>,<span class="hljs-number">596</span> Stage-<span class="hljs-number">1</span> map = <span class="hljs-number">0</span>%,  reduce = <span class="hljs-number">0</span>%
<span class="hljs-number">2017</span>-<span class="hljs-number">08</span>-<span class="hljs-number">24</span> <span class="hljs-number">09</span>:<span class="hljs-number">51</span>:<span class="hljs-number">55</span>,<span class="hljs-number">721</span> Stage-<span class="hljs-number">1</span> map = <span class="hljs-number">100</span>%,  reduce = <span class="hljs-number">0</span>%, Cumulative CPU <span class="hljs-number">2.95</span> sec
<span class="hljs-number">2017</span>-<span class="hljs-number">08</span>-<span class="hljs-number">24</span> <span class="hljs-number">09</span>:<span class="hljs-number">52</span>:<span class="hljs-number">10</span>,<span class="hljs-number">207</span> Stage-<span class="hljs-number">1</span> map = <span class="hljs-number">100</span>%,  reduce = <span class="hljs-number">100</span>%, Cumulative CPU <span class="hljs-number">6.01</span> sec
MapReduce Total cumulative CPU time: <span class="hljs-number">6</span> seconds <span class="hljs-number">10</span> msec
Ended Job = job_1503582553611_0001
MapReduce Jobs Launched: 
Stage-Stage-<span class="hljs-number">1</span>: Map: <span class="hljs-number">1</span>  Reduce: <span class="hljs-number">1</span>   Cumulative CPU: <span class="hljs-number">6.01</span> sec   HDFS <span class="hljs-keyword">Read</span>: <span class="hljs-number">9818</span> HDFS <span class="hljs-keyword">Write</span>: <span class="hljs-number">118</span> SUCCESS
Total MapReduce CPU Time Spent: <span class="hljs-number">6</span> seconds <span class="hljs-number">10</span> msec
OK
<span class="hljs-number">2077.0833333333335</span>
Time taken: <span class="hljs-number">65.158</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt;</code></pre>



<pre class="prettyprint"><code class=" hljs oxygene">
hive&gt; <span class="hljs-keyword">select</span> max(sal) <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> did=<span class="hljs-number">30</span>;
WARNING: Hive-<span class="hljs-keyword">on</span>-MR <span class="hljs-keyword">is</span> <span class="hljs-keyword">deprecated</span> <span class="hljs-keyword">in</span> Hive <span class="hljs-number">2</span> <span class="hljs-keyword">and</span> may <span class="hljs-keyword">not</span> be available <span class="hljs-keyword">in</span> the <span class="hljs-keyword">future</span> versions. Consider <span class="hljs-keyword">using</span> a different execution engine (i.e. spark, tez) <span class="hljs-keyword">or</span> <span class="hljs-keyword">using</span> Hive <span class="hljs-number">1</span>.X releases.
Query ID = root_20170824095233_ba070012-<span class="hljs-number">65</span>fb-<span class="hljs-number">42</span>da-<span class="hljs-number">89</span>de-f748d33fc9b9
Total jobs = <span class="hljs-number">1</span>
Launching Job <span class="hljs-number">1</span> <span class="hljs-keyword">out</span> <span class="hljs-keyword">of</span> <span class="hljs-number">1</span>
Number <span class="hljs-keyword">of</span> reduce tasks determined at compile time: <span class="hljs-number">1</span>
<span class="hljs-keyword">In</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">to</span> change the average load <span class="hljs-keyword">for</span> a reducer (<span class="hljs-keyword">in</span> bytes):
  <span class="hljs-keyword">set</span> hive.exec.reducers.bytes.per.reducer=&lt;number&gt;
<span class="hljs-keyword">In</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">to</span> limit the maximum number <span class="hljs-keyword">of</span> reducers:
  <span class="hljs-keyword">set</span> hive.exec.reducers.max=&lt;number&gt;
<span class="hljs-keyword">In</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">set</span> a constant number <span class="hljs-keyword">of</span> reducers:
  <span class="hljs-keyword">set</span> mapreduce.job.reduces=&lt;number&gt;
Starting Job = job_1503582553611_0002, Tracking URL = http:<span class="hljs-comment">//node1:8088/proxy/application_1503582553611_0002/</span>
Kill Command = /opt/hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">3</span>/bin/hadoop job  -kill job_1503582553611_0002
Hadoop job information <span class="hljs-keyword">for</span> Stage-<span class="hljs-number">1</span>: number <span class="hljs-keyword">of</span> mappers: <span class="hljs-number">1</span>; number <span class="hljs-keyword">of</span> reducers: <span class="hljs-number">1</span>
<span class="hljs-number">2017</span>-<span class="hljs-number">08</span>-<span class="hljs-number">24</span> <span class="hljs-number">09</span>:<span class="hljs-number">52</span>:<span class="hljs-number">52</span>,<span class="hljs-number">526</span> Stage-<span class="hljs-number">1</span> map = <span class="hljs-number">0</span>%,  reduce = <span class="hljs-number">0</span>%
<span class="hljs-number">2017</span>-<span class="hljs-number">08</span>-<span class="hljs-number">24</span> <span class="hljs-number">09</span>:<span class="hljs-number">53</span>:<span class="hljs-number">07</span>,<span class="hljs-number">359</span> Stage-<span class="hljs-number">1</span> map = <span class="hljs-number">100</span>%,  reduce = <span class="hljs-number">0</span>%, Cumulative CPU <span class="hljs-number">4.0</span> sec
<span class="hljs-number">2017</span>-<span class="hljs-number">08</span>-<span class="hljs-number">24</span> <span class="hljs-number">09</span>:<span class="hljs-number">53</span>:<span class="hljs-number">18</span>,<span class="hljs-number">303</span> Stage-<span class="hljs-number">1</span> map = <span class="hljs-number">100</span>%,  reduce = <span class="hljs-number">100</span>%, Cumulative CPU <span class="hljs-number">6.7</span> sec
MapReduce Total cumulative CPU time: <span class="hljs-number">6</span> seconds <span class="hljs-number">700</span> msec
Ended Job = job_1503582553611_0002
MapReduce Jobs Launched: 
Stage-Stage-<span class="hljs-number">1</span>: Map: <span class="hljs-number">1</span>  Reduce: <span class="hljs-number">1</span>   Cumulative CPU: <span class="hljs-number">6.7</span> sec   HDFS <span class="hljs-keyword">Read</span>: <span class="hljs-number">10207</span> HDFS <span class="hljs-keyword">Write</span>: <span class="hljs-number">106</span> SUCCESS
Total MapReduce CPU Time Spent: <span class="hljs-number">6</span> seconds <span class="hljs-number">700</span> msec
OK
<span class="hljs-number">2850.0</span>
Time taken: <span class="hljs-number">46.863</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt;</code></pre>



<h3 id="1213-表生成函数">12.1.3 表生成函数</h3>



<pre class="prettyprint"><code class=" hljs vhdl">hive&gt; <span class="hljs-keyword">select</span> <span class="hljs-keyword">array</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>) from dual;
OK
[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]
<span class="hljs-typename">Time</span> taken: <span class="hljs-number">0.371</span> seconds, Fetched: <span class="hljs-number">1</span> row(s)
hive&gt; <span class="hljs-keyword">select</span> explode(<span class="hljs-keyword">array</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)) from dual;
OK
<span class="hljs-number">1</span>
<span class="hljs-number">2</span>
<span class="hljs-number">3</span>
<span class="hljs-typename">Time</span> taken: <span class="hljs-number">0.265</span> seconds, Fetched: <span class="hljs-number">3</span> row(s)
hive&gt;</code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>