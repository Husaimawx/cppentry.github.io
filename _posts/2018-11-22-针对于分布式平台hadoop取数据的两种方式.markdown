---
layout:     post
title:      针对于分布式平台hadoop取数据的两种方式
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/huaxixidongbeishida/article/details/50909725				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><span style="font-family:SimSun;font-size:18px;">大数据平台下取数据的两种方式：</span></p>
<p><span style="font-family:SimSun;font-size:18px;">1.直接 hive</span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span>Hive 执行现在用到三种方式：</span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span>1. 直接进入hive&gt; balabala..... 这个就是正常的与用户交互页面 然后 直接mysql 进行存取 ps: 执行语句的最后加上； </span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span><span></span>eg:</span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span><span></span>hive&gt; exit  完全没反应  </span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span><span></span>hive&gt; exit; 顺利退出  </span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span>2. 可以 hive -e "select * from table " &gt; file 很容易上手</span></p>
<p><span style="font-family:SimSun;font-size:18px;">3. 可以 hive -f file   file中则是各种执行语句</span></p>
<p><span><span style="font-family:SimSun;font-size:18px;"></span></span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span><span></span>考虑到数据的数量 这里切记搞清楚数据怎么存放的  xx公司的数据就是按天存储的  </span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span><span></span>所以要加上限制：</span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span><span></span>select * from</span>table<span> where concat(year,month,day)=20160315;</span> 这里强调 concat 函数</span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span><span></span>此处写各种脚本训练</span></p>
<p><span style="font-family:SimSun;font-size:18px;"><br></span></p>
<p><span style="font-family:SimSun;font-size:18px;">2.Map-reduce 来获取  </span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span><span></span>在平台上执行之后 跟之前自己搭建的伪分布式平台上感觉完全不一样</span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span><span></span>Mp程序可以有python版本的，也可以有java版本的</span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span><span></span>其实版本的无所谓，重要的还是理解MP的用法和内在的东西~</span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span><span></span>1.对于python版本的：</span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span>Mapper.py (进行具体各种操作)</span></p>
<p><br></p>
<p></p><pre><code class="language-python">#!/usr/bin/env python
import sys
for line in sys.stdin:
    line = line.strip()
    words = line.split()
    for word in words:
        print "%s\t%s" % (word, 1)</code></pre><br><br><span></span>Reducer.py(统计)
<p></p><pre><code class="language-python">#!/usr/bin/env python
from operator import itemgetter
import sys

current_word = None
current_count = 0
word = None

for line in sys.stdin:
    line = line.strip()
    word, count = line.split('\t', 1)
    try:
        count = int(count)
    except ValueError:  #count如果不是数字的话，直接忽略掉
        continue
    if current_word == word:
        current_count += count
    else:
        if current_word:
            print "%s\t%s" % (current_word, current_count)
        current_count = count
        current_word = word

if word == current_word:  #不要忘记最后的输出
    print "%s\t%s" % (current_word, current_count)</code></pre><br><br><br><p></p>
<p></p>
<p><a href="http://blog.matthewrathbone.com/2013/11/17/python-map-reduce-on-hadoop-a-beginners-tutorial.html" rel="nofollow" style="font-family:SimSun;font-size:18px;"><span></span>http://blog.matthewrathbone.com/2013/11/17/python-map-reduce-on-hadoop-a-beginners-tutorial.htm</a><span style="font-family:SimSun;font-size:18px;">l</span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span>PS:</span></p>
<p><span style="font-family:SimSun;font-size:18px;"><span></span>由于分布式数据量大，一定要先在本地没错之后 ，再提交运行</span></p>
<p><span style="font-family:SimSun;"><span style="font-size:18px;"><span></span>刚对python的这种对于streaming 的操作上手 ，发现multiple inputs ,single output</span><span style="color:#444444;font-size:18px;"><span style="line-height:26px;"> 没有很好的解决方案</span></span></span></p>
<p><span style="font-family:SimSun;font-size:18px;color:#444444;"><span style="line-height:26px;"><span></span>Note:hadoop的streaming还要继续深入学习下  不一定得是python shell脚本也可以 </span></span></p>
<p><span style="font-family:SimSun;font-size:18px;color:#444444;"><span style="line-height:26px;"><br></span></span></p>
<p><span style="font-family:SimSun;font-size:18px;color:#444444;"><span style="line-height:26px;"><span></span>2.java版本的 </span></span><span style="line-height:26px;color:rgb(68,68,68);font-family:SimSun;font-size:18px;">下次再细谈下</span></p>
<p><span style="font-family:SimSun;font-size:18px;color:rgb(68,68,68);"><span style="line-height:26px;"><br></span></span></p>
<p><span style="font-family:SimSun;font-size:18px;color:#444444;"><span style="line-height:26px;"> </span></span></p>
            </div>
                </div>