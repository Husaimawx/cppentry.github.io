---
layout:     post
title:      Fulme的几种监听配置信息
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								<div class="article-copyright">
					版权声明：本文为博主原创文章，未经博主允许不得转载。					https://blog.csdn.net/jc806116/article/details/78862333				</div>
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
Flume是一个分布式、可靠、和高可用的海量日志采集、聚合和传输的系统。支持在日志系统中定制各类数据发送方，用于收集数据；同时，Flume提供对数据进行简单处理，并写到各种数据接受方(比如文本、HDFS、Hbase等)的能力。<br><p> 针对不同的source 需要配置不同的配置文件，更为详细的配置内容 在<a href="http://flume.apache.org/" rel="nofollow">flume官网</a></p>
<p>本文章只举例几个常用的监听配置文件。</p>
<p>-------------------------------------------------------------------------------------------------------</p>
<p>    监听网络中的数据，将监听到底的数据输出值控制台<br><br>
        # flume-nc.conf: 用于监听网络数据的flume agent实例的配置文件<br>
        ############################################<br>
        # 对各个组件的描述说明<br>
        # 其中a1为agent的名字<br>
        # r1是a1的source的代号名字<br>
        # c1是a1的channel的代号名字<br>
        # k1是a1的sink的代号名字<br>
        ############################################<br>
        a1.sources = r1<br>
        a1.sinks = k1<br>
        a1.channels = c1<br><br>
        # 用于描述source的，类型是netcat网络<br>
        a1.sources.r1.type = netcat<br>
        # source监听的网络ip地址和端口号<br>
        a1.sources.r1.bind = master01<br>
        a1.sources.r1.port = 44444<br><br>
        # 用于描述sink，类型是日志格式<br>
        a1.sinks.k1.type = logger<br><br>
        # 用于描述channel，在内存中做数据的临时的存储<br>
        a1.channels.c1.type = memory<br>
        # 该内存中最大的存储容量，1000个events事件<br>
        a1.channels.c1.capacity = 1000<br>
        # 能够同时对100个events事件监管事务<br>
        a1.channels.c1.transactionCapacity = 100<br><br>
        # 将a1中的各个组件建立关联关系，将source和sink都指向了同一个channel<br>
        a1.sources.r1.channels = c1<br>
        a1.sinks.k1.channel = c1<br>
    运行方式：<br>
        一：telnet<br>
            需要在centOS上面安装telnet，<br>
            启动flumn-agent<br>
            启动telnet：<br>
                telnet master01 44444<br>
        二：netcat<br>
            安装发给大家的nc.xx.rpm<br>
            rpm -ivh nc.xx.rpm-path<br>
            启动flumn-agent<br>
            启动nc进程<br>
                nc master01 44444<br>
        三：后台静默执行进程，使用nohup命令，同时要想让进程自动执行，需要在命令末尾加上&amp;        <br>
----------------------------------------------------------------------------------------        <br>
# flume-nc.conf: 用于监听文件中的新增数据的flume agent实例的配置文件<br>
############################################<br>
# 对各个组件的描述说明<br>
# 其中a1为agent的名字<br>
# r1是a1的source的代号名字<br>
# c1是a1的channel的代号名字<br>
# k1是a1的sink的代号名字<br>
############################################<br>
a1.sources = r1<br>
a1.sinks = k1<br>
a1.channels = c1<br><br>
# 用于描述source的，类型是linux命令<br>
a1.sources.r1.type = exec<br>
a1.sources.r1.command = tail -F /opt/logs/flume/nb-http.2017-07-24.log<br><br>
# 用于描述sink，类型是日志格式<br>
a1.sinks.k1.type = logger<br><br>
# 用于描述channel，在内存中做数据的临时的存储<br>
a1.channels.c1.type = memory<br>
# 该内存中最大的存储容量，1000个events事件<br>
a1.channels.c1.capacity = 1000<br>
# 能够同时对100个events事件监管事务<br>
a1.channels.c1.transactionCapacity = 100<br><br>
# 将a1中的各个组件建立关联关系，将source和sink都指向了同一个channel<br>
a1.sources.r1.channels = c1<br>
a1.sinks.k1.channel = c1<br>
运行：flume]# bin/flume-ng agent --conf conf --name a1 --conf-file conf/flume-nc.conf -Dflume.root.logger=INFO,console<br><br>
----------------------------------------------------------------------------------------<br>
# flume-exec.conf: 用于监听文件中的新增数据的flume agent实例的配置文件<br>
############################################<br>
# 对各个组件的描述说明<br>
# 其中a1为agent的名字<br>
# r1是a1的source的代号名字<br>
# c1是a1的channel的代号名字<br>
# k1是a1的sink的代号名字<br>
############################################<br>
a1.sources = r1<br>
a1.sinks = k1<br>
a1.channels = c1<br><br>
# 用于描述source的，类型是linux命令<br>
a1.sources.r1.type = exec<br>
a1.sources.r1.command = tail -F /opt/logs/flume/nb-http.2017-07-24.log<br><br>
# 用于描述sink，类型是日志格式<br>
a1.sinks.k1.type = logger<br><br>
# 用于描述channel，在内存中做数据的临时的存储<br>
a1.channels.c1.type = memory<br>
# 该内存中最大的存储容量，1000个events事件<br>
a1.channels.c1.capacity = 1000<br>
# 能够同时对100个events事件监管事务<br>
a1.channels.c1.transactionCapacity = 100<br><br>
# 将a1中的各个组件建立关联关系，将source和sink都指向了同一个channel<br>
a1.sources.r1.channels = c1<br>
a1.sinks.k1.channel = c1<br>
运行：flume]# bin/flume-ng agent --conf conf --name a1 --conf-file conf/flume-exec.conf -Dflume.root.logger=INFO,console<br><br>
tail -f和tail -F区别<br>
    一般查看一个文件使用tail -f足够，但是tail -f有一个问题，当有新的数据从监听文件中分割出去，便不再<br>
查看到新增的内容，这个时候使用tail -F    <br><br>
当修改下面两个参数的时候，由于在channel中容纳的数据量过大，超过的内存的限制，造成OOM异常！<br>
a1.channels.c1.capacity = 1000000<br>
a1.channels.c1.transactionCapacity = 100<br>
解决办法，调高当前application的jvm内存大小<br>
bin/flume-ng agent JAVA_OPTS="-Xmx20m" --name a1 --conf conf --conf-file conf/flume-exec.properties -Dflume.root.logger=INFO,console<br><br>
----------------------------------------------------------------------------------------<br>
# flume-dir.conf: 用于监听目录中的新增文件的flume agent实例的配置文件<br>
############################################<br>
# 对各个组件的描述说明<br>
# 其中a1为agent的名字<br>
# r1是a1的source的代号名字<br>
# c1是a1的channel的代号名字<br>
# k1是a1的sink的代号名字<br>
############################################<br>
a1.sources = r1<br>
a1.sinks = k1<br>
a1.channels = c1<br><br>
# 用于描述source的，监听的是一个目录<br>
a1.sources.r1.type = spooldir<br>
a1.sources.r1.spoolDir = /opt/logs/flume/<br>
a1.sources.r1.fileSuffix = .OK<br>
a1.sources.r1.deletePolicy = never<br>
a1.sources.r1.fileHeader = true<br><br>
# 用于描述sink，类型是日志格式<br>
a1.sinks.k1.type = logger<br><br>
# 用于描述channel，在内存中做数据的临时的存储<br>
a1.channels.c1.type = memory<br>
# 该内存中最大的存储容量，1000个events事件<br>
a1.channels.c1.capacity = 1000<br>
# 能够同时对100个events事件监管事务<br>
a1.channels.c1.transactionCapacity = 100<br><br>
# 将a1中的各个组件建立关联关系，将source和sink都指向了同一个channel<br>
a1.sources.r1.channels = c1<br>
a1.sinks.k1.channel = c1    <br>
运行：flume]# bin/flume-ng agent --conf conf --name a1 --conf-file conf/flume-dir.conf -Dflume.root.logger=INFO,console    <br>
----------------------------------------------------------------------------------------<br>
# flume-hdfs.conf: 用于监听目录中的新增文件传送到hdfs的flume agent实例的配置文件<br>
############################################<br>
# 对各个组件的描述说明<br>
# 其中a1为agent的名字<br>
# r1是a1的source的代号名字<br>
# c1是a1的channel的代号名字<br>
# k1是a1的sink的代号名字<br>
############################################<br>
a1.sources = r1<br>
a1.sinks = k1<br>
a1.channels = c1<br><br>
# 用于描述source的，监听的是一个目录<br>
a1.sources.r1.type = spooldir<br>
a1.sources.r1.spoolDir = /opt/logs/flume/<br>
a1.sources.r1.fileSuffix = .OK<br>
a1.sources.r1.deletePolicy = never<br>
a1.sources.r1.fileHeader = true<br><br>
# 用于描述sink，类型是hdfs<br>
a1.sinks.k1.type = hdfs<br>
a1.sinks.k1.hdfs.path = hdfs://ns1/input/flume/%Y/%m/<br>
a1.sinks.k1.hdfs.filePrefix = master-<br>
a1.sinks.k1.hdfs.fileSuffix = .com<br>
a1.sinks.k1.hdfs.round = true<br>
a1.sinks.k1.hdfs.roundValue = 10<br>
a1.sinks.k1.hdfs.roundUnit = second<br>
a1.sinks.k1.hdfs.useLocalTimeStamp = true<br><br>
# 用于描述channel，在内存中做数据的临时的存储<br>
a1.channels.c1.type = memory<br>
# 该内存中最大的存储容量，1000个events事件<br>
a1.channels.c1.capacity = 1000<br>
# 能够同时对100个events事件监管事务<br>
a1.channels.c1.transactionCapacity = 100<br><br>
# 将a1中的各个组件建立关联关系，将source和sink都指向了同一个channel<br>
a1.sources.r1.channels = c1<br>
a1.sinks.k1.channel = c1<br><br><br></p>
            </div>
                </div>