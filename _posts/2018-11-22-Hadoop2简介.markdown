---
layout:     post
title:      Hadoop2简介
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<table border="1" cellspacing="0" cellpadding="0"><tbody><tr><td valign="top" style="background:#4F81BD;">
<p><span style="color:#FFFFFF;">组件</span></p>
</td>
<td valign="top" style="background:#4F81BD;">
<p><span style="color:#FFFFFF;">Hadoop1.0</span><span style="color:#FFFFFF;">的问题</span></p>
</td>
<td valign="top" style="background:#4F81BD;">
<p><span style="color:#FFFFFF;">Hadoop2.0</span><span style="color:#FFFFFF;">的改进</span></p>
</td>
</tr><tr><td valign="top">
<p>HDFS</p>
</td>
<td valign="top">
<p><strong>单一名称节点，存在单点失效问题</strong></p>
</td>
<td valign="top">
<p><strong>设计了HDFS HA，提供名称节点热备机制</strong></p>
</td>
</tr><tr><td valign="top">
<p>HDFS</p>
</td>
<td valign="top">
<p><strong>单一命名空间，无法实现资源隔离</strong></p>
</td>
<td valign="top">
<p><strong>设计了HDFS Federation，管理多个命名空间</strong></p>
</td>
</tr><tr><td valign="top">
<p>MapReduce</p>
</td>
<td valign="top">
<p><strong>资源管理效率低</strong></p>
</td>
<td valign="top">
<p><strong>设计了新的资源管理框架YARN</strong></p>
</td>
</tr></tbody></table><p><strong>YARN的设计思路</strong></p>
<p>架构思路：将原JobTracker三大功能拆分</p>
<p>将原JobTracker的资源管理调度功能，分离出来形成了YARN，他是一个纯粹的资源管理调度框架，其中资源股那里由ResourceManager管理，任务调度和任务监控由ApplicationMaster来管理。</p>
<p><strong>YARN的体系结构</strong></p>
<p><strong>ResourceManager</strong></p>
<p>处理客户端请求</p>
<p>启动/监控ApplicationMaster</p>
<p>监控NodeManager</p>
<p>资源分配与调度</p>
<p><strong>NodeManager</strong></p>
<p>单个节点上的资源管理</p>
<p>处理来自ResourceManager的命令</p>
<p>处理来自ApplicationMaster的命令</p>
<p><strong>ApplicationMaster</strong></p>
<p>为应用程序申请资源，并分配给内部任务</p>
<p>任务调度、监控与容错</p>
<p><img src="https://img-blog.csdn.net/20160822001539622?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p><strong>NameNode的共享存储架构图</strong></p>
<p>FailoverController用来监控NameNode的状态，如果NameNode的状态有变化，那么会通知Zookeeper的，FailoverController和Zookeeper的交互很多，FailoverController属于中间的一个中转管理者，FailoverController是HDFS2中的进程</p>
<p> </p>
            </div>
                </div>