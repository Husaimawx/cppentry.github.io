---
layout:     post
title:      大数据系列第七课：RDD于Spark运行机制
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><span style="font-size:14px;">第一阶段（</span><span style="font-size:14px;font-family:Calibri;">1-3</span><span style="font-size:14px;font-family:'宋体';">月）：会从浅入深，基于大量案例实战，深度剖析和讲解</span><span style="font-size:14px;font-family:Calibri;">Spark</span><span style="font-size:14px;font-family:'宋体';">，并且会包含完全从企业真实复杂业务需求中抽取出的案例实战。课程会涵盖</span><span style="font-size:14px;font-family:Calibri;">Scala</span><span style="font-size:14px;font-family:'宋体';">编程详解、</span><span style="font-size:14px;font-family:Calibri;">Spark</span><span style="font-size:14px;font-family:'宋体';">核心编程、</span><span style="font-size:14px;font-family:Calibri;">Spark SQL</span><span style="font-size:14px;font-family:'宋体';">和</span><span style="font-size:14px;font-family:Calibri;">Spark Streaming</span><span style="font-size:14px;font-family:'宋体';">、</span><span style="font-size:14px;font-family:Calibri;">Spark GraphX</span><span style="font-size:14px;font-family:'宋体';">、</span><span style="font-size:14px;font-family:Calibri;">SparkR</span><span style="font-size:14px;font-family:'宋体';">、</span><span style="font-size:14px;font-family:Calibri;">Machine Learning</span><span style="font-size:14px;font-family:'宋体';">、</span><span style="font-size:14px;font-family:Calibri;">Spark</span><span style="font-size:14px;font-family:'宋体';">内核以及源码剖析、性能调优、企业级案例实战等部分</span></p>
<p><span style="font-size:14px;">第二阶段（<span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">超大规模大数据案例实战）：使用了</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">技术生态栈中的</span><span style="font-family:Calibri;">Spark Core</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark SQL</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Spark Streaming</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">SparkR</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Machine Learning</span><span style="font-family:'宋体';">，进行离线计算和实时计算业务模块的开发、数据的关联性分析、用户行为模式和特征的训练与应用、用户网络的社区发现、用户影响力、能量传播、标签传播、标签推理、人群划分、年龄段预测、商品交易时序跳转。</span></span></p>
<p><span style="font-size:14px;"><span style="font-family:'宋体';"></span></span></p>
<p>本课内容：</p>
<p>1 <span style="font-family:'宋体';">实战讲解</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">运行原理</span></p>
<p>2 RDD<span style="font-family:'宋体';">解密</span></p>
<p><strong>RDD(<span style="font-family:'宋体';">弹性分布式数据集</span><span style="font-family:Calibri;">)</span></strong></p>
<p>分布式基于内存特别适合于迭代计算，也可以基于磁盘计算，适合各种规模的集群的计算。</p>
<p>1<span style="font-family:'宋体';">、分布式：多态集群，整个</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">有一个提交程序的</span><span style="font-family:Calibri;">Driver</span><span style="font-family:'宋体';">端，提交给集群（多台）进行运行，不同的</span><span style="font-family:Calibri;">Node</span><span style="font-family:'宋体';">处理其中一部分内容，</span><span style="font-family:Calibri;">Node</span><span style="font-family:'宋体';">间各不影响</span></p>
<p>2<span style="font-family:'宋体';">、主要基于内存：</span><span style="font-family:Calibri;">data</span><span style="font-family:'宋体';">首先会考虑在</span><span style="font-family:Calibri;">MEM</span><span style="font-family:'宋体';">中运行，</span><span style="font-family:Calibri;">data</span><span style="font-family:'宋体';">太大可将部分</span><span style="font-family:Calibri;">data</span><span style="font-family:'宋体';">数据存放于</span><span style="font-family:Calibri;">disk</span><span style="font-family:'宋体';">上，</span></p>
<p>3<span style="font-family:'宋体';">、擅长迭代计算（多步骤计算）</span><span style="font-family:Calibri;">shuffle</span></p>
<p>RDD:rdd<span style="font-family:'宋体';">代表要处理的数据，分布式处理，</span><span style="font-family:Calibri;">data</span><span style="font-family:'宋体';">分成若干分片</span><span style="font-family:Calibri;">Partition</span><span style="font-family:'宋体';">，存储于不同的节点中，只进行</span><span style="font-family:Calibri;">rdd</span><span style="font-family:'宋体';">的处理，</span></p>
<p><strong>（<span style="font-family:Calibri;">1</span><span style="font-family:'宋体';">）</span><span style="font-family:Calibri;">RDD</span><span style="font-family:'宋体';">弹性的特点：</span></strong></p>
<p>1<span style="font-family:'宋体';">、弹性之一：自动的进行内存和磁盘数据存储的切换；</span></p>
<p>2<span style="font-family:'宋体';">、弹性之二：基于</span><span style="font-family:Calibri;">Lineage</span><span style="font-family:'宋体';">的高效容错（第</span><span style="font-family:Calibri;">n</span><span style="font-family:'宋体';">个节点出错，会从第</span><span style="font-family:Calibri;">n-1</span><span style="font-family:'宋体';">个节点恢复，血统容错）；</span></p>
<p>3<span style="font-family:'宋体';">、弹性之三：</span><span style="font-family:Calibri;">Task</span><span style="font-family:'宋体';">如果失败会自动进行特定次数的重试（默认</span><span style="font-family:Calibri;">4</span><span style="font-family:'宋体';">次）；</span></p>
<p>4<span style="font-family:'宋体';">、弹性之四：</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">如果失败会自动进行特定次数的重试（可以值运行计算失败的阶段）；只计算失败的数据分片</span></p>
<p><strong>（<span style="font-family:Calibri;">2</span><span style="font-family:'宋体';">）</span><span style="font-family:Calibri;">RDD</span><span style="font-family:'宋体';">写入缓存</span><span style="font-family:Calibri;">cache</span><span style="font-family:'宋体';">的几种情况：</span></strong></p>
<p>1<span style="font-family:'宋体';">、计算步骤特别耗时会做</span><span style="font-family:Calibri;">Cache</span></p>
<p>2<span style="font-family:'宋体';">、计算链条很长，失败的时候会有很大代价，血统容错恢复；</span></p>
<p>3<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">shuffle</span><span style="font-family:'宋体';">之后；</span></p>
<p>4<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">checkPoint</span><span style="font-family:'宋体';">：</span><span style="font-family:Calibri;">Tachyon</span><span style="font-family:'宋体';">（</span><span style="font-family:Calibri;">Cache</span><span style="font-family:'宋体';">不可靠）</span><span style="font-family:Calibri;">data</span><span style="font-family:'宋体';">放于文件系统中，保证数据安全</span></p>
<p><strong>（<span style="font-family:Calibri;">3</span><span style="font-family:'宋体';">）启动</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">后的测试：</span></strong></p>
<p>./start-dfs.sh</p>
<p>多次检验</p>
<p>./spark-all.sh</p>
<p>启动<span style="font-family:Calibri;">history server</span></p>
<p>./start-history-server.sh</p>
<p>http://master:18080</p>
<p>&gt;sc.textFile("hdfs://Master:9000/libary/wordcount/input/Data")</p>
<p>数据来源于<span style="font-family:Calibri;">HDFS</span></p>
<p>&gt;val sc.textFile("library/wordcount/input/Data") </p>
<p>//<span style="font-family:'宋体';">从</span><span style="font-family:Calibri;">hdfs</span><span style="font-family:'宋体';">上读取了数据，这些数据是一系列分片的数据分布于不同的机器上</span></p>
<p> </p>
<p>Partition size<span style="font-family:'宋体';">默认情况下 </span><span style="font-family:Calibri;">= hsfs</span><span style="font-family:'宋体';">上的 </span><span style="font-family:Calibri;">Block size</span><span style="font-family:'宋体';">（</span><span style="font-family:Calibri;">128M</span><span style="font-family:'宋体';">）</span></p>
<p> </p>
<p>sc.textFile("<span style="font-family:'宋体';">错误路径</span><span style="font-family:Calibri;">") </span><span style="font-family:'宋体';">不会报错，因为</span><span style="font-family:Calibri;">trasformation</span><span style="font-family:'宋体';">的时候采用了</span><span style="font-family:Calibri;">lazy</span><span style="font-family:'宋体';">的机制。</span></p>
<p>&gt;val flatted=data.flatMap(_.split(" "))</p>
<p>//rdd<span style="font-family:'宋体';">有依赖关系</span></p>
<p>&gt;val mapped =flatted.map(word =&gt;(word,1))</p>
<p>&gt;mapped.toDebugString</p>
<p>&gt;val reduced = mapped.reduce(_+_)</p>
<p>//<span style="font-family:'宋体';">分布式处理</span><span style="font-family:Calibri;">shuffle</span><span style="font-family:'宋体';">过程，统计数据</span></p>
<p>&gt;reduced.savaAsTextFile("http://...")</p>
<p>&gt;reduced.toDebugString </p>
<p>//<span style="font-family:'宋体';">显示</span><span style="font-family:Calibri;">rdd</span><span style="font-family:'宋体';">依赖关系</span></p>
<p><span style="font-family:'宋体';"><img src="https://img-blog.csdn.net/20160109134702840?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br></span></p>
<p><span style="font-family:'宋体';"></span></p>
<p><strong>Spark<span style="font-family:'宋体';">架构设计</span></strong></p>
<p>1<span style="font-family:'宋体';">、创建</span><span style="font-family:Calibri;">SparkContext</span><span style="font-family:'宋体';">：用户开发编写的逻辑与集群交互的接口，他会通过与</span><span style="font-family:Calibri;">Cluster Manager</span><span style="font-family:'宋体';">进行交互，以及通过</span><span style="font-family:Calibri;">Cluster Manager</span><span style="font-family:'宋体';">申请计算资源</span></p>
<p>2<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Cluster Manager</span><span style="font-family:'宋体';">：资源管理器，类似于</span><span style="font-family:Calibri;">Hadoop</span><span style="font-family:'宋体';">的</span><span style="font-family:Calibri;">yarn</span><span style="font-family:'宋体';">和</span><span style="font-family:Calibri;">mesos</span></p>
<p>3<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Worker Node</span><span style="font-family:'宋体';">：集群中具体中每台机器的存储和计算的支撑</span></p>
<p>4<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">：在</span><span style="font-family:Calibri;">Worker Node</span><span style="font-family:'宋体';">上为某个应用程序启动的进程，其内以线程池的方式负责</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">的任务运行，并负责将数据存储在</span><span style="font-family:Calibri;">Disk</span><span style="font-family:'宋体';">或者</span><span style="font-family:Calibri;">MEM</span><span style="font-family:'宋体';">上</span></p>
<p>通常在<span style="font-family:Calibri;">Driver</span><span style="font-family:'宋体';">端发送的任务发送到</span><span style="font-family:Calibri;">Worker</span><span style="font-family:'宋体';">上的</span><span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">上，让线程池进行计算，每个任务都有独立的</span><span style="font-family:Calibri;">Executor</span></p>
<p>所以<span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">执行时线程级别的。</span></p>
<p> <img src="https://img-blog.csdn.net/20160109134748347?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p><strong>Spark<span style="font-family:'宋体';">运行机制：</span></strong></p>
<p>首先用户创建<span style="font-family:Calibri;">SparkContext</span><span style="font-family:'宋体';">，新创建的</span><span style="font-family:Calibri;">SparkContext</span><span style="font-family:'宋体';">会根据编程时设置的参数或系统默认的配置连接到</span></p>
<p>ClusterManager<span style="font-family:'宋体';">上，</span><span style="font-family:Calibri;">ClusterManager</span><span style="font-family:'宋体';">会根据用户提交时的设置（如：占用</span><span style="font-family:Calibri;">CPU</span><span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">MEN</span><span style="font-family:'宋体';">等资源情况），来为用户程序分配计算资源，启动相应的</span><span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">；而</span><span style="font-family:Calibri;">Driver</span><span style="font-family:'宋体';">根据用户程序调度的</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">的划分，即高层调度器（</span><span style="font-family:Calibri;">RDD</span><span style="font-family:'宋体';">的依赖关系），若有宽依赖，会划分成不同的</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">，每个</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">由一组完全相同的任务组成，该</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">分别作用于待处理的分区，待</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">划分完成和</span><span style="font-family:Calibri;">Task</span><span style="font-family:'宋体';">创建完成后，</span><span style="font-family:Calibri;">Driver</span><span style="font-family:'宋体';">端会向</span><span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">发送具体的</span><span style="font-family:Calibri;">task</span><span style="font-family:'宋体';">，当</span><span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">收到</span><span style="font-family:Calibri;">task</span><span style="font-family:'宋体';">后，会自动下载运行需要的库、包等，准备好运行环境后由线程池中的线程开始执行，所以</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">执行是线程级别的。</span></p>
<p>Hadoop<span style="font-family:'宋体';">运行比</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">代价大很多，因</span><span style="font-family:Calibri;">Hadoop</span><span style="font-family:'宋体';">中的</span><span style="font-family:Calibri;">MapReduce</span><span style="font-family:'宋体';">运行的</span><span style="font-family:Calibri;">JVM</span><span style="font-family:'宋体';">虚拟机不可以复用，而</span><span style="font-family:Calibri;">Spark</span><span style="font-family:'宋体';">运行的线</span></p>
<p>程池中的线程可以进行复用。</p>
<p>执行<span style="font-family:Calibri;">Task</span><span style="font-family:'宋体';">的过程中，</span><span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">会将执行的</span><span style="font-family:Calibri;">Task</span><span style="font-family:'宋体';">汇报给</span><span style="font-family:Calibri;">Driver</span><span style="font-family:'宋体';">，</span><span style="font-family:Calibri;">Driver</span><span style="font-family:'宋体';">收到</span><span style="font-family:Calibri;">Task</span><span style="font-family:'宋体';">的运行状态情况后，会根据</span></p>
<p>具体状况进行更新等。<span style="font-family:Calibri;">Task</span><span style="font-family:'宋体';">根据不同的</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">的划分，会被划分为两种类型：</span></p>
<p>（<span style="font-family:Calibri;">1</span><span style="font-family:'宋体';">）</span><span style="font-family:Calibri;">shuffleMapTask</span><span style="font-family:'宋体';">，在最后一个</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">前的其他</span><span style="font-family:Calibri;">Stage</span><span style="font-family:'宋体';">都进行</span><span style="font-family:Calibri;">shuffleMapTask</span><span style="font-family:'宋体';">，此时是对数据进行</span><span style="font-family:Calibri;">shuffle</span><span style="font-family:'宋体';">，</span></p>
<p>shuffle<span style="font-family:'宋体';">的结果保存在</span><span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">所在节点的本地文件系统中；</span></p>
<p>（<span style="font-family:Calibri;">2</span><span style="font-family:'宋体';">）第二种</span><span style="font-family:Calibri;">Task</span><span style="font-family:'宋体';">：</span><span style="font-family:Calibri;">ResultTask</span><span style="font-family:'宋体';">，负责生成结果数据</span><span style="font-family:Calibri;">;</span></p>
<p>Driver<span style="font-family:'宋体';">会不断发送</span><span style="font-family:Calibri;">Task</span><span style="font-family:'宋体';">给</span><span style="font-family:Calibri;">Executor</span><span style="font-family:'宋体';">进行执行，所以</span><span style="font-family:Calibri;">Task</span><span style="font-family:'宋体';">都正确执行或者超过执行次数的限制，或者没有执</span></p>
<p>行时会停止，多正确执行会进入下一个<span style="font-family:Calibri;">stage</span><span style="font-family:'宋体';">，若没有正确执行成功，高层调度器</span><span style="font-family:Calibri;">DAGSchedular</span><span style="font-family:'宋体';">会进行一定次</span></p>
<p>数的重试，若还是执行不成功就意味着整个作业的失败。</p>
<br><p><span style="font-family:'宋体';"></span></p>
<p>ＤＴ大数据梦工厂</p>
<p>新浪微博：<a href="http://www.weibo.com/ilovepains/" rel="nofollow"><span style="color:rgb(0,0,255);">www.weibo.com/ilovepains/</span></a></p>
<p>微信公众号：<span style="font-family:Calibri;">DT_Spark</span></p>
<p>博客：<a href="/ilovepains" rel="nofollow"><span style="color:rgb(0,0,255);">http://.blog.sina.com.cn/ilovepains</span></a></p>
<p>TEL:18610086859</p>
<p>Email:18610086859@vip.126.com</p>
<br><p><span style="font-family:'宋体';"><br></span></p>
<br>            </div>
                </div>