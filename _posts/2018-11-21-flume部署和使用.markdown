---
layout:     post
title:      flume部署和使用
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <div id="content_views" class="markdown_views prism-atom-one-dark">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<h2 id="软件下载和安装">软件下载和安装</h2>

<p>flume下载地址：<a href="http://archive.apache.org/dist/flume/" rel="nofollow">http://archive.apache.org/dist/flume/</a></p>



<pre class="prettyprint"><code class=" hljs haml">-<span class="ruby">》解压缩
</span>  tar -zxf /opt/softwares/flume-ng-1.6.0-cdh5.10.2.tar.gz
-<span class="ruby">》配置文件：flume-env.sh
</span>  export JAVA_HOME=/opt/apps/jdk1.7.0_67
-<span class="ruby">》测试是否成功
</span>  bin/flume-ng version</code></pre>



<h2 id="flume的flume-ng命令">flume的flume-ng命令</h2>



<pre class="prettyprint"><code class=" hljs http"><span class="hljs-attribute">Usage</span>: <span class="hljs-string">bin/flume-ng &lt;command&gt; [options]...</span>

<span class="lasso">commands:
  agent                     run a Flume agent
  avro<span class="hljs-attribute">-client</span>               run an avro Flume client

<span class="hljs-built_in">global</span> options:
  <span class="hljs-subst">--</span>conf,<span class="hljs-attribute">-c</span> <span class="hljs-subst">&lt;</span>conf<span class="hljs-subst">&gt;</span>          use configs <span class="hljs-keyword">in</span> <span class="hljs-subst">&lt;</span>conf<span class="hljs-subst">&gt;</span> directory

agent options:
  <span class="hljs-subst">--</span>name,<span class="hljs-attribute">-n</span> <span class="hljs-subst">&lt;</span>name<span class="hljs-subst">&gt;</span>          the name of this agent (required)
  <span class="hljs-subst">--</span>conf<span class="hljs-attribute">-file</span>,<span class="hljs-attribute">-f</span> <span class="hljs-subst">&lt;</span>file<span class="hljs-subst">&gt;</span>     specify a config file (required <span class="hljs-keyword">if</span> <span class="hljs-attribute">-z</span> missing)

avro<span class="hljs-attribute">-client</span> options:
  <span class="hljs-subst">--</span>rpcProps,<span class="hljs-attribute">-P</span> <span class="hljs-subst">&lt;</span>file<span class="hljs-subst">&gt;</span>   RPC client properties file <span class="hljs-keyword">with</span> server connection <span class="hljs-keyword">params</span>
  <span class="hljs-subst">--</span>host,<span class="hljs-attribute">-H</span> <span class="hljs-subst">&lt;</span>host<span class="hljs-subst">&gt;</span>       hostname <span class="hljs-keyword">to</span> which events will be sent
  <span class="hljs-subst">--</span>port,<span class="hljs-attribute">-p</span> <span class="hljs-subst">&lt;</span>port<span class="hljs-subst">&gt;</span>       port of the avro source
  <span class="hljs-subst">--</span>dirname <span class="hljs-subst">&lt;</span>dir<span class="hljs-subst">&gt;</span>        directory <span class="hljs-keyword">to</span> stream <span class="hljs-keyword">to</span> avro source
  <span class="hljs-subst">--</span>filename,<span class="hljs-attribute">-F</span> <span class="hljs-subst">&lt;</span>file<span class="hljs-subst">&gt;</span>   text file <span class="hljs-keyword">to</span> stream <span class="hljs-keyword">to</span> avro source (default: std input)
  <span class="hljs-subst">--</span>headerFile,<span class="hljs-attribute">-R</span> <span class="hljs-subst">&lt;</span>file<span class="hljs-subst">&gt;</span> File containing event headers as key/value pairs <span class="hljs-keyword">on</span> each <span class="hljs-literal">new</span> line</span></code></pre>

<p>提交任务的命令：</p>



<pre class="prettyprint"><code class=" hljs lasso">bin/flume<span class="hljs-attribute">-ng</span> agent <span class="hljs-subst">--</span>conf conf <span class="hljs-subst">--</span>name agent <span class="hljs-subst">--</span>conf<span class="hljs-attribute">-file</span> conf/test<span class="hljs-built_in">.</span>properties  
bin/flume<span class="hljs-attribute">-ng</span> agent <span class="hljs-attribute">-c</span> conf <span class="hljs-attribute">-n</span> agent <span class="hljs-attribute">-f</span> conf/test<span class="hljs-built_in">.</span>properties
bin/flume<span class="hljs-attribute">-ng</span> avro<span class="hljs-attribute">-client</span> <span class="hljs-subst">--</span>conf conf <span class="hljs-subst">--</span>host ibeifeng<span class="hljs-built_in">.</span>class <span class="hljs-subst">--</span>port <span class="hljs-number">8080</span></code></pre>



<h3 id="配置情况选择">配置情况选择：</h3>

<p>flume安装在hadoop集群中： <br>
  - 配置JAVA_HOME：export JAVA_HOME=/opt/apps/jdk1.7.0_67</p>

<p>flume安装在hadoop集群中，而且还配置了HA： <br>
  - HDFS访问入口变化 <br>
  - 配置JAVA_HOME：export JAVA_HOME=/opt/apps/jdk1.7.0_67 <br>
  - 还需要添加hadoop的core-site.xml和hdfs-site.xml拷贝到flume的conf目录</p>

<p>flume不在hadoop集群里： <br>
  - 配置JAVA_HOME：export JAVA_HOME=/opt/apps/jdk1.7.0_67 <br>
  - 还需要添加hadoop的core-site.xml和hdfs-site.xml拷贝到flume的conf目录 <br>
  - 将hadoop的一些jar包添加到flume的lib目录下（用的是什么版本拷贝什么版）</p>



<h3 id="运行">运行</h3>



<pre class="prettyprint"><code class=" hljs lasso">bin/flume<span class="hljs-attribute">-ng</span> agent <span class="hljs-subst">--</span>conf conf <span class="hljs-subst">--</span>conf<span class="hljs-attribute">-file</span> conf/flume<span class="hljs-attribute">-agent</span><span class="hljs-built_in">.</span>properties <span class="hljs-subst">--</span>name a1 <span class="hljs-attribute">-Dflume</span><span class="hljs-built_in">.</span>root<span class="hljs-built_in">.</span>logger<span class="hljs-subst">=</span>INFO,console</code></pre>

<p>需要在conf/flume-agent.properties中配置相关信息，以从kafka中消费数据转存到HDFS为例,配置如下</p>



<pre class="prettyprint"><code class="language-properties hljs avrasm"><span class="hljs-preprocessor">#定义agent名， source、channel、sink的名称</span>
agent<span class="hljs-preprocessor">.sources</span> = <span class="hljs-built_in">r1</span>
agent<span class="hljs-preprocessor">.channels</span> = c1
agent<span class="hljs-preprocessor">.sinks</span> = k1

<span class="hljs-preprocessor">#具体定义source</span>
<span class="hljs-preprocessor"># 定义消息源类型</span>
agent<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.type</span> = org<span class="hljs-preprocessor">.apache</span><span class="hljs-preprocessor">.flume</span><span class="hljs-preprocessor">.source</span><span class="hljs-preprocessor">.kafka</span><span class="hljs-preprocessor">.KafkaSource</span>
<span class="hljs-preprocessor"># 定义kafka所在zk的地址</span>
agent<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.zookeeperConnect</span> = dbtest1:<span class="hljs-number">2181</span>,dbtest2:<span class="hljs-number">2182</span>,dbtest3:<span class="hljs-number">2183</span>
agent<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.kafka</span><span class="hljs-preprocessor">.bootstrap</span><span class="hljs-preprocessor">.servers</span> = dbtest1:<span class="hljs-number">9092</span>,dbtest2:<span class="hljs-number">9093</span>,dbtest3:<span class="hljs-number">9094</span>
agent<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.brokerList</span> = dbtest1:<span class="hljs-number">9092</span>,dbtest2:<span class="hljs-number">9093</span>,dbtest3:<span class="hljs-number">9094</span>
<span class="hljs-preprocessor"># 配置消费的kafka topic</span>
agent<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.topic</span> = my-replicated-topic5
<span class="hljs-preprocessor">#agent.sources.r1.kafka.consumer.timeout.ms = 100</span>
<span class="hljs-preprocessor"># 配置消费者组的id</span>
agent<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.kafka</span><span class="hljs-preprocessor">.consumer</span><span class="hljs-preprocessor">.group</span><span class="hljs-preprocessor">.id</span> = flume

<span class="hljs-preprocessor">#自定义拦截器</span>
<span class="hljs-preprocessor">#agent.sources.r1.interceptors=i1</span>
<span class="hljs-preprocessor">#agent.sources.r1.interceptors.i1.type=com.hadoop.flume.FormatInterceptor$Builder</span>

<span class="hljs-preprocessor">#具体定义channel</span>
<span class="hljs-preprocessor"># channel类型</span>
agent<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.type</span> = memory
<span class="hljs-preprocessor"># channel存储的事件容量</span>
agent<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.capacity</span> = <span class="hljs-number">10000</span>
<span class="hljs-preprocessor"># 事务容量</span>
agent<span class="hljs-preprocessor">.channels</span><span class="hljs-preprocessor">.c</span>1<span class="hljs-preprocessor">.transactionCapacity</span> = <span class="hljs-number">100</span>
<span class="hljs-preprocessor">#具体定义sink</span>
agent<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.type</span> = hdfs
agent<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.hdfs</span><span class="hljs-preprocessor">.path</span> = hdfs://dbtest1:<span class="hljs-number">8020</span>/test/%<span class="hljs-built_in">Y</span>%m%d 
agent<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.hdfs</span><span class="hljs-preprocessor">.fileType</span> = DataStream
agent<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.hdfs</span><span class="hljs-preprocessor">.writeFormat</span> = Text
agent<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.hdfs</span><span class="hljs-preprocessor">.rollInterval</span> = <span class="hljs-number">3</span>
agent<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.hdfs</span><span class="hljs-preprocessor">.rollSize</span> = <span class="hljs-number">1024000</span>
agent<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.hdfs</span><span class="hljs-preprocessor">.rollCount</span> = <span class="hljs-number">0</span>

<span class="hljs-preprocessor">#配置前缀和后缀</span>
agent<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.hdfs</span><span class="hljs-preprocessor">.fileSuffix</span>=<span class="hljs-preprocessor">.data</span>
agent<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.hdfs</span><span class="hljs-preprocessor">.filePrefix</span> = localhost-%<span class="hljs-built_in">Y</span>-%m-%d

agent<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.hdfs</span><span class="hljs-preprocessor">.useLocalTimeStamp</span> = true
agent<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.hdfs</span><span class="hljs-preprocessor">.idleTimeout</span> = <span class="hljs-number">60</span>

<span class="hljs-preprocessor">#避免文件在关闭前使用临时文件</span>
<span class="hljs-preprocessor">#agent.sinks.k1.hdfs.inUserPrefix=_</span>
<span class="hljs-preprocessor">#agent.sinks.k1.hdfs.inUserSuffix=</span>

<span class="hljs-preprocessor">#组装channels</span>
agent<span class="hljs-preprocessor">.sources</span><span class="hljs-preprocessor">.r</span>1<span class="hljs-preprocessor">.channels</span> = c1
agent<span class="hljs-preprocessor">.sinks</span><span class="hljs-preprocessor">.k</span>1<span class="hljs-preprocessor">.channel</span> = c1</code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-9e5741c4b9.css" rel="stylesheet">
                </div>