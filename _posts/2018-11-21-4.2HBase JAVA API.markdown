---
layout:     post
title:      4.2HBase JAVA API
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                
<p><strong><span style="color:#000000;">HBase JAVA API</span></strong></p>
<p><span style="color:#000000;"><span style="font-family:'宋体';">字体：</span></span></p>
<p><strong><span style="color:#000000;"><span style="font-family:'宋体';">实验目的</span></span></strong></p>
<p><span style="color:#333333;">1.了解HBase语言的基本语法</span></p>
<p><span style="color:#333333;">2.了解HBase开发的原理</span></p>
<p><span style="color:#333333;">3.了解HBase Java API的使用</span></p>
<p><strong><span style="color:#000000;"><span style="font-family:'宋体';">实验原理</span></span></strong></p>
<p><span style="color:#333333;">HBase与Hadoop一样，都是用Java编写的，所以HBase对Java支持是必须的，HBase Java API核心类介绍如下：</span></p>
<p><span style="color:#333333;">1.HBaseConfiguration类</span></p>
<p><span style="color:#333333;">HBaseConfiguration是每一个HBase Client都会使用到的对象，它代表HBase配置信息，有两种构造方式：</span></p>
<p><span style="color:#333333;">①public HBaseConfiguration()</span></p>
<p><span style="color:#333333;">②public HBaseConfiguration(final Configuration c)</span></p>
<p><span style="color:#333333;">2.创建表</span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">创建表通过</span>HBaseAdmin对象操作。HBaseAdmin负责META表信息的处理。</span></p>
<p><span style="color:#333333;">HBaseAdmin提供了createTable方法。</span></p>
<p><span style="color:#333333;">public void createTable(HTableDescriptor desc)</span></p>
<p><span style="color:#333333;">HTableDescriptor表示表的Schema，提供的常用方法有以下两个：</span></p>
<p><span style="color:#333333;">①setMaxFileSize：指定最大的Region大小。</span></p>
<p><span style="color:#333333;">②setMemStoreFlushSize：指定MemStore Flush到HDFS的文件大小。</span></p>
<p><span style="color:#333333;">3.删除表</span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">删除表也是通过</span>HBaseAdmin来操作，删除表之前首先要disable表。这是一个非常耗时的操作，所以不建议频繁删除表。</span></p>
<p><span style="color:#333333;">disable Table和deleteTable分别用来执行disable和delete操作。</span></p>
<p><span style="color:#333333;">4.插入数据</span></p>
<p><span style="color:#333333;">HTable通过put方法插入数据。可以传递单个put对象或List put对象分别实现单条插入和批量插入。</span></p>
<p><span style="color:#333333;">①public void put(final Put put) throws IOException</span></p>
<p><span style="color:#333333;">②public void put(final List&lt;Put&gt;puts) throws IOException</span></p>
<p><span style="color:#333333;">Put提供三种构造方式。</span></p>
<p><span style="color:#333333;">①public Put (byte [] row)</span></p>
<p><span style="color:#333333;">②public Put (byte [] row,RowLock rowLock)</span></p>
<p><span style="color:#333333;">③public Put(Put putToCopy)</span></p>
<p><span style="color:#333333;">5.查询数据</span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">查询分为单条随机查询和批量查询。单条查询通过</span>Row Key在Table中查询某一行的数据，HTable提供了get方法完成单条查询。批量查询通过制定一段Row Key的范围来查询，HTable提供了getScanner方法完成批量查询。</span></p>
<p><strong><span style="color:#000000;"><span style="font-family:'宋体';">实验环境</span></span></strong></p>
<p><span style="color:#333333;">Linux Ubuntu 1</span><span style="color:#333333;">6</span><span style="color:#333333;">.04</span></p>
<p><span style="color:#333333;">jdk-</span>1.8.0_151<span style="color:#333333;">-linux-x64</span></p>
<p><span style="color:#333333;">hbase-1.</span><span style="color:#333333;">2</span><span style="color:#333333;">.</span><span style="color:#333333;">6</span></p>
<p><span style="color:#333333;">hadoop-2.6.</span><span style="color:#333333;">5</span></p>
<p><span style="color:#333333;">hadoop-2.6.5-eclipse</span></p>
<p><span style="color:#333333;">eclipse-java-juno-SR2-linux-gtk-x86_64</span></p>
<p><strong><span style="color:#000000;"><span style="font-family:'宋体';">实验内容</span></span></strong></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">使用</span>Java API对HBase表的基本操作，主要包含以下四个部分：</span></p>
<p><span style="color:#333333;">1.编写Java代码，实现创建HBase表的操作。</span></p>
<p><span style="color:#333333;">2.编写Java代码，实现删除HBase表的操作。</span></p>
<p><span style="color:#333333;">3.编写Java代码，实现写数据到HBase表中的操作。</span></p>
<p><span style="color:#333333;">4.编写Java代码，实现读取HBase表中数据的操作。</span></p>
<p><strong><span style="color:#000000;"><span style="font-family:'宋体';">实验步骤</span></span></strong></p>
<p><span style="color:#333333;">1.首先检查Hadoop相关进程，是否已经启动。若未启动，切换到/usr/apps/hadoop/sbin目录下，启动Hadoop。</span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">1. </span><span style="color:#000000;">jps  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">2. </span><span style="color:#000000;">cd /usr/apps/hadoop/sbin  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">3. </span><span style="color:#000000;">./start-all.sh  </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">当</span>Hadoop相关进程启动后，进入HBase的bin目录下，启动HBase服务。</span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">1. </span><span style="color:#000000;">cd /usr/apps/hbase/bin/  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">2. </span><span style="color:#000000;">./start-hbase.sh  </span></p>
<p><span style="color:#333333;">2.切换到/usr/data/hbase</span><span style="color:#333333;">2</span><span style="color:#333333;"><span style="font-family:'微软雅黑';">目录下，如不存在需提前创建</span>hbase</span><span style="color:#333333;">2</span><span style="color:#333333;"><span style="font-family:'微软雅黑';">文件夹。</span></span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">1. </span><span style="color:#000000;">mkdir -p /usr/data/hbase2  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">2. </span><span style="color:#000000;">cd /usr/data/hbase2  </span></p>
<p><span style="color:#333333;">3.将实验四文件目录中的</span>hbasedemo.tar.gz<span style="font-family:'宋体';">、</span>CreateMyTable.java<span style="font-family:'宋体';">、</span>DeleteMyTable.java<span style="font-family:'宋体';">、</span>GetData.java<span style="font-family:'宋体';">、</span>PutData.java<span style="color:#333333;"><span style="font-family:'微软雅黑';">文件拷贝到</span>hbase2目录下。</span></p>
<p><span style="color:#333333;">4</span><span style="color:#333333;">.打开Eclipse，创建java项目，名为hbasedemo。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">在</span>hbasedemo项目下，创建包，包名为myhbase。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">添加项目依赖的</span>jar包，右击hbasedemo，选择import。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">进入下面界面，选择</span>General中的File System，点击Next。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">进入以下界面，选择</span>/usr/apps/hbase/lib目录下的所有jar包，并勾选Create top-level folder，点击Finish。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">然后，选中</span>hbasedemolib里面的所有文件，单击右键Build Path=&gt;Add to Build Path选项，就将所有jar包加载到项目里面了。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;">6.创建表的API</span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">创建类，名为</span>CreateMyTable，功能为在HBase中创建名为mytb，列族为mycf的表。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">程序代码</span></span></p>
<p style="background:rgb(255,255,255);"><strong><span>package</span></strong><span style="color:#000000;"> myhbase;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> java.io.IOException;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.conf.Configuration;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.HBaseConfiguration;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.HColumnDescriptor;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.HTableDescriptor;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.MasterNotRunningException;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.ZooKeeperConnectionException;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.client.HBaseAdmin;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>class</span></strong><span style="color:#000000;"> CreateMyTable {  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">    </span><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>static</span></strong><span style="color:#000000;"> </span><strong><span>void</span></strong><span style="color:#000000;"> main(String[] args) </span><strong><span>throws</span></strong><span style="color:#000000;"> MasterNotRunningException, ZooKeeperConnectionException, IOException {  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        String tableName = </span><span>"mytb"</span><span style="color:#000000;">;  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        String columnFamily = </span><span>"mycf"</span><span style="color:#000000;">;  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        create(tableName, columnFamily);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">    }  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">    </span><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>static</span></strong><span style="color:#000000;"> Configuration getConfiguration() {  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        Configuration conf = HBaseConfiguration.create();  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        conf.set(</span><span>"hbase.rootdir"</span><span style="color:#000000;">, </span><span>"hdfs://localhost:9000/hbase"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        conf.set(</span><span>"hbase.zookeeper.quorum"</span><span style="color:#000000;">, </span><span>"localhost"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        </span><strong><span>return</span></strong><span style="color:#000000;"> conf;  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">    }  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">    </span><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>static</span></strong><span style="color:#000000;"> </span><strong><span>void</span></strong><span style="color:#000000;"> create(String tableName, String columnFamily)  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">            </span><strong><span>throws</span></strong><span style="color:#000000;"> MasterNotRunningException, ZooKeeperConnectionException,  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">            IOException {  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        HBaseAdmin hBaseAdmin = </span><strong><span>new</span></strong><span style="color:#000000;"> HBaseAdmin(getConfiguration());  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        </span><strong><span>if</span></strong><span style="color:#000000;"> (hBaseAdmin.tableExists(tableName)) {  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">            System.err.println(</span><span>"Table exists!"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        } </span><strong><span>else</span></strong><span style="color:#000000;"> {  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">            HTableDescriptor tableDesc = </span><strong><span>new</span></strong><span style="color:#000000;"> HTableDescriptor(tableName);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">            tableDesc.addFamily(</span><strong><span>new</span></strong><span style="color:#000000;"> HColumnDescriptor(columnFamily));  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">            hBaseAdmin.createTable(tableDesc);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">            System.err.println(</span><span>"Create Table SUCCESS!"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        }  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">    }  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">}  </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">在</span>Eclipse中执行程序代码，在CreateMyTable类文件中，单击右键=&gt;Run As=&gt;Run on Hadoop选项，将任务提交到Hadoop中。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">然后查看</span>HBase中新创建的mytb表，先启动hbase shell命令行模式。</span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">1. </span><span style="color:#000000;">hbase shell  </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">执行</span>list，列出当前HBase中的表。</span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">1. </span><span style="color:#000000;">list  </span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">执行以下命令，查看创建的表结构。</span></span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">1. </span><span style="color:#000000;">describe </span><span>'mytb'</span><span style="color:#000000;">  </span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;">7.删除表的API</span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">创建类，命名为</span>DeleteMyTable，功能为将HBase中表mytb删除。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">程序代码</span></span></p>
<p style="background:rgb(255,255,255);"><strong><span>package</span></strong><span style="color:#000000;"> myhbase;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> java.io.IOException;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.conf.Configuration;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.HBaseConfiguration;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.client.HBaseAdmin;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>class</span></strong><span style="color:#000000;"> DeleteMyTable {  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">    </span><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>static</span></strong><span style="color:#000000;"> </span><strong><span>void</span></strong><span style="color:#000000;"> main(String[] args) </span><strong><span>throws</span></strong><span style="color:#000000;"> IOException {  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        String tableName = </span><span>"mytb"</span><span style="color:#000000;">;  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        </span><strong><span>delete</span></strong><span style="color:#000000;">(tableName);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">    }  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">    </span><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>static</span></strong><span style="color:#000000;"> Configuration getConfiguration() {  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        Configuration conf = HBaseConfiguration.create();  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        conf.set(</span><span>"hbase.rootdir"</span><span style="color:#000000;">, </span><span>"hdfs://localhost:9000/hbase"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        conf.set(</span><span>"hbase.zookeeper.quorum"</span><span style="color:#000000;">, </span><span>"localhost"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        </span><strong><span>return</span></strong><span style="color:#000000;"> conf;  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">    }  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">    </span><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>static</span></strong><span style="color:#000000;"> </span><strong><span>void</span></strong><span style="color:#000000;"> </span><strong><span>delete</span></strong><span style="color:#000000;">(String tableName) </span><strong><span>throws</span></strong><span style="color:#000000;"> IOException {  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        HBaseAdmin hAdmin = </span><strong><span>new</span></strong><span style="color:#000000;"> HBaseAdmin(getConfiguration());  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        </span><strong><span>if</span></strong><span style="color:#000000;">(hAdmin.tableExists(tableName)){  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">            </span><strong><span>try</span></strong><span style="color:#000000;"> {  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">                hAdmin.disableTable(tableName);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">                hAdmin.deleteTable(tableName);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">                System.err.println(</span><span>"Delete table Success"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">            } </span><strong><span>catch</span></strong><span style="color:#000000;"> (IOException e) {  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">                System.err.println(</span><span>"Delete table Failed "</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">            }  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        }</span><strong><span>else</span></strong><span style="color:#000000;">{  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">            System.err.println(</span><span>"table not exists"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        }  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">    }  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">}  </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">在</span>DeleteMyTable类文件中，单击右键=&gt;Run As=&gt;Run on Hadoop选项，将任务提交到Hadoop中。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">在</span>Eclipse中执行完成，然后在hbase中查看结果， 查看mytb表是否被删除。</span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">1. </span><span style="color:#000000;">list  </span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;">8.写入数据的API</span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">某电商网站，后台有买家信息表</span>buyer，每注册一名新用户网站后台会产生一条日志，并写入HBase中。</span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">数据格式为：用户</span>ID（buyer_id），注册日期（reg_date），注册IP（reg_ip），卖家状态（buyer_status，0表示冻结 ，1表示正常），以“\t”分割，数据内容如下：</span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">1. </span><span style="color:#000000;"><span style="font-family:'宋体';">用户</span>ID   <span style="font-family:'宋体';">注册日期</span><span style="font-family:Consolas;">  </span><span style="font-family:'宋体';">注册</span><span style="font-family:Consolas;">IP   </span><span style="font-family:'宋体';">卖家状态</span><span style="font-family:Consolas;">  </span></span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">2. </span><span style="color:#000000;">20385,2010-05-04,124.64.242.30,1  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">3. </span><span style="color:#000000;">20386,2010-05-05,117.136.0.172,1  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">4. </span><span style="color:#000000;">20387,2010-05-06 ,114.94.44.230,1  </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">将数据以</span>buyer_id作为行键写入到HBase的buyer表中，插入之前，需确保buyer表已存在，若不存在，提前创建。</span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">1. </span><span style="color:#000000;">create </span><span>'buyer'</span><span style="color:#000000;">,</span><span>'reg_date'</span><span style="color:#000000;">  </span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">创建类，名为</span>PutData，功能为将以上三条数据写入到buyer表中。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">程序代码如下：</span></span></p>
<p style="background:rgb(255,255,255);"><strong><span>package</span></strong><span style="color:#000000;"> myhbase;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> java.io.IOException;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.conf.Configuration;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.HBaseConfiguration;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.MasterNotRunningException;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.ZooKeeperConnectionException;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.client.HTable;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.client.Put;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.util.Bytes;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>class</span></strong><span style="color:#000000;"> PutData {  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">    </span><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>static</span></strong><span style="color:#000000;"> </span><strong><span>void</span></strong><span style="color:#000000;"> main(String[] args) </span><strong><span>throws</span></strong><span style="color:#000000;"> MasterNotRunningException,  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">            ZooKeeperConnectionException, IOException {  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        String tableName = </span><span>"buyer"</span><span style="color:#000000;">;  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        String columnFamily = </span><span>"reg_date"</span><span style="color:#000000;">;  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        put(tableName, </span><span>"20385"</span><span style="color:#000000;">, columnFamily, </span><span>"2010-05-04:reg_ip"</span><span style="color:#000000;">, </span><span>"124.64.242.30"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        put(tableName, </span><span>"20385"</span><span style="color:#000000;">, columnFamily, </span><span>"2010-05-04:buyer_status"</span><span style="color:#000000;">, </span><span>"1"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        put(tableName, </span><span>"20386"</span><span style="color:#000000;">, columnFamily, </span><span>"2010-05-05:reg_ip"</span><span style="color:#000000;">, </span><span>"117.136.0.172"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        put(tableName, </span><span>"20386"</span><span style="color:#000000;">, columnFamily, </span><span>"2010-05-05:buyer_status"</span><span style="color:#000000;">, </span><span>"1"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        put(tableName, </span><span>"20387"</span><span style="color:#000000;">, columnFamily, </span><span>"2010-05-06:reg_ip"</span><span style="color:#000000;">, </span><span>"114.94.44.230"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        put(tableName, </span><span>"20387"</span><span style="color:#000000;">, columnFamily, </span><span>"2010-05-06:buyer_status"</span><span style="color:#000000;">, </span><span>"1"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">    }  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">    </span><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>static</span></strong><span style="color:#000000;"> Configuration getConfiguration() {  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        Configuration conf = HBaseConfiguration.create();  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        conf.set(</span><span>"hbase.rootdir"</span><span style="color:#000000;">, </span><span>"hdfs://localhost:9000/hbase"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        conf.set(</span><span>"hbase.zookeeper.quorum"</span><span style="color:#000000;">, </span><span>"localhost"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        </span><strong><span>return</span></strong><span style="color:#000000;"> conf;  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">    }  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">    </span><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>static</span></strong><span style="color:#000000;"> </span><strong><span>void</span></strong><span style="color:#000000;"> put(String tableName, String row, String columnFamily,  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">            String column, String data) </span><strong><span>throws</span></strong><span style="color:#000000;"> IOException {  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        HTable table = </span><strong><span>new</span></strong><span style="color:#000000;"> HTable(getConfiguration(), tableName);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        Put put = </span><strong><span>new</span></strong><span style="color:#000000;"> Put(Bytes.toBytes(row));  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        put.add(Bytes.toBytes(columnFamily),  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">                Bytes.toBytes(column),  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">                Bytes.toBytes(data));  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        table.put(put);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        System.err.println(</span><span>"SUCCESS"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">    }  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">}  </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">在</span>Eclipse中执行程序代码，在PutData类文件中，右键并点击=&gt;Run As=&gt;Run on Hadoop选项，将任务提交到Hadoop中。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">执行完成后，进入</span>HBase中查看buyer表结果。</span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">1. </span><span style="color:#000000;">scan </span><span>'buyer'</span><span style="color:#000000;">  </span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;">9.查询数据的API</span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">创建类</span>GetData，功能为查询HBase的buyer表中rowkey为20386的数据。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">程序代码如下：</span></span></p>
<p style="background:rgb(255,255,255);"><strong><span>package</span></strong><span style="color:#000000;"> myhbase;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> java.io.IOException;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.conf.Configuration;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.HBaseConfiguration;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.client.Get;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.client.HTable;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.client.Result;  </span></p>
<p style="background:rgb(248,248,248);"><strong><span>import</span></strong><span style="color:#000000;"> org.apache.hadoop.hbase.util.Bytes;  </span></p>
<p style="background:rgb(255,255,255);"><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>class</span></strong><span style="color:#000000;"> GetData {  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">    </span><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>static</span></strong><span style="color:#000000;"> </span><strong><span>void</span></strong><span style="color:#000000;"> main(String[] args) </span><strong><span>throws</span></strong><span style="color:#000000;"> IOException {  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        String tableName = </span><span>"buyer"</span><span style="color:#000000;">;  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        get(tableName, </span><span>"20386"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">    }  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">    </span><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>static</span></strong><span style="color:#000000;"> Configuration getConfiguration() {  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        Configuration conf = HBaseConfiguration.create();  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        conf.set(</span><span>"hbase.rootdir"</span><span style="color:#000000;">, </span><span>"hdfs://localhost:9000/hbase"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        conf.set(</span><span>"hbase.zookeeper.quorum"</span><span style="color:#000000;">, </span><span>"localhost"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        </span><strong><span>return</span></strong><span style="color:#000000;"> conf;  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">    }  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">    </span><strong><span>public</span></strong><span style="color:#000000;"> </span><strong><span>static</span></strong><span style="color:#000000;"> </span><strong><span>void</span></strong><span style="color:#000000;"> get(String tableName, String rowkey) </span><strong><span>throws</span></strong><span style="color:#000000;"> IOException {  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        HTable table = </span><strong><span>new</span></strong><span style="color:#000000;"> HTable(getConfiguration(), tableName);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        Get get = </span><strong><span>new</span></strong><span style="color:#000000;"> Get(Bytes.toBytes(rowkey));  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        Result result = table.get(get);  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        </span><strong><span>byte</span></strong><span style="color:#000000;">[] value1 = result.getValue(</span><span>"reg_date"</span><span style="color:#000000;">.getBytes(), </span><span>"2010-05-05:reg_ip"</span><span style="color:#000000;">.getBytes());  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        </span><strong><span>byte</span></strong><span style="color:#000000;">[] value2 = result.getValue(</span><span>"reg_date"</span><span style="color:#000000;">.getBytes(), </span><span>"2010-05-05:buyer_status"</span><span style="color:#000000;">.getBytes());  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">        System.err.println(</span><span>"line1:SUCCESS"</span><span style="color:#000000;">);  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">        System.err.println(</span><span>"line2:"</span><span style="color:#000000;">  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">                + </span><strong><span>new</span></strong><span style="color:#000000;"> String(value1) + </span><span>"\t"</span><span style="color:#000000;">  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">                + </span><strong><span>new</span></strong><span style="color:#000000;"> String(value2));  </span></p>
<p style="background:rgb(248,248,248);"><span style="color:#000000;">    }  </span></p>
<p style="background:rgb(255,255,255);"><span style="color:#000000;">}  </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">在</span>Eclipse中执行程序代码，在GetData类文件中，单击右键=&gt;Run As=&gt;Run on Hadoop选项，将任务提交到Hadoop中。</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'微软雅黑';">执行完成后，可以在</span>Eclipse中的console界面查看到执行结果为：</span></p>
<p><span style="color:#000000;"> </span></p>
<p><span style="color:#333333;"><span style="font-family:'宋体';">至此，本次实验结束。</span></span></p>
            </div>
                </div>