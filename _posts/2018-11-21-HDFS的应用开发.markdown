---
layout:     post
title:      HDFS的应用开发
---
<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post">
								            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f76675cdea.css">
						<div class="htmledit_views" id="content_views">
                <p><strong>1． <strong>HDFS的JAVA API操作</strong></strong></p>

<p><span style="color:#363636;">HDFS在生产应用中主要是客户端的开发，其核心步骤是从HDFS提供的api中构造一个HDFS的访问客户端对象，然后通过该客户端对象操作（增删改查）HDFS上的文件。</span></p>

<p><strong>1.1． <strong>搭建开发环境</strong></strong></p>

<p><span style="color:#363636;">创建Maven工程，引入pom依赖</span></p>

<p><span style="color:#363636;">&lt;dependencies&gt;</span></p>

<p><span style="color:#363636;">                &lt;dependency&gt;</span></p>

<p><span style="color:#363636;">                        &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</span></p>

<p><span style="color:#363636;">                        &lt;artifactId&gt;hadoop-common&lt;/artifactId&gt;</span></p>

<p><span style="color:#363636;">                        &lt;version&gt;2.7.4&lt;/version&gt;</span></p>

<p><span style="color:#363636;">                &lt;/dependency&gt;</span></p>

<p><span style="color:#363636;">                &lt;dependency&gt;</span></p>

<p><span style="color:#363636;">                        &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</span></p>

<p><span style="color:#363636;">                        &lt;artifactId&gt;hadoop-hdfs&lt;/artifactId&gt;</span></p>

<p><span style="color:#363636;">                        &lt;version&gt;2.7.4&lt;/version&gt;</span></p>

<p><span style="color:#363636;">                &lt;/dependency&gt;</span></p>

<p><span style="color:#363636;">                &lt;dependency&gt;</span></p>

<p><span style="color:#363636;">                        &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</span></p>

<p><span style="color:#363636;">                        &lt;artifactId&gt;hadoop-client&lt;/artifactId&gt;</span></p>

<p><span style="color:#363636;">                        &lt;version&gt;2.7.4&lt;/version&gt;</span></p>

<p><span style="color:#363636;">                &lt;/dependency&gt;</span></p>

<p><span style="color:#363636;">        &lt;/dependencies&gt;</span></p>

<p><span style="color:#363636;">        </span></p>

<p><span style="color:#363636;"><strong>配置window</strong><strong>s平台H</strong><strong>adoop环境</strong></span></p>

<p><span style="color:#363636;">在windows上做HDFS客户端应用开发，需要设置Hadoop环境,而且要求是windows平台编译的Hadoop,不然会报以下的错误:</span></p>

<p><span style="color:#363636;">Failed to locate the winutils binary in the hadoop binary path java.io.IOException: Could not locate executable null\bin\winutils.exe in the Hadoop binaries.</span></p>

<p><span style="color:#363636;">        </span></p>

<p><span style="color:#363636;">为此我们需要进行如下的操作：</span></p>

<p><span style="color:#363636;">A、在windows平台下编译Hadoop源码（可以参考资料编译，但不推荐）</span></p>

<p><span style="color:#363636;">B、使用已经编译好的Windows版本Hadoop：</span></p>

<p><span style="color:#363636;">hadoop-2.7.4-with-windows.tar.gz</span></p>

<p><span style="color:#363636;">C、解压一份到windows的任意一个目录下</span></p>

<p><span style="color:#363636;">D、在windows系统中配置HADOOP_HOME指向你解压的安装包目录</span></p>

<p><span style="color:#363636;">E、在windows系统的path变量中加入HADOOP_HOME的bin目录</span></p>

<p><strong>1.2． <strong>构造</strong><strong>客户端对象</strong></strong></p>

<p><span style="color:#363636;">在java中操作HDFS，主要涉及以下Class：</span></p>

<p><span style="color:#363636;">Configuration：该类的对象封转了客户端或者服务器的配置;</span></p>

<p><span style="color:#363636;">FileSystem：该类的对象是一个文件系统对象，可以用该对象的一些方法来对文件进行操作，通过FileSystem的静态方法get获得该对象。</span></p>

<p><span style="color:#363636;"><em>FileSystem fs = FileSystem.get(conf)</em></span></p>

<p><span style="color:#363636;">get方法从conf中的一个参数 fs.defaultFS的配置值判断具体是什么类型的文件系统。如果我们的代码中没有指定fs.defaultFS，并且工程classpath下也没有给定相应的配置，conf中的默认值就来自于hadoop的jar包中的core-default.xml，默认值为： [url=]file:///[/url]，则获取的将不是一个DistributedFileSystem的实例，而是一个本地文件系统的客户端对象。</span></p>

<p> </p>

<p><strong>1.3． <strong>示例代码</strong></strong></p>

<table border="1" cellspacing="0"><tbody><tr><td style="background-color:#ffffff;border-color:#e3edf5;">
			<p>[AppleScript] <em>纯文本查看</em> <em>复制代码</em></p>

			<p><span style="color:#FFFFFF;"><a class="toolbar_item command_help help" href="http://bbs.itheima.com/#" rel="nofollow">?</a></span></p>

			<table cellspacing="0" style="width:690px;"><tbody><tr><td style="text-align:left;vertical-align:baseline;">
						<p><span style="color:#afafaf;">01</span></p>

						<p><span style="color:#afafaf;">02</span></p>

						<p><span style="color:#afafaf;">03</span></p>

						<p><span style="color:#afafaf;">04</span></p>

						<p><span style="color:#afafaf;">05</span></p>

						<p><span style="color:#afafaf;">06</span></p>

						<p><span style="color:#afafaf;">07</span></p>

						<p><span style="color:#afafaf;">08</span></p>

						<p><span style="color:#afafaf;">09</span></p>

						<p><span style="color:#afafaf;">10</span></p>

						<p><span style="color:#afafaf;">11</span></p>

						<p><span style="color:#afafaf;">12</span></p>

						<p><span style="color:#afafaf;">13</span></p>

						<p><span style="color:#afafaf;">14</span></p>

						<p><span style="color:#afafaf;">15</span></p>

						<p><span style="color:#afafaf;">16</span></p>

						<p><span style="color:#afafaf;">17</span></p>

						<p><span style="color:#afafaf;">18</span></p>

						<p><span style="color:#afafaf;">19</span></p>

						<p><span style="color:#afafaf;">20</span></p>

						<p><span style="color:#afafaf;">21</span></p>

						<p><span style="color:#afafaf;">22</span></p>

						<p><span style="color:#afafaf;">23</span></p>

						<p><span style="color:#afafaf;">24</span></p>

						<p><span style="color:#afafaf;">25</span></p>

						<p><span style="color:#afafaf;">26</span></p>

						<p><span style="color:#afafaf;">27</span></p>

						<p><span style="color:#afafaf;">28</span></p>

						<p><span style="color:#afafaf;">29</span></p>

						<p><span style="color:#afafaf;">30</span></p>

						<p><span style="color:#afafaf;">31</span></p>

						<p><span style="color:#afafaf;">32</span></p>

						<p><span style="color:#afafaf;">33</span></p>

						<p><span style="color:#afafaf;">34</span></p>

						<p><span style="color:#afafaf;">35</span></p>

						<p><span style="color:#afafaf;">36</span></p>

						<p><span style="color:#afafaf;">37</span></p>

						<p><span style="color:#afafaf;">38</span></p>

						<p><span style="color:#afafaf;">39</span></p>
						</td>
						<td style="text-align:left;vertical-align:baseline;">
						<p><code>Configuration conf </code><code>=</code> <code>new</code> <code>Configuration</code><code>(</code><code>)</code><code>;</code></p>

						<p> </p>

						<p><code>/</code><code>/</code><code>这里指定使用的是hdfs文件系统</code></p>

						<p> </p>

						<p><code>conf.</code><code>set</code><code>(</code><code>"fs.defaultFS"</code><code>,</code> <code>"hdfs://node-21:9000"</code><code>)</code><code>;</code></p>

						<p> </p>

						<p><code>              </code> </p>

						<p> </p>

						<p><code>/</code><code>/</code><code>通过如下的方式进行客户端身份的设置</code></p>

						<p> </p>

						<p><code>System.setProperty</code><code>(</code><code>"HADOOP_USER_NAME"</code><code>,</code> <code>"root"</code><code>)</code><code>;</code></p>

						<p> </p>

						<p><code> </code> </p>

						<p> </p>

						<p><code>/</code><code>/</code><code>通过FileSystem的静态方法获取文件系统客户端对象</code></p>

						<p> </p>

						<p><code>FileSystem fs </code><code>=</code> <code>FileSystem.</code><code>get</code><code>(</code><code>conf</code><code>)</code><code>;</code></p>

						<p> </p>

						<p><code>/</code><code>/</code><code>也可以通过如下的方式去指定文件系统的类型 并且同时设置用户身份</code></p>

						<p> </p>

						<p><code>/</code><code>/</code><code>FileSystem fs </code><code>=</code> <code>FileSystem.</code><code>get</code><code>(</code><code>new</code> <code>URI</code><code>(</code><code>"hdfs://node-21:9000"</code><code>)</code><code>,</code> <code>conf</code><code>,</code> <code>"root"</code><code>)</code><code>;</code></p>

						<p> </p>

						<p><code> </code> </p>

						<p> </p>

						<p><code>/</code><code>/</code><code>创建一个目录</code></p>

						<p> </p>

						<p><code>fs.create</code><code>(</code><code>new</code> <code>Path</code><code>(</code><code>"/hdfsbyjava-ha"</code><code>)</code><code>,</code> <code>false</code><code>)</code><code>;</code></p>

						<p> </p>

						<p><code> </code> </p>

						<p> </p>

						<p><code>/</code><code>/</code><code>上传一个文件</code></p>

						<p> </p>

						<p><code>fs.copyFromLocalFile</code><code>(</code><code>new</code> <code>Path</code><code>(</code><code>"e:/hello.sh"</code><code>)</code><code>,</code> <code>new</code> <code>Path</code><code>(</code><code>"/hdfsbyjava-ha"</code><code>)</code><code>)</code><code>;</code></p>

						<p> </p>

						<p><code>  </code> </p>

						<p> </p>

						<p><code>/</code><code>/</code><code>关闭我们的文件系统</code></p>

						<p> </p>

						<p><code> </code><code>fs.</code><code>close</code><code>(</code><code>)</code><code>;</code></p>
						</td>
					</tr></tbody></table></td>
		</tr></tbody></table><p><span style="color:#363636;">其他更多操作如文件增删改查请查看实例代码。</span></p>

<p><span style="color:#363636;">Stream流形式操作</span></p>

<table border="1" cellspacing="0"><tbody><tr><td style="background-color:#ffffff;border-color:#e3edf5;">
			<p>[AppleScript] <em>纯文本查看</em> <em>复制代码</em></p>

			<p><span style="color:#FFFFFF;"><a class="toolbar_item command_help help" href="http://bbs.itheima.com/#" rel="nofollow">?</a></span></p>

			<table cellspacing="0"><tbody><tr><td style="text-align:left;vertical-align:baseline;">
						<p><span style="color:#afafaf;">01</span></p>

						<p><span style="color:#afafaf;">02</span></p>

						<p><span style="color:#afafaf;">03</span></p>

						<p><span style="color:#afafaf;">04</span></p>

						<p><span style="color:#afafaf;">05</span></p>

						<p><span style="color:#afafaf;">06</span></p>

						<p><span style="color:#afafaf;">07</span></p>

						<p><span style="color:#afafaf;">08</span></p>

						<p><span style="color:#afafaf;">09</span></p>

						<p><span style="color:#afafaf;">10</span></p>

						<p><span style="color:#afafaf;">11</span></p>
						</td>
						<td style="text-align:left;vertical-align:baseline;">
						<p><code>public void testUpload</code><code>(</code><code>)</code> <code>throws Exception </code><code>{</code> </p>

						<p> </p>

						<p><code>        </code><code>FSDataOutputStream outputStream </code><code>=</code> <code>fs.create</code><code>(</code><code>new</code> <code>Path</code><code>(</code><code>"/1.txt"</code><code>)</code><code>,</code> <code>true</code><code>)</code><code>;  </code></p>

						<p> </p>

						<p><code>        </code><code>FileInputStream inputStream </code><code>=</code> <code>new</code> <code>FileInputStream</code><code>(</code><code>"D:\\1.txt"</code><code>)</code><code>;  </code></p>

						<p> </p>

						<p><code>        </code><code>IOUtils.</code><code>copy</code><code>(</code><code>inputStream</code><code>,</code> <code>outputStream</code><code>)</code><code>;  </code></p>

						<p> </p>

						<p><code> </code> </p>

						<p> </p>

						<p><code>    </code><code>}</code></p>
						</td>
					</tr></tbody></table></td>
		</tr></tbody></table><p> </p>

<p><strong>2． <strong>案例：shell定时采集数据至HDFS</strong></strong></p>

<p><span style="color:#363636;">上线的网站每天都会产生日志数据。假如有这样的需求：要求在凌晨24点开始操作前一天产生的日志文件，准实时上传至HDFS集群上。</span></p>

<p><span style="color:#363636;">该如何实现？实现后能否实现周期性上传需求？如何定时？</span></p>

<p><strong>2.1． <strong>技术分析</strong></strong></p>

<p><span style="color:#363636;"><strong>HDFS SHELL:</strong>  </span></p>

<p><span style="color:#363636;">hadoop fs –put  //<em>满足上传文件，不能满足定时、周期性传入。</em></span></p>

<p><span style="color:#363636;"><strong>L</strong><strong>inux crontab</strong><strong>:</strong></span></p>

<p><span style="color:#363636;">crontab -e</span></p>

<p><span style="color:#363636;">0 0 * * * /shell/ uploadFile2Hdfs.sh   //每天凌晨12：00执行一次</span></p>

<p><strong>2.2． <strong>实现流程</strong></strong></p>

<p><span style="color:#363636;">一般日志文件生成的逻辑由业务系统决定，比如每小时滚动一次，或者一定大小滚动一次，避免单个日志文件过大不方便操作。</span></p>

<p><span style="color:#363636;">比如滚动后的文件命名为access.log.x,其中x为数字。正在进行写的日志文件叫做access.log。这样的话，如果日志文件后缀是1\2\3等数字，则该文件满足需求可以上传，就把该文件移动到准备上传的工作区间目录。工作区间有文件之后，可以使用hadoop put命令将文件上传。</span></p>

<p><strong>2.3． <strong>代码实现</strong></strong></p>

<p><span style="color:#363636;"><img alt="" class="has" id="aimg_248045" src="http://bbs.itheima.com/data/attachment/forum/201808/31/142115j77792hq771z8or0.png.thumb.jpg"></span></p>            </div>
                </div>